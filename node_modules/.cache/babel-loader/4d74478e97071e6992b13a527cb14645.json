{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\CorporativeActions\\\\CorporativeActions.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card'; // Form components\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from '@material-ui/core/FormControl';\nimport MaterialSelect from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem'; // Icons\n\nimport SendIcon from '@material-ui/icons/Send';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport axios from 'axios';\nimport * as rutoken from \"rutoken\";\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nvar moment = require('moment');\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto'\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto'\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalRutoken: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [enumData] = useState(props.userTask.enumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [fieldValue, setFieldValue] = useState({\n    subject: \"\",\n    body: \"\",\n    esDate: \"\",\n    esFullName: \"\",\n    esInn: \"\"\n  });\n  const [searchFieldValue, setSearchFieldValue] = useState(\"\");\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [updateState, setUpdateState] = useState(false);\n  const [taskType] = useState(props.userTask.taskType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(false);\n  const [clickedMessagesType, setClickedMessagesType] = useState(\"inbox\");\n  const [checked, setChecked] = useState([]);\n  const [partners, setPartners] = useState([]);\n  const [selectedPartners, setSelectedPartners] = useState([]);\n  const leftChecked = intersection(checked, partners);\n  const rightChecked = intersection(checked, selectedPartners);\n  const [partnersSearchField, setPartnersSearchField] = useState(\"\");\n  const [focusField, setFocusField] = useState(\"partnersSearhField\");\n  const [files, setFiles] = useState([]);\n  const [Blobs, setBlobs] = useState([]);\n  const [corpActionsAttachFileButtonId, setCorpActionsAttachFileButtonId] = useState(null);\n  const [menuId, setMenuId] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [writeMessage, setWriteMessage] = useState(false);\n  const [messageType, setMessageType] = useState(1);\n  const [allMessagesSelected, setAllMessagesSelected] = useState(false);\n  const [selectedMessages, setSelectedMessages] = useState({});\n  const [selectedDoc, setSelectedDoc] = useState(null); // Saved Docs\n\n  const [savedImgs, setSavedImgs] = useState([]);\n  const [savedImagesFiles, setSavedImagesFiles] = useState([]);\n  const [savedDocs, setSavedDocs] = useState([]);\n  const [selectedImg, setSelectedImg] = useState({});\n  const [openModal, setOpenModal] = useState(false);\n  const [idFromUsers, setIdFromUsers] = useState(false); // Rutoken\n\n  const [modalStyle] = useState(getModalStyle);\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"CORPACTS PROPS\", props);\n    setCorpActionsAttachFileButtonId(getUUID());\n    setMenuId(getUUID());\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          if (props.userTask.enumData[i].name === \"partners\") {\n            let newPartners = [];\n\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              newPartners.push(props.userTask.enumData[i].data[d].id);\n            }\n\n            setPartners(newPartners);\n          } else if (props.userTask.enumData[i].name === \"users\") {\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              if (props.userTask.enumData[i].data[d].user_id === props.userProfile.userId) {\n                setIdFromUsers(props.userTask.enumData[i].data[d].id);\n              }\n            }\n          }\n        } else {\n          if (i === 0) {\n            setPartners([]);\n            props.callErrorToast(\"Ошибка сбора справочной информации Partners\");\n          } else {\n            props.callErrorToast(\"Ошибка сбора справочной информации Users\");\n          }\n        }\n      }\n    }\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        setInitialDocList(parsedData);\n        let filteredDocL = [];\n\n        for (let i = 0; i < parsedData.recipient.length; i++) {\n          if (parsedData.recipient[i].recipient_status === 1 || parsedData.recipient[i].recipient_status === 2) {\n            filteredDocL.push(parsedData.recipient[i]);\n          }\n        }\n\n        fetchBySize(0, 9, filteredDocL);\n        setFilteredDocList(filteredDocL);\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      console.log(\"SDOC\", parsedSelectedDoc);\n      setSelectedDoc(parsedSelectedDoc);\n    }\n\n    if (props.userTask.savedDocs.length !== 0) {\n      for (let d = 0; d < props.userTask.savedDocs.length; d++) {\n        let extension = props.userTask.savedDocs[d].extension;\n\n        if (extension === \".png\") {\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".jpeg\" || extension === \".jpg\") {\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".doc\") {\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".docx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".xlsx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".pdf\") {\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        }\n      }\n    }\n\n    setUpdateState(getUUID());\n  }, []); // RuToken functions\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  }\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\")\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  }); // catch errors while signing docs\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  } // Sign transfer order with rutoken\n\n\n  function sign(commandJson) {\n    try {\n      // Получение текста для подписи\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices().then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0]);\n          } else {\n            alert(\"Рутокен не обнаружен\");\n          }\n        }) // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice;\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n        }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve();\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin);\n          }\n        }) // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n        }).then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0];\n            return plugin.parseCertificate(rutokenHandle, certs[0]);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs; // console.log(\"RUTDATA\", certData)\n\n          if (certHandle.length > 0) {\n            senMails();\n            var options = {};\n            let inn = \"\";\n            let fullName = \"\";\n\n            for (let i = 0; i < certData.subject.length; i++) {\n              if (certData.subject[i].rdn === \"serialNumber\") {\n                inn = certData.subject[i].value;\n              }\n\n              if (certData.subject[i].rdn === \"commonName\") {\n                fullName = certData.subject[i].value;\n              }\n            }\n\n            let newMailBody = JSON.parse(commandJson.variables.mailBody.value);\n            newMailBody.mails.es_date = moment(new Date()).format();\n            newMailBody.mails.es_full_name = fullName;\n            newMailBody.mails.es_inn = inn;\n            let newCommandJson = commandJson;\n            newCommandJson.variables.mailBody.value = JSON.stringify(newMailBody);\n            props.setEsInn(inn);\n            props.setEsUserFullName(fullName);\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n            handleCloseModalEnterPin();\n            console.log(\"SIGNED CJ\", newCommandJson);\n            props.sendFieldValues(newCommandJson);\n            props.clearTabData(process_id);\n            return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle);\n        }, handleError);\n      } else {\n        swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n      }\n    } catch (er) {\n      console.log(\"Rutoken ERR\");\n    }\n  } // Documents attached to mail\n\n\n  function convertBase64ToFile(dataurl, fileName) {\n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    let convFile = new File([u8arr], fileName, {\n      type: mime\n    });\n    handleAttachSavedFile(convFile);\n    console.log(\"CONV FILE\", convFile);\n  }\n\n  function handleAttachSavedFile(file) {\n    // console.log(\"FILE\", file)\n    if (file.type === \"application/pdf\" || file.type === \"application/msword\" || file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n      savedDocs.push(file);\n      setSavedDocs(savedDocs);\n    } else {\n      savedImagesFiles.push(file);\n      setSavedImagesFiles(savedImagesFiles);\n      pushSavedImage(file);\n    } // setUpdateState(getUUID())\n\n  }\n\n  async function pushSavedImage(f) {\n    let reader = new FileReader();\n\n    reader.onload = async function (e) {\n      // push new images to list and show in UI\n      let image = {\n        item: /*#__PURE__*/React.createElement(\"img\", {\n          name: f.name,\n          height: \"150\",\n          width: \"auto\",\n          src: e.target.result,\n          onClick: () => savedImgClick(f.name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 27\n          }\n        })\n      };\n      savedImgs.push(image); // console.log(\"IMGLIST\", savedImgs)\n\n      setSavedImgs(savedImgs);\n      setUpdateState(getUUID());\n    };\n\n    reader.readAsDataURL(f);\n  }\n\n  async function savedImgClick(name) {\n    for (let l = 0; l < savedImgs.length; l++) {\n      if (savedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", savedImgs[l]);\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        });\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const openMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeMenuClick = () => {\n    setAnchorEl(null);\n  };\n\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  } // random UUID generator\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // random numbers generator\n\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  }\n\n  function getEmail(id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"partners\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].email;\n          }\n        }\n      }\n    }\n  }\n\n  async function buttonClick(name, item) {\n    if (name === \"send\") {\n      if (selectedPartners.length === 0) {\n        swAllert(\"Выберите как минимум одного получателя!\", \"warning\");\n      } else {\n        senMails(); // Get sender id by userId in users\n\n        let senderId = null;\n\n        for (let e = 0; e < enumData.length; e++) {\n          if (enumData[e].name === \"users\") {\n            for (let d = 0; d < enumData[e].data.length; d++) {\n              if (enumData[e].data[d].user_id === userProfile.userId) {\n                senderId = enumData[e].data[d].id;\n              }\n            }\n          }\n        } // Create Mail Body for local notifications\n\n\n        let files_dir = getUUID(); // let lostRecipients = []\n\n        let mailBody = {\n          mails: {\n            type: messageType,\n            subject: fieldValue.subject,\n            body: fieldValue.body,\n            files_directory: files_dir,\n            status: 3,\n            sender: senderId,\n            es_date: null,\n            es_full_name: null,\n            es_inn: null\n          },\n          mail_distributions: []\n        };\n        console.log(\"mailBody\", mailBody); // Push recipient of local system mail\n\n        for (let s = 0; s < selectedPartners.length; s++) {\n          let recipientId = getRecipientId(selectedPartners[s]);\n\n          if (recipientId !== null) {\n            let newDistribution = {\n              sender: senderId,\n              sender_status: 3,\n              recipient_status: 1,\n              recipient: recipientId\n            };\n            mailBody.mail_distributions.push(newDistribution);\n          } // else{\n          //   lostRecipients.push(selectedPartners[s])\n          //   // console.log(\"LOST RECIPIENT\", selectedPartners[s])\n          // }\n\n        } // Files attached to mail\n\n\n        let blobs = [];\n\n        for (let f = 0; f < files.length; f++) {\n          for (let b = 0; b < Blobs.length; b++) {\n            if (files[f].name === Blobs[b].name) {\n              console.log(\"MATCH\", files[f].name, Blobs[b]);\n              blobs.push(Blobs[b]);\n            }\n          }\n        }\n\n        const commandJson = {\n          commandType: \"sendMails\",\n          process_id: process_id,\n          session_id: session_id,\n          taskID: taskID,\n          directory: files_dir,\n          blobs: blobs,\n          variables: {\n            userAction: {\n              value: \"sendMail\"\n            },\n            mailBody: {\n              value: JSON.stringify(mailBody)\n            }\n          }\n        };\n        console.log(\"button sendMail: \", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (name === \"sendWithES\") {\n      if (selectedPartners.length === 0) {\n        swAllert(\"Выберите как минимум одного получателя!\", \"warning\");\n      } else {\n        // Get sender id by userId in users\n        let senderId = null;\n\n        for (let e = 0; e < enumData.length; e++) {\n          if (enumData[e].name === \"users\") {\n            for (let d = 0; d < enumData[e].data.length; d++) {\n              if (enumData[e].data[d].user_id === userProfile.userId) {\n                senderId = enumData[e].data[d].id;\n              }\n            }\n          }\n        } // Create Mail Body for local notifications\n\n\n        let files_dir = getUUID(); // let lostRecipients = []\n\n        let mailBody = {\n          mails: {\n            type: messageType,\n            subject: fieldValue.subject,\n            body: fieldValue.body,\n            files_directory: files_dir,\n            status: 3,\n            sender: senderId,\n            es_date: moment(new Date()).format(),\n            es_full_name: props.esFullName,\n            es_inn: props.esInn\n          },\n          mail_distributions: []\n        };\n        console.log(\"mailBody\", mailBody); // Push recipient of local system mail\n\n        for (let s = 0; s < selectedPartners.length; s++) {\n          let recipientId = getRecipientId(selectedPartners[s]);\n\n          if (recipientId !== null) {\n            let newDistribution = {\n              sender: senderId,\n              sender_status: 3,\n              recipient_status: 1,\n              recipient: recipientId\n            };\n            mailBody.mail_distributions.push(newDistribution);\n          }\n        } // Files attached to mail\n\n\n        let blobs = [];\n\n        for (let f = 0; f < files.length; f++) {\n          for (let b = 0; b < Blobs.length; b++) {\n            if (files[f].name === Blobs[b].name) {\n              console.log(\"MATCH\", files[f].name, Blobs[b]);\n              blobs.push(Blobs[b]);\n            }\n          }\n        }\n\n        const commandJson = {\n          commandType: \"sendMails\",\n          process_id: process_id,\n          session_id: session_id,\n          taskID: taskID,\n          directory: files_dir,\n          blobs: blobs,\n          variables: {\n            userAction: {\n              value: \"sendMail\"\n            },\n            mailBody: {\n              value: JSON.stringify(mailBody)\n            }\n          }\n        };\n        console.log(\"button sendMail: \", commandJson);\n\n        if (props.esInn !== null) {\n          senMails();\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        } else {\n          sign(commandJson);\n        }\n      }\n    } else if (name === \"showReport\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"showReport\"\n          },\n          reportName: {\n            value: \"Message_alert\"\n          },\n          reportVars: {\n            value: \"?id=\" + selectedDoc.mail_id\n          }\n        }\n      };\n      console.log(\"button showReport:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (name === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    }\n  }\n\n  async function senMails() {\n    // Create FormData\n    let formData = new FormData();\n    formData.append(\"subject\", fieldValue[\"subject\"]);\n    formData.append(\"body\", fieldValue[\"body\"]);\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append('attachments', files[i], files[i].name);\n    }\n\n    for (let p = 0; p < selectedPartners.length; p++) {\n      formData.append(\"toEmail\", getEmail(selectedPartners[p]));\n      await fetch(\"/api/Mail/SendMail\", {\n        mode: 'no-cors',\n        method: 'POST',\n        body: formData\n      }).then(response => {\n        console.log(\"RES SEND MAIL\", response);\n      }).catch(error => console.error(error));\n    }\n  }\n\n  function getRecipientId(partner) {\n    console.log(\"Partner ID\", partner);\n    let recipientId = null;\n\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === \"users\") {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let parsedAttr = JSON.parse(enumData[e].data[d].attributes);\n\n          if (partner === parseInt(parsedAttr[\"partner\"])) {\n            recipientId = enumData[e].data[d].id;\n          }\n        }\n      }\n    }\n\n    console.log(\"RES ID\", recipientId);\n    return recipientId;\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.round(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  } // get rows amount of filtered docs by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList);\n    setUpdateState(getUUID());\n  } // Convert date to approptiate format\n\n\n  function beautifyDate(date) {\n    try {\n      var newDate = new Date(date); // \"2020-01-26\"\n\n      var dd = String(newDate.getDate()).padStart(2, '0');\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = newDate.getFullYear();\n      let beautyDate = \"\";\n\n      if (parseInt(dd) < 10) {\n        let shortdd = dd.substring(1, 2);\n        dd = shortdd + \" \";\n      } else {\n        beautyDate += dd;\n      }\n\n      switch (mm) {\n        case \"01\":\n          {\n            mm = \"янв.\";\n            break;\n          }\n\n        case \"02\":\n          {\n            mm = \"февр.\";\n            break;\n          }\n\n        case \"03\":\n          {\n            mm = \"мар.\";\n            break;\n          }\n\n        case \"04\":\n          {\n            mm = \"апр.\";\n            break;\n          }\n\n        case \"05\":\n          {\n            mm = \"мая\";\n            break;\n          }\n\n        case \"06\":\n          {\n            mm = \"июня\";\n            break;\n          }\n\n        case \"07\":\n          {\n            mm = \"июля\";\n            break;\n          }\n\n        case \"08\":\n          {\n            mm = \"авг.\";\n            break;\n          }\n\n        case \"09\":\n          {\n            mm = \"сент.\";\n            break;\n          }\n\n        case \"10\":\n          {\n            mm = \"окт.\";\n            break;\n          }\n\n        case \"11\":\n          {\n            mm = \"ноя.\";\n            break;\n          }\n\n        case \"12\":\n          {\n            mm = \"дек.\";\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n\n      beautyDate += \" \" + mm + \" \" + yyyy.toString().substring(2, 4) + \"г.\"; // console.log(\"beautyDate\", beautyDate)\n\n      return beautyDate;\n    } catch (er) {\n      return \"NaN.NaN.NaN\";\n    }\n  } // multiple selector functions\n\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setSelectedPartners(selectedPartners.concat(partners));\n    setPartners([]);\n  };\n\n  const handleCheckedRight = () => {\n    setSelectedPartners(selectedPartners.concat(leftChecked));\n    setPartners(not(partners, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setPartners(partners.concat(rightChecked));\n    setSelectedPartners(not(selectedPartners, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setPartners(partners.concat(selectedPartners));\n    setSelectedPartners([]);\n  };\n\n  const partnersList = items => /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n    style: {\n      width: \"100%\"\n    },\n    name: \"partnersSearhField\",\n    value: partnersSearchField,\n    onChange: partnersSearchFieldChange,\n    autoFocus: focusField === \"partnersSearhField\" ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 7\n    }\n  }, items.map(value => {\n    const labelId = `transfer-list-item-${value}-label`;\n\n    if (partnersSearchField === \"\") {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: checked.indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: getPartnerName(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      let searchField = partnersSearchField.toLowerCase();\n      let listItemLabel = getPartnerName(value).toLowerCase();\n      let includeSearch = listItemLabel.includes(searchField);\n      console.log(\"Search\", searchField);\n\n      if (includeSearch === true) {\n        return /*#__PURE__*/React.createElement(ListItem, {\n          key: value,\n          role: \"listitem\",\n          button: true,\n          onClick: handleToggle(value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          checked: checked.indexOf(value) !== -1,\n          tabIndex: -1,\n          disableRipple: true,\n          inputProps: {\n            'aria-labelledby': labelId\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(ListItemText, {\n          id: labelId,\n          primary: getPartnerName(value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 19\n          }\n        }));\n      }\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 9\n    }\n  })));\n\n  function partnersSearchFieldChange(event) {\n    setPartnersSearchField(event.target.value); // setUpdateState(getUUID())\n\n    setFocusField(\"partnersSearhField\"); // console.log(\"Search\", event.target.value)\n  }\n\n  const selectedPartnersList = items => /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 7\n    }\n  }, items.map(value => {\n    const labelId = `transfer-list-item-${value}-label`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value,\n      role: \"listitem\",\n      button: true,\n      onClick: handleToggle(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: getPartnerName(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 15\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 9\n    }\n  })));\n\n  function getPartnerName(id) {\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"partners\") {\n        for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n          if (props.userTask.enumData[i].data[d].id === id) {\n            return props.userTask.enumData[i].data[d].label;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  const writeMessgeClick = type => {\n    setMessageType(type);\n    setAnchorEl(null);\n    setWriteMessage(true);\n  };\n\n  const handleSelectAllMessagesChange = event => {\n    setAllMessagesSelected(event.target.checked);\n\n    for (let i = 0; i < filteredDocList.length; i++) {\n      selectedMessages[filteredDocList[i].mail_id] = event.target.checked;\n    }\n\n    setSelectedMessages(selectedMessages);\n  };\n\n  const handleSelectMessage = event => {\n    console.log(\"Check MESS\", event.target.id, \"CH \", event.target.checked);\n    setSelectedMessages({ ...selectedMessages,\n      [event.target.id]: event.target.checked\n    });\n  }; // file attachment functions\n\n\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files;\n\n    if (selectedFiles && selectedFiles[0]) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        files.push(selectedFiles[i]);\n        pushNewBlob(selectedFiles[i]);\n      }\n\n      setFiles(files);\n    }\n\n    setUpdateState(getUUID());\n    console.log(\"FILES\", files);\n  } // attached documents\n\n\n  async function pushNewBlob(f) {\n    // console.log(\"WRITING BLOBS\")\n    let docUrl = URL.createObjectURL(f);\n    fetch(docUrl).then(res => res.blob()).then(blob => {\n      // blob.name = f.name\n      var blobToBase64 = function (f, cb) {\n        let reader = new FileReader();\n\n        reader.onload = function () {\n          // converts blob to base64\n          var dataUrl = reader.result;\n          var base64 = dataUrl.split(\",\")[1];\n          cb(base64);\n        };\n\n        reader.readAsDataURL(f);\n      };\n\n      blobToBase64(f, async function (base64) {\n        // encode blobs to send to socket\n        let newBlob = {\n          \"name\": f.name,\n          \"blob\": base64,\n          \"size\": f.size\n        };\n        Blobs.push(newBlob);\n        setBlobs(Blobs); // console.log(\"BLOBS\", Blobs)\n      });\n    });\n  }\n\n  function deleteFile(name) {\n    let newFilesList = [];\n\n    for (let i = 0; i < files.length; i++) {\n      if (name !== files[i].name) {\n        newFilesList.push(files[i]);\n      }\n    }\n\n    setFiles(newFilesList);\n    console.log(\"FILES\", newFilesList);\n  }\n\n  function filesList() {\n    let selFilesList = [];\n\n    for (let i = 0; i < files.length; i++) {\n      selFilesList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        minWidth: \"500px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 15\n        }\n      }, files[i].name + \" \", \"(\" + Math.round(files[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        onClick: () => deleteFile(files[i].name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 19\n        }\n      })))))));\n      console.log(\"FILE\", files[i]);\n    }\n\n    return selFilesList;\n  }\n\n  function handleSearchChange(event) {\n    setSearchFieldValue(event.target.value);\n    console.log(\"FIELDVALUE\", event.target.value);\n  }\n\n  function handleClickSearch() {\n    console.log(\"SEARCH\", searchFieldValue, clickedMessagesType, filteredDocList);\n\n    if (searchFieldValue === \"\") {\n      if (clickedMessagesType === \"inbox\") {\n        handleInboxMessagesClick();\n      } else if (clickedMessagesType === \"sent\") {\n        handleSentMessagesClick();\n      } else if (clickedMessagesType === \"trash\") {\n        handleTrashMessagesClick();\n      }\n    } else {\n      let newDocList = [];\n\n      if (clickedMessagesType === \"inbox\") {\n        for (let i = 0; i < initialDocList.recipient.length; i++) {\n          if (initialDocList.recipient[i].recipient_status === 1 || initialDocList.recipient[i].recipient_status === 2) {\n            try {\n              let subject = initialDocList.recipient[i].subject.toLowerCase();\n              let body = initialDocList.recipient[i].body.toLowerCase();\n              let searchField = searchFieldValue.toLowerCase();\n\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.recipient[i].subject, initialDocList.recipient[i].body)\n                newDocList.push(initialDocList.recipient[i]);\n              }\n            } catch (er) {\n              console.log(er);\n            }\n          }\n        }\n      } else if (clickedMessagesType === \"sent\") {\n        for (let i = 0; i < initialDocList.sender.length; i++) {\n          if (initialDocList.sender[i].sender_status === 3) {\n            try {\n              let subject = initialDocList.sender[i].subject.toLowerCase();\n              let body = initialDocList.sender[i].body.toLowerCase();\n              let searchField = searchFieldValue.toLowerCase();\n\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.sender[i].subject, initialDocList.sender[i].body)\n                newDocList.push(initialDocList.sender[i]);\n              }\n            } catch (er) {\n              console.log(er);\n            }\n          }\n        }\n      } else if (clickedMessagesType === \"trash\") {\n        for (let i = 0; i < initialDocList.sender.length; i++) {\n          if (initialDocList.sender[i].sender_status === 4) {\n            try {\n              let subject = initialDocList.sender[i].subject.toLowerCase();\n              let body = initialDocList.sender[i].body.toLowerCase();\n              let searchField = searchFieldValue.toLowerCase();\n\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.sender[i].subject, initialDocList.sender[i].body)\n                newDocList.push(initialDocList.sender[i]);\n              }\n            } catch (er) {\n              console.log(er);\n            }\n          }\n        }\n\n        for (let i = 0; i < initialDocList.recipient.length; i++) {\n          if (initialDocList.recipient[i].recipient_status === 4) {\n            try {\n              let subject = initialDocList.recipient[i].subject.toLowerCase();\n              let body = initialDocList.recipient[i].body.toLowerCase();\n              let searchField = searchFieldValue.toLowerCase();\n\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.recipient[i].subject, initialDocList.recipient[i].body)\n                newDocList.push(initialDocList.recipient[i]);\n              }\n            } catch (er) {\n              console.log(er);\n            }\n          }\n        }\n      }\n\n      fetchBySize(0, 9, newDocList);\n      setFilteredDocList(newDocList);\n    }\n  }\n\n  function handleInboxMessagesClick() {\n    setClickedMessagesType(\"inbox\");\n    setAllMessagesSelected(false);\n    let filteredDocL = [];\n\n    for (let i = 0; i < initialDocList.recipient.length; i++) {\n      if (initialDocList.recipient[i].recipient_status === 1 || initialDocList.recipient[i].recipient_status === 2) {\n        filteredDocL.push(initialDocList.recipient[i]);\n      }\n    }\n\n    fetchBySize(0, 9, filteredDocL);\n    setFilteredDocList(filteredDocL);\n    console.log(\"INBOX\");\n  }\n\n  function handleSentMessagesClick() {\n    setClickedMessagesType(\"sent\");\n    setAllMessagesSelected(false);\n    let filteredDocL = [];\n\n    for (let i = 0; i < initialDocList.sender.length; i++) {\n      if (initialDocList.sender[i].sender_status === 3) {\n        filteredDocL.push(initialDocList.sender[i]);\n      }\n    }\n\n    fetchBySize(0, 9, filteredDocL);\n    setFilteredDocList(filteredDocL);\n    console.log(\"SENT\");\n  }\n\n  function handleTrashMessagesClick() {\n    setClickedMessagesType(\"trash\");\n    setAllMessagesSelected(false);\n    let filteredDocL = [];\n\n    for (let i = 0; i < initialDocList.recipient.length; i++) {\n      if (initialDocList.recipient[i].recipient_status === 4) {\n        filteredDocL.push(initialDocList.recipient[i]);\n      }\n    }\n\n    for (let i = 0; i < initialDocList.sender.length; i++) {\n      if (initialDocList.sender[i].sender_status === 4) {\n        filteredDocL.push(initialDocList.sender[i]);\n      }\n    }\n\n    fetchBySize(0, 9, filteredDocL);\n    setFilteredDocList(filteredDocL);\n    console.log(\"TRASH\");\n  }\n\n  function getSenderName(sender) {\n    // console.log(\"enumData\", enumData)\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === \"users\") {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          if (enumData[e].data[d].id === sender) {\n            return enumData[e].data[d].firstname + \" \" + enumData[e].data[d].lastname;\n          }\n        }\n      }\n    }\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === name) {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function getBackround(status) {\n    if (status === 1) {\n      // message is unread\n      return \"#FFDCA5\";\n    } else {\n      return \"#F0F1F1\";\n    }\n  }\n\n  function getFontWeight(status) {\n    if (status === 1) {\n      return \"bold\";\n    } else {\n      return \"nornal\";\n    }\n  }\n\n  function checkToShowDeleteButton() {\n    let showButton = false;\n\n    if (Object.keys(selectedMessages).length > 0) {\n      for (let key in selectedMessages) {\n        if (selectedMessages[key] === true) {\n          showButton = true;\n          break;\n        }\n      }\n    }\n\n    return showButton;\n  }\n\n  function openMessage(message) {\n    if (clickedMessagesType === \"inbox\") {\n      let user_id = null;\n\n      for (let e = 0; e < enumData.length; e++) {\n        if (enumData[e].name === \"users\") {\n          for (let d = 0; d < enumData[e].data.length; d++) {\n            if (enumData[e].data[d].user_id === userProfile.userId) {\n              user_id = enumData[e].data[d].id;\n            }\n          }\n        }\n      }\n\n      let mailDistrBody = {\n        id: message.distribution_id,\n        mail_id: message.mail_id,\n        sender: message.sender,\n        recipient: message.recipient,\n        recipient_status: 2,\n        created_at: message.created_at,\n        updated_at: message.updated_at\n      };\n      let unreadDistributionsBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getUnreadDistributions\"\n          },\n          depoRESTApi: {\n            value: \"\"\n          },\n          user_id_recipient: {\n            value: message.recipient\n          }\n        }\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"openMailDistribution\"\n          },\n          mailDistrBody: {\n            value: JSON.stringify(mailDistrBody)\n          },\n          selectedDoc: {\n            value: JSON.stringify(message)\n          },\n          unreadDistributionsBody: {\n            value: JSON.stringify(unreadDistributionsBody)\n          }\n        }\n      };\n      console.log(\"button openMail: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"openMail\"\n          },\n          selectedDoc: {\n            value: JSON.stringify(message)\n          }\n        }\n      };\n      console.log(\"button openMail: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    }\n  }\n\n  function deleteMessages() {\n    console.log(\"LISTS\", selectedMessages, docList);\n\n    if (clickedMessagesType === \"inbox\") {\n      let mailDistrList = [];\n\n      for (let d = 0; d < docList.length; d++) {\n        for (let key in selectedMessages) {\n          if (selectedMessages[key] === true) {\n            if (docList[d].mail_id === parseInt(key)) {\n              let mailToDelete = {\n                id: docList[d].distribution_id,\n                sender: docList[d].sender,\n                recipient: docList[d].recipient,\n                recipient_status: 4,\n                mail_id: docList[d].mail_id,\n                created_at: docList[d].created_at,\n                updated_at: docList[d].updated_at\n              };\n              mailDistrList.push(mailToDelete);\n              console.log(\"DEL\", mailToDelete);\n            }\n          }\n        }\n      }\n\n      let unreadDistributionsBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getUnreadDistributions\"\n          },\n          depoRESTApi: {\n            value: \"\"\n          },\n          user_id_recipient: {\n            value: docList[0].recipient\n          }\n        }\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"putMailsToTrash\"\n          },\n          mailDistrList: {\n            value: JSON.stringify(mailDistrList)\n          },\n          mailList: {\n            value: \"[]\"\n          },\n          unreadDistributionsBody: {\n            value: JSON.stringify(unreadDistributionsBody)\n          }\n        }\n      };\n      console.log(\"button putInboxMailsToTrash: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (clickedMessagesType === \"sent\") {\n      let mailList = [];\n\n      for (let d = 0; d < docList.length; d++) {\n        for (let key in selectedMessages) {\n          if (selectedMessages[key] === true) {\n            if (docList[d].mail_id === parseInt(key)) {\n              let mailToDelete = {\n                id: docList[d].mail_id,\n                sender: docList[d].sender,\n                subject: docList[d].subject,\n                body: docList[d].body,\n                status: 4,\n                files_directory: docList[d].files_directory,\n                created_at: docList[d].created_at,\n                updated_at: docList[d].updated_at\n              };\n              mailList.push(mailToDelete);\n              console.log(\"DEL\", mailToDelete);\n            }\n          }\n        }\n      }\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"putMailsToTrash\"\n          },\n          mailDistrList: {\n            value: \"[]\"\n          },\n          mailList: {\n            value: JSON.stringify(mailList)\n          }\n        }\n      };\n      console.log(\"button putSentMailsToTrash: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (clickedMessagesType === \"trash\") {\n      swal({\n        text: \"Вы действительно хотите удалить сообщения безвозвратно?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          let mailList = [];\n          let mailDistrList = [];\n\n          for (let key in selectedMessages) {\n            if (selectedMessages[key] === true) {\n              console.log(\"TRUE?\", key, selectedMessages[key]);\n\n              for (let d = 0; d < docList.length; d++) {\n                if (docList[d].mail_id === parseInt(key)) {\n                  console.log(\"DEL\", docList[d].subject); // I'm sender of mail\n\n                  if (docList[d].sender === idFromUsers) {\n                    console.log(\"IM SENDER\", docList[d].mail_id);\n                    let mailToDelete = {\n                      id: docList[d].mail_id,\n                      sender: docList[d].sender,\n                      subject: docList[d].subject,\n                      body: docList[d].body,\n                      status: 5,\n                      files_directory: docList[d].files_directory,\n                      created_at: docList[d].created_at,\n                      updated_at: docList[d].updated_at,\n                      deleted: true\n                    };\n                    mailList.push(mailToDelete);\n                  } // i'm recipient of mail\n                  else {\n                    console.log(\"IM RECIPIENT\", docList[d].mail_id);\n                    let mailToDelete = {\n                      id: docList[d].distribution_id,\n                      sender: docList[d].sender,\n                      recipient: docList[d].recipient,\n                      recipient_status: 5,\n                      mail_id: docList[d].mail_id,\n                      created_at: docList[d].created_at,\n                      updated_at: docList[d].updated_at,\n                      deleted: true\n                    };\n                    mailDistrList.push(mailToDelete);\n                  }\n                }\n              }\n            }\n          }\n\n          let unreadDistributionsBody = {\n            variables: {\n              user_session_id: {\n                value: session_id\n              },\n              userAction: {\n                value: \"getUnreadDistributions\"\n              },\n              depoRESTApi: {\n                value: \"\"\n              },\n              user_id_recipient: {\n                value: docList[0].recipient\n              }\n            }\n          };\n          let commandJson = {\n            commandType: \"completeTask\",\n            process_id: process_id,\n            session_id: session_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"putMailsToTrash\"\n              },\n              mailDistrList: {\n                value: JSON.stringify(mailDistrList)\n              },\n              mailList: {\n                value: JSON.stringify(mailList)\n              },\n              unreadDistributionsBody: {\n                value: JSON.stringify(unreadDistributionsBody)\n              }\n            }\n          };\n          console.log(\"button deleteMails: \", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id); // console.log(\"mailList\", mailList)\n          // console.log(\"mailDistrList\", mailDistrList)\n        }\n      });\n    }\n  }\n\n  function savedDocsList() {\n    console.log(\"SAVEDOCS\", savedDocs);\n    let savedDocsList = [];\n\n    for (let i = 0; i < savedDocs.length; i++) {\n      savedDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1572,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1573,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1574,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1575,\n          columnNumber: 15\n        }\n      }, savedDocs[i].name + \" \", \"(\" + Math.round(savedDocs[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1578,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(savedDocs[i]),\n        download: savedDocs[i].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1579,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1584,\n          columnNumber: 19\n        }\n      }))))))); // console.log(\"FILE\", savedDocs[i])\n    }\n\n    return savedDocsList;\n  }\n\n  function savedImgsList() {\n    var imgs = [];\n\n    for (let l = 0; l < savedImgs.length; l++) {\n      let blob = converFileToBlob(savedImgs[l].item.props.src);\n      imgs.push( /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1599,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1600,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1601,\n          columnNumber: 13\n        }\n      }, savedImgs[l].item)), /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1605,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(blob),\n        download: savedImgs[l].item.props.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1607,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1612,\n          columnNumber: 17\n        }\n      }))))));\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1621,\n          columnNumber: 9\n        }\n      }, imgs);\n    }\n  }\n\n  function converFileToBlob(src) {\n    var byteString = atob(src.split(',')[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new Blob([ab], {\n      type: 'image/jpeg'\n    });\n  }\n\n  function getMenuItemStyle(name) {\n    if (name === clickedMessagesType) {\n      return {\n        background: \"#F0F1F1\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      };\n    }\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"sendWithES\");\n    }\n  }\n\n  if (updateState !== null) {\n    try {\n      if (taskType === \"corporativeActionsMainForm\") {\n        if (writeMessage === false) {\n          return /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"flex-start\",\n            alignItems: \"flex-start\",\n            spacing: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1657,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 3,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1658,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Paper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1659,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(MenuList, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1660,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => handleInboxMessagesClick(),\n            style: getMenuItemStyle(\"inbox\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1661,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(ListItemIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1662,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(MailOutlineIcon, {\n            fontSize: \"small\",\n            style: getMenuItemStyle(\"inbox\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1663,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"inherit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1665,\n              columnNumber: 23\n            }\n          }, \"\\u0412\\u0445\\u043E\\u0434\\u044F\\u0449\\u0438\\u0435\")), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => handleSentMessagesClick(),\n            style: getMenuItemStyle(\"sent\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1667,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(ListItemIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1668,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(SendIcon, {\n            fontSize: \"small\",\n            style: getMenuItemStyle(\"sent\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1669,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"inherit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1671,\n              columnNumber: 23\n            }\n          }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435\")), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => handleTrashMessagesClick(),\n            style: getMenuItemStyle(\"trash\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1673,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(ListItemIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1674,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n            fontSize: \"small\",\n            style: getMenuItemStyle(\"trash\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1675,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"inherit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1677,\n              columnNumber: 23\n            }\n          }, \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\"))))), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 9,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1682,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1683,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 12,\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1684,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Paper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1685,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Checkbox, {\n            style: {\n              color: \"green\"\n            },\n            onChange: handleSelectAllMessagesChange,\n            checked: allMessagesSelected === true ? true : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1686,\n              columnNumber: 23\n            }\n          }), checkToShowDeleteButton() === true && /*#__PURE__*/React.createElement(IconButton, {\n            \"aria-label\": \"delete\",\n            size: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1692,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(DeleteIcon, {\n            onClick: () => deleteMessages(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1693,\n              columnNumber: 27\n            }\n          })), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/React.createElement(CreateIcon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1699,\n                columnNumber: 36\n              }\n            }),\n            style: {\n              margin: 5,\n              color: \"green\",\n              background: \"white\",\n              fontSize: 14\n            },\n            \"aria-controls\": menuId,\n            \"aria-haspopup\": \"true\",\n            onClick: openMenuClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1696,\n              columnNumber: 23\n            }\n          }, \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Menu, {\n            id: menuId,\n            anchorEl: anchorEl,\n            keepMounted: true,\n            open: Boolean(anchorEl),\n            onClose: closeMenuClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1707,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => writeMessgeClick(1),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1714,\n              columnNumber: 25\n            }\n          }, \"\\u0418\\u0437\\u0432\\u0435\\u0449\\u0435\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => writeMessgeClick(2),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1715,\n              columnNumber: 25\n            }\n          }, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \\u043D\\u0430 \\u0440\\u0430\\u0441\\u043A\\u0440\\u044B\\u0442\\u0438\\u0435\"), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => writeMessgeClick(3),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1716,\n              columnNumber: 25\n            }\n          }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u043E\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => writeMessgeClick(4),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1717,\n              columnNumber: 25\n            }\n          }, \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043E \\u041A\\u0414\")), /*#__PURE__*/React.createElement(TextField, {\n            size: \"small\",\n            variant: \"outlined\",\n            placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0432 \\u043F\\u043E\\u0447\\u0442\\u0435\",\n            style: {\n              width: \"50%\",\n              paddingLeft: 50,\n              margin: 3\n            },\n            onChange: handleSearchChange,\n            InputProps: {\n              endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n                position: \"end\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1727,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(IconButton, {\n                onClick: () => handleClickSearch(),\n                edge: \"end\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1728,\n                  columnNumber: 31\n                }\n              }, /*#__PURE__*/React.createElement(SearchIcon, {\n                size: \"small\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1732,\n                  columnNumber: 33\n                }\n              })))\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1719,\n              columnNumber: 23\n            }\n          }))), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 12,\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1739,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Paper, {\n            style: {\n              minHeight: \"76px\",\n              paddingTop: docList === null ? \"25px\" : 0\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1740,\n              columnNumber: 21\n            }\n          }, docList !== null ? /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1742,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"table\", {\n            class: \"main-table-style\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1743,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"thead\", {\n            class: \"thead-style\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1744,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1745,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-first-child\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1746,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1747,\n              columnNumber: 33\n            }\n          }, \"\\u0414\\u0430\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1748,\n              columnNumber: 33\n            }\n          }, \"\\u0422\\u0438\\u043F\"), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1749,\n              columnNumber: 33\n            }\n          }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0435\\u043B\\u044C\"), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1750,\n              columnNumber: 33\n            }\n          }, \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-last-child\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1751,\n              columnNumber: 33\n            }\n          }, \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n            class: \"body-style\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1754,\n              columnNumber: 29\n            }\n          }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n            width: \"100%\",\n            style: {\n              \"fontSize\": 13,\n              \"height\": 30,\n              \"background\": clickedMessagesType === \"inbox\" ? getBackround(dataItem.recipient_status) : \"#F0F1F1\",\n              \"fontWeight\": clickedMessagesType === \"inbox\" ? getFontWeight(dataItem.recipient_status) : \"normal\",\n              \"cursor\": \"pointer\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1757,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1767,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(Checkbox, {\n            style: {\n              height: 15,\n              color: \"green\",\n              maxWidth: 25\n            },\n            id: dataItem.mail_id,\n            onChange: handleSelectMessage,\n            checked: selectedMessages[dataItem.mail_id] === true ? true : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1768,\n              columnNumber: 39\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            align: \"center\",\n            width: 150,\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1775,\n              columnNumber: 37\n            }\n          }, beautifyDate(dataItem.created_at)), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            align: \"center\",\n            width: 150,\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1783,\n              columnNumber: 37\n            }\n          }, getEnumLabel(\"mailTypes\", dataItem.type)), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            width: 150,\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1791,\n              columnNumber: 37\n            }\n          }, getSenderName(dataItem.sender)), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1798,\n              columnNumber: 37\n            }\n          }, dataItem.subject), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              \"border-bottom\": \"1px solid grey\",\n              \"white-space\": \"wrap\"\n            },\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1804,\n              columnNumber: 37\n            }\n          }, dataItem.body.substring(0, 50), dataItem.body.length > 50 ? \"...\" : \"\"))))), /*#__PURE__*/React.createElement(\"table\", {\n            size: \"small\",\n            style: {\n              \"border-collapse\": \"collapse\",\n              \"white-space\": \"nowrap\",\n              fontSize: 13\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1816,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"tfoot\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1817,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1818,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              paddingLeft: \"20px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1819,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              minWidth: 80,\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1820,\n              columnNumber: 35\n            }\n          }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1822,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FormControl, {\n            variant: \"outlined\",\n            style: {\n              minWidth: 30\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1823,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(MaterialSelect, {\n            onChange: handleChangeRowsPerPage,\n            style: {\n              height: 25,\n              color: \"black\"\n            },\n            value: size,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1827,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            value: 10,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1832,\n              columnNumber: 39\n            }\n          }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 20,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1833,\n              columnNumber: 39\n            }\n          }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 50,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1834,\n              columnNumber: 39\n            }\n          }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 100,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1835,\n              columnNumber: 39\n            }\n          }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 200,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1836,\n              columnNumber: 39\n            }\n          }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 500,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1837,\n              columnNumber: 39\n            }\n          }, \"500\")))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1841,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1842,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => KeyboardArrowFirstClick(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1843,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n            style: {\n              fontSize: \"large\",\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1844,\n              columnNumber: 39\n            }\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1848,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1849,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => KeyboardArrowLeftClick(page),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1850,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n            style: {\n              fontSize: \"medium\",\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1851,\n              columnNumber: 39\n            }\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              color: \"black\",\n              fontSize: 16\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1855,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            style: {\n              maxWidth: 25\n            },\n            value: page,\n            onChange: handlePageChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1856,\n              columnNumber: 35\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              paddingLeft: \"3px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1858,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1859,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            onClick: () => GoToPage(),\n            variant: \"outlined\",\n            style: {\n              height: 22,\n              backgroundColor: \"#D1D6D6\",\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1860,\n              columnNumber: 37\n            }\n          }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1872,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1873,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => KeyboardArrowRightClick(page),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1874,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n            style: {\n              fontSize: \"medium\",\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1875,\n              columnNumber: 39\n            }\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              color: \"black\",\n              fontSize: 13\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1879,\n              columnNumber: 33\n            }\n          }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount()))))) : /*#__PURE__*/React.createElement(Typography, {\n            variant: \"inherit\",\n            noWrap: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1885,\n              columnNumber: 25\n            }\n          }, \"\\u0412 \\u044D\\u0442\\u043E\\u0439 \\u043F\\u0430\\u043F\\u043A\\u0435 \\u043D\\u0435\\u0442 \\u043F\\u0438\\u0441\\u0435\\u043C!\"))), /*#__PURE__*/React.createElement(Snackbar, {\n            open: showSnackBar,\n            onClose: () => handleCloseSnackBar(),\n            autoHideDuration: 1200,\n            message: snackBarMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1891,\n              columnNumber: 19\n            }\n          }))));\n        } else if (writeMessage === true) {\n          return /*#__PURE__*/React.createElement(Paper, {\n            key: updateState,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1904,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            spacing: 1,\n            justify: \"center\",\n            alignItems: \"center\",\n            className: classes.root,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1905,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1906,\n              columnNumber: 17\n            }\n          }, partnersList(partners)), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1907,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"column\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1908,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleAllRight,\n            disabled: partners.length === 0,\n            \"aria-label\": \"move all selectedPartners\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1909,\n              columnNumber: 21\n            }\n          }, \"\\u226B\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleCheckedRight,\n            disabled: leftChecked.length === 0,\n            \"aria-label\": \"move selected selectedPartners\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1919,\n              columnNumber: 21\n            }\n          }, \">\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleCheckedLeft,\n            disabled: rightChecked.length === 0,\n            \"aria-label\": \"move selected partners\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1929,\n              columnNumber: 21\n            }\n          }, \"<\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleAllLeft,\n            disabled: selectedPartners.length === 0,\n            \"aria-label\": \"move all partners\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1939,\n              columnNumber: 21\n            }\n          }, \"\\u226A\"))), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1951,\n              columnNumber: 17\n            }\n          }, selectedPartnersList(selectedPartners)), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 11,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1952,\n              columnNumber: 17\n            }\n          }, \"\\u0422\\u0438\\u043F \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F: \", getEnumLabel(\"mailTypes\", messageType)), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 11,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1953,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1954,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(TextField, {\n            id: \"outlined-multiline-static\",\n            label: \"\\u0422\\u0435\\u043C\\u0430\",\n            multiline: true,\n            onBlur: handleChange,\n            name: \"subject\",\n            defaultValue: fieldValue[\"subject\"],\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1955,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(TextField, {\n            id: \"outlined-multiline-static\",\n            label: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0443\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u044F\",\n            multiline: true,\n            rows: 4,\n            onBlur: handleChange,\n            name: \"body\",\n            defaultValue: fieldValue[\"body\"],\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1965,\n              columnNumber: 21\n            }\n          }))), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1978,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1979,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.importFile,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1980,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            accept: \"image/*, application/pdf\",\n            className: classes.inputFile,\n            id: corpActionsAttachFileButtonId,\n            multiple: true,\n            type: \"file\",\n            onChange: handleAttachFile,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1981,\n              columnNumber: 23\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: corpActionsAttachFileButtonId,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1989,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            component: \"span\",\n            variant: \"outlined\",\n            style: {\n              margin: 3,\n              color: \"white\",\n              backgroundColor: \"#BB7100\",\n              borderColor: \"#161C87\",\n              height: 32,\n              fontSize: 12\n            },\n            endIcon: /*#__PURE__*/React.createElement(AttachFileIcon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2001,\n                columnNumber: 36\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1990,\n              columnNumber: 25\n            }\n          }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B\"))), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            onClick: () => buttonClick(\"send\", null),\n            style: {\n              margin: 3,\n              color: \"white\",\n              borderColor: \"#161C87\",\n              backgroundColor: \"#287A2C\",\n              height: 32,\n              fontSize: 12\n            },\n            endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2017,\n                columnNumber: 32\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2006,\n              columnNumber: 21\n            }\n          }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            onClick: () => props.esInn !== null ? buttonClick(\"sendWithES\") : setShowModalEnterPin(true),\n            style: {\n              margin: 3,\n              color: \"white\",\n              borderColor: \"#161C87\",\n              backgroundColor: \"#287A2C\",\n              height: 32,\n              fontSize: 12\n            },\n            endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2031,\n                columnNumber: 32\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2020,\n              columnNumber: 21\n            }\n          }, \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u0438 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            onClick: () => setWriteMessage(false),\n            style: {\n              margin: 3,\n              color: \"white\",\n              borderColor: \"#161C87\",\n              backgroundColor: \"#ff1f1f\",\n              height: 32,\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2035,\n              columnNumber: 21\n            }\n          }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")))), /*#__PURE__*/React.createElement(Grid, {\n            style: {\n              paddingLeft: \"45px\"\n            },\n            container: true,\n            spacing: 2,\n            justify: \"flex-start\",\n            alignItems: \"flex-start\",\n            className: classes.root,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2051,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: \"auto\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2052,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2053,\n              columnNumber: 19\n            }\n          }, filesList()))), /*#__PURE__*/React.createElement(Modal, {\n            open: showModalEnterPin,\n            onClose: handleCloseModalEnterPin,\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2058,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: modalStyle,\n            className: classes.modalRutoken,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2064,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            id: \"simple-modal-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2065,\n              columnNumber: 19\n            }\n          }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            },\n            error: wrongPin,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2066,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(InputLabel, {\n            htmlFor: \"outlined-adornment-password\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2067,\n              columnNumber: 21\n            }\n          }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n            type: showPin ? 'text' : 'password',\n            defaultValue: rutokenPin,\n            onChange: handlePinChange,\n            onKeyPress: onKeyPressModalEnterPin,\n            autoFocus: true,\n            endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n              position: \"end\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2075,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPin,\n              edge: \"end\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2076,\n                columnNumber: 27\n              }\n            }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2081,\n                columnNumber: 40\n              }\n            }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2081,\n                columnNumber: 57\n              }\n            }))),\n            labelWidth: 25,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2068,\n              columnNumber: 21\n            }\n          })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n            color: \"red\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2088,\n              columnNumber: 41\n            }\n          }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"contained\",\n            onClick: () => buttonClick(\"sendWithES\"),\n            style: {\n              margin: 3,\n              height: 32,\n              fontSize: 12,\n              color: \"white\",\n              backgroundColor: \"#2862F4\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2089,\n              columnNumber: 19\n            }\n          }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"contained\",\n            onClick: handleCloseModalEnterPin,\n            style: {\n              margin: 3,\n              height: 32,\n              fontSize: 12,\n              color: \"white\",\n              backgroundColor: \"#E73639\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2101,\n              columnNumber: 19\n            }\n          }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n        }\n      } else if (taskType === \"shomMessageForm\") {\n        return /*#__PURE__*/React.createElement(Paper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2121,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2122,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"center\",\n          alignItems: \"center\",\n          spacing: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2123,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2124,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          component: \"h1\",\n          variant: \"h6\",\n          color: \"inherit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2125,\n            columnNumber: 17\n          }\n        }, selectedDoc.subject)), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2127,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2128,\n            columnNumber: 17\n          }\n        }, \"Дата: \", selectedDoc.created_at.substring(0, 19)), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2129,\n            columnNumber: 17\n          }\n        }, \"Отправитель: \", getSenderName(selectedDoc.sender)), selectedDoc.es_inn !== null && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2131,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2132,\n            columnNumber: 21\n          }\n        }, \"Время подписания: \", selectedDoc.es_date !== undefined ? selectedDoc.es_date.substring(0, 19) : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2133,\n            columnNumber: 21\n          }\n        }, \"ИНН: \", selectedDoc.es_inn), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2134,\n            columnNumber: 21\n          }\n        }, \"ФИО: \", selectedDoc.es_full_name))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2138,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2139,\n            columnNumber: 17\n          }\n        }, selectedDoc.body)), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2141,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2142,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2143,\n            columnNumber: 17\n          }\n        }, \"Прикрепленные файлы\"), savedDocsList(), savedImgsList()), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2147,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"outlined\",\n          onClick: () => buttonClick(\"showReport\"),\n          style: {\n            margin: 3,\n            color: \"white\",\n            borderColor: \"#161C87\",\n            backgroundColor: \"#287A2C\",\n            height: 32,\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2148,\n            columnNumber: 17\n          }\n        }, \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n          variant: \"outlined\",\n          onClick: () => buttonClick(\"back\"),\n          style: {\n            margin: 3,\n            color: \"white\",\n            borderColor: \"#161C87\",\n            backgroundColor: \"#ff1f1f\",\n            height: 32,\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2161,\n            columnNumber: 17\n          }\n        }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\"))), /*#__PURE__*/React.createElement(Modal, {\n          className: classes.modal,\n          open: openModal,\n          onClose: handleCloseModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2176,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.imagePaper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2181,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          name: selectedImg.name,\n          height: 600,\n          width: \"auto\",\n          src: selectedImg.src,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2182,\n            columnNumber: 17\n          }\n        }))));\n      } else {\n        return /*#__PURE__*/React.createElement(LinearProgress, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2189,\n            columnNumber: 16\n          }\n        });\n      }\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2194,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","clsx","Button","LinearProgress","NumberFormat","PropTypes","Card","fade","makeStyles","Grid","List","ListItem","ListItemIcon","ListItemText","Checkbox","Paper","TextField","Typography","FormControl","MaterialSelect","Snackbar","OutlinedInput","InputAdornment","InputLabel","TableRow","TableBody","TableCell","Modal","Menu","MenuList","MenuItem","SendIcon","AttachFileIcon","CloseIcon","IconButton","DraftsIcon","MailOutlineIcon","DeleteOutlineIcon","ArrowForwardIosIcon","ArrowBackIosIcon","FirstPageIcon","SearchIcon","CreateIcon","DeleteIcon","GetAppIcon","Visibility","VisibilityOff","swal","Tooltip","axios","rutoken","plugin","rutokenHandle","certHandle","certData","cmsData","moment","require","generator","FloatFormat","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","IntegerFormat","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","importFile","inputFile","display","modal","alignItems","justifyContent","modalRutoken","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","not","a","b","filter","indexOf","intersection","getModalStyle","top","left","transform","classes","userProfile","session_id","userTask","process_id","taskID","enumData","enumOptions","setEnumOptions","fieldValue","setFieldValue","subject","body","esDate","esFullName","esInn","searchFieldValue","setSearchFieldValue","selectedOptions","setSelectedOptions","updateState","setUpdateState","taskType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","clickedMessagesType","setClickedMessagesType","checked","setChecked","partners","setPartners","selectedPartners","setSelectedPartners","leftChecked","rightChecked","partnersSearchField","setPartnersSearchField","focusField","setFocusField","files","setFiles","Blobs","setBlobs","corpActionsAttachFileButtonId","setCorpActionsAttachFileButtonId","menuId","setMenuId","anchorEl","setAnchorEl","writeMessage","setWriteMessage","messageType","setMessageType","allMessagesSelected","setAllMessagesSelected","selectedMessages","setSelectedMessages","selectedDoc","setSelectedDoc","savedImgs","setSavedImgs","savedImagesFiles","setSavedImagesFiles","savedDocs","setSavedDocs","selectedImg","setSelectedImg","openModal","setOpenModal","idFromUsers","setIdFromUsers","modalStyle","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","console","log","getUUID","undefined","i","length","name","newPartners","d","data","push","id","user_id","userId","callErrorToast","parsedData","JSON","parse","filteredDocL","recipient","recipient_status","fetchBySize","er","parsedSelectedDoc","extension","convertBase64ToFile","content","fileName","handlePinChange","event","handleClickShowPin","handleCloseModalEnterPin","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","handleError","reason","isNaN","message","errorCodes","parseInt","PIN_INCORRECT","alert","sign","commandJson","enumerateDevices","devices","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","senMails","options","inn","fullName","rdn","newMailBody","variables","mailBody","mails","es_date","Date","format","es_full_name","es_inn","newCommandJson","stringify","setEsInn","setEsUserFullName","setEsExpiredDate","validNotAfter","substring","sendFieldValues","clearTabData","DATA_FORMAT_PLAIN","logout","swAllert","dataurl","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","convFile","File","type","handleAttachSavedFile","file","pushSavedImage","f","reader","FileReader","onload","e","image","item","savedImgClick","readAsDataURL","l","src","handleOpenModal","newId","handleCloseModal","openMenuClick","currentTarget","closeMenuClick","handleChange","uuidv1","keyGen","password","generate","numbers","text","icon","buttons","ok","getEmail","email","buttonClick","senderId","files_dir","files_directory","status","sender","mail_distributions","s","recipientId","getRecipientId","newDistribution","sender_status","blobs","commandType","directory","userAction","userRole","reportName","reportVars","mail_id","formData","FormData","append","p","fetch","mode","method","response","catch","error","partner","parsedAttr","attributes","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","fetchFrom","fetchTo","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","getPageAmount","pagesFloat","mathRoundOfPages","Math","round","handleCloseSnackBar","Data","newDocList","beautifyDate","date","newDate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","beautyDate","shortdd","toString","handleToggle","currentIndex","newChecked","splice","handleAllRight","concat","handleCheckedRight","handleCheckedLeft","handleAllLeft","partnersList","items","partnersSearchFieldChange","map","labelId","getPartnerName","searchField","toLowerCase","listItemLabel","includeSearch","includes","selectedPartnersList","label","writeMessgeClick","handleSelectAllMessagesChange","handleSelectMessage","handleAttachFile","selectedFiles","pushNewBlob","docUrl","URL","createObjectURL","res","blob","blobToBase64","cb","dataUrl","base64","newBlob","deleteFile","newFilesList","filesList","selFilesList","paddingLeft","color","fontWeight","fontSize","handleSearchChange","handleClickSearch","handleInboxMessagesClick","handleSentMessagesClick","handleTrashMessagesClick","getSenderName","firstname","lastname","getEnumLabel","getBackround","getFontWeight","checkToShowDeleteButton","showButton","Object","keys","key","openMessage","mailDistrBody","distribution_id","created_at","updated_at","unreadDistributionsBody","user_session_id","depoRESTApi","user_id_recipient","deleteMessages","mailDistrList","mailToDelete","mailList","yes","cancel","click","deleted","savedDocsList","minWidth","savedImgsList","imgs","converFileToBlob","byteString","ab","ArrayBuffer","ia","Blob","getMenuItemStyle","onKeyPressModalEnterPin","code","charCode","Boolean","endAdornment","minHeight","paddingTop","dataItem","maxWidth","borderColor","imagePaper"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/CorporativeActions/CorporativeActions.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\n// Form components\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport FormControl from '@material-ui/core/FormControl';\nimport MaterialSelect from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\n// Icons\nimport SendIcon from '@material-ui/icons/Send';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n// Libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport Tooltip from '@material-ui/core/Tooltip';\nimport axios from 'axios';\nimport * as rutoken from \"rutoken\";\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\nvar moment = require('moment');\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalRutoken: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n}))\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nexport default (props) => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [enumData] = useState(props.userTask.enumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [fieldValue, setFieldValue] = useState({ subject: \"\", body: \"\", esDate: \"\", esFullName: \"\", esInn: \"\" })\n  const [searchFieldValue, setSearchFieldValue] = useState(\"\")\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [updateState, setUpdateState] = useState(false)\n  const [taskType] = useState(props.userTask.taskType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(false)\n  const [clickedMessagesType, setClickedMessagesType] = useState(\"inbox\")\n\n  const [checked, setChecked] = useState([])\n  const [partners, setPartners] = useState([])\n  const [selectedPartners, setSelectedPartners] = useState([])\n  const leftChecked = intersection(checked, partners)\n  const rightChecked = intersection(checked, selectedPartners)\n  const [partnersSearchField, setPartnersSearchField] = useState(\"\")\n  const [focusField, setFocusField] = useState(\"partnersSearhField\")\n  const [files, setFiles] = useState([])\n  const [Blobs, setBlobs] = useState([])\n  const [corpActionsAttachFileButtonId, setCorpActionsAttachFileButtonId] = useState(null)\n\n  const [menuId, setMenuId] = useState(null)\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const [writeMessage, setWriteMessage] = useState(false)\n  const [messageType, setMessageType] = useState(1)\n  const [allMessagesSelected, setAllMessagesSelected] = useState(false)\n  const [selectedMessages, setSelectedMessages] = useState({})\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  // Saved Docs\n  const [savedImgs, setSavedImgs] = useState([])\n  const [savedImagesFiles, setSavedImagesFiles] = useState([])\n  const [savedDocs, setSavedDocs] = useState([])\n  const [selectedImg, setSelectedImg] = useState({})\n  const [openModal, setOpenModal] = useState(false)\n  const [idFromUsers, setIdFromUsers] = useState(false)\n  // Rutoken\n  const [modalStyle] = useState(getModalStyle)\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n\n  // Set data from props to state of component\n  useEffect(() => {\n    console.log(\"CORPACTS PROPS\", props)\n    setCorpActionsAttachFileButtonId(getUUID())\n    setMenuId(getUUID())\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          if (props.userTask.enumData[i].name === \"partners\") {\n            let newPartners = []\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              newPartners.push(props.userTask.enumData[i].data[d].id)\n            }\n            setPartners(newPartners)\n          }\n          else if (props.userTask.enumData[i].name === \"users\") {\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              if (props.userTask.enumData[i].data[d].user_id === props.userProfile.userId) {\n                setIdFromUsers(props.userTask.enumData[i].data[d].id)\n              }\n            }\n          }\n        }\n        else {\n          if (i === 0) {\n            setPartners([])\n            props.callErrorToast(\"Ошибка сбора справочной информации Partners\")\n          }\n          else {\n            props.callErrorToast(\"Ошибка сбора справочной информации Users\")\n          }\n        }\n      }\n    }\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        setInitialDocList(parsedData)\n        let filteredDocL = []\n        for (let i = 0; i < parsedData.recipient.length; i++) {\n          if (parsedData.recipient[i].recipient_status === 1 || parsedData.recipient[i].recipient_status === 2) {\n            filteredDocL.push(parsedData.recipient[i])\n          }\n        }\n        fetchBySize(0, 9, filteredDocL)\n        setFilteredDocList(filteredDocL)\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      console.log(\"SDOC\", parsedSelectedDoc)\n      setSelectedDoc(parsedSelectedDoc)\n    }\n    if (props.userTask.savedDocs.length !== 0) {\n      for (let d = 0; d < props.userTask.savedDocs.length; d++) {\n        let extension = props.userTask.savedDocs[d].extension\n        if (extension === \".png\") {\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".jpeg\" || extension === \".jpg\") {\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".doc\") {\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".docx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".xlsx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".pdf\") {\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n      }\n    }\n    setUpdateState(getUUID())\n  }, [])\n  // RuToken functions\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin() {\n    setShowPin(!showPin)\n  }\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  rutoken.ready\n    // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n    .then(function () {\n      if (window.chrome || typeof InstallTrigger !== 'undefined') {\n        return rutoken.isExtensionInstalled()\n      } else {\n        return Promise.resolve(true)\n      }\n    })\n    // Проверка установки Рутокен Плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.isPluginInstalled()\n      } else {\n        // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n      }\n    })\n    // Загрузка плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.loadPlugin()\n      } else {\n        // alert(\"Не удаётся найти Плагин\");\n      }\n    })\n    //Можно начинать работать с плагином\n    .then(function (result) {\n      if (!result) {\n        return // alert(\"Не удаётся загрузить Плагин\")\n      } else {\n        plugin = result\n        return Promise.resolve()\n      }\n    })\n\n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  // Sign transfer order with rutoken\n  function sign(commandJson) {\n    try {\n      // Получение текста для подписи\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices()\n          .then(function (devices) {\n            if (devices.length > 0) {\n              return Promise.resolve(devices[0]);\n            } else {\n              alert(\"Рутокен не обнаружен\");\n            }\n          })\n          // Проверка залогиненности\n          .then(function (firstDevice) {\n            rutokenHandle = firstDevice;\n            return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n          })\n          // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n          .then(function (isLoggedIn) {\n            if (isLoggedIn) {\n              return Promise.resolve();\n            } else {\n              return plugin.login(rutokenHandle, rutokenPin);\n            }\n          })\n          // Перебор пользовательских сертификатов на токене\n          .then(function () {\n            return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n          })\n          .then(function (certs) {\n            if (certs.length > 0) {\n              certHandle = certs[0];\n              return plugin.parseCertificate(rutokenHandle, certs[0]);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\");\n            }\n          })\n          // Подписание данных из текстового поля на первом найденом сертификате\n          .then(function (certs) {\n            certData = certs\n            // console.log(\"RUTDATA\", certData)\n            if (certHandle.length > 0) {\n              senMails()\n              var options = {};\n\n              let inn = \"\"\n              let fullName = \"\"\n              for (let i = 0; i < certData.subject.length; i++) {\n                if (certData.subject[i].rdn === \"serialNumber\") {\n                  inn = certData.subject[i].value\n                }\n                if (certData.subject[i].rdn === \"commonName\") {\n                  fullName = certData.subject[i].value\n                }\n              }\n              let newMailBody = JSON.parse(commandJson.variables.mailBody.value)\n              newMailBody.mails.es_date = moment(new Date()).format()\n              newMailBody.mails.es_full_name = fullName\n              newMailBody.mails.es_inn = inn\n              let newCommandJson = commandJson\n              newCommandJson.variables.mailBody.value = JSON.stringify(newMailBody)\n              props.setEsInn(inn)\n              props.setEsUserFullName(fullName)\n              props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n              handleCloseModalEnterPin()\n              console.log(\"SIGNED CJ\", newCommandJson)\n              props.sendFieldValues(newCommandJson)\n              props.clearTabData(process_id)\n              return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\")\n            }\n          })\n          // Закрытие сессии\n          .then(function () {\n            plugin.logout(rutokenHandle)\n          }, handleError)\n      }\n      else { swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\") }\n    }\n    catch (er) {\n      console.log(\"Rutoken ERR\")\n    }\n  }\n  // Documents attached to mail\n  function convertBase64ToFile(dataurl, fileName) {\n    var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n)\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n)\n    }\n    let convFile = new File([u8arr], fileName, { type: mime })\n    handleAttachSavedFile(convFile)\n    console.log(\"CONV FILE\", convFile)\n  }\n  function handleAttachSavedFile(file) {\n    // console.log(\"FILE\", file)\n    if (file.type === \"application/pdf\" || file.type === \"application/msword\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n      savedDocs.push(file)\n      setSavedDocs(savedDocs)\n    }\n    else {\n      savedImagesFiles.push(file)\n      setSavedImagesFiles(savedImagesFiles)\n      pushSavedImage(file)\n    }\n    // setUpdateState(getUUID())\n  }\n  async function pushSavedImage(f) {\n    let reader = new FileReader()\n    reader.onload = async function (e) {\n      // push new images to list and show in UI\n      let image = { item: <img name={f.name} height=\"150\" width=\"auto\" src={e.target.result} onClick={() => savedImgClick(f.name)} /> }\n      savedImgs.push(image)\n      // console.log(\"IMGLIST\", savedImgs)\n      setSavedImgs(savedImgs)\n      setUpdateState(getUUID())\n    }\n    reader.readAsDataURL(f)\n  }\n  async function savedImgClick(name) {\n    for (let l = 0; l < savedImgs.length; l++) {\n      if (savedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", savedImgs[l])\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        })\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n  const handleCloseModal = () => {\n    setOpenModal(false)\n  }\n  const openMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  }\n  const closeMenuClick = () => {\n    setAnchorEl(null)\n  }\n\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  // random UUID generator\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // random numbers generator\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  function getEmail(id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"partners\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].email\n          }\n        }\n      }\n    }\n  }\n  async function buttonClick(name, item) {\n    if (name === \"send\") {\n      if (selectedPartners.length === 0) {\n        swAllert(\"Выберите как минимум одного получателя!\", \"warning\")\n      }\n      else {\n        senMails()\n        // Get sender id by userId in users\n        let senderId = null\n        for (let e = 0; e < enumData.length; e++) {\n          if (enumData[e].name === \"users\") {\n            for (let d = 0; d < enumData[e].data.length; d++) {\n              if (enumData[e].data[d].user_id === userProfile.userId) {\n                senderId = enumData[e].data[d].id\n              }\n            }\n          }\n        }\n        // Create Mail Body for local notifications\n        let files_dir = getUUID()\n        // let lostRecipients = []\n        let mailBody = {\n          mails: {\n            type: messageType,\n            subject: fieldValue.subject,\n            body: fieldValue.body,\n            files_directory: files_dir,\n            status: 3,\n            sender: senderId,\n            es_date: null,\n            es_full_name: null,\n            es_inn: null\n          },\n          mail_distributions: []\n        }\n        console.log(\"mailBody\", mailBody)\n        // Push recipient of local system mail\n        for (let s = 0; s < selectedPartners.length; s++) {\n          let recipientId = getRecipientId(selectedPartners[s])\n          if (recipientId !== null) {\n            let newDistribution = {\n              sender: senderId,\n              sender_status: 3,\n              recipient_status: 1,\n              recipient: recipientId\n            }\n            mailBody.mail_distributions.push(newDistribution)\n          }\n          // else{\n          //   lostRecipients.push(selectedPartners[s])\n          //   // console.log(\"LOST RECIPIENT\", selectedPartners[s])\n          // }\n        }\n        // Files attached to mail\n        let blobs = []\n        for (let f = 0; f < files.length; f++) {\n          for (let b = 0; b < Blobs.length; b++) {\n            if (files[f].name === Blobs[b].name) {\n              console.log(\"MATCH\", files[f].name, Blobs[b])\n              blobs.push(Blobs[b])\n            }\n          }\n        }\n        const commandJson =\n        {\n          commandType: \"sendMails\",\n          process_id: process_id,\n          session_id: session_id,\n          taskID: taskID,\n          directory: files_dir,\n          blobs: blobs,\n          variables: {\n            userAction: { value: \"sendMail\" },\n            mailBody: { value: JSON.stringify(mailBody) }\n          }\n        }\n        console.log(\"button sendMail: \", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (name === \"sendWithES\") {\n      if (selectedPartners.length === 0) {\n        swAllert(\"Выберите как минимум одного получателя!\", \"warning\")\n      }\n      else {\n        // Get sender id by userId in users\n        let senderId = null\n        for (let e = 0; e < enumData.length; e++) {\n          if (enumData[e].name === \"users\") {\n            for (let d = 0; d < enumData[e].data.length; d++) {\n              if (enumData[e].data[d].user_id === userProfile.userId) {\n                senderId = enumData[e].data[d].id\n              }\n            }\n          }\n        }\n        // Create Mail Body for local notifications\n        let files_dir = getUUID()\n        // let lostRecipients = []\n        let mailBody = {\n          mails: {\n            type: messageType,\n            subject: fieldValue.subject,\n            body: fieldValue.body,\n            files_directory: files_dir,\n            status: 3,\n            sender: senderId,\n            es_date: moment(new Date()).format(),\n            es_full_name: props.esFullName,\n            es_inn: props.esInn\n          },\n          mail_distributions: []\n        }\n        console.log(\"mailBody\", mailBody)\n        // Push recipient of local system mail\n        for (let s = 0; s < selectedPartners.length; s++) {\n          let recipientId = getRecipientId(selectedPartners[s])\n          if (recipientId !== null) {\n            let newDistribution = {\n              sender: senderId,\n              sender_status: 3,\n              recipient_status: 1,\n              recipient: recipientId\n            }\n            mailBody.mail_distributions.push(newDistribution)\n          }\n        }\n        // Files attached to mail\n        let blobs = []\n        for (let f = 0; f < files.length; f++) {\n          for (let b = 0; b < Blobs.length; b++) {\n            if (files[f].name === Blobs[b].name) {\n              console.log(\"MATCH\", files[f].name, Blobs[b])\n              blobs.push(Blobs[b])\n            }\n          }\n        }\n        const commandJson =\n        {\n          commandType: \"sendMails\",\n          process_id: process_id,\n          session_id: session_id,\n          taskID: taskID,\n          directory: files_dir,\n          blobs: blobs,\n          variables: {\n            userAction: { value: \"sendMail\" },\n            mailBody: { value: JSON.stringify(mailBody) }\n          }\n        }\n        console.log(\"button sendMail: \", commandJson)\n        if (props.esInn !== null) {\n          senMails()\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n        else {\n          sign(commandJson)\n        }\n      }\n    }\n    else if (name === \"showReport\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"showReport\" },\n          reportName: { value: \"Message_alert\" },\n          reportVars: { value: \"?id=\" + selectedDoc.mail_id },\n        }\n      }\n      console.log(\"button showReport:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (name === \"back\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n  }\n  async function senMails() {\n    // Create FormData\n    let formData = new FormData()\n    formData.append(\"subject\", fieldValue[\"subject\"])\n    formData.append(\"body\", fieldValue[\"body\"])\n    for (let i = 0; i < files.length; i++) {\n      formData.append('attachments', files[i], files[i].name)\n    }\n    for (let p = 0; p < selectedPartners.length; p++) {\n      formData.append(\"toEmail\", getEmail(selectedPartners[p]))\n      await fetch(\n        \"/api/Mail/SendMail\",\n        {\n          mode: 'no-cors',\n          method: 'POST',\n          body: formData\n        }\n      )\n        .then(response => {\n          console.log(\"RES SEND MAIL\", response)\n        })\n        .catch(error => console.error(error))\n    }\n  }\n  function getRecipientId(partner) {\n    console.log(\"Partner ID\", partner)\n    let recipientId = null\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === \"users\") {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let parsedAttr = JSON.parse(enumData[e].data[d].attributes)\n          if (partner === parseInt(parsedAttr[\"partner\"])) {\n            recipientId = enumData[e].data[d].id\n          }\n        }\n      }\n    }\n    console.log(\"RES ID\", recipientId)\n    return recipientId\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.round(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  // get rows amount of filtered docs by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n    setUpdateState(getUUID())\n  }\n  // Convert date to approptiate format\n  function beautifyDate(date) {\n    try {\n      var newDate = new Date(date) // \"2020-01-26\"\n      var dd = String(newDate.getDate()).padStart(2, '0')\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n      var yyyy = newDate.getFullYear()\n      let beautyDate = \"\"\n      if (parseInt(dd) < 10) {\n        let shortdd = dd.substring(1, 2)\n        dd = shortdd + \" \"\n      }\n      else { beautyDate += dd }\n      switch (mm) {\n        case \"01\": {\n          mm = \"янв.\"\n          break\n        }\n        case \"02\": {\n          mm = \"февр.\"\n          break\n        }\n        case \"03\": {\n          mm = \"мар.\"\n          break\n        }\n        case \"04\": {\n          mm = \"апр.\"\n          break\n        }\n        case \"05\": {\n          mm = \"мая\"\n          break\n        }\n        case \"06\": {\n          mm = \"июня\"\n          break\n        }\n        case \"07\": {\n          mm = \"июля\"\n          break\n        }\n        case \"08\": {\n          mm = \"авг.\"\n          break\n        }\n        case \"09\": {\n          mm = \"сент.\"\n          break\n        }\n        case \"10\": {\n          mm = \"окт.\"\n          break\n        }\n        case \"11\": {\n          mm = \"ноя.\"\n          break\n        }\n        case \"12\": {\n          mm = \"дек.\"\n          break\n        }\n        default: {\n          break\n        }\n      }\n      beautyDate += \" \" + mm + \" \" + yyyy.toString().substring(2, 4) + \"г.\"\n      // console.log(\"beautyDate\", beautyDate)\n      return beautyDate\n    }\n    catch (er) {\n      return \"NaN.NaN.NaN\"\n    }\n  }\n  // multiple selector functions\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  }\n  const handleAllRight = () => {\n    setSelectedPartners(selectedPartners.concat(partners));\n    setPartners([]);\n  }\n  const handleCheckedRight = () => {\n    setSelectedPartners(selectedPartners.concat(leftChecked));\n    setPartners(not(partners, leftChecked));\n    setChecked(not(checked, leftChecked));\n  }\n  const handleCheckedLeft = () => {\n    setPartners(partners.concat(rightChecked));\n    setSelectedPartners(not(selectedPartners, rightChecked));\n    setChecked(not(checked, rightChecked));\n  }\n  const handleAllLeft = () => {\n    setPartners(partners.concat(selectedPartners));\n    setSelectedPartners([]);\n  }\n  const partnersList = (items) => (\n    <Paper className={classes.paper}>\n      <input\n        placeholder='Поиск'\n        style={{ width: \"100%\" }}\n        name=\"partnersSearhField\"\n        value={partnersSearchField}\n        onChange={partnersSearchFieldChange}\n        autoFocus={focusField === \"partnersSearhField\" ? true : false}\n      />\n      <List dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n          if (partnersSearchField === \"\") {\n            return (\n              <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n                <ListItemText id={labelId} primary={getPartnerName(value)} />\n              </ListItem>\n            )\n          }\n          else {\n            let searchField = partnersSearchField.toLowerCase()\n            let listItemLabel = getPartnerName(value).toLowerCase()\n            let includeSearch = listItemLabel.includes(searchField)\n            console.log(\"Search\", searchField)\n            if (includeSearch === true) {\n              return (\n                <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n                  <Checkbox\n                    checked={checked.indexOf(value) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                    inputProps={{ 'aria-labelledby': labelId }}\n                  />\n                  <ListItemText id={labelId} primary={getPartnerName(value)} />\n                </ListItem>\n              )\n            }\n          }\n\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  )\n  function partnersSearchFieldChange(event) {\n    setPartnersSearchField(event.target.value)\n    // setUpdateState(getUUID())\n    setFocusField(\"partnersSearhField\")\n    // console.log(\"Search\", event.target.value)\n  }\n  const selectedPartnersList = (items) => (\n    <Paper className={classes.paper}>\n      <input\n        placeholder='Поиск'\n        style={{ width: \"100%\" }}\n      />\n      <List dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <Checkbox\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n              <ListItemText id={labelId} primary={getPartnerName(value)} />\n            </ListItem>\n          )\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  )\n  function getPartnerName(id) {\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"partners\") {\n        for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n          if (props.userTask.enumData[i].data[d].id === id) {\n            return props.userTask.enumData[i].data[d].label\n            break\n          }\n        }\n      }\n    }\n  }\n  const writeMessgeClick = (type) => {\n    setMessageType(type)\n    setAnchorEl(null)\n    setWriteMessage(true)\n  }\n  const handleSelectAllMessagesChange = (event) => {\n    setAllMessagesSelected(event.target.checked)\n    for (let i = 0; i < filteredDocList.length; i++) {\n      selectedMessages[filteredDocList[i].mail_id] = event.target.checked\n    }\n    setSelectedMessages(selectedMessages)\n  }\n  const handleSelectMessage = (event) => {\n    console.log(\"Check MESS\", event.target.id, \"CH \", event.target.checked)\n    setSelectedMessages({ ...selectedMessages, [event.target.id]: event.target.checked })\n  }\n  // file attachment functions\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files\n    if (selectedFiles && selectedFiles[0]) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        files.push(selectedFiles[i])\n        pushNewBlob(selectedFiles[i])\n      }\n      setFiles(files)\n    }\n    setUpdateState(getUUID())\n    console.log(\"FILES\", files)\n  }\n  // attached documents\n  async function pushNewBlob(f) {\n    // console.log(\"WRITING BLOBS\")\n    let docUrl = URL.createObjectURL(f)\n    fetch(docUrl)\n      .then(res => res.blob())\n      .then(blob => {\n        // blob.name = f.name\n        var blobToBase64 = function (f, cb) {\n          let reader = new FileReader()\n          reader.onload = function () {\n            // converts blob to base64\n            var dataUrl = reader.result\n            var base64 = dataUrl.split(\",\")[1]\n            cb(base64)\n          }\n          reader.readAsDataURL(f)\n        }\n        blobToBase64(f, async function (base64) {\n          // encode blobs to send to socket\n          let newBlob = { \"name\": f.name, \"blob\": base64, \"size\": f.size }\n          Blobs.push(newBlob)\n          setBlobs(Blobs)\n          // console.log(\"BLOBS\", Blobs)\n        })\n      })\n  }\n  function deleteFile(name) {\n    let newFilesList = []\n    for (let i = 0; i < files.length; i++) {\n      if (name !== files[i].name) {\n        newFilesList.push(files[i])\n      }\n    }\n    setFiles(newFilesList)\n    console.log(\"FILES\", newFilesList)\n  }\n  function filesList() {\n    let selFilesList = []\n    for (let i = 0; i < files.length; i++) {\n      selFilesList.push(\n        <Card style={{ margin: 3, backgroundColor: \"#E2E2E2\", paddingLeft: 20 }}>\n          <table>\n            <tr minWidth=\"500px\">\n              <td style={{ color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\" }}>\n                {files[i].name + \" \"}{\"(\" + Math.round(files[i].size / 1000) + \")\" + \"КБ\"}\n              </td>\n              <td align=\"right\">\n                <IconButton>\n                  <CloseIcon style={{ fontSize: \"medium\", color: \"black\" }} onClick={() => deleteFile(files[i].name)} />\n                </IconButton>\n              </td>\n            </tr>\n          </table>\n        </Card>)\n      console.log(\"FILE\", files[i])\n    }\n    return (selFilesList)\n  }\n  function handleSearchChange(event) {\n    setSearchFieldValue(event.target.value)\n    console.log(\"FIELDVALUE\", event.target.value)\n  }\n  function handleClickSearch() {\n    console.log(\"SEARCH\", searchFieldValue, clickedMessagesType, filteredDocList)\n    if (searchFieldValue === \"\") {\n      if (clickedMessagesType === \"inbox\") {\n        handleInboxMessagesClick()\n      }\n      else if (clickedMessagesType === \"sent\") {\n        handleSentMessagesClick()\n      }\n      else if (clickedMessagesType === \"trash\") {\n        handleTrashMessagesClick()\n      }\n    }\n    else {\n      let newDocList = []\n      if (clickedMessagesType === \"inbox\") {\n        for (let i = 0; i < initialDocList.recipient.length; i++) {\n          if (initialDocList.recipient[i].recipient_status === 1 || initialDocList.recipient[i].recipient_status === 2) {\n            try {\n              let subject = initialDocList.recipient[i].subject.toLowerCase()\n              let body = initialDocList.recipient[i].body.toLowerCase()\n              let searchField = searchFieldValue.toLowerCase()\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.recipient[i].subject, initialDocList.recipient[i].body)\n                newDocList.push(initialDocList.recipient[i])\n              }\n            }\n            catch (er) { console.log(er) }\n          }\n        }\n      }\n      else if (clickedMessagesType === \"sent\") {\n        for (let i = 0; i < initialDocList.sender.length; i++) {\n          if (initialDocList.sender[i].sender_status === 3) {\n            try {\n              let subject = initialDocList.sender[i].subject.toLowerCase()\n              let body = initialDocList.sender[i].body.toLowerCase()\n              let searchField = searchFieldValue.toLowerCase()\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.sender[i].subject, initialDocList.sender[i].body)\n                newDocList.push(initialDocList.sender[i])\n              }\n            }\n            catch (er) { console.log(er) }\n          }\n        }\n      }\n      else if (clickedMessagesType === \"trash\") {\n        for (let i = 0; i < initialDocList.sender.length; i++) {\n          if (initialDocList.sender[i].sender_status === 4) {\n            try {\n              let subject = initialDocList.sender[i].subject.toLowerCase()\n              let body = initialDocList.sender[i].body.toLowerCase()\n              let searchField = searchFieldValue.toLowerCase()\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.sender[i].subject, initialDocList.sender[i].body)\n                newDocList.push(initialDocList.sender[i])\n              }\n            }\n            catch (er) { console.log(er) }\n          }\n        }\n        for (let i = 0; i < initialDocList.recipient.length; i++) {\n          if (initialDocList.recipient[i].recipient_status === 4) {\n            try {\n              let subject = initialDocList.recipient[i].subject.toLowerCase()\n              let body = initialDocList.recipient[i].body.toLowerCase()\n              let searchField = searchFieldValue.toLowerCase()\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.recipient[i].subject, initialDocList.recipient[i].body)\n                newDocList.push(initialDocList.recipient[i])\n              }\n            }\n            catch (er) { console.log(er) }\n          }\n        }\n      }\n\n      fetchBySize(0, 9, newDocList)\n      setFilteredDocList(newDocList)\n    }\n\n  }\n  function handleInboxMessagesClick() {\n    setClickedMessagesType(\"inbox\")\n    setAllMessagesSelected(false)\n    let filteredDocL = []\n    for (let i = 0; i < initialDocList.recipient.length; i++) {\n      if (initialDocList.recipient[i].recipient_status === 1 || initialDocList.recipient[i].recipient_status === 2) {\n        filteredDocL.push(initialDocList.recipient[i])\n      }\n    }\n    fetchBySize(0, 9, filteredDocL)\n    setFilteredDocList(filteredDocL)\n    console.log(\"INBOX\")\n  }\n  function handleSentMessagesClick() {\n    setClickedMessagesType(\"sent\")\n    setAllMessagesSelected(false)\n    let filteredDocL = []\n    for (let i = 0; i < initialDocList.sender.length; i++) {\n      if (initialDocList.sender[i].sender_status === 3) {\n        filteredDocL.push(initialDocList.sender[i])\n      }\n    }\n    fetchBySize(0, 9, filteredDocL)\n    setFilteredDocList(filteredDocL)\n    console.log(\"SENT\")\n  }\n  function handleTrashMessagesClick() {\n    setClickedMessagesType(\"trash\")\n    setAllMessagesSelected(false)\n    let filteredDocL = []\n    for (let i = 0; i < initialDocList.recipient.length; i++) {\n      if (initialDocList.recipient[i].recipient_status === 4) {\n        filteredDocL.push(initialDocList.recipient[i])\n      }\n    }\n    for (let i = 0; i < initialDocList.sender.length; i++) {\n      if (initialDocList.sender[i].sender_status === 4) {\n        filteredDocL.push(initialDocList.sender[i])\n      }\n    }\n    fetchBySize(0, 9, filteredDocL)\n    setFilteredDocList(filteredDocL)\n    console.log(\"TRASH\")\n  }\n  function getSenderName(sender) {\n    // console.log(\"enumData\", enumData)\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === \"users\") {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          if (enumData[e].data[d].id === sender) {\n            return enumData[e].data[d].firstname + \" \" + enumData[e].data[d].lastname\n          }\n        }\n      }\n    }\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === name) {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function getBackround(status) {\n    if (status === 1) {// message is unread\n      return \"#FFDCA5\"\n    }\n    else {\n      return \"#F0F1F1\"\n    }\n  }\n  function getFontWeight(status) {\n    if (status === 1) {\n      return \"bold\"\n    }\n    else {\n      return \"nornal\"\n    }\n  }\n  function checkToShowDeleteButton() {\n    let showButton = false\n    if (Object.keys(selectedMessages).length > 0) {\n      for (let key in selectedMessages) {\n        if (selectedMessages[key] === true) {\n          showButton = true\n          break\n        }\n      }\n    }\n    return showButton\n  }\n  function openMessage(message) {\n    if (clickedMessagesType === \"inbox\") {\n      let user_id = null\n      for (let e = 0; e < enumData.length; e++) {\n        if (enumData[e].name === \"users\") {\n          for (let d = 0; d < enumData[e].data.length; d++) {\n            if (enumData[e].data[d].user_id === userProfile.userId) {\n              user_id = enumData[e].data[d].id\n            }\n          }\n        }\n      }\n      let mailDistrBody = {\n        id: message.distribution_id,\n        mail_id: message.mail_id,\n        sender: message.sender,\n        recipient: message.recipient,\n        recipient_status: 2,\n        created_at: message.created_at,\n        updated_at: message.updated_at\n      }\n      let unreadDistributionsBody = {\n        variables: {\n          user_session_id: { value: session_id },\n          userAction: { value: \"getUnreadDistributions\" },\n          depoRESTApi: { value: \"\" },\n          user_id_recipient: { value: message.recipient }\n        }\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"openMailDistribution\" },\n          mailDistrBody: { value: JSON.stringify(mailDistrBody) },\n          selectedDoc: { value: JSON.stringify(message) },\n          unreadDistributionsBody: { value: JSON.stringify(unreadDistributionsBody) }\n        }\n      }\n      console.log(\"button openMail: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"openMail\" },\n          selectedDoc: { value: JSON.stringify(message) },\n        }\n      }\n      console.log(\"button openMail: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n  }\n  function deleteMessages() {\n    console.log(\"LISTS\", selectedMessages, docList)\n    if (clickedMessagesType === \"inbox\") {\n      let mailDistrList = []\n      for (let d = 0; d < docList.length; d++) {\n        for (let key in selectedMessages) {\n          if (selectedMessages[key] === true) {\n            if (docList[d].mail_id === parseInt(key)) {\n              let mailToDelete = {\n                id: docList[d].distribution_id,\n                sender: docList[d].sender,\n                recipient: docList[d].recipient,\n                recipient_status: 4,\n                mail_id: docList[d].mail_id,\n                created_at: docList[d].created_at,\n                updated_at: docList[d].updated_at\n              }\n              mailDistrList.push(mailToDelete)\n              console.log(\"DEL\", mailToDelete)\n            }\n          }\n        }\n      }\n      let unreadDistributionsBody = {\n        variables: {\n          user_session_id: { value: session_id },\n          userAction: { value: \"getUnreadDistributions\" },\n          depoRESTApi: { value: \"\" },\n          user_id_recipient: { value: docList[0].recipient }\n        }\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"putMailsToTrash\" },\n          mailDistrList: { value: JSON.stringify(mailDistrList) },\n          mailList: { value: \"[]\" },\n          unreadDistributionsBody: { value: JSON.stringify(unreadDistributionsBody) }\n        }\n      }\n      console.log(\"button putInboxMailsToTrash: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (clickedMessagesType === \"sent\") {\n      let mailList = []\n      for (let d = 0; d < docList.length; d++) {\n        for (let key in selectedMessages) {\n          if (selectedMessages[key] === true) {\n            if (docList[d].mail_id === parseInt(key)) {\n              let mailToDelete = {\n                id: docList[d].mail_id,\n                sender: docList[d].sender,\n                subject: docList[d].subject,\n                body: docList[d].body,\n                status: 4,\n                files_directory: docList[d].files_directory,\n                created_at: docList[d].created_at,\n                updated_at: docList[d].updated_at\n              }\n              mailList.push(mailToDelete)\n              console.log(\"DEL\", mailToDelete)\n            }\n          }\n        }\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"putMailsToTrash\" },\n          mailDistrList: { value: \"[]\" },\n          mailList: { value: JSON.stringify(mailList) }\n        }\n      }\n      console.log(\"button putSentMailsToTrash: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (clickedMessagesType === \"trash\") {\n      swal({\n        text: \"Вы действительно хотите удалить сообщения безвозвратно?\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            let mailList = []\n            let mailDistrList = []\n            for (let key in selectedMessages) {\n              if (selectedMessages[key] === true) {\n                console.log(\"TRUE?\", key, selectedMessages[key])\n                for (let d = 0; d < docList.length; d++) {\n                  if (docList[d].mail_id === parseInt(key)) {\n                    console.log(\"DEL\", docList[d].subject)\n                    // I'm sender of mail\n                    if (docList[d].sender === idFromUsers) {\n                      console.log(\"IM SENDER\", docList[d].mail_id)\n                      let mailToDelete = {\n                        id: docList[d].mail_id,\n                        sender: docList[d].sender,\n                        subject: docList[d].subject,\n                        body: docList[d].body,\n                        status: 5,\n                        files_directory: docList[d].files_directory,\n                        created_at: docList[d].created_at,\n                        updated_at: docList[d].updated_at,\n                        deleted: true\n                      }\n                      mailList.push(mailToDelete)\n                    }\n                    // i'm recipient of mail\n                    else {\n                      console.log(\"IM RECIPIENT\", docList[d].mail_id)\n                      let mailToDelete = {\n                        id: docList[d].distribution_id,\n                        sender: docList[d].sender,\n                        recipient: docList[d].recipient,\n                        recipient_status: 5,\n                        mail_id: docList[d].mail_id,\n                        created_at: docList[d].created_at,\n                        updated_at: docList[d].updated_at,\n                        deleted: true\n                      }\n                      mailDistrList.push(mailToDelete)\n                    }\n                  }\n                }\n              }\n            }\n            let unreadDistributionsBody = {\n              variables: {\n                user_session_id: { value: session_id },\n                userAction: { value: \"getUnreadDistributions\" },\n                depoRESTApi: { value: \"\" },\n                user_id_recipient: { value: docList[0].recipient }\n              }\n            }\n            let commandJson =\n            {\n              commandType: \"completeTask\",\n              process_id: process_id,\n              session_id: session_id,\n              taskID: taskID,\n              variables: {\n                userAction: { value: \"putMailsToTrash\" },\n                mailDistrList: { value: JSON.stringify(mailDistrList) },\n                mailList: { value: JSON.stringify(mailList) },\n                unreadDistributionsBody: { value: JSON.stringify(unreadDistributionsBody) }\n              }\n            }\n            console.log(\"button deleteMails: \", commandJson)\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n            // console.log(\"mailList\", mailList)\n            // console.log(\"mailDistrList\", mailDistrList)\n          }\n        })\n    }\n  }\n  function savedDocsList() {\n    console.log(\"SAVEDOCS\", savedDocs)\n    let savedDocsList = []\n    for (let i = 0; i < savedDocs.length; i++) {\n      savedDocsList.push(\n        <Card style={{ margin: 3, backgroundColor: \"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\" }}>\n          <table>\n            <tr>\n              <td style={{ color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\" }}>\n                {savedDocs[i].name + \" \"}{\"(\" + Math.round(savedDocs[i].size / 1000) + \")\" + \"КБ\"}\n              </td>\n              <td>\n                <IconButton\n                  component=\"a\"\n                  href={URL.createObjectURL(savedDocs[i])}\n                  download={savedDocs[i].name}\n                >\n                  <GetAppIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                </IconButton>\n              </td>\n            </tr>\n          </table>\n        </Card>)\n      // console.log(\"FILE\", savedDocs[i])\n    }\n    return (savedDocsList)\n  }\n  function savedImgsList() {\n    var imgs = []\n    for (let l = 0; l < savedImgs.length; l++) {\n      let blob = converFileToBlob(savedImgs[l].item.props.src)\n      imgs.push(\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              {savedImgs[l].item}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell align=\"center\">\n              <IconButton\n                component=\"a\"\n                href={URL.createObjectURL(blob)}\n                download={savedImgs[l].item.props.name}\n              >\n                <GetAppIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      )\n    }\n    if (Object.keys(imgs).length !== 0) {\n      return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      )\n    }\n  }\n  function converFileToBlob(src) {\n    var byteString = atob(src.split(',')[1])\n    var ab = new ArrayBuffer(byteString.length)\n    var ia = new Uint8Array(ab)\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ab], { type: 'image/jpeg' })\n  }\n  function getMenuItemStyle(name) {\n    if (name === clickedMessagesType) {\n      return {\n        background: \"#F0F1F1\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      }\n    }\n  }\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"sendWithES\")\n    }\n  }\n  if (updateState !== null) {\n    try {\n      if (taskType === \"corporativeActionsMainForm\") {\n        if (writeMessage === false) {\n          return (\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\n              <Grid item xs={3}>\n                <Paper>\n                  <MenuList>\n                    <MenuItem onClick={() => handleInboxMessagesClick()} style={getMenuItemStyle(\"inbox\")}>\n                      <ListItemIcon>\n                        <MailOutlineIcon fontSize=\"small\" style={getMenuItemStyle(\"inbox\")} />\n                      </ListItemIcon>\n                      <Typography variant=\"inherit\">Входящие</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={() => handleSentMessagesClick()} style={getMenuItemStyle(\"sent\")}>\n                      <ListItemIcon>\n                        <SendIcon fontSize=\"small\" style={getMenuItemStyle(\"sent\")} />\n                      </ListItemIcon>\n                      <Typography variant=\"inherit\">Отправленные</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={() => handleTrashMessagesClick()} style={getMenuItemStyle(\"trash\")}>\n                      <ListItemIcon>\n                        <DeleteOutlineIcon fontSize=\"small\" style={getMenuItemStyle(\"trash\")} />\n                      </ListItemIcon>\n                      <Typography variant=\"inherit\">Корзина</Typography>\n                    </MenuItem>\n                  </MenuList>\n                </Paper>\n              </Grid>\n              <Grid item xs={9}>\n                <Grid container direction=\"column\" spacing={1}>\n                  <Grid item xs={12} align=\"left\">\n                    <Paper>\n                      <Checkbox\n                        style={{ color: \"green\" }}\n                        onChange={handleSelectAllMessagesChange}\n                        checked={allMessagesSelected === true ? true : false}\n                      />\n                      {checkToShowDeleteButton() === true &&\n                        <IconButton aria-label=\"delete\" size=\"small\">\n                          <DeleteIcon onClick={() => deleteMessages()} />\n                        </IconButton>\n                      }\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        startIcon={<CreateIcon />}\n                        style={{ margin: 5, color: \"green\", background: \"white\", fontSize: 14 }}\n                        aria-controls={menuId}\n                        aria-haspopup=\"true\"\n                        onClick={openMenuClick}\n                      >\n                        Написать\n                      </Button>\n                      <Menu\n                        id={menuId}\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={closeMenuClick}\n                      >\n                        <MenuItem onClick={() => writeMessgeClick(1)}>Извещение</MenuItem>\n                        <MenuItem onClick={() => writeMessgeClick(2)}>Запрос на раскрытие</MenuItem>\n                        <MenuItem onClick={() => writeMessgeClick(3)}>Информационное сообщение</MenuItem>\n                        <MenuItem onClick={() => writeMessgeClick(4)}>Уведомление о КД</MenuItem>\n                      </Menu>\n                      <TextField\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder=\"Поиск в почте\"\n                        style={{ width: \"50%\", paddingLeft: 50, margin: 3 }}\n                        onChange={handleSearchChange}\n                        InputProps={{\n                          endAdornment:\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                onClick={() => handleClickSearch()}\n                                edge=\"end\"\n                              >\n                                <SearchIcon size=\"small\" />\n                              </IconButton>\n                            </InputAdornment>,\n                        }}\n                      />\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={12} align=\"left\">\n                    <Paper style={{ minHeight: \"76px\", paddingTop: docList === null ? \"25px\" : 0 }}>\n                      {docList !== null ?\n                        <div>\n                          <table class=\"main-table-style\">\n                            <thead class=\"thead-style\">\n                              <tr>\n                                <td class=\"td-head-first-child\"></td>\n                                <td class=\"td-head-style-2row\">Дата</td>\n                                <td class=\"td-head-style-2row\">Тип</td>\n                                <td class=\"td-head-style-2row\">Отправитель</td>\n                                <td class=\"td-head-style-2row\">Заголовок</td>\n                                <td class=\"td-head-last-child\">Содержание</td>\n                              </tr>\n                            </thead>\n                            <tbody class=\"body-style\">\n                              {Object.keys(docList).length !== 0 &&\n                                docList.map(dataItem => (\n                                  <tr\n                                    width=\"100%\"\n                                    style={{\n                                      \"fontSize\": 13,\n                                      \"height\": 30,\n                                      \"background\": clickedMessagesType === \"inbox\" ? getBackround(dataItem.recipient_status) : \"#F0F1F1\",\n                                      \"fontWeight\": clickedMessagesType === \"inbox\" ? getFontWeight(dataItem.recipient_status) : \"normal\",\n                                      \"cursor\": \"pointer\"\n                                    }}\n                                  >\n                                    <td style={{ \"border-bottom\": \"1px solid grey\" }}>\n                                      <Checkbox\n                                        style={{ height: 15, color: \"green\", maxWidth: 25 }}\n                                        id={dataItem.mail_id}\n                                        onChange={handleSelectMessage}\n                                        checked={selectedMessages[dataItem.mail_id] === true ? true : false}\n                                      />\n                                    </td>\n                                    <td\n                                      style={{ \"border-bottom\": \"1px solid grey\" }}\n                                      align=\"center\"\n                                      width={150}\n                                      onClick={() => openMessage(dataItem)}\n                                    >\n                                      {beautifyDate(dataItem.created_at)}\n                                    </td>\n                                    <td\n                                      style={{ \"border-bottom\": \"1px solid grey\" }}\n                                      align=\"center\"\n                                      width={150}\n                                      onClick={() => openMessage(dataItem)}\n                                    >\n                                      {getEnumLabel(\"mailTypes\", dataItem.type)}\n                                    </td>\n                                    <td\n                                      style={{ \"border-bottom\": \"1px solid grey\" }}\n                                      width={150}\n                                      onClick={() => openMessage(dataItem)}\n                                    >\n                                      {getSenderName(dataItem.sender)}\n                                    </td>\n                                    <td\n                                      style={{ \"border-bottom\": \"1px solid grey\" }}\n                                      onClick={() => openMessage(dataItem)}\n                                    >\n                                      {dataItem.subject}\n                                    </td>\n                                    <td\n                                      style={{ \"border-bottom\": \"1px solid grey\", \"white-space\": \"wrap\" }}\n                                      onClick={() => openMessage(dataItem)}\n                                    >\n                                      {dataItem.body.substring(0, 50)}{dataItem.body.length > 50 ? \"...\" : \"\"}\n                                    </td>\n                                  </tr>\n                                )\n                                )}\n                            </tbody>\n                          </table>\n\n                          <table size=\"small\" style={{ \"border-collapse\": \"collapse\", \"white-space\": \"nowrap\", fontSize: 13 }}>\n                            <tfoot>\n                              <tr>\n                                <td style={{ paddingLeft: \"20px\" }}>\n                                  <div style={{ minWidth: 80, color: \"black\" }}>Кол-во записей</div>\n                                </td>\n                                <td>\n                                  <FormControl\n                                    variant=\"outlined\"\n                                    style={{ minWidth: 30 }}\n                                  >\n                                    <MaterialSelect\n                                      onChange={handleChangeRowsPerPage}\n                                      style={{ height: 25, color: \"black\" }}\n                                      value={size}\n                                    >\n                                      <MenuItem value={10}>10</MenuItem>\n                                      <MenuItem value={20}>20</MenuItem>\n                                      <MenuItem value={50}>50</MenuItem>\n                                      <MenuItem value={100}>100</MenuItem>\n                                      <MenuItem value={200}>200</MenuItem>\n                                      <MenuItem value={500}>500</MenuItem>\n                                    </MaterialSelect>\n                                  </FormControl>\n                                </td>\n                                <td>\n                                  <Tooltip title=\"На первую страницу\">\n                                    <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                                      <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                                    </IconButton>\n                                  </Tooltip>\n                                </td>\n                                <td>\n                                  <Tooltip title=\"На предыдущюю страницу\">\n                                    <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                                      <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                                    </IconButton>\n                                  </Tooltip>\n                                </td>\n                                <td style={{ color: \"black\", fontSize: 16 }}>\n                                  <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                                </td>\n                                <td style={{ paddingLeft: \"3px\" }}>\n                                  <Tooltip title=\"Перейти на указанную страницу\">\n                                    <Button\n                                      onClick={() => GoToPage()}\n                                      variant=\"outlined\"\n                                      style={{\n                                        height: 22,\n                                        backgroundColor: \"#D1D6D6\",\n                                        fontSize: 12\n                                      }}\n                                    >перейти\n                                    </Button>\n                                  </Tooltip>\n                                </td>\n                                <td>\n                                  <Tooltip title=\"На следующюю страницу\">\n                                    <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                                      <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                                    </IconButton>\n                                  </Tooltip>\n                                </td>\n                                <td style={{ color: \"black\", fontSize: 13 }}>Стр. {page} из {getPageAmount()}</td>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </div>\n                        :\n                        <Typography variant=\"inherit\" noWrap>\n                          В этой папке нет писем!\n                        </Typography>\n                      }\n                    </Paper>\n                  </Grid>\n                  <Snackbar\n                    open={showSnackBar}\n                    onClose={() => handleCloseSnackBar()}\n                    autoHideDuration={1200}\n                    message={snackBarMessage}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          )\n        }\n        else if (writeMessage === true) {\n          return (\n            <Paper key={updateState}>\n              <Grid container spacing={1} justify=\"center\" alignItems=\"center\" className={classes.root}>\n                <Grid item>{partnersList(partners)}</Grid>\n                <Grid item>\n                  <Grid container direction=\"column\">\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      className={classes.button}\n                      onClick={handleAllRight}\n                      disabled={partners.length === 0}\n                      aria-label=\"move all selectedPartners\"\n                    >\n                      ≫\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      className={classes.button}\n                      onClick={handleCheckedRight}\n                      disabled={leftChecked.length === 0}\n                      aria-label=\"move selected selectedPartners\"\n                    >\n                      &gt;\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      className={classes.button}\n                      onClick={handleCheckedLeft}\n                      disabled={rightChecked.length === 0}\n                      aria-label=\"move selected partners\"\n                    >\n                      &lt;\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      className={classes.button}\n                      onClick={handleAllLeft}\n                      disabled={selectedPartners.length === 0}\n                      aria-label=\"move all partners\"\n                    >\n                      ≪\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Grid item>{selectedPartnersList(selectedPartners)}</Grid>\n                <Grid item xs={11}>Тип сообщения: {getEnumLabel(\"mailTypes\", messageType)}</Grid>\n                <Grid item xs={11}>\n                  <Grid container direction=\"row\">\n                    <TextField\n                      id=\"outlined-multiline-static\"\n                      label=\"Тема\"\n                      multiline\n                      onBlur={handleChange}\n                      name={\"subject\"}\n                      defaultValue={fieldValue[\"subject\"]}\n                      variant=\"outlined\"\n                      style={{ width: \"100%\" }}\n                    />\n                    <TextField\n                      id=\"outlined-multiline-static\"\n                      label=\"Текст уведомления\"\n                      multiline\n                      rows={4}\n                      onBlur={handleChange}\n                      name={\"body\"}\n                      defaultValue={fieldValue[\"body\"]}\n                      variant=\"outlined\"\n                      style={{ width: \"100%\" }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid container direction=\"row\">\n                    <div className={classes.importFile}>\n                      <input\n                        accept=\"image/*, application/pdf\"\n                        className={classes.inputFile}\n                        id={corpActionsAttachFileButtonId}\n                        multiple\n                        type=\"file\"\n                        onChange={handleAttachFile}\n                      />\n                      <label htmlFor={corpActionsAttachFileButtonId}>\n                        <Button\n                          component=\"span\"\n                          variant=\"outlined\"\n                          style={{\n                            margin: 3,\n                            color: \"white\",\n                            backgroundColor: \"#BB7100\",\n                            borderColor: \"#161C87\",\n                            height: 32,\n                            fontSize: 12\n                          }}\n                          endIcon={<AttachFileIcon />}\n                        >Прикрепить файлы\n                        </Button>\n                      </label>\n                    </div>\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => buttonClick(\"send\", null)}\n                      style={{\n                        margin: 3,\n                        color: \"white\",\n                        borderColor: \"#161C87\",\n                        backgroundColor: \"#287A2C\",\n                        height: 32,\n                        fontSize: 12\n                      }}\n                      endIcon={<SendIcon />}\n                    >Отправить\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => props.esInn !== null ? buttonClick(\"sendWithES\") : setShowModalEnterPin(true)}\n                      style={{\n                        margin: 3,\n                        color: \"white\",\n                        borderColor: \"#161C87\",\n                        backgroundColor: \"#287A2C\",\n                        height: 32,\n                        fontSize: 12\n                      }}\n                      endIcon={<SendIcon />}\n                    >Подписать и отправить\n                    </Button>\n\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => setWriteMessage(false)}\n                      style={{\n                        margin: 3,\n                        color: \"white\",\n                        borderColor: \"#161C87\",\n                        backgroundColor: \"#ff1f1f\",\n                        height: 32,\n                        fontSize: 12\n                      }}\n                    >Назад\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid style={{ paddingLeft: \"45px\" }} container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n                <Grid item xs={\"auto\"}>\n                  <Grid container direction=\"column\" spacing={1}>\n                    {filesList()}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Modal\n                open={showModalEnterPin}\n                onClose={handleCloseModalEnterPin}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n              >\n                <div style={modalStyle} className={classes.modalRutoken}>\n                  <h3 id=\"simple-modal-title\">Ведите ПИН код Рутокена</h3>\n                  <FormControl variant=\"outlined\" style={{ width: \"100%\" }} error={wrongPin}>\n                    <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n                    <OutlinedInput\n                      type={showPin ? 'text' : 'password'}\n                      defaultValue={rutokenPin}\n                      onChange={handlePinChange}\n                      onKeyPress={onKeyPressModalEnterPin}\n                      autoFocus\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPin}\n                            edge=\"end\"\n                          >\n                            {showPin ? <Visibility /> : <VisibilityOff />}\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                      labelWidth={25}\n                    />\n                  </FormControl>\n                  {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => buttonClick(\"sendWithES\")}\n                    style={{\n                      margin: 3,\n                      height: 32,\n                      fontSize: 12,\n                      color: \"white\",\n                      backgroundColor: \"#2862F4\"\n                    }}\n                  >Ок\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleCloseModalEnterPin}\n                    style={{\n                      margin: 3,\n                      height: 32,\n                      fontSize: 12,\n                      color: \"white\",\n                      backgroundColor: \"#E73639\"\n                    }}\n                  >Отмена\n                  </Button>\n                </div>\n              </Modal>\n            </Paper>\n          )\n        }\n      }\n      else if (taskType === \"shomMessageForm\") {\n        return (\n          <Paper>\n            <br />\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\n              <Grid item xs={10} align=\"center\">\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\">{selectedDoc.subject}</Typography>\n              </Grid>\n              <Grid item xs={10} align=\"right\">\n                <p style={{ fontSize: 12 }}>{\"Дата: \"}{selectedDoc.created_at.substring(0, 19)}</p>\n                <p style={{ fontSize: 12 }}>{\"Отправитель: \"}{getSenderName(selectedDoc.sender)}</p>\n                {selectedDoc.es_inn !== null &&\n                  <div>\n                    <p style={{ fontSize: 12 }}>{\"Время подписания: \"}{selectedDoc.es_date !== undefined ? selectedDoc.es_date.substring(0, 19) : \"\"}</p>\n                    <p style={{ fontSize: 12 }}>{\"ИНН: \"}{selectedDoc.es_inn}</p>\n                    <p style={{ fontSize: 12 }}>{\"ФИО: \"}{selectedDoc.es_full_name}</p>\n                  </div>\n                }\n              </Grid>\n              <Grid item xs={10} align=\"left\">\n                <p>{selectedDoc.body}</p>\n              </Grid>\n              <br />\n              <Grid item xs={10} align=\"left\">\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>{\"Прикрепленные файлы\"}</p>\n                {savedDocsList()}\n                {savedImgsList()}\n              </Grid>\n              <Grid item xs={10} align=\"center\">\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => buttonClick(\"showReport\")}\n                  style={{\n                    margin: 3,\n                    color: \"white\",\n                    borderColor: \"#161C87\",\n                    backgroundColor: \"#287A2C\",\n                    height: 32,\n                    fontSize: 12\n                  }}\n                >Печать\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => buttonClick(\"back\")}\n                  style={{\n                    margin: 3,\n                    color: \"white\",\n                    borderColor: \"#161C87\",\n                    backgroundColor: \"#ff1f1f\",\n                    height: 32,\n                    fontSize: 12\n                  }}\n                >Назад\n                </Button>\n              </Grid>\n            </Grid>\n            <Modal\n              className={classes.modal}\n              open={openModal}\n              onClose={handleCloseModal}\n            >\n              <div className={classes.imagePaper}>\n                <img name={selectedImg.name} height={600} width=\"auto\" src={selectedImg.src} />\n              </div>\n            </Modal>\n          </Paper>\n        )\n      }\n      else {\n        return <LinearProgress />\n      }\n    }\n    catch (er) {\n      console.log(\"ERROR\", er)\n      return <LinearProgress />\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}