{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\ViewReport\\\\ViewReport.jsx\";\n// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from '@material-ui/core/Paper';\nimport Modal from \"@material-ui/core/Modal\";\nimport FormControl from '@material-ui/core/FormControl';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport TimePicker from '@mui/lab/TimePicker';\nimport Stack from '@mui/material/Stack';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'; // Icons\n\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // PIN components\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fade, makeStyles } from '@material-ui/core/styles'; // Import libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport { Markup } from 'interweave';\nimport * as rutoken from \"rutoken\";\n\nvar moment = require('moment');\n\nconst axios = require('axios');\n\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \",\",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  },\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  paper: {\n    width: \"100%\",\n    height: 200,\n    overflow: 'auto'\n  },\n  button: {\n    // width: \"5%\",\n    margin: theme.spacing(0)\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [process_id] = useState(props.userTask.process_id);\n  const [session_id] = useState(props.userTask.session_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [taskType] = useState(props.userTask.taskType);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [enumData] = useState(props.userTask.enumData);\n  const [selectedOptions, setSelectedOptions] = useState([]); // const [multiSelectData] = useState(props.userTask.multiSelectData)\n  // const [multiSelectDataOptions, setMultiSelectDataOptions] = useState({})\n  // const [multiSelectedOptions, setMultiSelectedOptions] = useState({})\n  // const [gridForm] = useState(props.userTask.gridForm)\n\n  const [reportName] = useState(props.userTask.reportName);\n  const [fieldValue, setFieldValue] = useState({});\n  const [docId] = useState(props.userTask.docId);\n  const [buttons] = useState(props.userTask.buttons);\n  const [formType] = useState(props.userTask.formType);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [updateState, setUpdateState] = useState(false);\n  const [reportVars, setReportVars] = useState(props.userTask.reportVars); // modals\n\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false);\n  const [modalStyle] = useState(getModalStyle); // TRANSFER LIST\n\n  const [transferList, setTransferList] = useState({\n    reg_id: [],\n    sec_id: [],\n    acc_type_code: [],\n    dep_id: [],\n    corr_dep_id: [],\n    currency_id: [],\n    service_type_id: [],\n    issuer_id: []\n  });\n  const [checked, setChecked] = useState({\n    reg_id: [],\n    sec_id: [],\n    acc_type_code: [],\n    dep_id: [],\n    corr_dep_id: [],\n    currency_id: [],\n    service_type_id: [],\n    issuer_id: []\n  });\n  const [selectedTransferList, setSelectedTransferList] = useState({\n    reg_id: [],\n    sec_id: [],\n    acc_type_code: [],\n    dep_id: [],\n    corr_dep_id: [],\n    currency_id: [],\n    service_type_id: [],\n    issuer_id: []\n  });\n  const [transferListSearchFileds, setTransferListSearchFileds] = useState({});\n  const [selectedTransferListSearchFileds, setSelectedTransferListSearchFileds] = useState({});\n  const [autofocusFieldTrList, setAutofocusFieldTrList] = useState(null);\n  const [autofocusFieldSelTrList, setAutofocusFieldSelTrList] = useState(null);\n\n  function leftChecked(name) {\n    return intersection(checked[name], transferList[name]);\n  }\n\n  function rightChecked(name) {\n    return intersection(checked[name], selectedTransferList[name]);\n  } // Initializing\n\n\n  useEffect(() => {\n    repserverlogin();\n    console.log(\"REP PROPS\", props.userTask, props.userProfile);\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          if (props.userTask.enumData[i].name === \"report_name\") {\n            if (props.userTask.taskType === \"showReportsSelectingForm\") {\n              for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n                if (props.userProfile[props.userTask.enumData[i].data[d].report_name] === true) {\n                  options.push({\n                    \"value\": props.userTask.enumData[i].data[d].id,\n                    \"label\": props.userTask.enumData[i].data[d].label,\n                    \"name\": props.userTask.enumData[i].name\n                  });\n                }\n              }\n            }\n          } else {\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              options.push({\n                \"value\": props.userTask.enumData[i].data[d].id,\n                \"label\": props.userTask.enumData[i].data[d].label,\n                \"name\": props.userTask.enumData[i].name\n              });\n            }\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n      createTransferListOptions(props.userTask.Form, props.userTask.enumData);\n    } // let newMultiSelectDatamOptions = {}\n    // if(props.userTask.multiSelectData !== null && props.userTask.multiSelectData !== undefined && props.userTask.multiSelectData !== \"null\"){\n    //   for(let i=0; i<multiSelectData.length; i++){\n    //     let options = [{\n    //       \"value\": \"all\",\n    //       \"label\": \"Все\"\n    //     }]\n    //     if(multiSelectData[i].name !== \"acc_id\"){\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         options.push({\n    //           \"value\": multiSelectData[i].data[d].id,\n    //           \"label\": multiSelectData[i].data[d].label,\n    //         })\n    //       }\n    //     }\n    //     else{\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n    //           options.push({\n    //             \"value\": multiSelectData[i].data[d].id,\n    //             \"label\": multiSelectData[i].data[d].label,\n    //           })\n    //         }\n    //       }\n    //     }\n    //     newMultiSelectDatamOptions[multiSelectData[i].name] = options\n    //   }\n    //   setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    //   console.log(\"MS DATA OPTS\", newMultiSelectDatamOptions)\n    // }\n\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined) {\n      // console.log(\"SDOC\", props.userTask.selectedDoc)\n      setSelectedDoc(props.userTask.selectedDoc);\n    }\n\n    if (userProfile.userRole === \"3\") {\n      // Depositor\n      for (let s = 0; s < Form.sections.length; s++) {\n        // Block depositor field\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let n = Form.sections[s].contents[c].name;\n\n          if (n === \"dep_id\") {\n            Form.sections[s].contents[c].edit = false; // console.log(\"BLOCK\", Form.sections[s].contents[c])\n\n            let ed = props.userTask.enumData;\n\n            for (let e = 0; e < ed.length; e++) {\n              if (ed[e].name === \"depositors\") {\n                for (let d = 0; d < ed[e].data.length; d++) {\n                  if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                    setSelectedTransferList({ ...selectedTransferList,\n                      \"dep_id\": [ed[e].data[d].id]\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      setForm(Form); // for(let i=0; i<multiSelectData.length; i++){// find accounts of depositor\n      //   let options = [{\n      //     \"value\": \"all\",\n      //     \"label\": \"Все\"\n      //   }]\n      //   if(multiSelectData[i].name === \"acc_id\"){\n      //     for(let d=0; d<multiSelectData[i].data.length; d++){\n      //       if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n      //         options.push({\n      //           \"value\": multiSelectData[i].data[d].id,\n      //           \"label\": multiSelectData[i].data[d].label,\n      //         })\n      //       }\n      //     } \n      //   }\n      //   newMultiSelectDatamOptions[multiSelectData[i].name] = options\n      // }\n      // setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    }\n\n    if (userProfile.userRole === \"4\") {\n      // Registrar\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let n = Form.sections[s].contents[c].name;\n\n          if (n === \"reg_id\") {\n            Form.sections[s].contents[c].edit = false; // Block registrar field\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n\n            let ed = props.userTask.enumData;\n\n            for (let e = 0; e < ed.length; e++) {\n              if (ed[e].name === \"registrars\") {\n                for (let d = 0; d < ed[e].data.length; d++) {\n                  if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                    setSelectedTransferList({ ...selectedTransferList,\n                      \"registrars\": [ed[e].data[d].id]\n                    }); // multiSelectedOptions[n] = [{\n                    //   \"value\": ed[e].data[d].id,\n                    //   \"label\": ed[e].data[d].label\n                    // }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      setForm(Form);\n    }\n\n    if (userProfile.userRole === \"8\") {\n      // CorrDepository\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let n = Form.sections[s].contents[c].name;\n\n          if (n === \"corr_dep_id\") {\n            Form.sections[s].contents[c].edit = false; // Block corrDepositories field\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n\n            let ed = props.userTask.enumData;\n\n            for (let e = 0; e < ed.length; e++) {\n              if (ed[e].name === \"corrDepositories\") {\n                for (let d = 0; d < ed[e].data.length; d++) {\n                  if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                    setSelectedTransferList({ ...selectedTransferList,\n                      \"corrDepositories\": [ed[e].data[d].id]\n                    }); // multiSelectedOptions[n] = [{\n                    //   \"value\": ed[e].data[d].id,\n                    //   \"label\": ed[e].data[d].label\n                    // }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      setForm(Form);\n    }\n\n    let newFields = {};\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      // Set current date to DateTime fields\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"FullDateTime\") newFields[Form.sections[s].contents[c].name] = new Date();\n      }\n    }\n\n    console.log(\"NEW F\", newFields);\n    setFieldValue(newFields);\n    setUpdateState(getUUID());\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  function createTransferListOptions(form, enums) {\n    let newTransferList = {};\n    let newSelectedTransferList = {};\n\n    for (let s = 0; s < form.sections.length; s++) {\n      for (let c = 0; c < form.sections[s].contents.length; c++) {\n        if (form.sections[s].contents[c].type === \"TransferList\") {\n          let newTrItems = [];\n          let newSelTrItems = [];\n          let cName = form.sections[s].contents[c].name;\n\n          for (let e = 0; e < enums.length; e++) {\n            if (enums[e] !== null) {\n              if (enums[e].name === cName) {\n                for (let d = 0; d < enums[e].data.length; d++) {\n                  newTrItems.push(enums[e].data[d].id);\n                }\n              }\n            } else {\n              props.callErrorToast(\"Ошибка сбора справочной информации \" + cName);\n            }\n          }\n\n          newTransferList[cName] = newTrItems;\n          newSelectedTransferList[cName] = newSelTrItems;\n        }\n      }\n    }\n\n    setTransferList(newTransferList);\n    setSelectedTransferList(newSelectedTransferList);\n  } // RuToken functions\n\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\")\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\");\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  });\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Rutoken MODAL\n\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  } // Sign transfer order with rutoken\n\n\n  function sign() {\n    // Перебор подключенных Рутокенов\n    if (plugin !== undefined) {\n      plugin.enumerateDevices().then(function (devices) {\n        if (devices.length > 0) {\n          return Promise.resolve(devices[0]);\n        } else {\n          alert(\"Рутокен не обнаружен\");\n        }\n      }) // Проверка залогиненности\n      .then(function (firstDevice) {\n        rutokenHandle = firstDevice;\n        return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n      }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n      .then(function (isLoggedIn) {\n        if (isLoggedIn) {\n          return Promise.resolve();\n        } else {\n          return plugin.login(rutokenHandle, rutokenPin); // 240699\n        }\n      }) // Перебор пользовательских сертификатов на токене\n      .then(function () {\n        return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n      }).then(function (certs) {\n        if (certs.length > 0) {\n          certHandle = certs[0];\n          return plugin.parseCertificate(rutokenHandle, certs[0]);\n        } else {\n          alert(\"Сертификат на Рутокен не обнаружен\");\n        }\n      }) // Подписание данных из текстового поля на первом найденом сертификате\n      .then(function (certs) {\n        certData = certs;\n\n        if (certHandle.length > 0) {\n          var options = {};\n          let inn = \"\";\n          let fullName = \"\";\n\n          for (let i = 0; i < certData.subject.length; i++) {\n            if (certData.subject[i].rdn === \"serialNumber\") {\n              inn = certData.subject[i].value;\n            }\n\n            if (certData.subject[i].rdn === \"commonName\") {\n              fullName = certData.subject[i].value;\n            }\n          }\n\n          props.setEsInn(inn);\n          props.setEsUserFullName(fullName);\n          props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n          handleCloseModalEnterPin(); // swAllert(\"Отчет успешно подписан!\", \"success\")\n\n          reportToPDFES(fullName, inn, certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n          return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n        } else {\n          alert(\"Сертификат на Рутокен не обнаружен\");\n        }\n      }) // Закрытие сессии\n      .then(function () {\n        plugin.logout(rutokenHandle);\n      }, handleError);\n    } else {\n      swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n    }\n  } // catch errors while signing docs\n\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"SignReportSaveButton\", null);\n    }\n  } // Integer input handlers\n\n\n  function handleChange(event) {\n    console.log(\"EV\", event);\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleDateChange(event) {\n    let fullDate = new Date(event.target.value); // console.log(\"DATE CHANGE\", fullDate)\n\n    if (fieldValue[event.target.name] !== undefined && fieldValue[event.target.name] !== null) {\n      let date = moment(fullDate).format(\"YYYY-MM-DD\");\n      let time = moment(fieldValue[event.target.name]).format(\"HH:mm:ss\");\n      fullDate = date + \"T\" + time; // let value = new Date(fieldValue[event.target.name])\n      // let nDate = props.parseDate(event.target.value)\n      // let hours = value.getHours() < 10 ? \"0\" + value.getHours() : value.getHours()\n      // let minutes = value.getMinutes() < 10 ? \"0\" + value.getMinutes() : value.getMinutes()\n      // let seconds = value.getSeconds() < 10 ? \"0\" + value.getSeconds() : value.getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      // console.log(\"F D\", fullDate, hours, minutes, seconds)\n    }\n\n    fieldValue[event.target.name] = fullDate;\n    setFieldValue(fieldValue);\n    console.log(\"DATE CHANGE\", fullDate);\n    console.log(\"FVAL\", fieldValue); // setUpdateState(getUUID())\n  }\n\n  function handleTimeChange(name, value) {\n    let fullDate = new Date(value);\n\n    if (fieldValue[name] !== undefined && fieldValue[name] !== null) {\n      // let nDate = props.parseDate(fieldValue[name])\n      // let hours = new Date(value).getHours()\n      // let minutes = new Date(value).getMinutes()\n      // let seconds = new Date(value).getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      let date = moment(fieldValue[name]).format(\"YYYY-MM-DD\");\n      let time = moment(value).format(\"HH:mm:ss\");\n      fullDate = date + \"T\" + time;\n    }\n\n    fieldValue[name] = fullDate;\n    setFieldValue(fieldValue);\n    console.log(\"FULL DATE CHANGE\", name, value, fieldValue);\n    console.log(\"FVAL\", fieldValue);\n    setUpdateState(getUUID());\n  }\n\n  const handleCheckboxChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Handler of select copmponet changes\n\n\n  function handleSelectChange(option) {\n    console.log(\"SEL CHANGE\", option.name, option.value);\n    fieldValue[option.name] = option.value;\n    let updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        setSelectedOptions(updateSelectedOptions); // console.log(\"SO\", selectedOptions)\n\n        noSuchOption = false;\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    setFieldValue(fieldValue);\n  } // function handleMultiSelectChange(value, {action, removedValue, name}) {\n  //   // console.log(\"MSOP\", multiSelectedOptions)\n  //   console.log(\"NAME\",name)\n  //   if(action === \"select-option\"){\n  //     let putAll = false\n  //     for(let i=0; i<value.length; i++){\n  //       if(value[i].value === \"all\"){\n  //         putAll = true\n  //       }\n  //     }\n  //     if(putAll === true){\n  //       multiSelectedOptions[name] = multiSelectDataOptions[name]\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"remove-value\"){\n  //     // console.log(\"RV\", removedValue, \"NAME\", name)\n  //     if(removedValue.value === \"all\"){\n  //       multiSelectedOptions[name] = null\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"clear\"){\n  //     multiSelectedOptions[name] = null\n  //   }\n  //   if(name === \"dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"depositors\"){\n  //           depositors = enumData[i].data // Find partner for each selected depositor\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<depositors.length; d++){\n  //           if(depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"corr_dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let corr_depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"corrDepositories\"){\n  //           corr_depositors = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<corr_depositors.length; d++){\n  //           if(corr_depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(corr_depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"reg_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let registrars = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"registrars\"){\n  //           registrars = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<registrars.length; d++){\n  //           if(registrars[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(registrars[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   setMultiSelectedOptions(multiSelectedOptions)\n  //   setUpdateState(getUUID())\n  // }\n\n\n  function handleIntChange(event) {\n    console.log(\"EVENT\", event.target.name, event.target.value);\n    fieldValue[event.target.name] = parseInt(event.target.value);\n    setFieldValue(fieldValue);\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section, index) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 9\n      }\n    }, section.contents.map((contentItem, index) => contentItem.show === true && contentItem.type === \"TransferList\" ? /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      colSpan: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 19\n      }\n    }, contentItem.label)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 19\n      }\n    }, \"\\u043F\\u043E\\u0438\\u0441\\u043A \", /*#__PURE__*/React.createElement(\"input\", {\n      autoFocus: autofocusFieldTrList === contentItem.name ? true : false,\n      name: contentItem.name,\n      onChange: handleSearchTransferListChange,\n      value: transferListSearchFileds[contentItem.name],\n      disabled: !contentItem.edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 67\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"4%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 19\n      }\n    }, \"\\u043F\\u043E\\u0438\\u0441\\u043A \", /*#__PURE__*/React.createElement(\"input\", {\n      autoFocus: autofocusFieldSelTrList === contentItem.name ? true : false,\n      name: contentItem.name,\n      onChange: handleSearchSelectedTransferListChange,\n      value: selectedTransferListSearchFileds[contentItem.name],\n      disabled: !contentItem.edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 67\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 21\n      }\n    }, getTransferList(transferList[contentItem.name], contentItem.name, contentItem.edit))), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"4%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleAllRight(contentItem.name),\n      disabled: transferList[contentItem.name].length === 0 || contentItem.edit === false ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 25\n      }\n    }, \"\\u226B\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleCheckedRight(contentItem.name),\n      disabled: leftChecked(contentItem.name).length === 0 || contentItem.edit === false ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 25\n      }\n    }, \">\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleCheckedLeft(contentItem.name),\n      disabled: rightChecked(contentItem.name).length === 0 || contentItem.edit === false ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 25\n      }\n    }, \"<\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleAllLeft(contentItem.name),\n      disabled: selectedTransferList[contentItem.name].length === 0 || contentItem.edit === false ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 25\n      }\n    }, \"\\u226A\")))), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 21\n      }\n    }, getTransferList(selectedTransferList[contentItem.name], contentItem.name, contentItem.edit))))) : /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 19\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 19\n      }\n    }, contentBuilder(contentItem)))))));\n  } // Create component by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        multiline: true,\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\" // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        ,\n        onBlur: handleIntChange,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\" // defaultValue = {fieldValue[contentItem.name]}\n        ,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"45%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        key: fieldValue[contentItem.name],\n        type: \"date\",\n        name: contentItem.name,\n        onChange: handleDateChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"NaN.NaN.NaN\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"45%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(LocalizationProvider, {\n        dateAdapter: AdapterDateFns,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Stack, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TimePicker // key={fieldValue[contentItem.name]}\n      , {\n        ampm: false,\n        openTo: \"hours\",\n        views: ['hours', 'minutes', 'seconds'],\n        inputFormat: \"HH:mm:ss\",\n        mask: \"__:__:__\" // value={dVal}\n        ,\n        value: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\",\n        onChange: newValue => {\n          handleTimeChange(contentItem.name, newValue);\n        },\n        renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 46\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 19\n        }\n      })))))) // <LocalizationProvider dateAdapter={AdapterDateFns}>\n      //   <DateTimePicker\n      //     name={contentItem.name}\n      //     renderInput={(props) => <TextField {...props} />}\n      //     value={fieldValue[contentItem.name]}\n      //     onChange={(newValue) => {handleTimeChange(contentItem.name, newValue)}}\n      //     style={{width: \"100%\"}}\n      //     disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n      //   />\n      // </LocalizationProvider>\n      ;\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 9\n        }\n      });\n    } // else if (contentItem.type === \"MultiSelect\"){\n    //   return (\n    //     // <div style={{height: \"40px\", overflow: \"auto\"}}>\n    //       <Select\n    //         name={contentItem.name}\n    //         className=\"basic-multi-select\"\n    //         classNamePrefix=\"select\"\n    //         value={multiSelectedOptions[contentItem.name]}\n    //         onChange={handleMultiSelectChange}\n    //         closeMenuOnSelect={false}\n    //         isMulti\n    //         options={multiSelectDataOptions[contentItem.name]}\n    //         isDisabled ={(formType === \"view\" || contentItem.edit === false) ? true : false}\n    //         style={{height: \"120px\"}}\n    //       />\n    //     // </div>\n    //   )\n    // }\n    else if (contentItem.type === \"Currency\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        value: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          minWidth: 300\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 9\n        }\n      });\n    }\n  } // Main button click handler\n\n\n  function buttonClick(buttonName) {\n    console.log(\"Button\", buttonName);\n\n    if (buttonName === \"selectReportType\") {\n      let reportFormDefId = null;\n      let reportName = null;\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          if (enumData[i].name === \"report_name\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].id === fieldValue[\"report_name\"]) {\n                reportFormDefId = enumData[i].data[d].form_def_id;\n                reportName = enumData[i].data[d].report_name;\n              }\n            }\n          }\n        } else {\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"selectReportType\"\n          },\n          reportName: {\n            value: reportName\n          },\n          reportFormDefId: {\n            value: reportFormDefId\n          }\n        }\n      };\n      console.log(\"button selectReportType:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"createReport\") {\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        let reportVars = getFieldValuesCreateReport();\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: {\n              value: reportVars\n            },\n            userAction: {\n              value: \"createReport\"\n            }\n          }\n        };\n        console.log(\"button createReport:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createChargeForCDServiceReport\") {\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        let reportVars = getFieldValuesCreateReport();\n        let chargeBody = {\n          startDate: fieldValue.start_date,\n          endDate: fieldValue.end_date,\n          depositorId: selectedTransferList.dep_id,\n          serviceTypeId: selectedTransferList.service_type_id\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: {\n              value: reportVars\n            },\n            userAction: {\n              value: \"createReport\"\n            },\n            chargeBody: {\n              value: JSON.stringify(chargeBody)\n            }\n          }\n        };\n        console.log(\"button createChargeForCDServiceReport:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createCharge\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"createCharge\"\n          }\n        }\n      };\n      console.log(\"button createCharge:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"reportToExcel\") {\n      reportToExcel();\n      console.log(\"button reportToExcel: \");\n    } else if (buttonName === \"reportToPDF\") {\n      reportToPDF();\n      console.log(\"button reportToPDF: \");\n    } else if (buttonName === \"reportToPDFES\") {\n      if (props.esInn === null) {\n        setShowModalEnterPin(true);\n      } else {\n        reportToPDFES(props.esUserFullName, props.esInn, props.esExpiredDate);\n      }\n    } else if (buttonName === \"SignReportSaveButton\") {\n      sign();\n    } else if (buttonName === \"reportToWord\") {\n      reportToWord();\n      console.log(\"button reportToWord: \");\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"finish\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"finish\"\n          }\n        }\n      };\n      console.log(\"button finish: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    }\n  } // Transfer List functions\n\n\n  const handleToggle = (value, name) => () => {\n    const currentIndex = checked[name].indexOf(value);\n    const newChecked = [...checked[name]];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked({ ...checked,\n      [name]: newChecked\n    });\n  };\n\n  const handleAllRight = name => {\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: selectedTransferList[name].concat(transferList[name])\n    });\n    setTransferList({ ...transferList,\n      [name]: []\n    });\n  };\n\n  function handleCheckedRight(name) {\n    // console.log(\"CHECKED RIGHT\", name)\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: selectedTransferList[name].concat(leftChecked(name))\n    });\n    setTransferList({ ...transferList,\n      [name]: not(transferList[name], leftChecked(name))\n    });\n    setChecked({ ...checked,\n      [name]: not(checked[name], leftChecked(name))\n    });\n  }\n\n  function handleCheckedLeft(name) {\n    setTransferList({ ...transferList,\n      [name]: transferList[name].concat(rightChecked(name))\n    });\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: not(selectedTransferList[name], rightChecked(name))\n    });\n    setChecked({ ...checked,\n      [name]: not(checked[name], rightChecked(name))\n    });\n  }\n\n  const handleAllLeft = name => {\n    setTransferList({ ...transferList,\n      [name]: transferList[name].concat(selectedTransferList[name])\n    });\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: []\n    });\n  };\n\n  function getTransferList(items, name, edit) {\n    // console.log(\"G TR L\", items, name)\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1290,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 9\n      }\n    }, items.map(value => {\n      const labelId = `transfer-list-item-${value}-label`;\n      return /*#__PURE__*/React.createElement(ListItem, {\n        size: \"small\",\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle(value, name),\n        style: {\n          height: 40\n        },\n        disabled: edit === false ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        size: \"small\",\n        checked: checked[name].indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        style: {\n          height: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: getTranserListItemLabel(name, value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1312,\n          columnNumber: 17\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  function getTranserListItemLabel(name, value) {\n    // console.log(\"G TRL LABEL\", name, value)\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          if (enumData[e].data[d].id === value) {\n            return enumData[e].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function handleSearchTransferListChange(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n    setAutofocusFieldTrList(name);\n    setTransferListSearchFileds({ ...transferListSearchFileds,\n      [name]: value\n    });\n    let filteredTrListOpts = [];\n\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase();\n          let searchField = value.toLowerCase();\n          let includeSearch = label.includes(searchField);\n\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id);\n          }\n        }\n      }\n    } // console.log(\"N TR L\", newTrListOpts)\n\n\n    let newTrListOpts = [];\n\n    if (selectedTransferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true;\n\n        for (let s = 0; s < selectedTransferList[name].length; s++) {\n          if (filteredTrListOpts[i] === selectedTransferList[name][s]) {\n            include = false;\n            break;\n          }\n        }\n\n        if (include === true) {\n          newTrListOpts.push(filteredTrListOpts[i]);\n        }\n      }\n    } else {\n      newTrListOpts = filteredTrListOpts;\n    }\n\n    setTransferList({ ...transferList,\n      [name]: newTrListOpts\n    });\n  }\n\n  function handleSearchSelectedTransferListChange(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n    setAutofocusFieldSelTrList(name);\n    setSelectedTransferListSearchFileds({ ...selectedTransferListSearchFileds,\n      [name]: value\n    });\n    let filteredTrListOpts = [];\n\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase();\n          let searchField = value.toLowerCase();\n          let includeSearch = label.includes(searchField);\n\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id);\n          }\n        }\n      }\n    }\n\n    let newSelTrListOpts = [];\n\n    if (transferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true;\n\n        for (let s = 0; s < transferList[name].length; s++) {\n          if (filteredTrListOpts[i] === transferList[name][s]) {\n            include = false;\n            break;\n          }\n        }\n\n        if (include === true) {\n          newSelTrListOpts.push(filteredTrListOpts[i]);\n        }\n      }\n    } else {\n      newSelTrListOpts = filteredTrListOpts;\n    }\n\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: newSelTrListOpts\n    });\n  }\n\n  function getFieldValuesCreateReport() {\n    let reportVars = {};\n    let strReportVars = \"\";\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n        let type = Form.sections[s].contents[c].type;\n\n        if (type === \"DateTime\") {\n          // reportVars[fieldName] = props.parseDate(fieldValue[fieldName])\n          reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\");\n        } // else if(type === \"MultiSelect\"){\n        //   if(Object.keys(multiSelectedOptions).length > 0){\n        //     let strVals = \"\"\n        //     for(let i=0; i<multiSelectedOptions[fieldName].length; i++){\n        //       let value = multiSelectedOptions[fieldName][i].value\n        //       if(value !== \"all\"){\n        //         if(i === multiSelectedOptions[fieldName].length-1){\n        //           strVals += value\n        //         }\n        //         else{\n        //           strVals += value + \",\"\n        //         }\n        //       }\n        //     }\n        //     reportVars[fieldName] = strVals\n        //     console.log(\"MULTI\", strVals)\n        //   }\n        // }\n        else if (type === \"TransferList\") {\n          // console.log(\"TTTTTT\", selectedTransferList[fieldName])\n          let strVals = \"\";\n\n          if (selectedTransferList[fieldName].length > 0) {\n            for (let i = 0; i < selectedTransferList[fieldName].length; i++) {\n              let value = selectedTransferList[fieldName][i];\n\n              if (i === selectedTransferList[fieldName].length - 1) {\n                strVals += value;\n              } else {\n                strVals += value + \",\";\n              }\n            }\n          }\n\n          reportVars[fieldName] = strVals; // console.log(\"TR LIST\", strVals)\n        } else if (type === \"FullDateTime\") {\n          // let val = new Date(fieldValue[fieldName])\n          // // let fullDate = props.parseDate(val)\n          // let newDate = new Date(fieldValue[fieldName]) // \"2020-01-26\"\n          // let dd = String(newDate.getDate()).padStart(2, '0')\n          // let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n          // let yyyy = newDate.getFullYear()\n          // var hours = val.getHours() < 10 ? \"0\" + val.getHours() : val.getHours()\n          // var minutes = val.getMinutes() < 10 ? \"0\" + val.getMinutes() : val.getMinutes()\n          // var seconds = val.getSeconds() < 10 ? \"0\" + val.getSeconds() : val.getSeconds()\n          // var convertedDate = dd + \".\" + mm + \".\" + yyyy + \"T\" + hours + \":\" + minutes + \":\" + seconds\n          let convertedDate = moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\");\n          reportVars[fieldName] = convertedDate;\n        } else {\n          reportVars[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    if (Object.keys(reportVars).length > 0) {\n      strReportVars = \"?\";\n\n      for (let key in reportVars) {\n        let newVar = key + \"=\" + reportVars[key] + \"&\";\n        strReportVars = strReportVars + newVar;\n      }\n\n      strReportVars = strReportVars.substring(0, strReportVars.length - 1);\n    }\n\n    return strReportVars;\n  }\n\n  function checkForRequieredFields() {\n    // console.log(\"MOPTS\", multiSelectedOptions)\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          // if(Form.sections[s].contents[c].type === \"MultiSelect\"){\n          //   if(multiSelectedOptions[fieldName] === undefined || multiSelectedOptions[fieldName] === null ||\n          //     multiSelectedOptions[fieldName].length === 0){\n          //     checkedSuccessfuly = false\n          //     swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n          //     return checkedSuccessfuly\n          //   }\n          //   else{\n          //     checkedSuccessfuly = true\n          //   }\n          // }\n          if (Form.sections[s].contents[c].type === \"TransferList\") {\n            if (selectedTransferList[fieldName] === undefined || selectedTransferList[fieldName] === null || selectedTransferList[fieldName].length === 0) {\n              checkedSuccessfuly = false;\n              swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n              return checkedSuccessfuly;\n            } else {\n              checkedSuccessfuly = true;\n            }\n          } else {\n            if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n              checkedSuccessfuly = false;\n              swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n              return checkedSuccessfuly;\n            } else {\n              checkedSuccessfuly = true;\n            }\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  async function repserverlogin() {\n    await fetch(`/jasperserver/rest_v2/login?j_username=jasperadmin&j_password=jasperadmin`, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => {\n      // response.text().then(string => {\n      console.log(\"JASPERT AUTH\", response); // })\n    }).catch(error => console.error(error));\n  }\n\n  async function reportToExcel() {\n    await repserverlogin();\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".xlsx\" + reportVars;\n    await fetch(url, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => response.blob()).then(blob => {\n      // console.log(\"RESP\", blob)\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      a.href = url;\n      a.download = `${reportName}.xlsx`;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n\n      a.click();\n      a.remove(); //afterwards we remove the element again         \n    }).catch(error => console.error(error));\n  }\n\n  async function reportToPDF() {\n    await repserverlogin();\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".pdf\" + reportVars;\n    await fetch(url, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => response.blob()).then(blob => {\n      console.log(\"RESP\", blob);\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      a.href = url;\n      a.download = `${reportName}.pdf`;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n\n      a.click();\n      a.remove(); //afterwards we remove the element again         \n    }).catch(error => console.error(error));\n  }\n\n  async function reportToPDFES(fullName, inn, expiredDate) {\n    await repserverlogin();\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".pdf\" + reportVars;\n    await fetch(url, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => response.blob()).then(blob => {\n      console.log(\"REPORT\", blob);\n      blob.name = reportName + \".pdf\";\n      let formData = new FormData();\n      formData.append(\"formFile\", blob, reportName + \".pdf\");\n\n      for (var value of formData.values()) {\n        console.log(\"FVAL\", value);\n      }\n\n      let url = \"/api/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate;\n      var requestOptions = {\n        method: 'POST',\n        body: formData,\n        redirect: 'follow'\n      };\n      fetch(url, requestOptions).then(response => response.blob()).then(bl => {\n        console.log(\"RES\", bl);\n        var pdf = new Blob([bl], {\n          type: \"application/pdf\"\n        });\n        var docUrl = window.URL.createObjectURL(pdf);\n        var a = document.createElement('a');\n        a.href = docUrl;\n        a.download = `${reportName}.pdf`;\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n      }).catch(error => console.log('error', error));\n    }).catch(error => console.error(error));\n  }\n\n  async function reportToWord() {\n    await repserverlogin();\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".docx\" + reportVars;\n    await fetch(url, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => response.blob()).then(blob => {\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      a.href = url;\n      a.download = `${reportName}.docx`;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n\n      a.click();\n      a.remove(); //afterwards we remove the element again         \n    }).catch(error => console.error(error));\n  }\n\n  try {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1688,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      name: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1689,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1690,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1691,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1692,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1693,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1694,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1695,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1696,\n        columnNumber: 21\n      }\n    }, Form.label)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1700,\n        columnNumber: 15\n      }\n    }, Form.sections.map((section, index) => {\n      return sectionBuilder(section, index);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1705,\n        columnNumber: 15\n      }\n    }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      onClick: () => buttonClick(button.name),\n      style: {\n        margin: 3,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12,\n        color: button.fontColor\n      },\n      value: button.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1707,\n        columnNumber: 19\n      }\n    }, button.label)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1725,\n        columnNumber: 13\n      }\n    }), selectedDoc !== null && /*#__PURE__*/React.createElement(Markup, {\n      id: \"reportContainer\",\n      content: selectedDoc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1730,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalEnterPin,\n      onClose: handleCloseModalEnterPin,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1734,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1740,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1741,\n        columnNumber: 15\n      }\n    }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"100%\"\n      },\n      error: wrongPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1742,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1743,\n        columnNumber: 17\n      }\n    }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n      type: showPin ? 'text' : 'password',\n      defaultValue: rutokenPin,\n      onChange: handlePinChange,\n      onKeyPress: onKeyPressModalEnterPin,\n      autoFocus: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1751,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPin,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1752,\n          columnNumber: 23\n        }\n      }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1757,\n          columnNumber: 36\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1757,\n          columnNumber: 53\n        }\n      }))),\n      labelWidth: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1744,\n        columnNumber: 17\n      }\n    })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1764,\n        columnNumber: 37\n      }\n    }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"SignReportSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1765,\n        columnNumber: 15\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleCloseModalEnterPin,\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1777,\n        columnNumber: 15\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1796,\n        columnNumber: 12\n      }\n    }, \"error\");\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Select","NumberFormat","PropTypes","Grid","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Paper","Modal","FormControl","AdapterDateFns","LocalizationProvider","DateTimePicker","TimePicker","Stack","List","ListItem","ListItemIcon","ListItemText","ArrowUpwardRoundedIcon","FormControlLabel","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","IconButton","fade","makeStyles","swal","Markup","rutoken","moment","require","axios","plugin","rutokenHandle","certHandle","certData","cmsData","NumberFormatCustom","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","useStyles","theme","importFile","margin","spacing","inputFile","display","modal","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","height","overflow","button","getModalStyle","top","left","transform","not","a","b","filter","indexOf","intersection","classes","userProfile","process_id","userTask","session_id","taskID","taskType","enumOptions","setEnumOptions","Form","setForm","enumData","selectedOptions","setSelectedOptions","reportName","fieldValue","setFieldValue","docId","buttons","formType","sectionColor","selectedDoc","setSelectedDoc","updateState","setUpdateState","reportVars","setReportVars","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","modalStyle","transferList","setTransferList","reg_id","sec_id","acc_type_code","dep_id","corr_dep_id","currency_id","service_type_id","issuer_id","checked","setChecked","selectedTransferList","setSelectedTransferList","transferListSearchFileds","setTransferListSearchFileds","selectedTransferListSearchFileds","setSelectedTransferListSearchFileds","autofocusFieldTrList","setAutofocusFieldTrList","autofocusFieldSelTrList","setAutofocusFieldSelTrList","leftChecked","name","rightChecked","repserverlogin","console","log","undefined","newEnumOptions","i","length","options","d","data","report_name","push","id","label","getLostEnumName","callErrorToast","createTransferListOptions","userRole","s","sections","c","contents","n","edit","ed","e","partner","parseInt","newFields","type","Date","getUUID","enumI","form","enums","newTransferList","newSelectedTransferList","newTrItems","newSelTrItems","cName","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","uuidv1","handleCloseModalEnterPin","handlePinChange","event","handleClickShowPin","sign","enumerateDevices","devices","alert","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","inn","fullName","subject","rdn","setEsInn","setEsUserFullName","setEsExpiredDate","validNotAfter","substring","reportToPDFES","DATA_FORMAT_PLAIN","logout","handleError","swAllert","reason","isNaN","message","errorCodes","PIN_INCORRECT","onKeyPressModalEnterPin","code","charCode","buttonClick","handleChange","handleDateChange","fullDate","date","format","time","handleTimeChange","handleCheckboxChange","text","icon","ok","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","handleIntChange","sectionBuilder","section","index","color","fontSize","bodyBuilder","map","contentItem","show","handleSearchTransferListChange","handleSearchSelectedTransferListChange","getTransferList","handleAllRight","handleCheckedRight","handleCheckedLeft","handleAllLeft","contentBuilder","inputComponent","shrink","parseDate","newValue","params","selectedOption","document","body","menuPortal","base","zIndex","minWidth","maxWidth","buttonName","reportFormDefId","form_def_id","commandJson","commandType","userId","variables","userAction","sendFieldValues","clearTabData","checkResult","checkForRequieredFields","getFieldValuesCreateReport","chargeBody","startDate","start_date","endDate","end_date","depositorId","serviceTypeId","JSON","stringify","reportToExcel","reportToPDF","esInn","esUserFullName","esExpiredDate","reportToWord","handleToggle","currentIndex","newChecked","splice","concat","items","labelId","getTranserListItemLabel","filteredTrListOpts","toLowerCase","searchField","includeSearch","includes","newTrListOpts","include","newSelTrListOpts","strReportVars","fieldName","strVals","convertedDate","Object","keys","key","newVar","checkedSuccessfuly","required","fetch","mode","method","withCredentials","credentials","headers","response","catch","error","url","blob","URL","createObjectURL","createElement","href","download","appendChild","click","remove","expiredDate","formData","FormData","append","requestOptions","redirect","bl","pdf","Blob","docUrl","maxHeight","fontColor"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/ViewReport/ViewReport.jsx"],"sourcesContent":["// Import material and react components\nimport React, {useState, useEffect} from 'react';\nimport Select from 'react-select';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from '@material-ui/core/Paper';\nimport Modal from \"@material-ui/core/Modal\";\nimport FormControl from '@material-ui/core/FormControl';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport TimePicker from '@mui/lab/TimePicker';\nimport Stack from '@mui/material/Stack';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// Icons\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// PIN components\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\n// Import libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport { Markup } from 'interweave';\nimport * as rutoken from \"rutoken\";\nvar moment = require('moment');\nconst axios = require('axios');\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\",\"} \n      isNumericString\n    />\n  );\n}\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles((theme) => ({\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  },\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  paper: {\n    width: \"100%\",\n    height: 200,\n    overflow: 'auto',\n  },\n  button: {\n    // width: \"5%\",\n    margin: theme.spacing(0),\n  }\n}))\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\nexport default(props) =>{\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile)\n  const [process_id] = useState(props.userTask.process_id)\n  const [session_id] = useState(props.userTask.session_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [taskType] = useState(props.userTask.taskType)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [enumData] = useState(props.userTask.enumData)\n  const [selectedOptions, setSelectedOptions] = useState([])\n\n  // const [multiSelectData] = useState(props.userTask.multiSelectData)\n  // const [multiSelectDataOptions, setMultiSelectDataOptions] = useState({})\n  // const [multiSelectedOptions, setMultiSelectedOptions] = useState({})\n  // const [gridForm] = useState(props.userTask.gridForm)\n  const [reportName] = useState(props.userTask.reportName)\n  const [fieldValue, setFieldValue] = useState({})\n  const [docId] = useState(props.userTask.docId)\n  const [buttons] = useState(props.userTask.buttons)\n  const [formType] = useState(props.userTask.formType)\n  \n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [updateState, setUpdateState] = useState(false)\n  const [reportVars, setReportVars] = useState(props.userTask.reportVars)\n\n  // modals\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n  const [modalStyle] = useState(getModalStyle)\n  // TRANSFER LIST\n  const [transferList, setTransferList] = useState({reg_id: [], sec_id: [], acc_type_code: [], dep_id: [], corr_dep_id: [], currency_id: [], service_type_id: [], issuer_id: []})\n  const [checked, setChecked] = useState({reg_id: [], sec_id: [], acc_type_code: [], dep_id: [], corr_dep_id: [], currency_id: [], service_type_id: [], issuer_id: []})\n  const [selectedTransferList, setSelectedTransferList] = useState({reg_id: [], sec_id: [], acc_type_code: [], dep_id: [], corr_dep_id: [], currency_id: [], service_type_id: [], issuer_id: []})\n  const [transferListSearchFileds, setTransferListSearchFileds] = useState({})\n  const [selectedTransferListSearchFileds, setSelectedTransferListSearchFileds] = useState({})\n  const [autofocusFieldTrList, setAutofocusFieldTrList] = useState(null)\n  const [autofocusFieldSelTrList, setAutofocusFieldSelTrList] = useState(null)\n  function leftChecked(name){\n    return intersection(checked[name], transferList[name])\n  }\n  function rightChecked(name){\n    return intersection(checked[name], selectedTransferList[name])\n  }\n\n  // Initializing\n  useEffect(()=>{\n    repserverlogin()\n    console.log(\"REP PROPS\", props.userTask, props.userProfile)\n    if(props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\"){\n      let newEnumOptions = {}\n      for(let i=0; i<props.userTask.enumData.length; i++){\n        if(props.userTask.enumData[i] !== null){\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\" : props.userTask.enumData[i].name\n          }]\n          if(props.userTask.enumData[i].name === \"report_name\"){\n            if(props.userTask.taskType === \"showReportsSelectingForm\"){\n              for(let d=0; d<props.userTask.enumData[i].data.length; d++){\n                if(props.userProfile[props.userTask.enumData[i].data[d].report_name] === true){\n                  options.push({\n                    \"value\": props.userTask.enumData[i].data[d].id,\n                    \"label\": props.userTask.enumData[i].data[d].label,\n                    \"name\" : props.userTask.enumData[i].name\n                  })\n                }\n              }\n            }\n          }\n          else{\n            for(let d=0; d<props.userTask.enumData[i].data.length; d++){\n                options.push({\n                \"value\": props.userTask.enumData[i].data[d].id,\n                \"label\": props.userTask.enumData[i].data[d].label,\n                \"name\" : props.userTask.enumData[i].name\n              })\n            }\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else{\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\" : getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n      createTransferListOptions(props.userTask.Form, props.userTask.enumData)\n    }\n    // let newMultiSelectDatamOptions = {}\n    // if(props.userTask.multiSelectData !== null && props.userTask.multiSelectData !== undefined && props.userTask.multiSelectData !== \"null\"){\n    //   for(let i=0; i<multiSelectData.length; i++){\n    //     let options = [{\n    //       \"value\": \"all\",\n    //       \"label\": \"Все\"\n    //     }]\n    //     if(multiSelectData[i].name !== \"acc_id\"){\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         options.push({\n    //           \"value\": multiSelectData[i].data[d].id,\n    //           \"label\": multiSelectData[i].data[d].label,\n    //         })\n    //       }\n    //     }\n    //     else{\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n    //           options.push({\n    //             \"value\": multiSelectData[i].data[d].id,\n    //             \"label\": multiSelectData[i].data[d].label,\n    //           })\n    //         }\n    //       }\n    //     }\n    //     newMultiSelectDatamOptions[multiSelectData[i].name] = options\n    //   }\n    //   setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    //   console.log(\"MS DATA OPTS\", newMultiSelectDatamOptions)\n    // }\n    if(props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined){\n      // console.log(\"SDOC\", props.userTask.selectedDoc)\n      setSelectedDoc(props.userTask.selectedDoc)\n    }\n    if(userProfile.userRole === \"3\"){ // Depositor\n      for(let s=0; s<Form.sections.length; s++){  // Block depositor field\n        for(let c=0; c<Form.sections[s].contents.length; c++){\n          let n = Form.sections[s].contents[c].name\n          if(n === \"dep_id\"){\n            Form.sections[s].contents[c].edit = false\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n            let ed = props.userTask.enumData\n            for(let e=0; e<ed.length; e++){\n              if(ed[e].name === \"depositors\"){\n                for(let d=0; d<ed[e].data.length; d++){\n                  if(ed[e].data[d].partner === parseInt(userProfile.partner)){\n                    setSelectedTransferList({...selectedTransferList, \"dep_id\" : [ed[e].data[d].id]})\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      setForm(Form)\n      // for(let i=0; i<multiSelectData.length; i++){// find accounts of depositor\n      //   let options = [{\n      //     \"value\": \"all\",\n      //     \"label\": \"Все\"\n      //   }]\n      //   if(multiSelectData[i].name === \"acc_id\"){\n      //     for(let d=0; d<multiSelectData[i].data.length; d++){\n      //       if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n      //         options.push({\n      //           \"value\": multiSelectData[i].data[d].id,\n      //           \"label\": multiSelectData[i].data[d].label,\n      //         })\n      //       }\n      //     } \n      //   }\n      //   newMultiSelectDatamOptions[multiSelectData[i].name] = options\n      // }\n      // setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    }\n    if(userProfile.userRole === \"4\"){ // Registrar\n      for(let s=0; s<Form.sections.length; s++){\n        for(let c=0; c<Form.sections[s].contents.length; c++){\n          let n = Form.sections[s].contents[c].name\n          if(n === \"reg_id\"){\n            Form.sections[s].contents[c].edit = false // Block registrar field\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n            let ed = props.userTask.enumData\n            for(let e=0; e<ed.length; e++){\n              if(ed[e].name === \"registrars\"){\n                for(let d=0; d<ed[e].data.length; d++){\n                  if(ed[e].data[d].partner === parseInt(userProfile.partner)){\n                    setSelectedTransferList({...selectedTransferList, \"registrars\" : [ed[e].data[d].id]})\n                    // multiSelectedOptions[n] = [{\n                    //   \"value\": ed[e].data[d].id,\n                    //   \"label\": ed[e].data[d].label\n                    // }]\n                  }\n                }\n              }\n            }\n            \n          }\n        }\n      }\n      setForm(Form)\n    }\n    if(userProfile.userRole === \"8\"){ // CorrDepository\n      for(let s=0; s<Form.sections.length; s++){\n        for(let c=0; c<Form.sections[s].contents.length; c++){\n          let n = Form.sections[s].contents[c].name\n          if(n === \"corr_dep_id\"){\n            Form.sections[s].contents[c].edit = false // Block corrDepositories field\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n            let ed = props.userTask.enumData\n            for(let e=0; e<ed.length; e++){\n              if(ed[e].name === \"corrDepositories\"){\n                for(let d=0; d<ed[e].data.length; d++){\n                  if(ed[e].data[d].partner === parseInt(userProfile.partner)){\n                    setSelectedTransferList({...selectedTransferList, \"corrDepositories\" : [ed[e].data[d].id]})\n                    // multiSelectedOptions[n] = [{\n                    //   \"value\": ed[e].data[d].id,\n                    //   \"label\": ed[e].data[d].label\n                    // }]\n                  }\n                }\n              }\n            }\n            \n          }\n        }\n      }\n      setForm(Form)\n    }\n    let newFields = {}\n    for(let s=0; s<Form.sections.length; s++){ // Set current date to DateTime fields\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        if(Form.sections[s].contents[c].type === \"FullDateTime\")\n          newFields[Form.sections[s].contents[c].name] = new Date()\n      }\n    }\n    console.log(\"NEW F\", newFields)\n    setFieldValue(newFields)\n    setUpdateState(getUUID())\n  },[])\n  function getLostEnumName(i){\n    let enumI = 0\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        if(Form.sections[s].contents[c].type === \"Enum\"){\n          if(enumI === i){\n            return Form.sections[s].contents[c].name\n          }\n          else{enumI += 1}\n        }\n      }\n    }\n  }\n  function createTransferListOptions(form, enums){\n    let newTransferList = {}\n    let newSelectedTransferList = {}\n    for(let s=0; s<form.sections.length; s++){\n      for(let c=0; c<form.sections[s].contents.length; c++){\n        if(form.sections[s].contents[c].type === \"TransferList\"){\n          let newTrItems = []\n          let newSelTrItems = []\n          let cName = form.sections[s].contents[c].name\n          for(let e=0; e<enums.length; e++){\n            if(enums[e] !== null){\n              if(enums[e].name === cName){\n                for(let d=0; d<enums[e].data.length; d++){\n                  newTrItems.push(enums[e].data[d].id)\n                }\n              }\n            }\n            else{\n              props.callErrorToast(\"Ошибка сбора справочной информации \" + cName)\n            }\n          }\n          newTransferList[cName] = newTrItems\n          newSelectedTransferList[cName] = newSelTrItems\n        }\n      }\n    }\n\n    setTransferList(newTransferList)\n    setSelectedTransferList(newSelectedTransferList)\n  }\n  // RuToken functions\n  rutoken.ready\n  // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled()\n    } else {\n      return Promise.resolve(true)\n    }\n  })\n  // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled()\n    } else {\n      // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\")\n    }\n  })\n  // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {\n      // alert(\"Не удаётся найти Плагин\");\n    }\n  })\n  //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return // alert(\"Не удаётся загрузить Плагин\");\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  })\n  function getUUID(){\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n\n  // Rutoken MODAL\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  function handlePinChange(event){\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin(){\n    setShowPin(!showPin)\n  }\n\n  // Sign transfer order with rutoken\n  function sign(){\n  // Перебор подключенных Рутокенов\n    if(plugin !== undefined){\n      plugin.enumerateDevices()\n      .then(function (devices) {\n        if (devices.length > 0) {\n          return Promise.resolve(devices[0])\n        } else {\n          alert(\"Рутокен не обнаружен\")\n        }\n      })\n      // Проверка залогиненности\n      .then(function (firstDevice) {\n        rutokenHandle = firstDevice\n        return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN)\n      })\n      // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n      .then(function (isLoggedIn) {\n        if (isLoggedIn) {\n          return Promise.resolve()\n        } else {\n          return plugin.login(rutokenHandle, rutokenPin) // 240699\n        }\n      })\n      // Перебор пользовательских сертификатов на токене\n      .then(function () {\n        return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC)\n      })\n      .then(function (certs) {\n        if (certs.length > 0) {\n          certHandle = certs[0]\n          return plugin.parseCertificate(rutokenHandle, certs[0])\n        }  else {\n          alert(\"Сертификат на Рутокен не обнаружен\");\n        }\n      })\n      // Подписание данных из текстового поля на первом найденом сертификате\n      .then(function (certs) {\n        certData = certs\n        if (certHandle.length > 0) {\n          var options = {}\n          let inn = \"\"\n          let fullName = \"\"\n          for(let i=0; i<certData.subject.length; i++){\n            if(certData.subject[i].rdn === \"serialNumber\"){\n              inn = certData.subject[i].value\n            }\n            if(certData.subject[i].rdn === \"commonName\"){\n              fullName = certData.subject[i].value\n            }\n          }\n          props.setEsInn(inn)\n          props.setEsUserFullName(fullName)\n          props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length-1))\n          handleCloseModalEnterPin()\n          // swAllert(\"Отчет успешно подписан!\", \"success\")\n          reportToPDFES(fullName, inn, certData.validNotAfter.substring(0, certData.validNotAfter.length-1))\n          return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options)\n        } else {\n          alert(\"Сертификат на Рутокен не обнаружен\")\n        }\n      })\n      // Закрытие сессии\n      .then(function () {\n        plugin.logout(rutokenHandle)\n      }, handleError)\n    }\n    else{swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\")}\n  }\n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  function onKeyPressModalEnterPin(event){\n    let code = event.charCode\n    if(code === 13){\n      buttonClick(\"SignReportSaveButton\", null)\n    }\n  }\n  // Integer input handlers\n  function handleChange(event){\n    console.log(\"EV\", event)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleDateChange(event){\n    let fullDate = new Date(event.target.value)\n    // console.log(\"DATE CHANGE\", fullDate)\n    if(fieldValue[event.target.name] !== undefined && fieldValue[event.target.name] !== null){\n      let date = moment(fullDate).format(\"YYYY-MM-DD\")\n      let time = moment(fieldValue[event.target.name]).format(\"HH:mm:ss\")\n      fullDate = date + \"T\" + time\n      // let value = new Date(fieldValue[event.target.name])\n      // let nDate = props.parseDate(event.target.value)\n      // let hours = value.getHours() < 10 ? \"0\" + value.getHours() : value.getHours()\n      // let minutes = value.getMinutes() < 10 ? \"0\" + value.getMinutes() : value.getMinutes()\n      // let seconds = value.getSeconds() < 10 ? \"0\" + value.getSeconds() : value.getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      // console.log(\"F D\", fullDate, hours, minutes, seconds)\n    }\n    fieldValue[event.target.name] = fullDate\n    setFieldValue(fieldValue)\n    console.log(\"DATE CHANGE\", fullDate)\n    console.log(\"FVAL\", fieldValue)\n    // setUpdateState(getUUID())\n  }\n  function handleTimeChange(name, value){\n    let fullDate = new Date(value)\n    if(fieldValue[name] !== undefined && fieldValue[name] !== null){\n      // let nDate = props.parseDate(fieldValue[name])\n      // let hours = new Date(value).getHours()\n      // let minutes = new Date(value).getMinutes()\n      // let seconds = new Date(value).getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      let date = moment(fieldValue[name]).format(\"YYYY-MM-DD\")\n      let time = moment(value).format(\"HH:mm:ss\")\n      fullDate = date + \"T\" + time\n    }\n    fieldValue[name] = fullDate\n    setFieldValue(fieldValue)\n    console.log(\"FULL DATE CHANGE\", name, value, fieldValue)\n    console.log(\"FVAL\", fieldValue)\n    setUpdateState(getUUID())\n  }\n  const handleCheckboxChange = (event) => {\n    setFieldValue({...fieldValue, [event.target.name]: event.target.checked})\n  }\n  function swAllert(text, icon){\n    return(\n      swal({\n        text: text,\n        icon: icon,\n        buttons: {ok: \"Ок\"},\n      })\n    )\n  }\n  // Handler of select copmponet changes\n  function handleSelectChange(option){\n    console.log(\"SEL CHANGE\", option.name, option.value)\n    fieldValue[option.name] = option.value\n    let updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for(let i=0; i<updateSelectedOptions.length; i++){\n      if(option.name === updateSelectedOptions[i].name){\n        updateSelectedOptions[i] = option\n        setSelectedOptions(updateSelectedOptions)\n        // console.log(\"SO\", selectedOptions)\n        noSuchOption = false\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if(noSuchOption === true){\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    setFieldValue(fieldValue)      \n  }\n  // function handleMultiSelectChange(value, {action, removedValue, name}) {\n  //   // console.log(\"MSOP\", multiSelectedOptions)\n  //   console.log(\"NAME\",name)\n  //   if(action === \"select-option\"){\n  //     let putAll = false\n  //     for(let i=0; i<value.length; i++){\n  //       if(value[i].value === \"all\"){\n  //         putAll = true\n  //       }\n  //     }\n  //     if(putAll === true){\n  //       multiSelectedOptions[name] = multiSelectDataOptions[name]\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"remove-value\"){\n  //     // console.log(\"RV\", removedValue, \"NAME\", name)\n  //     if(removedValue.value === \"all\"){\n  //       multiSelectedOptions[name] = null\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"clear\"){\n  //     multiSelectedOptions[name] = null\n  //   }\n  //   if(name === \"dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"depositors\"){\n  //           depositors = enumData[i].data // Find partner for each selected depositor\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<depositors.length; d++){\n  //           if(depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n                  \n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"corr_dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let corr_depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"corrDepositories\"){\n  //           corr_depositors = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<corr_depositors.length; d++){\n  //           if(corr_depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(corr_depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n                  \n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"reg_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let registrars = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"registrars\"){\n  //           registrars = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<registrars.length; d++){\n  //           if(registrars[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(registrars[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n                  \n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   setMultiSelectedOptions(multiSelectedOptions)\n  //   setUpdateState(getUUID())\n  // }\n  function handleIntChange(event){\n    console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = parseInt(event.target.value)\n    setFieldValue(fieldValue)\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section, index){\n    return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow style={{height: 30}}>\n            <TableCell \n              style={{\n                color: \"black\", \n                fontSize: 14,\n                backgroundColor:  sectionColor,\n                width: \"100%\"\n              }}>\n                {section.label}\n            </TableCell> \n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section){\n    return(\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map((contentItem, index) => (\n            contentItem.show === true &&\n            contentItem.type === \"TransferList\" ?\n              <table size=\"small\" align=\"center\">\n                <tr>\n                  <th colSpan=\"3\">{contentItem.label}</th>\n                </tr>\n                <tr>\n                  <td width=\"43%\" style={{padding: \"10px\"}}>поиск <input\n                    autoFocus={autofocusFieldTrList === contentItem.name ? true : false}\n                    name={contentItem.name}\n                    onChange={handleSearchTransferListChange}\n                    value={transferListSearchFileds[contentItem.name]}\n                    disabled={!contentItem.edit}\n                  />\n                  </td>\n                  <td width=\"4%\"></td>\n                  <td width=\"43%\" style={{padding: \"10px\"}}>поиск <input \n                    autoFocus={autofocusFieldSelTrList === contentItem.name ? true : false}\n                    name={contentItem.name}\n                    onChange={handleSearchSelectedTransferListChange}\n                    value={selectedTransferListSearchFileds[contentItem.name]}\n                    disabled={!contentItem.edit}\n                  /></td>\n                </tr>\n                <tr>\n                  <td width=\"43%\">\n                    <Grid item>{getTransferList(transferList[contentItem.name], contentItem.name, contentItem.edit)}</Grid>\n                  </td>\n                  <td width=\"4%\">\n                    <Grid item>\n                      <Grid container direction=\"column\">\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={()=> handleAllRight(contentItem.name)}\n                          disabled={(transferList[contentItem.name].length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          ≫\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={()=> handleCheckedRight(contentItem.name)}\n                          disabled={(leftChecked(contentItem.name).length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          &gt;\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={()=> handleCheckedLeft(contentItem.name)}\n                          disabled={(rightChecked(contentItem.name).length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          &lt;\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={()=> handleAllLeft(contentItem.name)}\n                          disabled={(selectedTransferList[contentItem.name].length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          ≪\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </td>\n                  <td width=\"43%\">\n                    <Grid item>{getTransferList(selectedTransferList[contentItem.name], contentItem.name, contentItem.edit)}</Grid>\n                  </td>\n                </tr>\n              </table>\n              :\n              <Table size=\"small\">\n                <TableRow style={{height: 30}}>\n                  <TableCell\n                    align=\"left\"\n                    style={{width: \"40%\"}}>\n                    {contentItem.label}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{width: \"60%\", height: 30}}\n                  >{contentBuilder(contentItem)}\n                  </TableCell>\n                </TableRow>\n              </Table>\n          ))} \n        </TableBody>\n      </Table>\n    )\n  }\n  // Create component by it's type\n  function contentBuilder(contentItem){\n    if(contentItem.type === \"Text\"){\n      return(\n        <TextField\n          multiline\n          onBlur = {handleChange}\n          name = {contentItem.name}\n          style={{width: \"100%\"}}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        />\n      )\n    }\n    else if(contentItem.type === \"Int\"){\n      return (\n        <TextField\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          style={{width: \"100%\"}}\n          defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          onBlur = {handleIntChange}\n          name = {contentItem.name}\n          InputProps={{inputComponent: NumberFormatCustom}}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\"){\n      return (\n        <TextField\n          type=\"date\"\n          name={contentItem.name}\n          onBlur={handleChange}\n          style={{width: \"100%\"}}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\" }\n          // defaultValue = {fieldValue[contentItem.name]}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\"){\n      return (\n        <table>\n          <tr>\n            <td style={{width: \"45%\"}}>\n              <TextField\n                key={fieldValue[contentItem.name]}\n                type=\"date\"\n                name={contentItem.name}\n                onChange={handleDateChange}\n                style={{width: \"100%\"}}\n                defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"NaN.NaN.NaN\" }\n                disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </td>\n            <td style={{width: \"45%\"}}>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <Stack>\n                  <TimePicker\n                    // key={fieldValue[contentItem.name]}\n                    ampm={false}\n                    openTo=\"hours\"\n                    views={['hours', 'minutes', 'seconds']}\n                    inputFormat=\"HH:mm:ss\"\n                    mask=\"__:__:__\"\n                    // value={dVal}\n                    value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\" }\n                    onChange={(newValue) => {handleTimeChange(contentItem.name, newValue)}}\n                    renderInput={(params) => <TextField {...params} />}\n                  />\n                </Stack>\n            </LocalizationProvider>\n          </td>\n          </tr>\n        </table>\n          \n        // <LocalizationProvider dateAdapter={AdapterDateFns}>\n        //   <DateTimePicker\n        //     name={contentItem.name}\n        //     renderInput={(props) => <TextField {...props} />}\n        //     value={fieldValue[contentItem.name]}\n        //     onChange={(newValue) => {handleTimeChange(contentItem.name, newValue)}}\n        //     style={{width: \"100%\"}}\n        //     disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n        //   />\n        // </LocalizationProvider>\n      )\n    }\n    else if (contentItem.type === \"Enum\"){\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\" : contentItem.name\n      }\n      if(fieldValue[contentItem.name] !== undefined){\n        for(let i=0; i<enumOptions[contentItem.name].length; i++){\n          if(fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value){\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if(selectedOptions.length !== 0){\n        for(let i=0; i<selectedOptions.length; i++){\n          if(contentItem.name === selectedOptions[i].name){\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name = {contentItem.name}\n          value = {selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled ={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    // else if (contentItem.type === \"MultiSelect\"){\n    //   return (\n    //     // <div style={{height: \"40px\", overflow: \"auto\"}}>\n    //       <Select\n    //         name={contentItem.name}\n    //         className=\"basic-multi-select\"\n    //         classNamePrefix=\"select\"\n    //         value={multiSelectedOptions[contentItem.name]}\n    //         onChange={handleMultiSelectChange}\n    //         closeMenuOnSelect={false}\n    //         isMulti\n    //         options={multiSelectDataOptions[contentItem.name]}\n    //         isDisabled ={(formType === \"view\" || contentItem.edit === false) ? true : false}\n    //         style={{height: \"120px\"}}\n    //       />\n    //     // </div>\n    //   )\n    // }\n    else if(contentItem.type === \"Currency\"){\n      return(\n        <TextField\n          value = {fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\" }\n          onBlur = {handleChange} \n          name = {contentItem.name}\n          style={{minWidth: 300}}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{inputComponent: NumberFormatCustom}}\n        />\n      )\n    }\n    else if(contentItem.type === \"Bool\"){\n      return(\n        <Checkbox\n          style={{maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\"}}\n          name = {contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked = {(fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true) ? true : false}    \n        />\n      )\n    }   \n  }\n  // Main button click handler\n  function buttonClick(buttonName){\n    console.log(\"Button\", buttonName)\n    if(buttonName === \"selectReportType\"){\n      let reportFormDefId = null\n      let reportName = null\n      for(let i=0; i<enumData.length; i++){\n        if(props.userTask.enumData[i] !== null){\n          if(enumData[i].name === \"report_name\"){\n            for(let d=0; d<enumData[i].data.length; d++){\n              if(enumData[i].data[d].id === fieldValue[\"report_name\"]){\n                reportFormDefId = enumData[i].data[d].form_def_id\n                reportName = enumData[i].data[d].report_name\n              }\n            }\n          }\n        }\n        else{\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {value: \"selectReportType\"},\n          reportName: {value: reportName},\n          reportFormDefId: {value: reportFormDefId}\n        }\n      }\n      console.log(\"button selectReportType:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"createReport\"){\n      let checkResult = checkForRequieredFields()\n      if(checkResult === true){\n        let reportVars = getFieldValuesCreateReport()\n        let commandJson = \n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: {value: reportVars},\n            userAction: {value: \"createReport\"}\n          }\n        }\n        console.log(\"button createReport:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createChargeForCDServiceReport\"){\n      let checkResult = checkForRequieredFields()\n      if(checkResult === true){\n        let reportVars = getFieldValuesCreateReport()\n        let chargeBody = {\n          startDate: fieldValue.start_date,\n          endDate: fieldValue.end_date,\n          depositorId: selectedTransferList.dep_id,\n          serviceTypeId: selectedTransferList.service_type_id\n        }\n        let commandJson = \n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: {value: reportVars},\n            userAction: {value: \"createReport\"},\n            chargeBody: {value: JSON.stringify(chargeBody)}\n          }\n        }\n        console.log(\"button createChargeForCDServiceReport:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createCharge\"){\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {value: \"createCharge\"},\n        }\n      }\n      console.log(\"button createCharge:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    \n    \n    else if(buttonName === \"reportToExcel\"){\n      reportToExcel()\n      console.log(\"button reportToExcel: \")\n    }\n    else if(buttonName === \"reportToPDF\"){\n      reportToPDF()\n      console.log(\"button reportToPDF: \")\n    }\n    else if(buttonName === \"reportToPDFES\"){\n      if(props.esInn === null){\n        setShowModalEnterPin(true)\n      }\n      else{\n        reportToPDFES(props.esUserFullName, props.esInn, props.esExpiredDate)\n      }\n    }\n    else if(buttonName === \"SignReportSaveButton\"){\n      sign()\n    }\n    else if(buttonName === \"reportToWord\"){\n      reportToWord()\n      console.log(\"button reportToWord: \")\n    }\n    else if(buttonName === \"cancel\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"cancel\"},\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"back\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"back\"},\n        }\n      }\n      console.log(\"button back: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"finish\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"finish\"},\n        }\n      }\n      console.log(\"button finish: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n  }\n  // Transfer List functions\n  const handleToggle = (value, name) => () => {\n    const currentIndex = checked[name].indexOf(value)\n    const newChecked = [...checked[name]]\n\n    if(currentIndex === -1) {\n      newChecked.push(value)\n    } \n    else{\n      newChecked.splice(currentIndex, 1)\n    }\n    setChecked({...checked, [name]: newChecked})\n  }\n  const handleAllRight = (name) => {\n    setSelectedTransferList({...selectedTransferList, [name]: selectedTransferList[name].concat(transferList[name])})\n    setTransferList({...transferList, [name]: []})\n  }\n  function handleCheckedRight(name){\n    // console.log(\"CHECKED RIGHT\", name)\n    setSelectedTransferList({...selectedTransferList, [name]: selectedTransferList[name].concat(leftChecked(name))})\n    setTransferList({...transferList, [name]: not(transferList[name], leftChecked(name))})\n    setChecked({...checked, [name]: not(checked[name], leftChecked(name))})\n  }\n  function handleCheckedLeft(name){\n    setTransferList({...transferList, [name]: transferList[name].concat(rightChecked(name))})\n    setSelectedTransferList({...selectedTransferList, [name]: not(selectedTransferList[name], rightChecked(name))})\n    setChecked({...checked, [name]: not(checked[name], rightChecked(name))})\n  }\n  const handleAllLeft = (name) => {\n    setTransferList({...transferList, [name]: transferList[name].concat(selectedTransferList[name])})\n    setSelectedTransferList({...selectedTransferList, [name]: []})\n  }\n  function getTransferList(items, name, edit){\n    // console.log(\"G TR L\", items, name)\n    return(\n      <Paper className={classes.paper}>\n        <List dense component=\"div\" role=\"list\">\n          {items.map((value) => {\n            const labelId = `transfer-list-item-${value}-label`;\n            return (\n              <ListItem \n                size=\"small\"\n                key={value}\n                role=\"listitem\"\n                button onClick={handleToggle(value, name)}\n                style={{height: 40}}\n                disabled={edit === false ? true : false}\n              >\n                <Checkbox\n                  size=\"small\"\n                  checked={checked[name].indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                  style={{height: 40}}\n                />\n                {/* <ListItemText id={labelId} primary={value} /> */}\n                <ListItemText id={labelId} primary={getTranserListItemLabel(name, value)} />\n              </ListItem>\n            )\n          })}\n          <ListItem />\n        </List>\n      </Paper>\n    )\n  }  \n  function getTranserListItemLabel(name, value){\n    // console.log(\"G TRL LABEL\", name, value)\n    for(let e=0; e<enumData.length; e++){\n      if(enumData[e].name === name){\n        for(let d=0; d<enumData[e].data.length; d++){\n          if(enumData[e].data[d].id === value){\n            return enumData[e].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function handleSearchTransferListChange(event){\n    let name = event.target.name\n    let value = event.target.value\n    setAutofocusFieldTrList(name)\n    setTransferListSearchFileds({...transferListSearchFileds, [name]: value})\n    let filteredTrListOpts = []\n    for(let e=0; e<enumData.length; e++){\n      if(enumData[e].name === name){\n        for(let d=0; d<enumData[e].data.length; d++){\n          let label = enumData[e].data[d].label.toLowerCase()\n          let searchField = value.toLowerCase()\n          let includeSearch = label.includes(searchField)\n          if(includeSearch === true){\n            filteredTrListOpts.push(enumData[e].data[d].id)\n          }\n        }\n      }\n    }\n    // console.log(\"N TR L\", newTrListOpts)\n    let newTrListOpts = []\n    if(selectedTransferList[name].length > 0){\n      for(let i=0; i<filteredTrListOpts.length; i++){\n        let include = true\n        for(let s=0; s<selectedTransferList[name].length; s++){\n          if(filteredTrListOpts[i] === selectedTransferList[name][s]){\n            include = false\n            break\n          }\n        }\n        if(include === true){\n          newTrListOpts.push(filteredTrListOpts[i])\n        }\n      }\n    }\n    else{\n      newTrListOpts = filteredTrListOpts\n    }\n    setTransferList({...transferList, [name]: newTrListOpts})\n  }\n  function handleSearchSelectedTransferListChange(event){\n    let name = event.target.name\n    let value = event.target.value\n    setAutofocusFieldSelTrList(name)\n    setSelectedTransferListSearchFileds({...selectedTransferListSearchFileds, [name]: value})\n    let filteredTrListOpts = []\n    for(let e=0; e<enumData.length; e++){\n      if(enumData[e].name === name){\n        for(let d=0; d<enumData[e].data.length; d++){\n          let label = enumData[e].data[d].label.toLowerCase()\n          let searchField = value.toLowerCase()\n          let includeSearch = label.includes(searchField)\n          if(includeSearch === true){\n            filteredTrListOpts.push(enumData[e].data[d].id)\n          }\n        }\n      }\n    }\n    let newSelTrListOpts = []\n    if(transferList[name].length > 0){\n      for(let i=0; i<filteredTrListOpts.length; i++){\n        let include = true\n        for(let s=0; s<transferList[name].length; s++){\n          if(filteredTrListOpts[i] === transferList[name][s]){\n            include = false\n            break\n          }\n        }\n        if(include === true){\n          newSelTrListOpts.push(filteredTrListOpts[i])\n        }\n      }\n    }\n    else{\n      newSelTrListOpts = filteredTrListOpts\n    }\n    setSelectedTransferList({...selectedTransferList, [name]: newSelTrListOpts})\n  }\n  function getFieldValuesCreateReport(){\n    let reportVars = {}\n    let strReportVars = \"\"\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        let fieldName = Form.sections[s].contents[c].name\n        let type = Form.sections[s].contents[c].type\n        if(type === \"DateTime\"){\n          // reportVars[fieldName] = props.parseDate(fieldValue[fieldName])\n          reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\")\n        }\n        // else if(type === \"MultiSelect\"){\n        //   if(Object.keys(multiSelectedOptions).length > 0){\n        //     let strVals = \"\"\n        //     for(let i=0; i<multiSelectedOptions[fieldName].length; i++){\n        //       let value = multiSelectedOptions[fieldName][i].value\n        //       if(value !== \"all\"){\n        //         if(i === multiSelectedOptions[fieldName].length-1){\n        //           strVals += value\n        //         }\n        //         else{\n        //           strVals += value + \",\"\n        //         }\n        //       }\n        //     }\n        //     reportVars[fieldName] = strVals\n        //     console.log(\"MULTI\", strVals)\n        //   }\n        // }\n        else if(type === \"TransferList\"){\n          // console.log(\"TTTTTT\", selectedTransferList[fieldName])\n          let strVals = \"\"\n          if(selectedTransferList[fieldName].length > 0){\n            for(let i=0; i<selectedTransferList[fieldName].length; i++){\n              let value = selectedTransferList[fieldName][i]\n              if(i === selectedTransferList[fieldName].length-1){\n                strVals += value\n              }\n              else{\n                strVals += value + \",\"\n              }\n            }\n          }\n          reportVars[fieldName] = strVals\n          // console.log(\"TR LIST\", strVals)\n        }\n        else if(type === \"FullDateTime\"){\n          // let val = new Date(fieldValue[fieldName])\n          // // let fullDate = props.parseDate(val)\n          // let newDate = new Date(fieldValue[fieldName]) // \"2020-01-26\"\n          // let dd = String(newDate.getDate()).padStart(2, '0')\n          // let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n          // let yyyy = newDate.getFullYear()\n          // var hours = val.getHours() < 10 ? \"0\" + val.getHours() : val.getHours()\n          // var minutes = val.getMinutes() < 10 ? \"0\" + val.getMinutes() : val.getMinutes()\n          // var seconds = val.getSeconds() < 10 ? \"0\" + val.getSeconds() : val.getSeconds()\n          // var convertedDate = dd + \".\" + mm + \".\" + yyyy + \"T\" + hours + \":\" + minutes + \":\" + seconds\n          let convertedDate = moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\")\n          reportVars[fieldName] = convertedDate\n        }\n        else{\n          reportVars[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    if(Object.keys(reportVars).length > 0){\n      strReportVars = \"?\"\n      for(let key in reportVars){\n        let newVar = key + \"=\" + reportVars[key] + \"&\"\n        strReportVars = strReportVars + newVar\n      }\n      strReportVars = strReportVars.substring(0, strReportVars.length-1)\n    }\n    return strReportVars\n  }\n  function checkForRequieredFields(){\n    // console.log(\"MOPTS\", multiSelectedOptions)\n    let checkedSuccessfuly = null\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        let fieldName = Form.sections[s].contents[c].name\n        if(Form.sections[s].contents[c].required === true){\n          // if(Form.sections[s].contents[c].type === \"MultiSelect\"){\n          //   if(multiSelectedOptions[fieldName] === undefined || multiSelectedOptions[fieldName] === null ||\n          //     multiSelectedOptions[fieldName].length === 0){\n          //     checkedSuccessfuly = false\n          //     swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n          //     return checkedSuccessfuly\n          //   }\n          //   else{\n          //     checkedSuccessfuly = true\n          //   }\n          // }\n          if(Form.sections[s].contents[c].type === \"TransferList\"){\n            if(selectedTransferList[fieldName] === undefined || selectedTransferList[fieldName] === null ||\n              selectedTransferList[fieldName].length === 0){\n              checkedSuccessfuly = false\n              swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n              return checkedSuccessfuly\n            }\n            else{\n              checkedSuccessfuly = true\n            }\n          }\n          else{\n            if(fieldValue[fieldName] === undefined || fieldValue[fieldName] === null ||\n              fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\"){\n              checkedSuccessfuly = false\n              swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n              return checkedSuccessfuly\n            }\n            else{\n              checkedSuccessfuly = true\n            }\n          } \n        }\n        else{\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  \n  async function repserverlogin(){\n    await fetch(\n      `/jasperserver/rest_v2/login?j_username=jasperadmin&j_password=jasperadmin`,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n    .then(response => {\n      // response.text().then(string => {\n        console.log(\"JASPERT AUTH\", response)\n      // })\n    })\n    .catch(error => console.error(error));\n  }\n  async function reportToExcel(){\n    await repserverlogin()\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName +  \".xlsx\" + reportVars\n    await fetch(\n      url,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n    .then(response => response.blob())\n    .then(blob => {\n      // console.log(\"RESP\", blob)\n      var url = window.URL.createObjectURL(blob)\n      var a = document.createElement('a')\n      a.href = url\n      a.download = `${reportName}.xlsx`\n      document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click()\n      a.remove()  //afterwards we remove the element again         \n    })\n    .catch(error => console.error(error));\n  }\n  async function reportToPDF(){\n    await repserverlogin()\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName +  \".pdf\" + reportVars\n    await fetch(\n      url,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n    .then(response => response.blob())\n    .then(blob => {\n      console.log(\"RESP\", blob)\n      var url = window.URL.createObjectURL(blob)\n      var a = document.createElement('a')\n      a.href = url\n      a.download = `${reportName}.pdf`\n      document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click()\n      a.remove()  //afterwards we remove the element again         \n    })\n    .catch(error => console.error(error));\n  }\n  async function reportToPDFES(fullName, inn, expiredDate){\n    await repserverlogin()\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName +  \".pdf\" + reportVars\n    await fetch(\n      url,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n    .then(response => response.blob())\n    .then(blob => {\n      console.log(\"REPORT\", blob);\n      blob.name = reportName + \".pdf\"\n      let formData = new FormData()\n      formData.append(\"formFile\", blob, reportName + \".pdf\")\n\n      for (var value of formData.values()) {\n        console.log(\"FVAL\", value)\n      }\n      let url = \"/api/Template/AddWatermark?text=ФИО: \" +  fullName + \" ПИН: \" + inn + \" \" + expiredDate\n      var requestOptions = {\n        method: 'POST',\n        body: formData,\n        redirect: 'follow'\n      }\n      \n      fetch(url, requestOptions)\n        .then(response => response.blob())\n        .then(bl => {\n          console.log(\"RES\", bl)\n          var pdf = new Blob([bl], { type: \"application/pdf\" })\n          var docUrl = window.URL.createObjectURL(pdf)\n          var a = document.createElement('a')\n          a.href = docUrl\n          a.download = `${reportName}.pdf`\n          document.body.appendChild(a)\n          a.click()\n          a.remove()\n        })\n        .catch(error => console.log('error', error))\n    })\n    .catch(error => console.error(error));\n  }\n  async function reportToWord(){\n    await repserverlogin()\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName +  \".docx\" + reportVars\n    await fetch(\n      url,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n    .then(response => response.blob())\n    .then(blob => {\n      var url = window.URL.createObjectURL(blob)\n      var a = document.createElement('a')\n      a.href = url\n      a.download = `${reportName}.docx`\n      document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click()\n      a.remove()  //afterwards we remove the element again         \n    })\n    .catch(error => console.error(error))\n  }\n  try{\n    return(\n      <Grid>\n        <a name=\"top\"/>\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n          <Grid item xs={11}>\n            <Paper> \n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <TableHead>\n                  <TableRow style={{maxHeight: 25}}>\n                    <TableCell style={{fontSize: 16, color: \"black\"}}>{Form.label}</TableCell>\n                  </TableRow>\n                </TableHead>\n              </Grid>\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {Form.sections.map((section, index) => {\n                  return sectionBuilder(section, index)\n                })}\n              </Grid>\n              <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                {buttons.map((button, index) => (\n                  <Button\n                    variant=\"outlined\"\n                    name={button.name}\n                    onClick={()=> buttonClick(button.name)}\n                    style={{\n                      margin: 3, \n                      backgroundColor: button.backgroundColor,\n                      height: 32, \n                      fontSize: 12,\n                      color: button.fontColor\n                    }}\n                    value={button.name}\n                    >\n                      {button.label}\n                  </Button> \n                ))}\n              </Grid> \n            </Paper>\n            <br></br>\n            {/* {selectedDoc !== null &&\n              <div>{getReport()}</div>\n            } */}\n            {selectedDoc !== null &&\n              <Markup id=\"reportContainer\" content={selectedDoc}/>\n            }\n          </Grid>\n        </Grid>\n        <Modal\n            open={showModalEnterPin}\n            onClose={handleCloseModalEnterPin}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <div style={modalStyle} className={classes.modal}>\n              <h3 id=\"simple-modal-title\">Ведите ПИН код Рутокена</h3>\n              <FormControl variant=\"outlined\" style={{width: \"100%\"}} error={wrongPin}>\n                <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n                <OutlinedInput\n                  type={showPin ? 'text' : 'password'}\n                  defaultValue={rutokenPin}\n                  onChange={handlePinChange}\n                  onKeyPress={onKeyPressModalEnterPin}\n                  autoFocus\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPin}\n                        edge=\"end\"\n                      >\n                        {showPin ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  labelWidth={25}\n                />\n              </FormControl>\n              {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n              <Button\n                variant=\"contained\"                      \n                onClick = {() => buttonClick(\"SignReportSaveButton\")}\n                style={{\n                  margin: 3,\n                  height: 32,\n                  fontSize: 12,\n                  color: \"white\",\n                  backgroundColor: \"#2862F4\"\n                }}\n              >Ок\n              </Button>\n              <Button\n                  variant=\"contained\"                         \n                  onClick = {handleCloseModalEnterPin}\n                  style={{\n                    margin: 3,\n                    height: 32,\n                    fontSize: 12,\n                    color: \"white\",\n                    backgroundColor: \"#E73639\"\n                  }}\n                >Отмена\n              </Button>\n            </div>\n        </Modal>\n      </Grid>  \n    )\n  }\n  catch(error){\n    console.log(\"ERROR\", error)\n    return <div>error</div>\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}