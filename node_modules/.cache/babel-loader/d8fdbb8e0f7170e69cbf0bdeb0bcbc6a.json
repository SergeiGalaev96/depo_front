{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\Instructions\\\\Instructions.jsx\";\n// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select'; // import MaskedInput from 'react-text-mask';\n\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Menu from '@mui/material/Menu'; // import Input from '@material-ui/core/Input';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridSelect from '@material-ui/core/Select'; // PIN components\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'; // Icons\n\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // Accordion\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Import libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport hotkeys from 'hotkeys-js';\nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nvar moment = require('moment');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [process_id] = useState(props.userTask.process_id);\n  const [session_id] = useState(props.userTask.session_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [taskType] = useState(props.userTask.taskType);\n  const [enumData] = useState(props.userTask.enumData);\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [fieldValue, setFieldValue] = useState({}); // opened: false\n\n  const [docId] = useState(props.userTask.docId);\n  const [buttons] = useState(props.userTask.buttons);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const [showModalCancelInstruction, setShowModalCancelInstruction] = useState(false);\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false);\n  const [updateState, setUpdateState] = useState(null);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [accordionExpanded, setAccordionExpanded] = useState(false);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  const [gridTableId] = useState(getUUID());\n  const [gridFieldValue, setGridFieldValue] = useState({}); // Initializing\n\n  useEffect(() => {\n    console.log(\"INSTR PROPS\", props);\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        setFilteredDocList(parsedData);\n\n        if (taskType !== \"showInstructionsTypeSelectingForm\") {\n          setIsSearchForm(true);\n        }\n\n        setInitialDocList(parsedData);\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"));\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc));\n        } else {\n          fetchBySize(0, s - 1, sortedDocList);\n        }\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    } else {\n      setIsSearchForm(false);\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      let fields = {};\n\n      if (taskType === \"showInstructionsCreationForm\") {\n        let ed = props.userTask.enumData;\n\n        if (userProfile.userRole === \"3\") {\n          // Depositor\n          let newForm = Form;\n\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              if (Form.sections[s].contents[c].name === \"depositor2\" || Form.sections[s].contents[c].name === \"depositor\") {\n                // console.log(\"FFF\", Form.sections[s].contents[c])\n                if (Form.sections[s].contents[c].show === true) {\n                  newForm.sections[s].contents[c].edit = false;\n                  setForm(newForm);\n\n                  for (let i = 0; i < ed.length; i++) {\n                    if (ed[i].name === \"depositor2\" || ed[i].name === \"depositor\") {\n                      for (let d = 0; d < ed[i].data.length; d++) {\n                        if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                          let depositorId = ed[i].data[d].id; // console.log(\"depositor2Id\", depositorId)\n\n                          fields[\"depositor2\"] = depositorId; // Block field depositor2(accountTo) don't allow him to choose another depositor \n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                let fieldName = Form.sections[s].contents[c].name;\n                fields[fieldName] = parsedSelectedDoc[fieldName];\n              }\n            }\n          }\n        } else {\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              let fieldName = Form.sections[s].contents[c].name;\n              fields[fieldName] = parsedSelectedDoc[fieldName];\n            }\n          }\n        }\n      } else {\n        if (Object.keys(parsedSelectedDoc).length > 0) {\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              let fieldName = Form.sections[s].contents[c].name;\n              fields[fieldName] = parsedSelectedDoc[fieldName];\n            }\n          }\n        }\n      }\n\n      console.log(\"SDOC\", parsedSelectedDoc);\n      console.log(\"INITIAL FIELDVALUES\", fields);\n      setSelectedDoc(parsedSelectedDoc);\n      setFieldValue(fields);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let eData = props.userTask.enumData;\n      let newEnumOptions = {};\n\n      for (let i = 0; i < eData.length; i++) {\n        if (eData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": eData[i].name\n          }];\n\n          if (eData[i].name === \"type\") {\n            if (props.userTask.taskType === \"showInstructionsTypeSelectingForm\") {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                if (props.userProfile[getInstructionTypeName(eData[i].data[d].id)] === true) {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  });\n                }\n              }\n            } else {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                options.push({\n                  \"value\": eData[i].data[d].id,\n                  \"label\": eData[i].data[d].label,\n                  \"name\": eData[i].name\n                });\n              }\n            }\n          } else if (eData[i].name === \"accFrom\" || eData[i].name === \"accTo\") {\n            // Filter allowed account types for selected instruction\n            if (props.userTask.taskType === \"showInstructionsCreationForm\" || props.userTask.taskType === \"showInstructionsViewForm\") {\n              let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n              let instructionTypeId = parsedSelectedDoc.type;\n              let filteredRelations = []; // allowed account types\n\n              for (let i = 0; i < eData.length; i++) {\n                if (eData[i].name === \"instructionAccountRelations\") {\n                  // Find tabels that indicate allowed account types\n                  for (let d = 0; d < eData[i].data.length; d++) {\n                    if (eData[i].data[d].id === instructionTypeId) {\n                      filteredRelations.push(eData[i].data[d]);\n                    }\n                  }\n                }\n              } // console.log(\"filteredRelations\", filteredRelations)\n\n\n              for (let d = 0; d < eData[i].data.length; d++) {\n                if (filteredRelations.length > 0) {\n                  // Has relations to filter accounts\n                  let checkResult = checkForPushing(eData[i].data[d].label, instructionTypeId);\n\n                  if (checkResult.enableToPush === true) {\n                    // console.log(\"PUSH ? \", eData[i].data[d].label, checkResult)\n                    options.push({\n                      \"value\": eData[i].data[d].id,\n                      \"label\": eData[i].data[d].label,\n                      \"name\": eData[i].name\n                    });\n                  }\n                } else {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  });\n                }\n              }\n            }\n          } else {\n            for (let d = 0; d < eData[i].data.length; d++) {\n              options.push({\n                \"value\": eData[i].data[d].id,\n                \"label\": eData[i].data[d].label,\n                \"name\": eData[i].name\n              });\n            }\n          }\n\n          newEnumOptions[eData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      } // console.log(\"EN OPTS\", newEnumOptions)\n\n\n      setEnumOptions(newEnumOptions);\n    }\n\n    if (gridForm !== null) {\n      let newFields = {};\n\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show;\n        }\n      }\n\n      setGridFieldValue(newFields);\n    } // setUpdateState(getUUID())\n\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded);\n    }\n  }); // CancelInstruction MODAL\n\n  const handleOpenModalCancelInstruction = () => {\n    setShowModalCancelInstruction(true);\n  };\n\n  const handleCloseModalCancelInstruction = () => {\n    setShowModalCancelInstruction(false);\n  };\n\n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true);\n  };\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded);\n  }\n\n  function getInstructionTypeName(id) {\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionTypesNames\") {\n        for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n          if (props.userTask.enumData[i].data[d].id === id) {\n            return props.userTask.enumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  } // filter accounts that can be selected by instruction type\n\n\n  function checkForPushing(label, instructionTypeId) {\n    let checkResult = {\n      enableToPush: false // allowedAccountCode: null\n\n    };\n\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionAccountRelations\") {\n        // 1) Push accounts related to Instruction type\n        let data = props.userTask.enumData[i].data;\n\n        for (let d = 0; d < data.length; d++) {\n          if (data[d].id === instructionTypeId) {\n            // find allowed account types\n            let splitedAccountName = data[d].label.split(\"-\");\n            let allowedAccountCode = splitedAccountName[1];\n            let splitedAccountLabel = label.split(\"-\");\n            let accCode = splitedAccountLabel[1];\n            let accPartner = splitedAccountLabel[2];\n            console.log(allowedAccountCode, accCode);\n\n            if (accCode === allowedAccountCode) {\n              // if (userProfile.userRole === \"2\" || userProfile.userRole === \"3\" || userProfile.userRole === \"4\" || userProfile.userRole === \"8\") {\n              // Operator, Broker, Registrar, CorrDepo\n              if (userProfile.userRole === \"1\" || userProfile.userRole === \"5\" || userProfile.userRole === \"7\") {\n                // Admin, Accountant, CD\n                console.log(\"ALOLOWED\", accCode);\n                checkResult[\"enableToPush\"] = true; // checkResult[\"allowedAccountCode\"] = allowedAccountCode\n\n                break;\n              } else {\n                // Other users\n                if (accPartner === userProfile.partner) {\n                  checkResult[\"enableToPush\"] = true; // checkResult[\"allowedAccountCode\"] = allowedAccountCode\n\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return checkResult;\n  } // RuToken functions\n\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  }\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\")\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  }); // catch errors while signing docs\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  } // Sign transfer order with rutoken\n\n\n  function sign(commandJson) {\n    try {\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices().then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0]);\n          } else {\n            alert(\"Рутокен не обнаружен\");\n          }\n        }) // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice;\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n        }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve();\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin);\n          }\n        }) // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n        }).then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0];\n            return plugin.parseCertificate(rutokenHandle, certs[0]);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs; // console.log(\"RUTDATA\", certData)\n\n          if (certHandle.length > 0) {\n            var options = {};\n            let inn = \"\";\n            let fullName = \"\";\n\n            for (let i = 0; i < certData.subject.length; i++) {\n              if (certData.subject[i].rdn === \"serialNumber\") {\n                inn = certData.subject[i].value;\n              }\n\n              if (certData.subject[i].rdn === \"commonName\") {\n                fullName = certData.subject[i].value;\n              }\n            }\n\n            props.setEsInn(inn);\n            props.setEsUserFullName(fullName);\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n            let instructionToSign = commandJson.variables.document.value;\n\n            if (selectedDoc.filled === undefined || selectedDoc.filled === null || selectedDoc.filled === false) {\n              // Depositor\n              instructionToSign[\"filled\"] = true;\n              instructionToSign[\"filled_at\"] = props.getCurrentFullDateTime();\n              instructionToSign[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n              instructionToSign[\"signed_depositor_inn\"] = inn;\n              instructionToSign[\"signed_depositor_full_name\"] = fullName;\n              instructionToSign[\"signed_at_depositor\"] = props.getCurrentFullDateTime();\n              commandJson.variables.status.value = \"filled\";\n            } else {\n              // Depository\n              instructionToSign[\"onExecution\"] = true;\n              instructionToSign[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n              instructionToSign[\"signed_cd_inn\"] = inn;\n              instructionToSign[\"signed_cd_full_name\"] = fullName;\n              instructionToSign[\"signed_at_cd\"] = props.getCurrentFullDateTime();\n              commandJson.variables.status.value = \"onExecution\";\n            }\n\n            commandJson.variables.document.value = JSON.stringify(instructionToSign);\n            console.log(\"SIGN\", instructionToSign, commandJson.variables.document);\n            handleCloseModalEnterPin(); // swAllert(\"Поручение успешно подписано!\", \"success\")\n\n            props.sendFieldValues(commandJson);\n            props.clearTabData(commandJson.process_id);\n            return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle);\n        }, handleError);\n      } else {\n        props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n      }\n    } catch (er) {\n      console.log(\"Rutoken ERR\");\n    }\n  } // Input handlers\n\n\n  const handleCheckboxChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    }); // console.log(\"Check change\", event.target.checked)\n  }; // Radio group handler\n\n\n  const handleRadioGroupChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue); // console.log(\"FIELDVALUE\", fieldValue)\n  } // Float input handler\n\n\n  const handleFloatChange = event => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  }; // Integer input handler\n\n\n  const handleIntChange = event => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    });\n  }; // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n\n\n  function handleDateTimeChange(event) {\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    // setFieldValue(fieldValue)\n    fieldValue[event.target.name] = moment(event.target.value).format(\"YYYY-MM-DDTHH:mm:ss\");\n    setFieldValue(fieldValue);\n    console.log(\"DATE CHANGE\", fieldValue[event.target.name], event.target.value);\n  } // Handler of select copmponet changes\n\n\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value;\n    console.log(\"OPT\", option.name, option.value);\n    var updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        noSuchOption = false;\n        setSelectedOptions(updateSelectedOptions);\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    if (option.name === \"depositor\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // Первый депонент выбран нужно отфильтровать поле \"Со счета\" и отобразить счета только выбранного депонента\n      let newOptions = [];\n      let depositorPartner = getDepositorPartner(option.value); // find depositor partner id\n\n      console.log(\"PARTNER\", depositorPartner);\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"accFrom\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"]); // console.log(\"PUSH\", enumData[i].data[d].label)\n\n            if (checkResult.enableToPush === true) {\n              if (enumData[i].data[d].partner === depositorPartner) {\n                // compare depositor partner and account partner\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\": enumData[i].name\n                });\n              }\n            }\n          }\n        }\n      }\n\n      console.log(\"NEW ENUMS\", newOptions);\n      enumOptions[\"accFrom\"] = newOptions;\n      setEnumOptions(enumOptions);\n    } else if (option.name === \"depositor2\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // Второй депонент выбран нужно отфильтровать поле \"На счет\" и отобразить счета только выбранного депонента\n      let newOptions = [];\n      let depositorPartner = getDepositorPartner(option.value); // find depositor partner id\n      // console.log(\"PARTNER\", depositorPartner)\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"accTo\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].partner === depositorPartner) {\n              // compare depositor partner and account partner\n              let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"]); // console.log(\"PUSH\", enumData[i].data[d].label)\n\n              if (checkResult.enableToPush === true) {\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\": enumData[i].name\n                });\n              }\n            }\n          }\n        }\n      } // console.log(\"NEW ENUMS\", newOptions)\n\n\n      enumOptions[\"accTo\"] = newOptions;\n      setEnumOptions(enumOptions);\n    } else if (option.name === \"security\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // выбрана ценная бумага нужно найти эмитента и отобразить\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"security\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].id === option.value) {\n              let issuerId = enumData[i].data[d].issuer;\n              fieldValue[\"issuer\"] = issuerId;\n\n              for (let j = 0; j < enumData.length; j++) {\n                if (enumData[j].name === \"issuer\") {\n                  // console.log(\"issuerID\", issuerId)\n                  for (let h = 0; h < enumData[j].data.length; h++) {\n                    if (enumData[j].data[h].id === issuerId) {\n                      let issuerOption = {\n                        value: issuerId,\n                        name: \"issuer\",\n                        label: enumData[j].data[h].label\n                      };\n                      console.log(\"issuerOption\", issuerOption);\n                      let noIssuerOption = true;\n\n                      for (let y = 0; y < updateSelectedOptions.length; y++) {\n                        if (updateSelectedOptions[y].name === \"issuer\") {\n                          updateSelectedOptions[y] = issuerOption;\n                          noIssuerOption = false;\n                          setSelectedOptions(updateSelectedOptions);\n                          break;\n                        } else {\n                          noIssuerOption = true;\n                        }\n                      }\n\n                      if (noIssuerOption === true) {\n                        updateSelectedOptions.push(issuerOption);\n                        setSelectedOptions(updateSelectedOptions); // console.log(\"NO Issuer\", updateSelectedOptions)\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      } // console.log(\"NEW ENUMS\", newOptions)\n      // enumOptions[\"issuer\"] = newOptions\n      // setEnumOptions(enumOptions)\n\n    }\n\n    setFieldValue(fieldValue);\n  }\n\n  function getDepositorPartner(depId) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"depositor\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === depId) {\n            return enumData[i].data[d].partner;\n          }\n        }\n      }\n    }\n  } // Returns random id\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Collecting all field values and return as attributes\n\n\n  function getFieldValuesCreateDocument() {\n    let fields = {};\n\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\") {\n        fields[key] = fieldValue[key];\n      }\n    }\n\n    return fields;\n  }\n\n  function getFieldValuesSaveInstruction() {\n    let fields = {\n      filled: false,\n      onExecution: false,\n      executed: false,\n      canceled: false,\n      opened: false,\n      // \"filledUser\" : userProfile.firstName + \" \" + userProfile.lastName,\n      signed: false\n    };\n\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\") {\n        fields[key] = fieldValue[key];\n      }\n    }\n\n    return fields;\n  } // Collect data to update doc\n\n\n  function getFieldValuesUpdateInstruction() {\n    let docToUpdate = selectedDoc; // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false;\n        } else {\n          docToUpdate[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToUpdate;\n  }\n\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false;\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n            return checkedSuccessfuly;\n          } else {\n            checkedSuccessfuly = true;\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Main button click handler\n\n\n  function buttonClick(buttonName, dataItem) {\n    // console.log(\"Button\", buttonName)\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true);\n      } else {\n        filterDocList(0, size - 1, initialDocList, fieldValue);\n      }\n    } else if (buttonName === \"createDocument\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        const createDocument = getFieldValuesCreateDocument();\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"createDocument\"\n            },\n            selectedDoc: {\n              value: JSON.stringify(createDocument)\n            },\n            searchDoc: {\n              value: JSON.stringify(fieldValue)\n            },\n            userId: {\n              value: userProfile.userId\n            },\n            userRole: {\n              value: userProfile.userRole\n            }\n          }\n        };\n        console.log(\"button createDocument: \", commandJson);\n        let checkResult = checkForRequieredFields();\n\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } // else if(buttonName === \"selectSample\"){\n    //   if(props.operDayIsOpened === false){\n    //     swal({\n    //       text: \"Операционный день закрыт вы не можете создавать поручения!\",\n    //       icon: \"warning\",\n    //       buttons: {ok: \"Ок\"}\n    //     })\n    //   }\n    //   else{\n    //     const commandJson = \n    //     {\n    //       commandType: \"completeTask\",\n    //       session_id: session_id,\n    //       process_id: process_id,\n    //       taskID: taskID,\n    //       variables: {\n    //         userAction: {value: \"selectSample\"},\n    //         searchDoc: {value: JSON.stringify(fieldValue)}\n    //       }\n    //     }\n    //     console.log(\"button selectSample: \", commandJson)\n    //     props.sendFieldValues(commandJson)\n    //     props.clearTabData(process_id)\n    //   }\n    // }\n    else if (buttonName === \"selectInstruction\") {\n      let createFormDefId = null;\n      let report = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              createFormDefId = enumData[k].data[d].create_form;\n              report = enumData[k].data[d].reportName;\n            }\n          }\n        }\n      }\n\n      let copyFields = dataItem;\n      dataItem.filled = null;\n      dataItem.filledUser = null;\n      dataItem.filled_at = null;\n      dataItem.onExecution = null;\n      dataItem.onExecutionUser = null;\n      dataItem.executed = null;\n      dataItem.executedUser = null;\n      dataItem.onExecutionDate = null;\n      dataItem.executed_at = null;\n      dataItem.signed = null;\n      dataItem.signed_at = null;\n      dataItem.signed_at_cd = null;\n      dataItem.signed_at_depositor = null;\n      dataItem.signed_user_full_name = null;\n      dataItem.signed_depositor_inn = null;\n      dataItem.signed_depositor_full_name = null;\n      dataItem.signed_cd_inn = null;\n      dataItem.signed_cd_full_name = null;\n      dataItem.canceled = null;\n      dataItem.canceledUser = null;\n      dataItem.canceledDate = null;\n      dataItem.filled = null;\n      dataItem.filled = null;\n      dataItem.filled = null; // for(let s=0; s<Form.sections.length; s++){\n      //   for(let c=0; c<Form.sections[s].contents.length; c++){\n      //     let fieldName = Form.sections[s].contents[c].name\n      //     if(Form.sections[s].contents[c].show === true){\n      //       copyFields[fieldName] = dataItem[fieldName]\n      //     }\n      //   }\n      // }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"createInstruction\"\n          },\n          selectedDoc: {\n            value: JSON.stringify(copyFields)\n          },\n          instructionType: {\n            value: fieldValue[\"type\"]\n          },\n          createFormDefId: {\n            value: createFormDefId\n          },\n          reportName: {\n            value: report\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button selectInstruction: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"editDocument\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"editDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          }\n        }\n      };\n      console.log(\"button editDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocument\") {\n      const updateDocument = getFieldValuesUpdateInstruction();\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateDocument)\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          }\n        }\n      };\n      console.log(\"button updateDocument: \", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        let createFormDefId = null;\n        let report = null;\n\n        for (let k = 0; k < enumData.length; k++) {\n          if (enumData[k].name === \"type\") {\n            for (let d = 0; d < enumData[k].data.length; d++) {\n              if (fieldValue[\"type\"] === enumData[k].data[d].id) {\n                createFormDefId = enumData[k].data[d].create_form;\n                report = enumData[k].data[d].reportName;\n              }\n            }\n          }\n        }\n\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"createInstruction\"\n            },\n            userId: {\n              value: userProfile.userId\n            },\n            userRole: {\n              value: userProfile.userRole\n            },\n            selectedDoc: {\n              value: JSON.stringify({\n                type: fieldValue[\"type\"]\n              })\n            },\n            instructionType: {\n              value: fieldValue[\"type\"]\n            },\n            createFormDefId: {\n              value: createFormDefId\n            },\n            reportName: {\n              value: report\n            }\n          }\n        };\n        console.log(\"button createInstruction: \", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"saveInstruction\") {\n      const createDocument = getFieldValuesSaveInstruction();\n      let notBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getNotificationsCount\"\n          }\n        }\n      };\n      let showTreansferOrder = true;\n      let transferOrder = {\n        instruction_id: \"null\",\n        registered_person: fieldValue[\"ownerName\"],\n        address: fieldValue[\"ownerAddress\"],\n        security: fieldValue[\"security\"],\n        issuer: fieldValue[\"issuer\"],\n        quantity_int: fieldValue[\"quantity\"],\n        basis: fieldValue[\"basis\"]\n      };\n\n      for (let t = 0; t < enumData.length; t++) {\n        // if (enumData[t].name === \"issuer\") {\n        //   for (let dt = 0; dt < enumData[t].data.length; dt++) {\n        //     if (fieldValue[\"issuer\"] === enumData[t].data[dt].id) {\n        //       transferOrder[\"registrar\"] = enumData[t].data[dt].registrar\n        //     }\n        //   }\n        // }\n        if (enumData[t].name === \"security\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"security\"] === enumData[t].data[dt].id) {\n              transferOrder[\"security_type\"] = enumData[t].data[dt].security_type;\n              transferOrder[\"registrar\"] = enumData[t].data[dt].registrar;\n            }\n          }\n        }\n\n        if (enumData[t].name === \"type\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"type\"] === enumData[t].data[dt].id) {\n              showTreansferOrder = enumData[t].data[dt].transfer_order;\n            }\n          }\n        }\n      }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"saveInstruction\"\n          },\n          saveBody: {\n            value: JSON.stringify(createDocument)\n          },\n          selectedDoc: {\n            value: JSON.stringify(createDocument)\n          },\n          notificationsBody: {\n            value: JSON.stringify(notBody)\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          // reportName: {value: reportName},\n          showTreansferOrder: {\n            value: showTreansferOrder\n          },\n          transferOrder: {\n            value: JSON.stringify(transferOrder)\n          }\n        }\n      };\n\n      if (fieldValue[\"urgent\"] === true) {\n        swal({\n          text: \"ВНИМАНИЕ поручения со статусом \\\"СРОЧНОЕ\\\" будет тарифицироваться в соответствии с тарифами ЦД на срочные поручения, хотите продолжить?\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\",\n            cancel: \"Отмена\"\n          } // dangerMode: true,\n\n        }).then(click => {\n          if (click === \"ok\") {\n            let checkResult = checkForRequieredFields();\n\n            if (checkResult === true) {\n              props.sendFieldValues(commandJson);\n              props.clearTabData(process_id);\n            }\n          }\n        });\n      } else {\n        let checkResult = checkForRequieredFields();\n        console.log(\"PASSED\", checkResult);\n\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n\n      console.log(\"button saveInstruction: \", commandJson);\n    } else if (buttonName === \"viewInstruction\") {\n      let currentStatus = \"saved\";\n      let notBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getNotificationsCount\"\n          }\n        }\n      };\n\n      if (dataItem.filled === true) {\n        currentStatus = \"filled\";\n\n        if (dataItem.onExecution === true) {\n          currentStatus = \"onExecution\";\n\n          if (dataItem.executed === true) {\n            currentStatus = \"executed\";\n          } else {\n            if (dataItem.canceled === true) {\n              currentStatus = \"canceled\";\n            }\n          }\n        } else {\n          if (dataItem.canceled === true) {\n            currentStatus = \"canceled\";\n          }\n        }\n      }\n\n      let editFormDefId = null;\n      let report = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              editFormDefId = enumData[k].data[d].edit_form;\n              report = enumData[k].data[d].reportName;\n            }\n          }\n        }\n      }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          notificationsBody: {\n            value: JSON.stringify(notBody)\n          },\n          userAction: {\n            value: \"viewInstruction\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          docId: {\n            value: dataItem.id\n          },\n          instructionType: {\n            value: dataItem.type\n          },\n          status: {\n            value: currentStatus\n          },\n          editFormDefId: {\n            value: editFormDefId\n          },\n          reportName: {\n            value: report\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button viewInstruction: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"sendToCD\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin();\n        } else {\n          let updateDocument = getFieldValuesUpdateInstruction();\n          updateDocument[\"filled\"] = true;\n          updateDocument[\"filled_at\"] = props.getCurrentFullDateTime();\n          updateDocument[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n          updateDocument[\"signed_depositor_inn\"] = props.esInn;\n          updateDocument[\"signed_depositor_full_name\"] = props.esUserFullName;\n          updateDocument[\"signed_at_depositor\"] = props.getCurrentFullDateTime();\n          const commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"updateDocument\"\n              },\n              userId: {\n                value: userProfile.userId\n              },\n              userRole: {\n                value: userProfile.userRole\n              },\n              document: {\n                value: JSON.stringify(updateDocument)\n              },\n              status: {\n                value: \"filled\"\n              }\n            }\n          }; // console.log(buttonName, commandJson)\n\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } else if (buttonName === \"sendToCDWithoutES\") {\n      const updateDocument = getFieldValuesUpdateInstruction();\n      updateDocument.filled = true;\n      updateDocument.filledUser = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          document: {\n            value: JSON.stringify(updateDocument)\n          },\n          status: {\n            value: \"filled\"\n          }\n        }\n      };\n      console.log(\"button sendToCDWithoutES: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"SignInstructionSaveButton\") {\n      const updateDocument = getFieldValuesUpdateInstruction();\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          document: {\n            value: updateDocument\n          },\n          status: {\n            value: \"\"\n          }\n        }\n      };\n      console.log(\"button signInstruction: \", commandJson);\n      sign(commandJson);\n    } else if (buttonName === \"deleteDocument\") {\n      let docToDelete = selectedDoc.id;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"deleteDocument\"\n          },\n          document: {\n            value: docToDelete.toString()\n          }\n        }\n      };\n      console.log(\"deleteDocument:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно удалить это поручение?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      });\n    } else if (buttonName === \"onExecution\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin();\n        } else {\n          let updateDocument = getFieldValuesUpdateInstruction();\n          updateDocument[\"onExecution\"] = true;\n          updateDocument[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n          updateDocument[\"onExecutionDate\"] = props.getCurrentFullDateTime();\n          updateDocument[\"signed_cd_inn\"] = props.esInn;\n          updateDocument[\"signed_cd_full_name\"] = props.esUserFullName;\n          updateDocument[\"signed_at_cd\"] = props.getCurrentFullDateTime();\n          const commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"updateDocument\"\n              },\n              userId: {\n                value: userProfile.userId\n              },\n              userRole: {\n                value: userProfile.userRole\n              },\n              document: {\n                value: JSON.stringify(updateDocument)\n              },\n              status: {\n                value: \"onExecution\"\n              }\n            }\n          };\n          console.log(\"onExecution:\", commandJson, updateDocument);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } else if (buttonName === \"Execute\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        const updateDocument = getFieldValuesUpdateInstruction();\n        updateDocument[\"executed\"] = true;\n        updateDocument[\"executedUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n        updateDocument[\"executedDate\"] = props.getCurrentFullDateTime();\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"updateDocument\"\n            },\n            userId: {\n              value: userProfile.userId\n            },\n            userRole: {\n              value: userProfile.userRole\n            },\n            document: {\n              value: JSON.stringify(updateDocument)\n            },\n            status: {\n              value: \"executed\"\n            }\n          }\n        };\n        console.log(\"button Execute: \", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"CancelInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        handleOpenModalCancelInstruction();\n      }\n    } else if (buttonName === \"CancelInstructionSaveButton\") {\n      handleCloseModalCancelInstruction();\n      const updateDocument = getFieldValuesUpdateInstruction();\n      updateDocument[\"canceled\"] = true;\n      updateDocument[\"сanceledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          document: {\n            value: JSON.stringify(updateDocument)\n          },\n          status: {\n            value: \"canceled\"\n          }\n        }\n      };\n      console.log(\"button CancelInstructionSaveButton: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"CancelInstructionCancelButton\") {\n      handleCloseModalCancelInstruction();\n      fieldValue[\"cancelationReason\"] = null;\n      setFieldValue(fieldValue);\n      console.log(\"FIELDS\", fieldValue);\n    } else if (buttonName === \"uploadToXML\") {\n      // Create xml\n      let xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><InstructionsList xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><instructions>\";\n\n      for (let i = 0; i < filteredDocList.length; i++) {\n        xml += \"<instruction>\";\n\n        for (let prop in filteredDocList[i]) {\n          xml += \"<\" + prop + \">\";\n          xml += filteredDocList[i][prop];\n          xml += \"</\" + prop + \">\";\n        }\n\n        xml += \"</instruction>\";\n      }\n\n      xml += \"</instructions></InstructionsList>\";\n      let finalxml = xml.replace(/<\\/?[0-9]{1,}>/g, '').toString(); // Download xml\n\n      let pom = document.createElement('a');\n      let filename = \"UploadInstructions.xml\";\n      let bb = new Blob([finalxml], {\n        type: 'text/plain'\n      });\n      pom.setAttribute('href', window.URL.createObjectURL(bb));\n      pom.setAttribute('download', filename);\n      pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');\n      pom.draggable = true;\n      pom.classList.add('dragout');\n      pom.click();\n    } else if (buttonName === \"showInstructionReport\") {\n      let reportName = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (selectedDoc.type === enumData[k].data[d].id) {\n              let reportId = enumData[k].data[d].report;\n\n              for (let e = 0; e < enumData.length; e++) {\n                if (enumData[e].name === \"instructionReports\") {\n                  for (let t = 0; t < enumData[e].data.length; t++) {\n                    if (reportId === enumData[e].data[t].id) {\n                      reportName = enumData[e].data[t].reportName;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      let reportExecutions = {\n        \"reportUnitUri\": \"/reports/interactive/\" + reportName,\n        \"async\": true,\n        \"interactive\": true,\n        \"freshData\": false,\n        \"saveDataSnapshot\": false,\n        \"outputFormat\": \"pdf\",\n        // html xlsx pdf docx\n        \"parameters\": {\n          \"reportParameter\": [{\n            name: \"id\",\n            value: [selectedDoc.id.toString()]\n          }]\n        }\n      };\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"showInstructionReport\"\n          },\n          docId: {\n            value: selectedDoc.id.toString()\n          },\n          instructionType: {\n            value: selectedDoc.type\n          },\n          reportName: {\n            value: reportName\n          },\n          reportVars: {\n            value: \"?id=\" + selectedDoc.id + \"&first_n=\" + userProfile.firstName.trim() + \"&last_n=\" + userProfile.lastName.trim() + \"&middle_n=\" + userProfile.middleName.trim()\n          },\n          reportExecutions: {\n            value: JSON.stringify(reportExecutions)\n          }\n        }\n      };\n      console.log(\"button showInstructionReport: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"test\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"test\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"button: \", buttonName);\n    }\n  } // Returns Button component\n\n\n  function createButton(button, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      key: index,\n      onClick: () => buttonClick(button.name),\n      style: {\n        margin: 3,\n        color: button.fontColor,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      value: button.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1616,\n        columnNumber: 7\n      }\n    }, button.label);\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section, index) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      key: index + \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1637,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1638,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1639,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1658,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 9\n      }\n    }, section.contents.map((contentItem, index) => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1662,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1663,\n        columnNumber: 15\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1669,\n        columnNumber: 15\n      }\n    }, contentBuilder(contentItem))))));\n  } // Create component by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleTextChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1685,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressDateTime,\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1698,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        value: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1714,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          // console.log(\"F SEL\", contentItem.name, fieldValue[contentItem.name])\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            // console.log(\"F SEL\", contentItem.name, fieldValue[contentItem.name])\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1751,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressInt,\n        name: contentItem.name // defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        // onBlur={handleIntChange}\n        // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleIntChange,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: IntegerFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1764,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Float\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressFloat,\n        name: contentItem.name // onBlur={handleFloatChange}\n        // value={fieldValue[contentItem.name]}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleFloatChange,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: FloatFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1780,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1795,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"RadioGroup\") {\n      let radioGroupItems = [];\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === contentItem.name) {\n          radioGroupItems = enumData[i].data;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(RadioGroup, {\n        name: contentItem.name,\n        value: fieldValue[contentItem.name],\n        onChange: handleRadioGroupChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1812,\n          columnNumber: 9\n        }\n      }, radioGroupItems.map(groupItem => {\n        return /*#__PURE__*/React.createElement(FormControlLabel, {\n          value: groupItem.id,\n          label: groupItem.label,\n          control: /*#__PURE__*/React.createElement(Radio, {\n            style: {\n              height: \"5px\",\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1822,\n              columnNumber: 26\n            }\n          }),\n          disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1819,\n            columnNumber: 15\n          }\n        });\n      }));\n    }\n  } // Key press handlers for some fields\n\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressDateTime(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressInt(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let int = parseInt(stringNum);\n          fieldValue[event.target.name] = int;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressFloat(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let float = parseFloat(stringNum);\n          fieldValue[event.target.name] = float;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"SignInstructionSaveButton\", null);\n    }\n  }\n\n  function onKeyPressModalCancelInstruction(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"CancelInstructionSaveButton\", null);\n    }\n  } // custom allerts\n\n\n  function swAlert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  }\n\n  function getGridFormEnumLabel(name, value) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (name === gridFormEnumData[i].name) {\n          for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n            if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n              return gridFormEnumData[i].data[l].label;\n            }\n          }\n        }\n      }\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(value, type, dataItem, name) {\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        return getGridFormEnumLabel(name, value);\n      }\n    } else if (type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1934,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        return moment(value).format('YYYY-MM-DD HH:MM');\n      }\n    } else if (type === \"Text\") {\n      if (name === \"instructionStatus\") {\n        return getInstructionStatus(dataItem);\n      } else {\n        if (value === null || value === \"\" || value === undefined) {\n          return \"-\";\n        } else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1957,\n              columnNumber: 19\n            }\n          }, value);\n        }\n      }\n    } else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newCur = props.currencyBeautifier(value);\n        return newCur;\n      }\n    } else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newInt = props.intBeautifier(value);\n        return newInt;\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1984,\n            columnNumber: 17\n          }\n        }, value);\n      }\n    }\n  }\n\n  function getInstructionStatus(dataItem) {\n    let status = \"\";\n\n    if (dataItem[\"filled\"] === true) {\n      status = \"Введено\";\n    }\n\n    if (dataItem[\"onExecution\"] === true) {\n      status = \"На исполнении\";\n    }\n\n    if (dataItem[\"executed\"] === true) {\n      status = \"Исполнено\";\n    }\n\n    if (dataItem[\"canceled\"] === true) {\n      status = \"Отменено\";\n    }\n\n    return status;\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  } // filter docList by filled parameters\n\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            // if(Data[i][key] !== null){\n            let contentType = getContentType(key);\n\n            if (contentType === \"Text\") {\n              if (Data[i][key] !== null) {\n                try {\n                  let searchField = fields[key].toLowerCase();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else {\n                match = false;\n                break;\n              }\n            } else if (contentType === \"Int\" || contentType === \"Float\") {\n              if (Data[i][key] !== null) {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else {\n                match = false;\n                break;\n              }\n            } else if (contentType === \"Enum\") {\n              if (key === \"depositor\") {\n                // console.log(\"DEPOSITOR\", fields[key], Data[i][\"depositor2\"])\n                if (fields[key] === Data[i][key] || fields[key] === Data[i][\"depositor2\"]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (key === \"account\") {\n                if (fields[key] === Data[i][\"accFrom\"] || fields[key] === Data[i][\"accTo\"]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } else if (contentType === \"DateTime\") {\n              if (Data[i][key] !== null) {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else {\n                match = false;\n                break;\n              }\n            } else if (contentType === \"Bool\") {\n              if (key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\") {\n                let instrStatus = \"\";\n                let statusSelected = false;\n                let fieldStatus = \"\"; // Check fields\n\n                if (fields[\"filled\"] === true) {\n                  fieldStatus = \"filled\";\n                  statusSelected = true;\n                }\n\n                if (fields[\"onExecution\"] === true) {\n                  fieldStatus = \"onExecution\";\n                  statusSelected = true;\n                }\n\n                if (fields[\"executed\"] === true) {\n                  fieldStatus = \"executed\";\n                  statusSelected = true;\n                }\n\n                if (fields[\"canceled\"] === true) {\n                  fieldStatus = \"canceled\";\n                  statusSelected = true;\n                }\n\n                if (statusSelected === true) {\n                  // Check Instruction\n                  if (Data[i][\"filled\"] === true) {\n                    instrStatus = \"filled\";\n                  }\n\n                  if (Data[i][\"onExecution\"] === true) {\n                    instrStatus = \"onExecution\";\n                  }\n\n                  if (Data[i][\"executed\"] === true) {\n                    instrStatus = \"executed\";\n                  }\n\n                  if (Data[i][\"canceled\"] === true) {\n                    instrStatus = \"canceled\";\n                  } // Check whether statuses are equal\n\n\n                  if (fieldStatus === instrStatus) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else {\n                if (Data[i][key] === null || fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } // }\n            // else{\n            //   match = false\n            //   break\n            // }\n\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered docList by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList); // setUpdateState(getUUID())\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLastClick() {\n    if (page !== getPageAmount()) {\n      setPage(getPageAmount());\n      fetchBySize((getPageAmount() - 1) * size, filteredDocList.length, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на последней странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.floor(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  }\n\n  function getBackgroundColor(signed, urgent) {\n    if (signed !== undefined) {\n      if (signed === true) {\n        return \"white\";\n      } else {\n        if (urgent === true) {\n          return \"#EFB2B2\";\n        } else {\n          return \"#FCEAD3\";\n        }\n      }\n    } else return \"white\";\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1; // console.log(\"IT\", i, gridForm.sections[nextS])\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2340,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: isSearchForm === true ? 12 : 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2341,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2342,\n        columnNumber: 11\n      }\n    }, isSearchForm === false && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2344,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2345,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2346,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2347,\n        columnNumber: 21\n      }\n    }, Form.label)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2352,\n        columnNumber: 13\n      }\n    }, Form.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        return sectionBuilder(section, index);\n      }\n    })))));\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    // if (type === \"DateTime\" || type === \"Bool\") {\n    //   sortOrder = sortOrder * -1\n    // }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if (type === \"DateTime\") {\n      sortOrder = sortOrder * -1;\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\") {\n      if (property === \"instructionStatus\") {\n        return function (a, b) {\n          // console.log(\"A\", a)\n          let statusA = getInstructionStatus(a);\n          let statusB = getInstructionStatus(b);\n          var result = statusA < statusB ? -1 : statusA > statusB ? 1 : 0;\n          return result * sortOrder;\n        };\n      } else {\n        return function (a, b) {\n          var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n          return result * -1 * sortOrder;\n        };\n      }\n    } else if (type === \"Bool\" || type === \"BoolCustom\") {\n      sortOrder = sortOrder * -1;\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n        let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n        var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n        return result * sortOrder;\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type));\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function getSecType(id) {\n    let type = 1;\n\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"security\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === id) {\n              type = gridFormEnumData[i].data[d].type;\n            }\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"securityTypes\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === type) {\n              return gridFormEnumData[i].data[d].label;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function calculateColSpan(contents) {\n    let num = 0;\n\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1;\n      }\n    }\n\n    return num;\n  }\n\n  const handleContextMenu = event => {\n    if (userProfile.userRole === \"1\") {\n      event.preventDefault();\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null); // console.log(\"CLOSE\", fieldValue)\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name];\n      }\n    }\n\n    console.log(\"nForm\", gridForm);\n    setGridForm(gridForm);\n    setUpdateState(getUUID());\n  };\n\n  function createMenuItems() {\n    let columns = [];\n    columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2508,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: 5,\n        cursor: \"pointer\"\n      },\n      name: \"selectAll\",\n      onClick: () => handleTableCheckboxChange(\"selectAll\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2509,\n        columnNumber: 9\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2516,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: \"selectAll\",\n      onChange: handleGridCheckboxChange,\n      checked: gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2517,\n        columnNumber: 11\n      }\n    }))));\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name;\n        columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2530,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            paddingLeft: 5,\n            cursor: \"pointer\",\n            background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\"\n          },\n          name: name,\n          onClick: () => handleTableCheckboxChange(name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2531,\n            columnNumber: 13\n          }\n        }, gridForm.sections[s].contents[c].label), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2538,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          style: {\n            maxWidth: 20,\n            height: 15,\n            color: \"green\"\n          },\n          name: name,\n          onChange: handleGridCheckboxChange,\n          checked: gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2539,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n\n    return columns;\n  }\n\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId));\n  }\n\n  const handleGridCheckboxChange = event => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = {\n        [event.target.name]: event.target.checked\n      };\n\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name];\n      } // console.log(\"selectAll\", newFields)\n\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleTableCheckboxChange = name => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue\n      };\n\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name];\n      }\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [name]: !gridFieldValue[name]\n      });\n    }\n  };\n\n  function previewInstruction(instr) {\n    // console.log(\"SELECTED INSTR\", instr)\n    setSelectedInstruction(instr);\n  }\n\n  try {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2588,\n        columnNumber: 7\n      }\n    }, isSearchForm !== null && isSearchForm === true ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2592,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2593,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      expanded: accordionExpanded,\n      onChange: () => handleExpandAccordion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2594,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AccordionSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2596,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2595,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2598,\n        columnNumber: 19\n      }\n    }, Form.label)), /*#__PURE__*/React.createElement(AccordionDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2600,\n        columnNumber: 17\n      }\n    }, getForm())))) : getForm(), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2609,\n        columnNumber: 9\n      }\n    }, buttons.map((button, index) => {\n      return createButton(button, index);\n    }), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      href: \"../\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D.docx\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      onClick: () => buttonClick(\"downloadES\"),\n      startIcon: /*#__PURE__*/React.createElement(DescriptionIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2626,\n          columnNumber: 24\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2613,\n        columnNumber: 11\n      }\n    }, \"\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F \\u042D\\u0426\\u041F\"), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://www.rutoken.ru/support/download/rutoken-plugin/\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2629,\n        columnNumber: 11\n      }\n    }, \"\\u041F\\u043B\\u0430\\u0433\\u0438\\u043D\"), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://www.rutoken.ru/support/download/windows/\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2645,\n        columnNumber: 11\n      }\n    }, \"\\u0414\\u0440\\u0430\\u0439\\u0432\\u0435\\u0440\")), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n      style: {\n        paddingTop: 3,\n        cursor: \"pointer\"\n      },\n      onClick: () => buttonClick(\"updateDocList\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2663,\n        columnNumber: 11\n      }\n    }), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2667,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2668,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2669,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"500px\",\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2670,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      class: \"main-table-style\",\n      id: gridTableId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2671,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      style: {\n        position: \"sticky\",\n        top: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2672,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2674,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-first-child\",\n      colSpan: \"1\",\n      onContextMenu: ev => handleContextMenu(ev),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2675,\n        columnNumber: 25\n      }\n    }), gridForm.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        let lastSection = checkSectionOnLastChild(index);\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n          colSpan: calculateColSpan(section.contents),\n          onContextMenu: ev => handleContextMenu(ev),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2681,\n            columnNumber: 31\n          }\n        }, section.label);\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2693,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-style-2row\",\n      rowSpan: \"2\",\n      style: {\n        \"minWidth\": \"65px\"\n      },\n      onContextMenu: ev => handleContextMenu(ev),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2694,\n        columnNumber: 25\n      }\n    }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n      if (contentItem.show === true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: \"td-head-style-2row\",\n          rowSpan: \"2\",\n          onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n          onContextMenu: ev => handleContextMenu(ev),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2706,\n            columnNumber: 33\n          }\n        }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2712,\n            columnNumber: 117\n          }\n        }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2712,\n            columnNumber: 170\n          }\n        }) : \"\");\n      }\n    })))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2720,\n        columnNumber: 21\n      }\n    }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        \"height\": 30,\n        \"backgroundColor\": getBackgroundColor(dataItem.opened, dataItem.urgent),\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2723,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        \"width\": 34,\n        \"border-bottom\": \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2724,\n        columnNumber: 29\n      }\n    }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n      key: button.name,\n      name: button.name,\n      variant: \"outlined\",\n      value: button.name,\n      onClick: () => buttonClick(button.name, dataItem),\n      style: {\n        margin: 1,\n        height: 24,\n        fontSize: 10,\n        maxWidth: 32,\n        backgroundColor: button.backgroundColor,\n        borderColor: \"darkgreen\",\n        color: \"darkgreen\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2727,\n        columnNumber: 35\n      }\n    }, button.label))), gridForm.sections.map(section => {\n      return section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-body-style\",\n            style: {\n              color: selectedInstruction !== null ? selectedInstruction.id === dataItem.id ? \"blue\" : \"black\" : \"black\"\n            },\n            onClick: () => previewInstruction(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2751,\n              columnNumber: 39\n            }\n          }, getGridFormItems(dataItem[contentItem.name], contentItem.type, dataItem, contentItem.name));\n        }\n      });\n    })))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2765,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2766,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2767,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        background: \"#047535\",\n        color: \"white\",\n        height: 28\n      },\n      onClick: () => downloadExcel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2768,\n        columnNumber: 23\n      }\n    }, \"\\u0412 EXCEL\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2775,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: 90,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2776,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2778,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        minWidth: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2779,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(GridSelect, {\n      onChange: handleChangeRowsPerPage,\n      style: {\n        height: 25,\n        color: \"black\"\n      },\n      value: size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2783,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2788,\n        columnNumber: 27\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2789,\n        columnNumber: 27\n      }\n    }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2790,\n        columnNumber: 27\n      }\n    }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2791,\n        columnNumber: 27\n      }\n    }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2792,\n        columnNumber: 27\n      }\n    }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2793,\n        columnNumber: 27\n      }\n    }, \"500\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2794,\n        columnNumber: 27\n      }\n    }, \"1000\")))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2798,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2799,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowFirstClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2800,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2801,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2805,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2806,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLeftClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2807,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2808,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: \"black\",\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2812,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        maxWidth: 25\n      },\n      value: page,\n      onChange: handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2813,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2815,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2816,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => GoToPage(),\n      variant: \"outlined\",\n      style: {\n        height: 22,\n        backgroundColor: \"#D1D6D6\",\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2817,\n        columnNumber: 25\n      }\n    }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2829,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2830,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowRightClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2831,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2832,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2836,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2837,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLastClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2838,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(LastPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2839,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"pagination-rows-amount-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2843,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount()), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2844,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: 90,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2845,\n        columnNumber: 23\n      }\n    }, \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList !== null ? filteredDocList.length : 0))))), selectedInstruction !== null && /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2851,\n        columnNumber: 17\n      }\n    }, selectedInstruction.depositor !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2853,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2854,\n        columnNumber: 23\n      }\n    }, \"\\u0414\\u0435\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442(\\u0421\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430):\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2855,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"depositor\", selectedInstruction.depositor))), selectedInstruction.depositor2 !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2859,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2860,\n        columnNumber: 23\n      }\n    }, \"\\u0414\\u0435\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442(\\u041D\\u0430 \\u0441\\u0447\\u0451\\u0442):\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2861,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"depositor2\", selectedInstruction.depositor2))), selectedInstruction.security !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2865,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2866,\n        columnNumber: 23\n      }\n    }, \"\\u0426\\u0435\\u043D\\u043D\\u0430\\u044F \\u0431\\u0443\\u043C\\u0430\\u0433\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2867,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"security\", selectedInstruction.security) + \" \" + getSecType(selectedInstruction.security))), selectedInstruction.currency !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2872,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2873,\n        columnNumber: 23\n      }\n    }, \"\\u0412\\u0430\\u043B\\u044E\\u0442\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2874,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"currency\", selectedInstruction.currency))), selectedInstruction.security !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2879,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2880,\n        columnNumber: 23\n      }\n    }, \"\\u042D\\u043C\\u0438\\u0442\\u0435\\u043D\\u0442:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2881,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"issuer\", selectedInstruction.issuer))), selectedInstruction.tradingSystem !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2885,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2886,\n        columnNumber: 23\n      }\n    }, \"\\u0422\\u043E\\u0440\\u0433\\u043E\\u0432\\u0430\\u044F \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2887,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"tradingSystem\", selectedInstruction.tradingSystem))), selectedInstruction.corrDepository !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2891,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2892,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u0440\\u0440. \\u0434\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u0430\\u0440\\u0438\\u0439:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2893,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"corrDepository\", selectedInstruction.corrDepository))), (selectedInstruction.ownerName !== null || selectedInstruction.ownerDocument !== null || selectedInstruction.ownerAddress !== null) && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2897,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2898,\n        columnNumber: 23\n      }\n    }, \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u0432\\u043B\\u0430\\u0434\\u0435\\u043B\\u044C\\u0446\\u0435:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2899,\n        columnNumber: 23\n      }\n    }, selectedInstruction.ownerName + \" \" + selectedInstruction.ownerDocument + \" \" + selectedInstruction.ownerAddress)), selectedInstruction.accFrom !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2903,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2904,\n        columnNumber: 23\n      }\n    }, \"\\u0421\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2905,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"accFrom\", selectedInstruction.accFrom))), selectedInstruction.accTo !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2909,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2910,\n        columnNumber: 23\n      }\n    }, \"\\u041D\\u0430 \\u0441\\u0447\\u0451\\u0442:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2911,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"accTo\", selectedInstruction.accTo))), selectedInstruction.quantity !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2915,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2916,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2917,\n        columnNumber: 23\n      }\n    }, selectedInstruction.quantity)), selectedInstruction.basis !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2921,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2922,\n        columnNumber: 23\n      }\n    }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2923,\n        columnNumber: 23\n      }\n    }, selectedInstruction.basis))), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: anchorEl,\n      open: openMenu,\n      onClose: handleCloseMenu,\n      MenuListProps: {\n        'aria-labelledby': 'basic-button'\n      },\n      style: {\n        paddingLeft: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2928,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2937,\n        columnNumber: 17\n      }\n    }, createMenuItems())))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: showSnackBar,\n      onClose: () => handleCloseSnackBar(),\n      autoHideDuration: 1200,\n      message: snackBarMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2944,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalCancelInstruction,\n      onClose: handleCloseModalCancelInstruction,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2950,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2956,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2957,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0443 \\u043E\\u0442\\u043C\\u0435\\u043D\\u044B\"), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      multiline: true,\n      autoFocus: true,\n      name: \"\\u0441ancelationReason\",\n      defaultValue: fieldValue[\"сancelationReason\"] >= 0 ? fieldValue[\"сancelationReason\"] : \"\",\n      onChange: handleTextChange,\n      onKeyPress: onKeyPressModalCancelInstruction,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2958,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"CancelInstructionSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2968,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"CancelInstructionCancelButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2980,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalEnterPin,\n      onClose: handleCloseModalEnterPin,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2994,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3000,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3001,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"100%\"\n      },\n      error: wrongPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3002,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3003,\n        columnNumber: 15\n      }\n    }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n      type: showPin ? 'text' : 'password',\n      defaultValue: rutokenPin,\n      onChange: handlePinChange,\n      onKeyPress: onKeyPressModalEnterPin,\n      autoFocus: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3011,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPin,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3012,\n          columnNumber: 21\n        }\n      }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3017,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3017,\n          columnNumber: 51\n        }\n      }))),\n      labelWidth: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3004,\n        columnNumber: 15\n      }\n    })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3024,\n        columnNumber: 35\n      }\n    }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"SignInstructionSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3025,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleCloseModalEnterPin,\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3037,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3058,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3059,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3060,\n        columnNumber: 11\n      }\n    })));\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Select","NumberFormat","PropTypes","Grid","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Menu","Snackbar","LinearProgress","MenuItem","Paper","Radio","RadioGroup","Tooltip","IconButton","Modal","makeStyles","GridSelect","FormControl","FormControlLabel","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","ArrowForwardIosIcon","ArrowBackIosIcon","FirstPageIcon","LastPageIcon","DescriptionIcon","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","ArrowUpwardRoundedIcon","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","swal","hotkeys","rutoken","tableToExcel","plugin","rutokenHandle","certHandle","certData","cmsData","moment","require","FloatFormat","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","IntegerFormat","getModalStyle","top","left","transform","useStyles","theme","modal","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","classes","userProfile","process_id","userTask","session_id","taskID","taskType","enumData","gridFormEnumData","enumOptions","setEnumOptions","Form","setForm","gridForm","setGridForm","selectedDoc","setSelectedDoc","fieldValue","setFieldValue","docId","buttons","gridFormButtons","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","page","setPage","size","setSize","selectedOptions","setSelectedOptions","sectionColor","snackBarMessage","setSnackBarMessage","showSnackBar","setShowSnackBar","modalStyle","showModalCancelInstruction","setShowModalCancelInstruction","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","updateState","setUpdateState","isSearchForm","setIsSearchForm","accordionExpanded","setAccordionExpanded","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","selectedInstruction","setSelectedInstruction","anchorEl","setAnchorEl","openMenu","Boolean","gridTableId","getUUID","gridFieldValue","setGridFieldValue","console","log","parsedData","JSON","parse","s","parseInt","p","sortedDocList","sort","dynamicSort","filterDocList","fetchBySize","er","callErrorToast","undefined","parsedSelectedDoc","fields","ed","userRole","newForm","sections","length","c","contents","show","edit","i","d","data","partner","depositorId","id","fieldName","Object","keys","eData","newEnumOptions","options","getInstructionTypeName","push","label","instructionTypeId","type","filteredRelations","checkResult","checkForPushing","enableToPush","getLostEnumName","newFields","enumI","event","handler","key","handleOpenModalCancelInstruction","handleCloseModalCancelInstruction","handleOpenModalEnterPin","handleCloseModalEnterPin","handleExpandAccordion","splitedAccountName","split","allowedAccountCode","splitedAccountLabel","accCode","accPartner","handlePinChange","handleClickShowPin","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","handleError","reason","isNaN","message","errorCodes","PIN_INCORRECT","sign","commandJson","enumerateDevices","devices","alert","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","inn","fullName","subject","rdn","setEsInn","setEsUserFullName","setEsExpiredDate","validNotAfter","substring","instructionToSign","variables","document","filled","getCurrentFullDateTime","firstName","lastName","middleName","status","stringify","sendFieldValues","clearTabData","DATA_FORMAT_PLAIN","logout","handleCheckboxChange","checked","handleRadioGroupChange","handleTextChange","handleFloatChange","handleIntChange","stringNum","toString","replace","int","handleDateTimeChange","format","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","newOptions","depositorPartner","getDepositorPartner","issuerId","issuer","j","h","issuerOption","noIssuerOption","y","depId","uuidv1","getFieldValuesCreateDocument","getFieldValuesSaveInstruction","onExecution","executed","canceled","opened","signed","getFieldValuesUpdateInstruction","docToUpdate","checkForRequieredFields","checkedSuccessfuly","required","swAllert","text","icon","ok","buttonClick","buttonName","dataItem","operDayIsOpened","createDocument","commandType","userAction","searchDoc","userId","createFormDefId","report","k","create_form","reportName","copyFields","filledUser","filled_at","onExecutionUser","executedUser","onExecutionDate","executed_at","signed_at","signed_at_cd","signed_at_depositor","signed_user_full_name","signed_depositor_inn","signed_depositor_full_name","signed_cd_inn","signed_cd_full_name","canceledUser","canceledDate","instructionType","updateDocument","notBody","user_session_id","showTreansferOrder","transferOrder","instruction_id","registered_person","address","security","quantity_int","basis","t","dt","security_type","registrar","transfer_order","saveBody","notificationsBody","cancel","click","currentStatus","editFormDefId","edit_form","esInn","esUserFullName","docToDelete","yes","xml","prop","finalxml","pom","createElement","filename","bb","Blob","setAttribute","URL","createObjectURL","dataset","downloadurl","download","href","join","draggable","classList","add","reportId","e","reportExecutions","reportVars","trim","createButton","button","index","margin","color","fontColor","height","fontSize","sectionBuilder","section","bodyBuilder","map","contentItem","contentBuilder","onKeyPressText","onKeyPressDateTime","parseDate","shrink","parseFullDateTime","selectedOption","body","menuPortal","base","zIndex","onKeyPressInt","inputComponent","onKeyPressFloat","maxWidth","radioGroupItems","groupItem","code","charCode","float","parseFloat","onKeyPressModalEnterPin","onKeyPressModalCancelInstruction","swAlert","getGridFormEnumLabel","l","getGridFormItems","getInstructionStatus","newCur","currencyBeautifier","newInt","intBeautifier","handleCloseSnackBar","getContentType","fetchFrom","fetchTo","Data","newDocList","match","contentType","searchField","toLowerCase","dataField","includeSearch","includes","instrStatus","statusSelected","fieldStatus","KeyboardArrowFirstClick","KeyboardArrowLastClick","getPageAmount","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","pagesFloat","mathRoundOfPages","Math","floor","getBackgroundColor","urgent","checkToShowSection","showSection","checkSectionOnLastChild","lastSection","nextS","getForm","maxHeight","getEnumLabel","property","sortOrder","a","b","dateA","Date","timeInSecA","getTime","dateB","timeInSecB","statusA","statusB","labelA","labelB","sortDataByColumn","getSecType","calculateColSpan","num","handleContextMenu","preventDefault","currentTarget","handleCloseMenu","createMenuItems","columns","paddingLeft","cursor","handleTableCheckboxChange","handleGridCheckboxChange","downloadExcel","convert","getElementById","previewInstruction","instr","paddingTop","overflow","ev","marginBottom","borderColor","minWidth","depositor","depositor2","currency","tradingSystem","corrDepository","ownerName","ownerDocument","ownerAddress","accFrom","accTo","quantity","error"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/Instructions/Instructions.jsx"],"sourcesContent":["// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\n// import MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Menu from '@mui/material/Menu';\n// import Input from '@material-ui/core/Input';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridSelect from '@material-ui/core/Select';\n// PIN components\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n// Icons\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// Accordion\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Import libraries\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\nimport hotkeys from 'hotkeys-js';\nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\nvar moment = require('moment');\n\nfunction FloatFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n}))\nexport default (props) => {\n  // This.state\n  const classes = useStyles()\n  const [userProfile] = useState(props.userProfile)\n  const [process_id] = useState(props.userTask.process_id)\n  const [session_id] = useState(props.userTask.session_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [taskType] = useState(props.userTask.taskType)\n  const [enumData] = useState(props.userTask.enumData)\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [fieldValue, setFieldValue] = useState({}) // opened: false\n  const [docId] = useState(props.userTask.docId)\n  const [buttons] = useState(props.userTask.buttons)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [modalStyle] = useState(getModalStyle)\n  const [showModalCancelInstruction, setShowModalCancelInstruction] = useState(false)\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n  const [updateState, setUpdateState] = useState(null)\n  const [isSearchForm, setIsSearchForm] = useState(null)\n  const [accordionExpanded, setAccordionExpanded] = useState(false)\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n  const [selectedInstruction, setSelectedInstruction] = useState(null)\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n  const [gridTableId] = useState(getUUID())\n  const [gridFieldValue, setGridFieldValue] = useState({})\n\n  // Initializing\n  useEffect(() => {\n    console.log(\"INSTR PROPS\", props)\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        setFilteredDocList(parsedData)\n        if (taskType !== \"showInstructionsTypeSelectingForm\") {\n          setIsSearchForm(true)\n        }\n        setInitialDocList(parsedData)\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"))\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc))\n        }\n        else { fetchBySize(0, s - 1, sortedDocList) }\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    else { setIsSearchForm(false) }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      let fields = {}\n      if (taskType === \"showInstructionsCreationForm\") {\n        let ed = props.userTask.enumData\n        if (userProfile.userRole === \"3\") { // Depositor\n          let newForm = Form\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              if (Form.sections[s].contents[c].name === \"depositor2\" || Form.sections[s].contents[c].name === \"depositor\") {\n                // console.log(\"FFF\", Form.sections[s].contents[c])\n                if (Form.sections[s].contents[c].show === true) {\n                  newForm.sections[s].contents[c].edit = false\n                  setForm(newForm)\n                  for (let i = 0; i < ed.length; i++) {\n                    if (ed[i].name === \"depositor2\" || ed[i].name === \"depositor\") {\n                      for (let d = 0; d < ed[i].data.length; d++) {\n                        if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                          let depositorId = ed[i].data[d].id\n                          // console.log(\"depositor2Id\", depositorId)\n                          fields[\"depositor2\"] = depositorId // Block field depositor2(accountTo) don't allow him to choose another depositor \n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              else {\n                let fieldName = Form.sections[s].contents[c].name\n                fields[fieldName] = parsedSelectedDoc[fieldName]\n              }\n            }\n          }\n        }\n        else {\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              let fieldName = Form.sections[s].contents[c].name\n              fields[fieldName] = parsedSelectedDoc[fieldName]\n            }\n          }\n        }\n      }\n      else {\n        if (Object.keys(parsedSelectedDoc).length > 0) {\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              let fieldName = Form.sections[s].contents[c].name\n              fields[fieldName] = parsedSelectedDoc[fieldName]\n            }\n          }\n        }\n      }\n      console.log(\"SDOC\", parsedSelectedDoc)\n      console.log(\"INITIAL FIELDVALUES\", fields)\n      setSelectedDoc(parsedSelectedDoc)\n      setFieldValue(fields)\n    }\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let eData = props.userTask.enumData\n      let newEnumOptions = {}\n      for (let i = 0; i < eData.length; i++) {\n        if (eData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": eData[i].name\n          }]\n          if (eData[i].name === \"type\") {\n            if (props.userTask.taskType === \"showInstructionsTypeSelectingForm\") {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                if (props.userProfile[getInstructionTypeName(eData[i].data[d].id)] === true) {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  })\n                }\n              }\n            }\n            else {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                options.push({\n                  \"value\": eData[i].data[d].id,\n                  \"label\": eData[i].data[d].label,\n                  \"name\": eData[i].name\n                })\n              }\n            }\n          }\n          else if (eData[i].name === \"accFrom\" || eData[i].name === \"accTo\") { // Filter allowed account types for selected instruction\n            if (props.userTask.taskType === \"showInstructionsCreationForm\" || props.userTask.taskType === \"showInstructionsViewForm\") {\n              let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n              let instructionTypeId = parsedSelectedDoc.type\n              let filteredRelations = [] // allowed account types\n              for (let i = 0; i < eData.length; i++) {\n                if (eData[i].name === \"instructionAccountRelations\") { // Find tabels that indicate allowed account types\n                  for (let d = 0; d < eData[i].data.length; d++) {\n                    if (eData[i].data[d].id === instructionTypeId) {\n                      filteredRelations.push(eData[i].data[d])\n                    }\n                  }\n                }\n              }\n              // console.log(\"filteredRelations\", filteredRelations)\n              for (let d = 0; d < eData[i].data.length; d++) {\n                if (filteredRelations.length > 0) { // Has relations to filter accounts\n                  let checkResult = checkForPushing(eData[i].data[d].label, instructionTypeId)\n                  if (checkResult.enableToPush === true) {\n                    // console.log(\"PUSH ? \", eData[i].data[d].label, checkResult)\n                    options.push({\n                      \"value\": eData[i].data[d].id,\n                      \"label\": eData[i].data[d].label,\n                      \"name\": eData[i].name\n                    })\n                  }\n                }\n                else {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  })\n                }\n              }\n            }\n          }\n          else {\n            for (let d = 0; d < eData[i].data.length; d++) {\n              options.push({\n                \"value\": eData[i].data[d].id,\n                \"label\": eData[i].data[d].label,\n                \"name\": eData[i].name\n              })\n            }\n          }\n          newEnumOptions[eData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      // console.log(\"EN OPTS\", newEnumOptions)\n      setEnumOptions(newEnumOptions)\n    }\n    if (gridForm !== null) {\n      let newFields = {}\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show\n        }\n      }\n      setGridFieldValue(newFields)\n    }\n    // setUpdateState(getUUID())\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded)\n    }\n  })\n\n  // CancelInstruction MODAL\n  const handleOpenModalCancelInstruction = () => {\n    setShowModalCancelInstruction(true)\n  }\n  const handleCloseModalCancelInstruction = () => {\n    setShowModalCancelInstruction(false)\n  }\n\n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true)\n  }\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded)\n  }\n\n\n  function getInstructionTypeName(id) {\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionTypesNames\") {\n        for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n          if (props.userTask.enumData[i].data[d].id === id) {\n            return props.userTask.enumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  // filter accounts that can be selected by instruction type\n  function checkForPushing(label, instructionTypeId) {\n    let checkResult = {\n      enableToPush: false,\n      // allowedAccountCode: null\n    }\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionAccountRelations\") { // 1) Push accounts related to Instruction type\n        let data = props.userTask.enumData[i].data\n        for (let d = 0; d < data.length; d++) {\n          if (data[d].id === instructionTypeId) { // find allowed account types\n            let splitedAccountName = data[d].label.split(\"-\")\n            let allowedAccountCode = splitedAccountName[1]\n            let splitedAccountLabel = label.split(\"-\")\n            let accCode = splitedAccountLabel[1]\n            let accPartner = splitedAccountLabel[2]\n            console.log(allowedAccountCode, accCode)\n            if (accCode === allowedAccountCode) {\n              // if (userProfile.userRole === \"2\" || userProfile.userRole === \"3\" || userProfile.userRole === \"4\" || userProfile.userRole === \"8\") {\n              // Operator, Broker, Registrar, CorrDepo\n\n              if (userProfile.userRole === \"1\" || userProfile.userRole === \"5\" || userProfile.userRole === \"7\") { // Admin, Accountant, CD\n                console.log(\"ALOLOWED\", accCode)\n                checkResult[\"enableToPush\"] = true\n                // checkResult[\"allowedAccountCode\"] = allowedAccountCode\n                break\n              }\n              else { // Other users\n                if (accPartner === userProfile.partner) {\n                  checkResult[\"enableToPush\"] = true\n                  // checkResult[\"allowedAccountCode\"] = allowedAccountCode\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return checkResult\n  }\n  // RuToken functions\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin() {\n    setShowPin(!showPin)\n  }\n  rutoken.ready\n    // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n    .then(function () {\n      if (window.chrome || typeof InstallTrigger !== 'undefined') {\n        return rutoken.isExtensionInstalled()\n      } else {\n        return Promise.resolve(true)\n      }\n    })\n    // Проверка установки Рутокен Плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.isPluginInstalled()\n      } else {\n        // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n      }\n    })\n    // Загрузка плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.loadPlugin()\n      } else {\n        // alert(\"Не удаётся найти Плагин\");\n      }\n    })\n    //Можно начинать работать с плагином\n    .then(function (result) {\n      if (!result) {\n        return // alert(\"Не удаётся загрузить Плагин\")\n      } else {\n        plugin = result\n        return Promise.resolve()\n      }\n    })\n\n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  // Sign transfer order with rutoken\n  function sign(commandJson) {\n    try {\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices()\n          .then(function (devices) {\n            if (devices.length > 0) {\n              return Promise.resolve(devices[0]);\n            } else {\n              alert(\"Рутокен не обнаружен\");\n            }\n          })\n          // Проверка залогиненности\n          .then(function (firstDevice) {\n            rutokenHandle = firstDevice;\n            return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n          })\n          // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n          .then(function (isLoggedIn) {\n            if (isLoggedIn) {\n              return Promise.resolve();\n            } else {\n              return plugin.login(rutokenHandle, rutokenPin);\n            }\n          })\n          // Перебор пользовательских сертификатов на токене\n          .then(function () {\n            return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n          })\n          .then(function (certs) {\n            if (certs.length > 0) {\n              certHandle = certs[0];\n              return plugin.parseCertificate(rutokenHandle, certs[0]);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\");\n            }\n          })\n          // Подписание данных из текстового поля на первом найденом сертификате\n          .then(function (certs) {\n            certData = certs\n            // console.log(\"RUTDATA\", certData)\n            if (certHandle.length > 0) {\n              var options = {};\n\n              let inn = \"\"\n              let fullName = \"\"\n              for (let i = 0; i < certData.subject.length; i++) {\n                if (certData.subject[i].rdn === \"serialNumber\") {\n                  inn = certData.subject[i].value\n                }\n                if (certData.subject[i].rdn === \"commonName\") {\n                  fullName = certData.subject[i].value\n                }\n              }\n              props.setEsInn(inn)\n              props.setEsUserFullName(fullName)\n              props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n              let instructionToSign = commandJson.variables.document.value\n              if (selectedDoc.filled === undefined || selectedDoc.filled === null || selectedDoc.filled === false) { // Depositor\n                instructionToSign[\"filled\"] = true\n                instructionToSign[\"filled_at\"] = props.getCurrentFullDateTime()\n                instructionToSign[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n                instructionToSign[\"signed_depositor_inn\"] = inn\n                instructionToSign[\"signed_depositor_full_name\"] = fullName\n                instructionToSign[\"signed_at_depositor\"] = props.getCurrentFullDateTime()\n                commandJson.variables.status.value = \"filled\"\n              }\n              else { // Depository\n                instructionToSign[\"onExecution\"] = true\n                instructionToSign[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n                instructionToSign[\"signed_cd_inn\"] = inn\n                instructionToSign[\"signed_cd_full_name\"] = fullName\n                instructionToSign[\"signed_at_cd\"] = props.getCurrentFullDateTime()\n                commandJson.variables.status.value = \"onExecution\"\n              }\n              commandJson.variables.document.value = JSON.stringify(instructionToSign)\n              console.log(\"SIGN\", instructionToSign, commandJson.variables.document)\n              handleCloseModalEnterPin()\n              // swAllert(\"Поручение успешно подписано!\", \"success\")\n              props.sendFieldValues(commandJson)\n              props.clearTabData(commandJson.process_id)\n              return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\")\n            }\n          })\n          // Закрытие сессии\n          .then(function () {\n            plugin.logout(rutokenHandle)\n          }, handleError)\n      }\n      else { props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\") }\n    }\n    catch (er) {\n      console.log(\"Rutoken ERR\")\n    }\n  }\n  // Input handlers\n  const handleCheckboxChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n    // console.log(\"Check change\", event.target.checked)\n  }\n  // Radio group handler\n  const handleRadioGroupChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    // console.log(\"FIELDVALUE\", fieldValue)\n  }\n\n  // Float input handler\n  const handleFloatChange = (event) => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  // Integer input handler\n  const handleIntChange = (event) => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '')\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int })\n  }\n  // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n  function handleDateTimeChange(event) {\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    // setFieldValue(fieldValue)\n    fieldValue[event.target.name] = moment(event.target.value).format(\"YYYY-MM-DDTHH:mm:ss\")\n    setFieldValue(fieldValue)\n    console.log(\"DATE CHANGE\", fieldValue[event.target.name], event.target.value)\n  }\n  // Handler of select copmponet changes\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value\n    console.log(\"OPT\", option.name, option.value)\n    var updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option\n        noSuchOption = false\n        setSelectedOptions(updateSelectedOptions)\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    if (option.name === \"depositor\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // Первый депонент выбран нужно отфильтровать поле \"Со счета\" и отобразить счета только выбранного депонента\n      let newOptions = []\n      let depositorPartner = getDepositorPartner(option.value) // find depositor partner id\n      console.log(\"PARTNER\", depositorPartner)\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"accFrom\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"])\n            // console.log(\"PUSH\", enumData[i].data[d].label)\n            if (checkResult.enableToPush === true) {\n              if (enumData[i].data[d].partner === depositorPartner) { // compare depositor partner and account partner\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\": enumData[i].name\n                })\n              }\n            }\n          }\n        }\n      }\n      console.log(\"NEW ENUMS\", newOptions)\n      enumOptions[\"accFrom\"] = newOptions\n      setEnumOptions(enumOptions)\n    }\n    else if (option.name === \"depositor2\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // Второй депонент выбран нужно отфильтровать поле \"На счет\" и отобразить счета только выбранного депонента\n      let newOptions = []\n      let depositorPartner = getDepositorPartner(option.value) // find depositor partner id\n      // console.log(\"PARTNER\", depositorPartner)\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"accTo\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].partner === depositorPartner) { // compare depositor partner and account partner\n              let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"])\n              // console.log(\"PUSH\", enumData[i].data[d].label)\n              if (checkResult.enableToPush === true) {\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\": enumData[i].name\n                })\n              }\n            }\n          }\n        }\n      }\n      // console.log(\"NEW ENUMS\", newOptions)\n      enumOptions[\"accTo\"] = newOptions\n      setEnumOptions(enumOptions)\n    }\n    else if (option.name === \"security\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // выбрана ценная бумага нужно найти эмитента и отобразить\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"security\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].id === option.value) {\n              let issuerId = enumData[i].data[d].issuer\n              fieldValue[\"issuer\"] = issuerId\n\n              for (let j = 0; j < enumData.length; j++) {\n                if (enumData[j].name === \"issuer\") {\n                  // console.log(\"issuerID\", issuerId)\n                  for (let h = 0; h < enumData[j].data.length; h++) {\n                    if (enumData[j].data[h].id === issuerId) {\n                      let issuerOption = {\n                        value: issuerId,\n                        name: \"issuer\",\n                        label: enumData[j].data[h].label\n                      }\n                      console.log(\"issuerOption\", issuerOption)\n                      let noIssuerOption = true\n                      for (let y = 0; y < updateSelectedOptions.length; y++) {\n                        if (updateSelectedOptions[y].name === \"issuer\") {\n                          updateSelectedOptions[y] = issuerOption\n                          noIssuerOption = false\n                          setSelectedOptions(updateSelectedOptions)\n                          break\n                        }\n                        else {\n                          noIssuerOption = true\n                        }\n                      }\n                      if (noIssuerOption === true) {\n                        updateSelectedOptions.push(issuerOption)\n                        setSelectedOptions(updateSelectedOptions)\n                        // console.log(\"NO Issuer\", updateSelectedOptions)\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      // console.log(\"NEW ENUMS\", newOptions)\n      // enumOptions[\"issuer\"] = newOptions\n      // setEnumOptions(enumOptions)\n    }\n    setFieldValue(fieldValue)\n  }\n  function getDepositorPartner(depId) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"depositor\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === depId) {\n            return enumData[i].data[d].partner\n          }\n        }\n      }\n    }\n  }\n  // Returns random id\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // Collecting all field values and return as attributes\n  function getFieldValuesCreateDocument() {\n    let fields = {}\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\") {\n        fields[key] = fieldValue[key]\n      }\n    }\n    return (fields)\n  }\n  function getFieldValuesSaveInstruction() {\n    let fields = {\n      filled: false,\n      onExecution: false,\n      executed: false,\n      canceled: false,\n      opened: false,\n      // \"filledUser\" : userProfile.firstName + \" \" + userProfile.lastName,\n      signed: false\n    }\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\") {\n        fields[key] = fieldValue[key]\n      }\n    }\n    return (fields)\n  }\n  // Collect data to update doc\n  function getFieldValuesUpdateInstruction() {\n    let docToUpdate = selectedDoc\n    // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false\n        }\n        else {\n          docToUpdate[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToUpdate\n  }\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null ||\n            fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n            return checkedSuccessfuly\n          }\n          else {\n            checkedSuccessfuly = true\n          }\n        }\n        else {\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  // Main button click handler\n  function buttonClick(buttonName, dataItem) {\n    // console.log(\"Button\", buttonName)\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true)\n      }\n      else {\n        filterDocList(0, size - 1, initialDocList, fieldValue)\n      }\n    }\n    else if (buttonName === \"createDocument\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        const createDocument = getFieldValuesCreateDocument()\n        const commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: { value: \"createDocument\" },\n            selectedDoc: { value: JSON.stringify(createDocument) },\n            searchDoc: { value: JSON.stringify(fieldValue) },\n            userId: { value: userProfile.userId },\n            userRole: { value: userProfile.userRole }\n          }\n        }\n        console.log(\"button createDocument: \", commandJson)\n        let checkResult = checkForRequieredFields()\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    // else if(buttonName === \"selectSample\"){\n    //   if(props.operDayIsOpened === false){\n    //     swal({\n    //       text: \"Операционный день закрыт вы не можете создавать поручения!\",\n    //       icon: \"warning\",\n    //       buttons: {ok: \"Ок\"}\n    //     })\n    //   }\n    //   else{\n    //     const commandJson = \n    //     {\n    //       commandType: \"completeTask\",\n    //       session_id: session_id,\n    //       process_id: process_id,\n    //       taskID: taskID,\n    //       variables: {\n    //         userAction: {value: \"selectSample\"},\n    //         searchDoc: {value: JSON.stringify(fieldValue)}\n    //       }\n    //     }\n    //     console.log(\"button selectSample: \", commandJson)\n    //     props.sendFieldValues(commandJson)\n    //     props.clearTabData(process_id)\n    //   }\n    // }\n    else if (buttonName === \"selectInstruction\") {\n      let createFormDefId = null\n      let report = null\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              createFormDefId = enumData[k].data[d].create_form\n              report = enumData[k].data[d].reportName\n            }\n          }\n        }\n      }\n      let copyFields = dataItem\n      dataItem.filled = null\n      dataItem.filledUser = null\n      dataItem.filled_at = null\n      dataItem.onExecution = null\n      dataItem.onExecutionUser = null\n      dataItem.executed = null\n      dataItem.executedUser = null\n      dataItem.onExecutionDate = null\n      dataItem.executed_at = null\n      dataItem.signed = null\n      dataItem.signed_at = null\n      dataItem.signed_at_cd = null\n      dataItem.signed_at_depositor = null\n      dataItem.signed_user_full_name = null\n      dataItem.signed_depositor_inn = null\n      dataItem.signed_depositor_full_name = null\n      dataItem.signed_cd_inn = null\n      dataItem.signed_cd_full_name = null\n      dataItem.canceled = null\n      dataItem.canceledUser = null\n      dataItem.canceledDate = null\n      dataItem.filled = null\n      dataItem.filled = null\n      dataItem.filled = null\n\n      // for(let s=0; s<Form.sections.length; s++){\n      //   for(let c=0; c<Form.sections[s].contents.length; c++){\n      //     let fieldName = Form.sections[s].contents[c].name\n      //     if(Form.sections[s].contents[c].show === true){\n      //       copyFields[fieldName] = dataItem[fieldName]\n      //     }\n      //   }\n      // }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"createInstruction\" },\n          selectedDoc: { value: JSON.stringify(copyFields) },\n          instructionType: { value: fieldValue[\"type\"] },\n          createFormDefId: { value: createFormDefId },\n          reportName: { value: report },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button selectInstruction: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"editDocument\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"editDocument\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole }\n        }\n      }\n      console.log(\"button editDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocument\") {\n      const updateDocument = getFieldValuesUpdateInstruction()\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          document: { value: JSON.stringify(updateDocument) },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole }\n        }\n      }\n      console.log(\"button updateDocument: \", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        let createFormDefId = null\n        let report = null\n        for (let k = 0; k < enumData.length; k++) {\n          if (enumData[k].name === \"type\") {\n            for (let d = 0; d < enumData[k].data.length; d++) {\n              if (fieldValue[\"type\"] === enumData[k].data[d].id) {\n                createFormDefId = enumData[k].data[d].create_form\n                report = enumData[k].data[d].reportName\n              }\n            }\n          }\n        }\n        const commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: { value: \"createInstruction\" },\n            userId: { value: userProfile.userId },\n            userRole: { value: userProfile.userRole },\n            selectedDoc: { value: JSON.stringify({ type: fieldValue[\"type\"] }) },\n            instructionType: { value: fieldValue[\"type\"] },\n            createFormDefId: { value: createFormDefId },\n            reportName: { value: report }\n          }\n        }\n        console.log(\"button createInstruction: \", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"saveInstruction\") {\n      const createDocument = getFieldValuesSaveInstruction()\n      let notBody = {\n        variables:\n        {\n          user_session_id: { value: session_id },\n          userAction: { value: \"getNotificationsCount\" }\n        }\n      }\n      let showTreansferOrder = true\n      let transferOrder = {\n        instruction_id: \"null\",\n        registered_person: fieldValue[\"ownerName\"],\n        address: fieldValue[\"ownerAddress\"],\n        security: fieldValue[\"security\"],\n        issuer: fieldValue[\"issuer\"],\n        quantity_int: fieldValue[\"quantity\"],\n        basis: fieldValue[\"basis\"]\n      }\n      for (let t = 0; t < enumData.length; t++) {\n        // if (enumData[t].name === \"issuer\") {\n        //   for (let dt = 0; dt < enumData[t].data.length; dt++) {\n        //     if (fieldValue[\"issuer\"] === enumData[t].data[dt].id) {\n        //       transferOrder[\"registrar\"] = enumData[t].data[dt].registrar\n        //     }\n        //   }\n        // }\n        if (enumData[t].name === \"security\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"security\"] === enumData[t].data[dt].id) {\n              transferOrder[\"security_type\"] = enumData[t].data[dt].security_type\n              transferOrder[\"registrar\"] = enumData[t].data[dt].registrar\n            }\n          }\n        }\n        if (enumData[t].name === \"type\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"type\"] === enumData[t].data[dt].id) {\n              showTreansferOrder = enumData[t].data[dt].transfer_order\n            }\n          }\n        }\n      }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"saveInstruction\" },\n          saveBody: { value: JSON.stringify(createDocument) },\n          selectedDoc: { value: JSON.stringify(createDocument) },\n          notificationsBody: { value: JSON.stringify(notBody) },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          // reportName: {value: reportName},\n          showTreansferOrder: { value: showTreansferOrder },\n          transferOrder: { value: JSON.stringify(transferOrder) }\n        }\n      }\n      if (fieldValue[\"urgent\"] === true) {\n        swal({\n          text: \"ВНИМАНИЕ поручения со статусом \\\"СРОЧНОЕ\\\" будет тарифицироваться в соответствии с тарифами ЦД на срочные поручения, хотите продолжить?\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\", cancel: \"Отмена\" },\n          // dangerMode: true,\n        })\n          .then((click) => {\n            if (click === \"ok\") {\n              let checkResult = checkForRequieredFields()\n              if (checkResult === true) {\n                props.sendFieldValues(commandJson)\n                props.clearTabData(process_id)\n              }\n            }\n          })\n      }\n      else {\n        let checkResult = checkForRequieredFields()\n        console.log(\"PASSED\", checkResult)\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n      console.log(\"button saveInstruction: \", commandJson)\n    }\n    else if (buttonName === \"viewInstruction\") {\n      let currentStatus = \"saved\"\n      let notBody = {\n        variables:\n        {\n          user_session_id: { value: session_id },\n          userAction: { value: \"getNotificationsCount\" }\n        }\n      }\n      if (dataItem.filled === true) {\n        currentStatus = \"filled\"\n        if (dataItem.onExecution === true) {\n          currentStatus = \"onExecution\"\n          if (dataItem.executed === true) {\n            currentStatus = \"executed\"\n          }\n          else {\n            if (dataItem.canceled === true) {\n              currentStatus = \"canceled\"\n            }\n          }\n        }\n        else {\n          if (dataItem.canceled === true) {\n            currentStatus = \"canceled\"\n          }\n        }\n      }\n\n      let editFormDefId = null\n      let report = null\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              editFormDefId = enumData[k].data[d].edit_form\n              report = enumData[k].data[d].reportName\n            }\n          }\n        }\n      }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          notificationsBody: { value: JSON.stringify(notBody) },\n          userAction: { value: \"viewInstruction\" },\n          userId: { value: userProfile.userId },\n          docId: { value: dataItem.id },\n          instructionType: { value: dataItem.type },\n          status: { value: currentStatus },\n          editFormDefId: { value: editFormDefId },\n          reportName: { value: report },\n          searchDoc: { value: JSON.stringify(fieldValue) },\n        }\n      }\n      console.log(\"button viewInstruction: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"sendToCD\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin()\n        }\n        else {\n          let updateDocument = getFieldValuesUpdateInstruction()\n          updateDocument[\"filled\"] = true\n          updateDocument[\"filled_at\"] = props.getCurrentFullDateTime()\n          updateDocument[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n          updateDocument[\"signed_depositor_inn\"] = props.esInn\n          updateDocument[\"signed_depositor_full_name\"] = props.esUserFullName\n          updateDocument[\"signed_at_depositor\"] = props.getCurrentFullDateTime()\n          const commandJson =\n          {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: { value: \"updateDocument\" },\n              userId: { value: userProfile.userId },\n              userRole: { value: userProfile.userRole },\n              document: { value: JSON.stringify(updateDocument) },\n              status: { value: \"filled\" }\n            }\n          }\n          // console.log(buttonName, commandJson)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    else if (buttonName === \"sendToCDWithoutES\") {\n      const updateDocument = getFieldValuesUpdateInstruction()\n      updateDocument.filled = true\n      updateDocument.filledUser = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          document: { value: JSON.stringify(updateDocument) },\n          status: { value: \"filled\" }\n        }\n      }\n      console.log(\"button sendToCDWithoutES: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"SignInstructionSaveButton\") {\n      const updateDocument = getFieldValuesUpdateInstruction()\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          document: { value: updateDocument },\n          status: { value: \"\" }\n        }\n      }\n      console.log(\"button signInstruction: \", commandJson)\n      sign(commandJson)\n    }\n    else if (buttonName === \"deleteDocument\") {\n      let docToDelete = selectedDoc.id\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"deleteDocument\" },\n          document: { value: docToDelete.toString() }\n        }\n      }\n      console.log(\"deleteDocument:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно удалить это поручение?\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n          }\n        })\n    }\n    else if (buttonName === \"onExecution\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin()\n        }\n        else {\n          let updateDocument = getFieldValuesUpdateInstruction()\n          updateDocument[\"onExecution\"] = true\n          updateDocument[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n          updateDocument[\"onExecutionDate\"] = props.getCurrentFullDateTime()\n          updateDocument[\"signed_cd_inn\"] = props.esInn\n          updateDocument[\"signed_cd_full_name\"] = props.esUserFullName\n          updateDocument[\"signed_at_cd\"] = props.getCurrentFullDateTime()\n          const commandJson =\n          {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: { value: \"updateDocument\" },\n              userId: { value: userProfile.userId },\n              userRole: { value: userProfile.userRole },\n              document: { value: JSON.stringify(updateDocument) },\n              status: { value: \"onExecution\" }\n            }\n          }\n          console.log(\"onExecution:\", commandJson, updateDocument)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    else if (buttonName === \"Execute\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        const updateDocument = getFieldValuesUpdateInstruction()\n        updateDocument[\"executed\"] = true\n        updateDocument[\"executedUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n        updateDocument[\"executedDate\"] = props.getCurrentFullDateTime()\n        const commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: { value: \"updateDocument\" },\n            userId: { value: userProfile.userId },\n            userRole: { value: userProfile.userRole },\n            document: { value: JSON.stringify(updateDocument) },\n            status: { value: \"executed\" }\n          }\n        }\n        console.log(\"button Execute: \", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"CancelInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        handleOpenModalCancelInstruction()\n      }\n    }\n    else if (buttonName === \"CancelInstructionSaveButton\") {\n      handleCloseModalCancelInstruction()\n      const updateDocument = getFieldValuesUpdateInstruction()\n      updateDocument[\"canceled\"] = true\n      updateDocument[\"сanceledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          document: { value: JSON.stringify(updateDocument) },\n          status: { value: \"canceled\" }\n        }\n      }\n      console.log(\"button CancelInstructionSaveButton: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"CancelInstructionCancelButton\") {\n      handleCloseModalCancelInstruction()\n      fieldValue[\"cancelationReason\"] = null\n      setFieldValue(fieldValue)\n      console.log(\"FIELDS\", fieldValue)\n    }\n    else if (buttonName === \"uploadToXML\") {\n      // Create xml\n      let xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><InstructionsList xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><instructions>\"\n      for (let i = 0; i < filteredDocList.length; i++) {\n        xml += \"<instruction>\"\n        for (let prop in filteredDocList[i]) {\n          xml += \"<\" + prop + \">\"\n          xml += filteredDocList[i][prop]\n          xml += \"</\" + prop + \">\"\n        }\n        xml += \"</instruction>\"\n      }\n      xml += \"</instructions></InstructionsList>\"\n      let finalxml = xml.replace(/<\\/?[0-9]{1,}>/g, '').toString()\n\n      // Download xml\n      let pom = document.createElement('a')\n      let filename = \"UploadInstructions.xml\"\n      let bb = new Blob([finalxml], { type: 'text/plain' })\n\n      pom.setAttribute('href', window.URL.createObjectURL(bb))\n      pom.setAttribute('download', filename)\n\n      pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':')\n      pom.draggable = true\n      pom.classList.add('dragout')\n      pom.click()\n    }\n    else if (buttonName === \"showInstructionReport\") {\n      let reportName = null\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (selectedDoc.type === enumData[k].data[d].id) {\n              let reportId = enumData[k].data[d].report\n              for (let e = 0; e < enumData.length; e++) {\n                if (enumData[e].name === \"instructionReports\") {\n                  for (let t = 0; t < enumData[e].data.length; t++) {\n                    if (reportId === enumData[e].data[t].id) {\n                      reportName = enumData[e].data[t].reportName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      let reportExecutions = {\n        \"reportUnitUri\": \"/reports/interactive/\" + reportName,\n        \"async\": true,\n        \"interactive\": true,\n        \"freshData\": false,\n        \"saveDataSnapshot\": false,\n        \"outputFormat\": \"pdf\", // html xlsx pdf docx\n        \"parameters\": {\n          \"reportParameter\": [{ name: \"id\", value: [selectedDoc.id.toString()] }]\n        }\n      }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"showInstructionReport\" },\n          docId: { value: selectedDoc.id.toString() },\n          instructionType: { value: selectedDoc.type },\n          reportName: { value: reportName },\n          reportVars: { value: \"?id=\" + selectedDoc.id + \"&first_n=\" + userProfile.firstName.trim() + \"&last_n=\" + userProfile.lastName.trim() + \"&middle_n=\" + userProfile.middleName.trim() },\n          reportExecutions: { value: JSON.stringify(reportExecutions) }\n\n        }\n      }\n      console.log(\"button showInstructionReport: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocList\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocList\" },\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"test\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"test\" },\n        }\n      }\n      console.log(\"button back: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n\n    else {\n      console.log(\"button: \", buttonName)\n    }\n  }\n  // Returns Button component\n  function createButton(button, index) {\n    return (\n      <Button variant=\"outlined\"\n        name={button.name}\n        key={index}\n        onClick={() => buttonClick(button.name)}\n        style={{\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        }}\n        value={button.name}\n      >\n        {button.label}\n      </Button>\n    )\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section, index) {\n    return (\n      <Table size=\"small\" key={index + \"table\"}>\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              key={index = \"head\"}\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map((contentItem, index) => (\n            contentItem.show === true &&\n            <TableRow key={index} style={{ height: 30 }}>\n              <TableCell\n                key={index + \"cell1\"}\n                align=\"left\"\n                style={{ width: \"40%\" }}>\n                {contentItem.label}\n              </TableCell>\n              <TableCell\n                key={index + \"cell2\"}\n                align=\"left\"\n                style={{ width: \"60%\", height: 30 }}\n              >{contentBuilder(contentItem)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n  // Create component by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur={handleTextChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressDateTime}\n          type=\"date\"\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\") {\n      return (\n        <TextField\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          // console.log(\"F SEL\", contentItem.name, fieldValue[contentItem.name])\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            // console.log(\"F SEL\", contentItem.name, fieldValue[contentItem.name])\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Int\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressInt}\n          name={contentItem.name}\n          // defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          // onBlur={handleIntChange}\n          // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleIntChange}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: IntegerFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Float\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressFloat}\n          name={contentItem.name}\n          // onBlur={handleFloatChange}\n          // value={fieldValue[contentItem.name]}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleFloatChange}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: FloatFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true) ? true : false}\n        />\n      )\n    }\n    else if (contentItem.type === \"RadioGroup\") {\n      let radioGroupItems = []\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === contentItem.name) {\n          radioGroupItems = enumData[i].data\n        }\n      }\n      return (\n        <RadioGroup\n          name={contentItem.name}\n          value={fieldValue[contentItem.name]}\n          onChange={handleRadioGroupChange}\n        >\n          {radioGroupItems.map(groupItem => {\n            return (\n              <FormControlLabel\n                value={groupItem.id}\n                label={groupItem.label}\n                control={<Radio style={{ height: \"5px\", color: \"green\" }} />}\n                disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n              />\n            )\n          })}\n\n        </RadioGroup>\n      )\n    }\n  }\n  // Key press handlers for some fields\n  function onKeyPressText(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressDateTime(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressInt(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let int = parseInt(stringNum)\n          fieldValue[event.target.name] = int\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressFloat(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let float = parseFloat(stringNum)\n          fieldValue[event.target.name] = float\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"SignInstructionSaveButton\", null)\n    }\n  }\n  function onKeyPressModalCancelInstruction(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"CancelInstructionSaveButton\", null)\n    }\n  }\n\n  // custom allerts\n  function swAlert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" }\n      })\n    )\n  }\n  function getGridFormEnumLabel(name, value) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (name === gridFormEnumData[i].name) {\n          for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n            if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n              return gridFormEnumData[i].data[l].label\n            }\n          }\n        }\n      }\n    }\n  }\n  // Create grid form components\n  function getGridFormItems(value, type, dataItem, name) {\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        return getGridFormEnumLabel(name, value)\n      }\n    }\n    else if (type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\" }}\n          checked={(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        return moment(value).format('YYYY-MM-DD HH:MM')\n      }\n    }\n    else if (type === \"Text\") {\n      if (name === \"instructionStatus\") {\n        return getInstructionStatus(dataItem)\n      }\n      else {\n        if (value === null || value === \"\" || value === undefined) {\n          return \"-\"\n        }\n        else {\n          return (<td>{value}</td>)\n        }\n      }\n    }\n    else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newCur = props.currencyBeautifier(value)\n        return newCur\n      }\n    }\n    else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newInt = props.intBeautifier(value)\n        return newInt\n      }\n    }\n    else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        return (<td>{value}</td>)\n      }\n    }\n\n  }\n  function getInstructionStatus(dataItem) {\n    let status = \"\"\n    if (dataItem[\"filled\"] === true) {\n      status = \"Введено\"\n    }\n    if (dataItem[\"onExecution\"] === true) {\n      status = \"На исполнении\"\n    }\n    if (dataItem[\"executed\"] === true) {\n      status = \"Исполнено\"\n    }\n    if (dataItem[\"canceled\"] === true) {\n      status = \"Отменено\"\n    }\n    return status\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  // filter docList by filled parameters\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = []\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data\n    }\n    else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true\n          }\n          else {\n            // if(Data[i][key] !== null){\n            let contentType = getContentType(key)\n            if (contentType === \"Text\") {\n              if (Data[i][key] !== null) {\n                try {\n                  let searchField = fields[key].toLowerCase()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                catch (er) {\n                  console.log(\"ERR\", er)\n                  match = true\n                }\n              }\n              else {\n                match = false\n                break\n              }\n            }\n            else if (contentType === \"Int\" || contentType === \"Float\") {\n              if (Data[i][key] !== null) {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else { match = true }\n              }\n              else {\n                match = false\n                break\n              }\n            }\n            else if (contentType === \"Enum\") {\n              if (key === \"depositor\") {\n                // console.log(\"DEPOSITOR\", fields[key], Data[i][\"depositor2\"])\n                if (fields[key] === Data[i][key] || fields[key] === Data[i][\"depositor2\"]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else if (key === \"account\") {\n                if (fields[key] === Data[i][\"accFrom\"] || fields[key] === Data[i][\"accTo\"]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else {\n                if (fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n\n            }\n            else if (contentType === \"DateTime\") {\n              if (Data[i][key] !== null) {\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true\n                }\n                else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n              else {\n                match = false\n                break\n              }\n            }\n            else if (contentType === \"Bool\") {\n              if (key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\") {\n                let instrStatus = \"\"\n                let statusSelected = false\n                let fieldStatus = \"\"\n                // Check fields\n                if (fields[\"filled\"] === true) {\n                  fieldStatus = \"filled\"\n                  statusSelected = true\n                }\n                if (fields[\"onExecution\"] === true) {\n                  fieldStatus = \"onExecution\"\n                  statusSelected = true\n                }\n                if (fields[\"executed\"] === true) {\n                  fieldStatus = \"executed\"\n                  statusSelected = true\n                }\n                if (fields[\"canceled\"] === true) {\n                  fieldStatus = \"canceled\"\n                  statusSelected = true\n                }\n                if (statusSelected === true) {\n                  // Check Instruction\n                  if (Data[i][\"filled\"] === true) {\n                    instrStatus = \"filled\"\n                  }\n                  if (Data[i][\"onExecution\"] === true) {\n                    instrStatus = \"onExecution\"\n                  }\n                  if (Data[i][\"executed\"] === true) {\n                    instrStatus = \"executed\"\n                  }\n                  if (Data[i][\"canceled\"] === true) {\n                    instrStatus = \"canceled\"\n                  }\n                  // Check whether statuses are equal\n                  if (fieldStatus === instrStatus) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else {\n                  match = true\n                }\n              }\n              else {\n                if (Data[i][key] === null || fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n            }\n            // }\n            // else{\n            //   match = false\n            //   break\n            // }\n          }\n        }\n        if (match === true) {\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered docList by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n    // setUpdateState(getUUID())\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLastClick() {\n    if (page !== getPageAmount()) {\n      setPage(getPageAmount())\n      fetchBySize((getPageAmount() - 1) * size, filteredDocList.length, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на последней странице!\")\n      setShowSnackBar(true)\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.floor(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  function getBackgroundColor(signed, urgent) {\n    if (signed !== undefined) {\n      if (signed === true) {\n        return \"white\"\n      }\n      else {\n        if (urgent === true) {\n          return \"#EFB2B2\"\n        }\n        else {\n          return \"#FCEAD3\"\n        }\n      }\n    }\n    else return \"white\"\n  }\n  function checkToShowSection(section) {\n    let showSection = false\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true\n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i) {\n    let lastSection = true\n    if (i === gridForm.sections.length - 1) { // The last section\n      return true\n    }\n    else {\n      let nextS = i + 1\n      // console.log(\"IT\", i, gridForm.sections[nextS])\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) { // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n\n  function getForm() {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n        <Grid item xs={isSearchForm === true ? 12 : 9}>\n          <Paper>\n            {isSearchForm === false &&\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <TableHead>\n                  <TableRow style={{ maxHeight: 25 }}>\n                    <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                  </TableRow>\n                </TableHead>\n              </Grid>\n            }\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              {Form.sections.map((section, index) => {\n                let showSection = checkToShowSection(section)\n                if (showSection === true) {\n                  return sectionBuilder(section, index)\n                }\n              })}\n            </Grid>\n\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function dynamicSort(property, sortOrder, type) {\n    // if (type === \"DateTime\" || type === \"Bool\") {\n    //   sortOrder = sortOrder * -1\n    // }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if (type === \"DateTime\") {\n      sortOrder = sortOrder * -1\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA = dateA.getTime() / 1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB = dateB.getTime() / 1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else {\n          if (a[property] === null) {\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if (type === \"Int\" || type === \"Text\" || type === \"Float\") {\n      if (property === \"instructionStatus\") {\n        return function (a, b) {\n          // console.log(\"A\", a)\n          let statusA = getInstructionStatus(a)\n          let statusB = getInstructionStatus(b)\n          var result = (statusA < statusB) ? -1 : (statusA > statusB) ? 1 : 0\n          return result * sortOrder\n        }\n      }\n      else {\n        return function (a, b) {\n          var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n          return result * -1 * sortOrder\n        }\n      }\n\n    }\n    else if (type === \"Bool\" || type === \"BoolCustom\") {\n      sortOrder = sortOrder * -1\n      return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n    else if (type === \"Enum\") {\n      return function (a, b) {\n        let labelA = getEnumLabel(property, a[property])\n        // console.log(\"A\", property, a[property], labelA)\n        let labelB = getEnumLabel(property, b[property])\n        // console.log(\"labelB\", labelB, property, b)\n        var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n  }\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size - 1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function getSecType(id) {\n    let type = 1\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"security\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === id) {\n              type = gridFormEnumData[i].data[d].type\n            }\n          }\n        }\n      }\n    }\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"securityTypes\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === type) {\n              return gridFormEnumData[i].data[d].label\n            }\n          }\n        }\n      }\n    }\n  }\n  function calculateColSpan(contents) {\n    let num = 0\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1\n      }\n    }\n    return num\n  }\n  const handleContextMenu = (event) => {\n    if (userProfile.userRole === \"1\") {\n      event.preventDefault()\n      setAnchorEl(event.currentTarget)\n    }\n  }\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n    // console.log(\"CLOSE\", fieldValue)\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name]\n      }\n    }\n    console.log(\"nForm\", gridForm)\n    setGridForm(gridForm)\n    setUpdateState(getUUID())\n  }\n  function createMenuItems() {\n    let columns = []\n    columns.push(\n      <tr>\n        <td\n          style={{ paddingLeft: 5, cursor: \"pointer\" }}\n          name={\"selectAll\"}\n          onClick={() => handleTableCheckboxChange(\"selectAll\")}\n        >\n          Выбрать все\n        </td>\n        <td>\n          <Checkbox\n            style={{ maxWidth: 20, height: 15, color: \"green\" }}\n            name={\"selectAll\"}\n            onChange={handleGridCheckboxChange}\n            checked={(gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined) ? false : true}\n          />\n        </td>\n      </tr>\n    )\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name\n        columns.push(\n          <tr>\n            <td\n              style={{ paddingLeft: 5, cursor: \"pointer\", background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\" }}\n              name={name}\n              onClick={() => handleTableCheckboxChange(name)}\n            >\n              {gridForm.sections[s].contents[c].label}\n            </td>\n            <td>\n              <Checkbox\n                style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                name={name}\n                onChange={handleGridCheckboxChange}\n                checked={(gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined) ? false : true}\n              />\n            </td>\n          </tr>\n        )\n      }\n    }\n    return columns\n  }\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId))\n  }\n  const handleGridCheckboxChange = (event) => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = { [event.target.name]: event.target.checked }\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name]\n      }\n      // console.log(\"selectAll\", newFields)\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [event.target.name]: event.target.checked })\n    }\n  }\n  const handleTableCheckboxChange = (name) => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue }\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name]\n      }\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [name]: !gridFieldValue[name] })\n    }\n  }\n  function previewInstruction(instr) {\n    // console.log(\"SELECTED INSTR\", instr)\n    setSelectedInstruction(instr)\n  }\n  try {\n    return (\n      <Grid>\n        {isSearchForm !== null &&\n          isSearchForm === true\n          ?\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={9}>\n              <Accordion expanded={accordionExpanded} onChange={() => handleExpandAccordion()}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                >\n                  <Typography>{Form.label}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {getForm()}\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n          </Grid>\n          :\n          getForm()\n        }\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n          {buttons.map((button, index) => {\n            return createButton(button, index)\n          })}\n          <Button\n            component=\"a\"\n            href=\"../Инструкция Рутокен.docx\"\n            download\n            variant=\"outlined\"\n            style={{\n              margin: 3,\n              backgroundColor: \"#13611B\",\n              color: \"white\",\n              height: 32,\n              fontSize: 12\n            }}\n            onClick={() => buttonClick(\"downloadES\")}\n            startIcon={<DescriptionIcon />}\n          >Инструкция ЭЦП\n          </Button>\n          <Button\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.rutoken.ru/support/download/rutoken-plugin/\"\n            download\n            variant=\"outlined\"\n            style={{\n              margin: 3,\n              backgroundColor: \"#13611B\",\n              color: \"white\",\n              height: 32,\n              fontSize: 12\n            }}\n          >Плагин\n          </Button>\n          <Button\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.rutoken.ru/support/download/windows/\"\n            download\n            variant=\"outlined\"\n            style={{\n              margin: 3,\n              backgroundColor: \"#13611B\",\n              color: \"white\",\n              height: 32,\n              fontSize: 12\n            }}\n          >Драйвер\n          </Button>\n        </Grid>\n        {isSearchForm === true &&\n          <ReplayIcon style={{ paddingTop: 3, cursor: \"pointer\" }} onClick={() => buttonClick(\"updateDocList\")} />\n        }\n        {/* Create grid table with data from doclist */}\n        {docList !== null &&\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <div style={{ height: \"500px\", overflow: \"auto\" }}>\n                  <table size=\"small\" class=\"main-table-style\" id={gridTableId}>\n                    <thead class=\"thead-style\" style={{ position: \"sticky\", top: 0 }}>\n                      {/* 1st Row Sections Labels */}\n                      <tr>\n                        <td class=\"td-head-first-child\" colSpan=\"1\" onContextMenu={(ev) => handleContextMenu(ev)}></td>\n                        {gridForm.sections.map((section, index) => {\n                          let showSection = checkToShowSection(section)\n                          if (showSection === true) {\n                            let lastSection = checkSectionOnLastChild(index)\n                            return (\n                              <td\n                                class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                colSpan={calculateColSpan(section.contents)}\n                                onContextMenu={(ev) => handleContextMenu(ev)}\n                              >\n                                {section.label}\n                              </td>\n                            )\n                          }\n                        })}\n                      </tr>\n                      {/* 2nd Row Sections Contents labels */}\n                      <tr>\n                        <td\n                          class=\"td-head-style-2row\"\n                          rowSpan=\"2\"\n                          style={{ \"minWidth\": \"65px\" }}\n                          onContextMenu={(ev) => handleContextMenu(ev)}\n                        >\n                          Действие\n                        </td>\n                        {gridForm.sections.map(section =>\n                          section.contents.map(contentItem => {\n                            if (contentItem.show === true) {\n                              return (\n                                <td\n                                  class=\"td-head-style-2row\"\n                                  rowSpan=\"2\"\n                                  onClick={() => sortDataByColumn(contentItem.name, contentItem.type)}\n                                  onContextMenu={(ev) => handleContextMenu(ev)}\n                                >\n                                  {contentItem.label}{sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{ marginBottom: -8 }} /> : <ArrowDropUpIcon style={{ marginBottom: -8 }} /> : \"\"}\n                                </td>\n                              )\n                            }\n                          })\n                        )}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.keys(docList).length !== 0 &&\n                        docList.map(dataItem => (\n                          <tr style={{ \"height\": 30, \"backgroundColor\": getBackgroundColor(dataItem.opened, dataItem.urgent), cursor: \"pointer\" }}>\n                            <td style={{ \"width\": 34, \"border-bottom\": \"1px solid grey\" }}>\n                              {gridFormButtons !== \"null\" &&\n                                gridFormButtons.map(button =>\n                                  <Button\n                                    key={button.name}\n                                    name={button.name}\n                                    variant=\"outlined\"\n                                    value={button.name}\n                                    onClick={() => buttonClick(button.name, dataItem)}\n                                    style={{\n                                      margin: 1,\n                                      height: 24,\n                                      fontSize: 10,\n                                      maxWidth: 32,\n                                      backgroundColor: button.backgroundColor,\n                                      borderColor: \"darkgreen\",\n                                      color: \"darkgreen\"\n                                    }}\n                                  >{button.label}\n                                  </Button>\n                                )}\n                            </td>\n                            {gridForm.sections.map(section => {\n                              return (\n                                section.contents.map(contentItem => {\n                                  if (contentItem.show === true) {\n                                    return (\n                                      <td class=\"td-body-style\" style={{ color: (selectedInstruction !== null ? (selectedInstruction.id === dataItem.id ? \"blue\" : \"black\") : \"black\") }} onClick={() => previewInstruction(dataItem)}>\n                                        {getGridFormItems(dataItem[contentItem.name], contentItem.type, dataItem, contentItem.name)}\n                                      </td>\n                                    )\n                                  }\n                                })\n                              )\n                            })}\n                          </tr>\n                        )\n                        )}\n                    </tbody>\n                  </table>\n                </div>\n                <tfoot>\n                  <tr>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <Button\n                        variant=\"outlined\"\n                        style={{ background: \"#047535\", color: \"white\", height: 28 }}\n                        onClick={() => downloadExcel()}\n                      >В EXCEL\n                      </Button>\n                    </td>\n                    <td style={{ paddingLeft: \"20px\" }}>\n                      <div style={{ minWidth: 90, color: \"black\" }}>Кол-во записей</div>\n                    </td>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <FormControl\n                        variant=\"outlined\"\n                        style={{ minWidth: 30 }}\n                      >\n                        <GridSelect\n                          onChange={handleChangeRowsPerPage}\n                          style={{ height: 25, color: \"black\" }}\n                          value={size}\n                        >\n                          <MenuItem value={10}>10</MenuItem>\n                          <MenuItem value={20}>20</MenuItem>\n                          <MenuItem value={50}>50</MenuItem>\n                          <MenuItem value={100}>100</MenuItem>\n                          <MenuItem value={200}>200</MenuItem>\n                          <MenuItem value={500}>500</MenuItem>\n                          <MenuItem value={500}>1000</MenuItem>\n                        </GridSelect>\n                      </FormControl>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На первую страницу\">\n                        <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                          <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На предыдущюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                          <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td style={{ color: \"black\", fontSize: 16 }}>\n                      <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                    </td>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <Tooltip title=\"Перейти на указанную страницу\">\n                        <Button\n                          onClick={() => GoToPage()}\n                          variant=\"outlined\"\n                          style={{\n                            height: 22,\n                            backgroundColor: \"#D1D6D6\",\n                            fontSize: 12\n                          }}\n                        >перейти\n                        </Button>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На следующюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                          <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На последнюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowLastClick()}>\n                          <LastPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()}</td>\n                    <td style={{ paddingLeft: \"30px\" }}>\n                      <div style={{ minWidth: 90, color: \"black\" }}>Общее кол-во {filteredDocList !== null ? filteredDocList.length : 0}</div>\n                    </td>\n                  </tr>\n                </tfoot>\n              </Paper>\n              {selectedInstruction !== null &&\n                <table size=\"small\" style={{ width: \"100%\" }}>\n                  {selectedInstruction.depositor !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Депонент(Со счёта):</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"depositor\", selectedInstruction.depositor)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.depositor2 !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Депонент(На счёт):</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"depositor2\", selectedInstruction.depositor2)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.security !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Ценная бумага:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"security\", selectedInstruction.security) + \" \" + getSecType(selectedInstruction.security)}</td>\n                    </tr>\n\n                  }\n                  {selectedInstruction.currency !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Валюта:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"currency\", selectedInstruction.currency)}</td>\n                    </tr>\n\n                  }\n                  {selectedInstruction.security !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Эмитент:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"issuer\", selectedInstruction.issuer)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.tradingSystem !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Торговая система:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"tradingSystem\", selectedInstruction.tradingSystem)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.corrDepository !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Корр. депозитарий:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"corrDepository\", selectedInstruction.corrDepository)}</td>\n                    </tr>\n                  }\n                  {(selectedInstruction.ownerName !== null || selectedInstruction.ownerDocument !== null || selectedInstruction.ownerAddress !== null) &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Данные о владельце:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{selectedInstruction.ownerName + \" \" + selectedInstruction.ownerDocument + \" \" + selectedInstruction.ownerAddress}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.accFrom !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Со счёта:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"accFrom\", selectedInstruction.accFrom)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.accTo !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>На счёт:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"accTo\", selectedInstruction.accTo)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.quantity !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Количество:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{selectedInstruction.quantity}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.basis !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Основание:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{selectedInstruction.basis}</td>\n                    </tr>\n                  }\n                </table>\n              }\n              <Menu\n                anchorEl={anchorEl}\n                open={openMenu}\n                onClose={handleCloseMenu}\n                MenuListProps={{\n                  'aria-labelledby': 'basic-button',\n                }}\n                style={{ paddingLeft: \"100px\" }}\n              >\n                <table>\n                  {createMenuItems()}\n                </table>\n              </Menu>\n            </Grid>\n          </Grid>\n        }\n        <Snackbar\n          open={showSnackBar}\n          onClose={() => handleCloseSnackBar()}\n          autoHideDuration={1200}\n          message={snackBarMessage}\n        />\n        <Modal\n          open={showModalCancelInstruction}\n          onClose={handleCloseModalCancelInstruction}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Введите причину отмены</h3>\n            <TextField\n              variant=\"outlined\"\n              multiline\n              autoFocus\n              name=\"сancelationReason\"\n              defaultValue={(fieldValue[\"сancelationReason\"] >= 0) ? fieldValue[\"сancelationReason\"] : \"\"}\n              onChange={handleTextChange}\n              onKeyPress={onKeyPressModalCancelInstruction}\n              style={{ width: \"100%\" }}\n            />\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"CancelInstructionSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"CancelInstructionCancelButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#E73639\"\n              }}\n            >Отмена\n            </Button>\n          </div>\n        </Modal>\n        <Modal\n          open={showModalEnterPin}\n          onClose={handleCloseModalEnterPin}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Введите ПИН код Рутокена</h3>\n            <FormControl variant=\"outlined\" style={{ width: \"100%\" }} error={wrongPin}>\n              <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n              <OutlinedInput\n                type={showPin ? 'text' : 'password'}\n                defaultValue={rutokenPin}\n                onChange={handlePinChange}\n                onKeyPress={onKeyPressModalEnterPin}\n                autoFocus\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPin}\n                      edge=\"end\"\n                    >\n                      {showPin ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={25}\n              />\n            </FormControl>\n            {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"SignInstructionSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={handleCloseModalEnterPin}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#E73639\"\n              }}\n            >Отмена\n            </Button>\n          </div>\n        </Modal>\n\n      </Grid>\n    )\n  }\n  catch (error) {\n    console.log(\"ERROR\", error)\n    return (\n      <Grid container direction=\"row\" justify=\"center\" spacing={0}>\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      </Grid>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}