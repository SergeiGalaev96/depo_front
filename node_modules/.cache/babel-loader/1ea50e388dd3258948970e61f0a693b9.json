{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\Forms\\\\Forms.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Modal from '@material-ui/core/Modal'; // Icons\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit'; // Form components\n\nimport Checkbox from '@material-ui/core/Checkbox'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nvar generator = require('generate-password');\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [fieldValue, setFieldValue] = useState({});\n  const [buttons] = useState(props.userTask.buttons);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(\"create\");\n  const [selectedSectionName, setSelectedSectionName] = useState(\"\");\n  const [modalStyle] = useState(getModalStyle);\n  const [modalFieldValue, setModalFieldValue] = useState({\n    type: \"Text\",\n    name: \"\",\n    label: \"\",\n    enumDef: \"\",\n    edit: true,\n    show: true,\n    required: false\n  }); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"FORMS PROPS\", props);\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n\n      if (typeof parsedSelectedDoc === \"string\") {\n        parsedSelectedDoc = JSON.parse(parsedSelectedDoc);\n      }\n\n      let fields = {};\n      console.log(\"SDOC\", parsedSelectedDoc);\n\n      for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n        for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n          let contName = parsedSelectedDoc.sections[s].contents[c].name; // console.log(\"ITEM\", parsedSelectedDoc.sections[s].contents[c])\n          // fields[contName] = {\n          //   type: parsedSelectedDoc.sections[s].contents[c].type,\n          //   name: parsedSelectedDoc.sections[s].contents[c].name,\n          //   label: parsedSelectedDoc.sections[s].contents[c].label,\n          //   enumDef: parsedSelectedDoc.sections[s].contents[c].enumDef !== undefined ? parsedSelectedDoc.sections[s].contents[c].enumDef : \"\",\n          //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n          //   show: parsedSelectedDoc.sections[s].contents[c].show,\n          //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n          // }\n\n          fields[contName] = parsedSelectedDoc.sections[s].contents[c];\n        }\n      }\n\n      console.log(\"FORM FIELDS\", fields); // Check form items to be checked\n\n      if (props.userTask.docId !== \"null\") {\n        let instructionTypeDoc = JSON.parse(props.userTask.docId);\n        console.log(\"DOC\", parsedSelectedDoc, instructionTypeDoc);\n        parsedSelectedDoc.label = parsedSelectedDoc.label + instructionTypeDoc.name;\n\n        if (instructionTypeDoc.account_from === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c];\n              let contName = cItem.name;\n\n              if (contName === \"accFrom\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n\n              if (contName === \"depositor\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n\n        if (instructionTypeDoc.account_to === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c];\n              let contName = cItem.name;\n\n              if (contName === \"accTo\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n\n              if (contName === \"depositor2\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n\n        if (instructionTypeDoc.corr === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c];\n              let contName = cItem.name;\n\n              if (contName === \"corrDepository\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n              }\n            }\n          }\n        }\n\n        if (instructionTypeDoc.owner === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c];\n              let contName = cItem.name;\n\n              if (contName === \"ownerName\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n\n              if (contName === \"ownerDocument\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n\n              if (contName === \"ownerAddress\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n\n        if (instructionTypeDoc.trade === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c];\n              let contName = cItem.name;\n\n              if (contName === \"tradingSystem\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // cItem.show = true\n                // cItem.required = cItem.required !== undefined ? cItem.required : false\n                // fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n\n        if (instructionTypeDoc.it_base === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c];\n              let contName = cItem.name;\n\n              if (contName === \"security\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n\n              if (contName === \"issuer\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n\n        if (instructionTypeDoc.it_base === 2) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c];\n              let contName = cItem.name;\n\n              if (contName === \"currency\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n\n              if (contName === \"quantity\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true;\n                cItem.show = true;\n                cItem.required = cItem.required !== undefined ? cItem.required : false;\n                fields[contName] = cItem; // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n      }\n\n      setFieldValue(fields);\n      setSelectedDoc(parsedSelectedDoc);\n    }\n\n    setUpdateState(getUUID());\n  }, []); // random UUID generator\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Collect data to update doc\n\n\n  function getFieldValuesCreateUpdateForm() {\n    let formToUpdate = selectedDoc;\n\n    for (let s = 0; s < selectedDoc.sections.length; s++) {\n      for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n        let contName = selectedDoc.sections[s].contents[c].name;\n        formToUpdate.sections[s].contents[c].type = fieldValue[contName].type;\n        formToUpdate.sections[s].contents[c].name = fieldValue[contName].name;\n        formToUpdate.sections[s].contents[c].label = fieldValue[contName].label;\n        formToUpdate.sections[s].contents[c].enumDef = fieldValue[contName].enumDef;\n        formToUpdate.sections[s].contents[c].edit = fieldValue[contName].edit;\n        formToUpdate.sections[s].contents[c].show = fieldValue[contName].show;\n        formToUpdate.sections[s].contents[c].required = fieldValue[contName].required;\n      }\n    }\n\n    return formToUpdate;\n  }\n\n  function buttonClick(name, item) {\n    if (name === \"updateDocument\") {\n      let form = getFieldValuesCreateUpdateForm();\n      let updateBody = {\n        \"defid\": selectedDoc.defid,\n        \"created_at\": selectedDoc.created_at,\n        \"data\": JSON.stringify(form)\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"updateForm:\", form);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (name === \"showInstructionTypeEditForm\") {\n      let defid = getUUID();\n      let form = getFieldValuesCreateUpdateForm();\n      form.defid = defid;\n      let createBody = {\n        \"defid\": defid,\n        \"data\": JSON.stringify(form)\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"showInstructionTypeEditForm\"\n          },\n          instructionTypeCreateFormDefId: {\n            value: defid\n          },\n          instructionTypeCreateFormBody: {\n            value: JSON.stringify(createBody)\n          }\n        }\n      };\n      console.log(\"showInstructionTypeEditForm:\", commandJson);\n      props.sendFieldValues(commandJson);\n    } else if (name === \"saveInstructionType\") {\n      let defid = getUUID();\n      let form = getFieldValuesCreateUpdateForm();\n      form.defid = defid;\n      let createBody = {\n        \"defid\": defid,\n        \"data\": JSON.stringify(form)\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"saveInstructionType\"\n          },\n          instructionTypeEditFormDefId: {\n            value: defid\n          },\n          instructionTypeEditFormBody: {\n            value: JSON.stringify(createBody)\n          }\n        }\n      };\n      console.log(\"saveInstructionType:\", commandJson);\n      props.sendFieldValues(commandJson);\n    } else if (name === \"saveContentItem\") {\n      if (modalType === \"create\") {\n        // console.log(\"create\", modalFieldValue)\n        let newSelDoc = { ...selectedDoc\n        };\n\n        for (let s = 0; s < selectedDoc.sections.length; s++) {\n          if (selectedDoc.sections[s].name === selectedSectionName) {\n            newSelDoc.sections[s].contents.push(modalFieldValue);\n          }\n        }\n\n        setFieldValue({ ...fieldValue,\n          [modalFieldValue.name]: modalFieldValue\n        });\n        setSelectedDoc(newSelDoc);\n        setShowModal(false);\n        setModalFieldValue({\n          type: \"Text\",\n          name: \"\",\n          label: \"\",\n          enumDef: \"\",\n          edit: true,\n          show: true,\n          required: false\n        });\n      } else {\n        let newSelDoc = { ...selectedDoc\n        };\n\n        for (let s = 0; s < selectedDoc.sections.length; s++) {\n          for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n            if (selectedDoc.sections[s].contents[c].name === modalFieldValue.name) {\n              newSelDoc.sections[s].contents[c] = modalFieldValue;\n            }\n          }\n        }\n\n        setFieldValue({ ...fieldValue,\n          [modalFieldValue.name]: modalFieldValue\n        });\n        setSelectedDoc(newSelDoc);\n        setShowModal(false);\n        setModalFieldValue({\n          type: \"Text\",\n          name: \"\",\n          label: \"\",\n          enumDef: \"\",\n          edit: true,\n          show: true,\n          required: false\n        }); // console.log(\"edit\")\n      }\n    } else if (name === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (name === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"UNKNOWN Button \", name);\n    }\n  }\n\n  function handleFormLabelChange(event) {\n    selectedDoc.label = event.target.value;\n    setSelectedDoc(selectedDoc);\n  }\n\n  function handleSectionLabelChange(event) {\n    for (let s = 0; s < selectedDoc.sections.length; s++) {\n      if (event.target.name === selectedDoc.sections[s].name) {\n        selectedDoc.sections[s].label = event.target.value;\n        setSelectedDoc(selectedDoc);\n        break;\n      }\n    } // console.log(\"SECT LABEL\", selectedDoc)\n\n  }\n\n  function handleContentItemLabelChange(event) {\n    let contFields = fieldValue[event.target.name];\n    contFields.label = event.target.value;\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: contFields\n    }); // console.log(\"FIELDVAL\", fieldValue)\n  }\n\n  function handleModalContentItemTextChange(event) {\n    setModalFieldValue({ ...modalFieldValue,\n      [event.target.name]: event.target.value\n    });\n    console.log(\"MOD FIELDVAL\", modalFieldValue);\n  }\n\n  const handleModalContentItemCheckBoxChange = event => {\n    setModalFieldValue({ ...modalFieldValue,\n      [event.target.name]: event.target.checked\n    }); // console.log(\"FIELDVAL\", fieldValue)\n  };\n\n  function handleContentItemTypeChange(event) {\n    let contFields = fieldValue[event.target.name];\n    contFields.type = event.target.value;\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: contFields\n    }); // console.log(\"FIELDVAL\", fieldValue)\n  }\n\n  function handleContentItemEnumDefChange(event) {\n    let contFields = fieldValue[event.target.name];\n    contFields.enumDef = event.target.value;\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: contFields\n    }); // console.log(\"FIELDVAL\", fieldValue)\n  }\n\n  const handleCheckboxEditChange = event => {\n    let contFields = fieldValue[event.target.name];\n    contFields.edit = event.target.checked;\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: contFields\n    }); // console.log(\"FIELDVAL\", fieldValue)\n  };\n\n  const handleCheckboxShowChange = event => {\n    let contFields = fieldValue[event.target.name];\n    contFields.show = event.target.checked;\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: contFields\n    }); // console.log(\"FIELDVAL\", fieldValue)\n  };\n\n  const handleCheckboxRequiredChange = event => {\n    let contFields = fieldValue[event.target.name];\n    contFields.required = event.target.checked;\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: contFields\n    }); // console.log(\"FIELDVAL\", fieldValue)\n  }; // Pick up selected row\n\n\n  function contentItemArrowUpClick(itemName) {\n    for (let s = 0; s < selectedDoc.sections.length; s++) {\n      for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n        if (selectedDoc.sections[s].contents[c].name === itemName) {\n          if (c > 0) {\n            let prevItem = selectedDoc.sections[s].contents[c - 1];\n            let currItem = selectedDoc.sections[s].contents[c];\n            selectedDoc.sections[s].contents[c - 1] = currItem;\n            selectedDoc.sections[s].contents[c] = prevItem; // console.log(\"UP\", selectedDoc.sections[s].contents[c])\n\n            break;\n          }\n        }\n      }\n    }\n\n    setUpdateState(getUUID());\n  } // Put down selected row\n\n\n  function contentItemArrowDownClick(itemName) {\n    for (let s = 0; s < selectedDoc.sections.length; s++) {\n      for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n        if (selectedDoc.sections[s].contents[c].name === itemName) {\n          if (c < selectedDoc.sections[s].contents.length - 1) {\n            let nextItem = selectedDoc.sections[s].contents[c + 1];\n            let currItem = selectedDoc.sections[s].contents[c];\n            selectedDoc.sections[s].contents[c + 1] = currItem;\n            selectedDoc.sections[s].contents[c] = nextItem; // console.log(\"DOWN\", selectedDoc.sections[s].contents[c])\n\n            break;\n          }\n        }\n      }\n    }\n\n    setUpdateState(getUUID());\n  }\n\n  function contentItemDeleteClick(itemName) {\n    return swal({\n      text: \"Удалить данное поле?\",\n      icon: \"warning\",\n      buttons: {\n        ok: \"Ок\",\n        cancel: \"Отмена\"\n      }\n    }).then(click => {\n      if (click === \"ok\") {\n        let newSelDoc = { ...selectedDoc\n        };\n\n        for (let s = 0; s < selectedDoc.sections.length; s++) {\n          let newContents = [];\n\n          for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n            if (selectedDoc.sections[s].contents[c].name !== itemName) {\n              newContents.push(selectedDoc.sections[s].contents[c]);\n            }\n          }\n\n          newSelDoc.sections[s].contents = newContents;\n        }\n\n        setSelectedDoc(newSelDoc);\n      }\n    });\n  }\n\n  function contentItemEditClick(item, sectionName) {\n    setModalFieldValue(item);\n    setShowModal(true);\n    setModalType(\"edit\");\n    setSelectedSectionName(sectionName);\n  }\n\n  function rowSelected(rowName) {\n    setSelectedRow(rowName); // console.log(\"rowSelected\", rowName)\n  }\n\n  function showContentItemCreateForm(sectionName) {\n    setShowModal(true);\n    setModalType(\"create\");\n    setSelectedSectionName(sectionName);\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: section.name,\n      onBlur: handleSectionLabelChange,\n      style: {\n        \"width\": \"50%\"\n      },\n      defaultValue: section.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 17\n      }\n    }))))), section.contents.length > 0 && bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      style: {\n        \"border-collapse\": \"collapse\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 13\n      }\n    }, \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 13\n      }\n    }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0435\\u043C\\u043E\\u0435\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0430\\u0435\\u043C\\u043E\\u0435\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0435\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 13\n      }\n    }, \"\\u041F\\u043E\\u0440\\u044F\\u0434\\u043E\\u043A\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 13\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\",\n        fontWeight: \"bold\",\n        cursor: \"pointer\"\n      },\n      onClick: () => showContentItemCreateForm(section.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 13\n      }\n    }, \"+\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }\n    }, section.contents.map(contentItem => /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        backgroundColor: selectedRow === contentItem.name ? \"#B8E9F8\" : \"white\"\n      },\n      onClick: () => rowSelected(contentItem.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\"\n      },\n      width: \"20%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: contentItem.name,\n      onChange: handleContentItemLabelChange,\n      style: {\n        \"width\": \"100%\"\n      },\n      value: fieldValue[contentItem.name].label,\n      multiline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: contentItem.name,\n      onChange: handleCheckboxEditChange,\n      checked: fieldValue[contentItem.name].edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        border: \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: contentItem.name,\n      onChange: handleCheckboxShowChange,\n      checked: fieldValue[contentItem.name].show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        height: 30,\n        border: \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: contentItem.name,\n      onChange: handleCheckboxRequiredChange,\n      checked: fieldValue[contentItem.name].required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        height: 30,\n        border: \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-around\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n      fontSize: \"middle\",\n      style: {\n        color: \"green\",\n        cursor: \"pointer\"\n      },\n      onClick: () => contentItemArrowUpClick(contentItem.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n      fontSize: \"middle\",\n      style: {\n        color: \"orange\",\n        cursor: \"pointer\"\n      },\n      onClick: () => contentItemArrowDownClick(contentItem.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        height: 30,\n        border: \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DeleteForeverIcon, {\n      fontSize: \"middle\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => contentItemDeleteClick(contentItem.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      style: {\n        height: 30,\n        border: \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      fontSize: \"middle\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => contentItemEditClick(contentItem, section.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  if (updateState !== null && selectedDoc !== null) {\n    try {\n      return /*#__PURE__*/React.createElement(Grid, {\n        key: updateState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        style: {\n          \"border-collapse\": \"collapse\",\n          \"align\": \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        style: {\n          \"maxHeight\": 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          \"fontSize\": 16,\n          \"color\": \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        onBlur: handleFormLabelChange,\n        style: {\n          \"width\": \"80%\"\n        },\n        defaultValue: selectedDoc.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 25\n        }\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 19\n        }\n      }, selectedDoc.sections.map(section => {\n        return sectionBuilder(section);\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 19\n        }\n      }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n        key: index,\n        name: button.name,\n        variant: \"outlined\",\n        onClick: () => buttonClick(button.name, null),\n        style: {\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 23\n        }\n      }, button.label))))), /*#__PURE__*/React.createElement(Modal, {\n        open: showModal,\n        onClose: () => setShowModal(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: modalStyle,\n        className: classes.modal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        width: \"30%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 23\n        }\n      }, \"type\"), /*#__PURE__*/React.createElement(\"td\", {\n        width: \"60%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"type\",\n        onChange: handleModalContentItemTextChange,\n        style: {\n          \"width\": \"100%\"\n        },\n        value: modalFieldValue.type,\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        width: \"30%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 23\n        }\n      }, \"name\"), /*#__PURE__*/React.createElement(\"td\", {\n        width: \"60%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"name\",\n        onChange: handleModalContentItemTextChange,\n        style: {\n          \"width\": \"100%\"\n        },\n        value: modalFieldValue.name,\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        width: \"30%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 23\n        }\n      }, \"label\"), /*#__PURE__*/React.createElement(\"td\", {\n        width: \"60%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"label\",\n        onChange: handleModalContentItemTextChange,\n        style: {\n          \"width\": \"100%\"\n        },\n        value: modalFieldValue.label,\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        width: \"30%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 23\n        }\n      }, \"enumDef\"), /*#__PURE__*/React.createElement(\"td\", {\n        width: \"60%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"enumDef\",\n        onChange: handleModalContentItemTextChange,\n        style: {\n          \"width\": \"100%\"\n        },\n        value: modalFieldValue.enumDef,\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        width: \"30%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 23\n        }\n      }, \"edit\"), /*#__PURE__*/React.createElement(\"td\", {\n        width: \"60%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          color: \"green\"\n        },\n        name: \"edit\",\n        onChange: handleModalContentItemCheckBoxChange,\n        checked: modalFieldValue.edit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        width: \"30%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 23\n        }\n      }, \"show\"), /*#__PURE__*/React.createElement(\"td\", {\n        width: \"60%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          color: \"green\"\n        },\n        name: \"show\",\n        onChange: handleModalContentItemCheckBoxChange,\n        checked: modalFieldValue.show,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        width: \"30%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 23\n        }\n      }, \"required\"), /*#__PURE__*/React.createElement(\"td\", {\n        width: \"60%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          color: \"green\"\n        },\n        name: \"required\",\n        onChange: handleModalContentItemCheckBoxChange,\n        checked: modalFieldValue.required,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 25\n        }\n      })))), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        onClick: () => buttonClick(\"saveContentItem\"),\n        style: {\n          margin: 3,\n          height: 32,\n          fontSize: 12,\n          color: \"#2862F4\",\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 19\n        }\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        onClick: () => setShowModal(false),\n        style: {\n          margin: 3,\n          height: 32,\n          fontSize: 12,\n          color: \"#2862F4\",\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 19\n        }\n      }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))))));\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 14\n        }\n      });\n    }\n  } else {\n    return /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 17\n      }\n    });\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","TextField","Modal","ArrowUpwardIcon","ArrowDownwardIcon","LinearProgress","DeleteForeverIcon","EditIcon","Checkbox","swal","generator","require","useStyles","theme","modal","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","getModalStyle","top","left","transform","props","classes","userProfile","session_id","userTask","process_id","taskID","selectedDoc","setSelectedDoc","fieldValue","setFieldValue","buttons","sectionColor","updateState","setUpdateState","selectedRow","setSelectedRow","showModal","setShowModal","modalType","setModalType","selectedSectionName","setSelectedSectionName","modalStyle","modalFieldValue","setModalFieldValue","type","name","label","enumDef","edit","show","required","console","log","undefined","parsedSelectedDoc","JSON","parse","fields","s","sections","length","c","contents","contName","docId","instructionTypeDoc","account_from","cItem","account_to","corr","owner","trade","it_base","getUUID","uuidv1","getFieldValuesCreateUpdateForm","formToUpdate","buttonClick","item","form","updateBody","defid","created_at","stringify","commandJson","commandType","userId","userRole","variables","userAction","value","document","sendFieldValues","clearTabData","createBody","instructionTypeCreateFormDefId","instructionTypeCreateFormBody","instructionTypeEditFormDefId","instructionTypeEditFormBody","newSelDoc","push","authorization","handleFormLabelChange","event","target","handleSectionLabelChange","handleContentItemLabelChange","contFields","handleModalContentItemTextChange","handleModalContentItemCheckBoxChange","checked","handleContentItemTypeChange","handleContentItemEnumDefChange","handleCheckboxEditChange","handleCheckboxShowChange","handleCheckboxRequiredChange","contentItemArrowUpClick","itemName","prevItem","currItem","contentItemArrowDownClick","nextItem","contentItemDeleteClick","text","icon","ok","cancel","then","click","newContents","contentItemEditClick","sectionName","rowSelected","rowName","showContentItemCreateForm","sectionBuilder","section","height","color","fontSize","bodyBuilder","fontWeight","cursor","map","contentItem","maxWidth","button","index","margin","fontColor","er"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/Forms/Forms.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Modal from '@material-ui/core/Modal';\n// Icons\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\n// Form components\nimport Checkbox from '@material-ui/core/Checkbox';\n// Libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\n\nvar generator = require('generate-password');\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n}))\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nexport default (props) => {\n  // This.state\n  const classes = useStyles()\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [fieldValue, setFieldValue] = useState({})\n  const [buttons] = useState(props.userTask.buttons)\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [selectedRow, setSelectedRow] = useState(\"\")\n\n  const [showModal, setShowModal] = useState(false)\n  const [modalType, setModalType] = useState(\"create\")\n  const [selectedSectionName, setSelectedSectionName] = useState(\"\")\n  const [modalStyle] = useState(getModalStyle)\n  const [modalFieldValue, setModalFieldValue] = useState({ type: \"Text\", name: \"\", label: \"\", enumDef: \"\", edit: true, show: true, required: false })\n\n  // Set data from props to state of component\n  useEffect(() => {\n    console.log(\"FORMS PROPS\", props)\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      if (typeof parsedSelectedDoc === \"string\") {\n        parsedSelectedDoc = JSON.parse(parsedSelectedDoc)\n      }\n      let fields = {}\n      console.log(\"SDOC\", parsedSelectedDoc)\n      for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n        for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n          let contName = parsedSelectedDoc.sections[s].contents[c].name\n          // console.log(\"ITEM\", parsedSelectedDoc.sections[s].contents[c])\n          // fields[contName] = {\n          //   type: parsedSelectedDoc.sections[s].contents[c].type,\n          //   name: parsedSelectedDoc.sections[s].contents[c].name,\n          //   label: parsedSelectedDoc.sections[s].contents[c].label,\n          //   enumDef: parsedSelectedDoc.sections[s].contents[c].enumDef !== undefined ? parsedSelectedDoc.sections[s].contents[c].enumDef : \"\",\n          //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n          //   show: parsedSelectedDoc.sections[s].contents[c].show,\n          //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n          // }\n          fields[contName] = parsedSelectedDoc.sections[s].contents[c]\n        }\n      }\n      console.log(\"FORM FIELDS\", fields)\n      // Check form items to be checked\n      if (props.userTask.docId !== \"null\") {\n        let instructionTypeDoc = JSON.parse(props.userTask.docId)\n        console.log(\"DOC\", parsedSelectedDoc, instructionTypeDoc)\n        parsedSelectedDoc.label = parsedSelectedDoc.label + instructionTypeDoc.name\n        if (instructionTypeDoc.account_from === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c]\n              let contName = cItem.name\n              if (contName === \"accFrom\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n              if (contName === \"depositor\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n        if (instructionTypeDoc.account_to === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c]\n              let contName = cItem.name\n              if (contName === \"accTo\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n              if (contName === \"depositor2\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n        if (instructionTypeDoc.corr === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c]\n              let contName = cItem.name\n              if (contName === \"corrDepository\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n              }\n            }\n          }\n        }\n        if (instructionTypeDoc.owner === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c]\n              let contName = cItem.name\n              if (contName === \"ownerName\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n              if (contName === \"ownerDocument\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n              if (contName === \"ownerAddress\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n        if (instructionTypeDoc.trade === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c]\n              let contName = cItem.name\n              if (contName === \"tradingSystem\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // cItem.show = true\n                // cItem.required = cItem.required !== undefined ? cItem.required : false\n                // fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n        if (instructionTypeDoc.it_base === 1) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c]\n              let contName = cItem.name\n              if (contName === \"security\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n              if (contName === \"issuer\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n        if (instructionTypeDoc.it_base === 2) {\n          for (let s = 0; s < parsedSelectedDoc.sections.length; s++) {\n            for (let c = 0; c < parsedSelectedDoc.sections[s].contents.length; c++) {\n              let cItem = parsedSelectedDoc.sections[s].contents[c]\n              let contName = cItem.name\n              if (contName === \"currency\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n              if (contName === \"quantity\") {\n                parsedSelectedDoc.sections[s].contents[c].show = true\n                cItem.show = true\n                cItem.required = cItem.required !== undefined ? cItem.required : false\n                fields[contName] = cItem\n                // fields[contName] = {\n                //   edit: parsedSelectedDoc.sections[s].contents[c].edit,\n                //   show: true,\n                //   required: parsedSelectedDoc.sections[s].contents[c].required !== undefined ? parsedSelectedDoc.sections[s].contents[c].required : false\n                // }\n              }\n            }\n          }\n        }\n      }\n      setFieldValue(fields)\n      setSelectedDoc(parsedSelectedDoc)\n    }\n    setUpdateState(getUUID())\n  }, [])\n\n  // random UUID generator\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // Collect data to update doc\n  function getFieldValuesCreateUpdateForm() {\n    let formToUpdate = selectedDoc\n    for (let s = 0; s < selectedDoc.sections.length; s++) {\n      for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n        let contName = selectedDoc.sections[s].contents[c].name\n        formToUpdate.sections[s].contents[c].type = fieldValue[contName].type\n        formToUpdate.sections[s].contents[c].name = fieldValue[contName].name\n        formToUpdate.sections[s].contents[c].label = fieldValue[contName].label\n        formToUpdate.sections[s].contents[c].enumDef = fieldValue[contName].enumDef\n        formToUpdate.sections[s].contents[c].edit = fieldValue[contName].edit\n        formToUpdate.sections[s].contents[c].show = fieldValue[contName].show\n        formToUpdate.sections[s].contents[c].required = fieldValue[contName].required\n      }\n    }\n    return formToUpdate\n  }\n  function buttonClick(name, item) {\n    if (name === \"updateDocument\") {\n      let form = getFieldValuesCreateUpdateForm()\n      let updateBody = {\n        \"defid\": selectedDoc.defid,\n        \"created_at\": selectedDoc.created_at,\n        \"data\": JSON.stringify(form)\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"updateForm:\", form)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (name === \"showInstructionTypeEditForm\") {\n      let defid = getUUID()\n      let form = getFieldValuesCreateUpdateForm()\n      form.defid = defid\n      let createBody = {\n        \"defid\": defid,\n        \"data\": JSON.stringify(form)\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"showInstructionTypeEditForm\" },\n          instructionTypeCreateFormDefId: { value: defid },\n          instructionTypeCreateFormBody: { value: JSON.stringify(createBody) }\n        }\n      }\n      console.log(\"showInstructionTypeEditForm:\", commandJson)\n      props.sendFieldValues(commandJson)\n    }\n    else if (name === \"saveInstructionType\") {\n      let defid = getUUID()\n      let form = getFieldValuesCreateUpdateForm()\n      form.defid = defid\n      let createBody = {\n        \"defid\": defid,\n        \"data\": JSON.stringify(form)\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"saveInstructionType\" },\n          instructionTypeEditFormDefId: { value: defid },\n          instructionTypeEditFormBody: { value: JSON.stringify(createBody) }\n        }\n      }\n      console.log(\"saveInstructionType:\", commandJson)\n      props.sendFieldValues(commandJson)\n    }\n    else if (name === \"saveContentItem\") {\n      if (modalType === \"create\") {\n        // console.log(\"create\", modalFieldValue)\n        let newSelDoc = { ...selectedDoc }\n        for (let s = 0; s < selectedDoc.sections.length; s++) {\n          if (selectedDoc.sections[s].name === selectedSectionName) {\n            newSelDoc.sections[s].contents.push(modalFieldValue)\n          }\n        }\n        setFieldValue({ ...fieldValue, [modalFieldValue.name]: modalFieldValue })\n        setSelectedDoc(newSelDoc)\n        setShowModal(false)\n        setModalFieldValue({ type: \"Text\", name: \"\", label: \"\", enumDef: \"\", edit: true, show: true, required: false })\n      }\n      else {\n        let newSelDoc = { ...selectedDoc }\n        for (let s = 0; s < selectedDoc.sections.length; s++) {\n          for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n            if (selectedDoc.sections[s].contents[c].name === modalFieldValue.name) {\n              newSelDoc.sections[s].contents[c] = modalFieldValue\n            }\n          }\n        }\n        setFieldValue({ ...fieldValue, [modalFieldValue.name]: modalFieldValue })\n        setSelectedDoc(newSelDoc)\n        setShowModal(false)\n        setModalFieldValue({ type: \"Text\", name: \"\", label: \"\", enumDef: \"\", edit: true, show: true, required: false })\n        // console.log(\"edit\")\n      }\n\n    }\n\n    else if (name === \"back\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (name === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else {\n      console.log(\"UNKNOWN Button \", name)\n    }\n  }\n  function handleFormLabelChange(event) {\n    selectedDoc.label = event.target.value\n    setSelectedDoc(selectedDoc)\n  }\n  function handleSectionLabelChange(event) {\n    for (let s = 0; s < selectedDoc.sections.length; s++) {\n      if (event.target.name === selectedDoc.sections[s].name) {\n        selectedDoc.sections[s].label = event.target.value\n        setSelectedDoc(selectedDoc)\n        break\n      }\n    }\n    // console.log(\"SECT LABEL\", selectedDoc)\n  }\n  function handleContentItemLabelChange(event) {\n    let contFields = fieldValue[event.target.name]\n    contFields.label = event.target.value\n    setFieldValue({ ...fieldValue, [event.target.name]: contFields })\n    // console.log(\"FIELDVAL\", fieldValue)\n  }\n  function handleModalContentItemTextChange(event) {\n    setModalFieldValue({ ...modalFieldValue, [event.target.name]: event.target.value })\n    console.log(\"MOD FIELDVAL\", modalFieldValue)\n  }\n  const handleModalContentItemCheckBoxChange = (event) => {\n    setModalFieldValue({ ...modalFieldValue, [event.target.name]: event.target.checked })\n    // console.log(\"FIELDVAL\", fieldValue)\n  }\n\n  function handleContentItemTypeChange(event) {\n    let contFields = fieldValue[event.target.name]\n    contFields.type = event.target.value\n    setFieldValue({ ...fieldValue, [event.target.name]: contFields })\n    // console.log(\"FIELDVAL\", fieldValue)\n  }\n  function handleContentItemEnumDefChange(event) {\n    let contFields = fieldValue[event.target.name]\n    contFields.enumDef = event.target.value\n    setFieldValue({ ...fieldValue, [event.target.name]: contFields })\n    // console.log(\"FIELDVAL\", fieldValue)\n  }\n\n  const handleCheckboxEditChange = (event) => {\n    let contFields = fieldValue[event.target.name]\n    contFields.edit = event.target.checked\n    setFieldValue({ ...fieldValue, [event.target.name]: contFields })\n    // console.log(\"FIELDVAL\", fieldValue)\n  }\n  const handleCheckboxShowChange = (event) => {\n    let contFields = fieldValue[event.target.name]\n    contFields.show = event.target.checked\n    setFieldValue({ ...fieldValue, [event.target.name]: contFields })\n    // console.log(\"FIELDVAL\", fieldValue)\n  }\n  const handleCheckboxRequiredChange = (event) => {\n    let contFields = fieldValue[event.target.name]\n    contFields.required = event.target.checked\n    setFieldValue({ ...fieldValue, [event.target.name]: contFields })\n    // console.log(\"FIELDVAL\", fieldValue)\n  }\n  // Pick up selected row\n  function contentItemArrowUpClick(itemName) {\n    for (let s = 0; s < selectedDoc.sections.length; s++) {\n      for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n        if (selectedDoc.sections[s].contents[c].name === itemName) {\n          if (c > 0) {\n            let prevItem = selectedDoc.sections[s].contents[c - 1]\n            let currItem = selectedDoc.sections[s].contents[c]\n            selectedDoc.sections[s].contents[c - 1] = currItem\n            selectedDoc.sections[s].contents[c] = prevItem\n            // console.log(\"UP\", selectedDoc.sections[s].contents[c])\n            break\n          }\n        }\n      }\n    }\n    setUpdateState(getUUID())\n  }\n  // Put down selected row\n  function contentItemArrowDownClick(itemName) {\n    for (let s = 0; s < selectedDoc.sections.length; s++) {\n      for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n        if (selectedDoc.sections[s].contents[c].name === itemName) {\n          if (c < selectedDoc.sections[s].contents.length - 1) {\n            let nextItem = selectedDoc.sections[s].contents[c + 1]\n            let currItem = selectedDoc.sections[s].contents[c]\n            selectedDoc.sections[s].contents[c + 1] = currItem\n            selectedDoc.sections[s].contents[c] = nextItem\n            // console.log(\"DOWN\", selectedDoc.sections[s].contents[c])\n            break\n          }\n        }\n      }\n    }\n    setUpdateState(getUUID())\n  }\n  function contentItemDeleteClick(itemName) {\n    return (\n      swal({\n        text: \"Удалить данное поле?\",\n        icon: \"warning\",\n        buttons: { ok: \"Ок\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"ok\") {\n            let newSelDoc = { ...selectedDoc }\n            for (let s = 0; s < selectedDoc.sections.length; s++) {\n              let newContents = []\n              for (let c = 0; c < selectedDoc.sections[s].contents.length; c++) {\n                if (selectedDoc.sections[s].contents[c].name !== itemName) {\n                  newContents.push(selectedDoc.sections[s].contents[c])\n                }\n              }\n              newSelDoc.sections[s].contents = newContents\n            }\n            setSelectedDoc(newSelDoc)\n          }\n        })\n    )\n\n  }\n  function contentItemEditClick(item, sectionName) {\n    setModalFieldValue(item)\n    setShowModal(true)\n    setModalType(\"edit\")\n    setSelectedSectionName(sectionName)\n  }\n\n  function rowSelected(rowName) {\n    setSelectedRow(rowName)\n    // console.log(\"rowSelected\", rowName)\n  }\n  function showContentItemCreateForm(sectionName) {\n    setShowModal(true)\n    setModalType(\"create\")\n    setSelectedSectionName(sectionName)\n  }\n\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section) {\n    return (\n      <Table>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow style={{ height: 30 }}>\n              <TableCell\n                style={{\n                  color: \"black\",\n                  fontSize: 14,\n                  backgroundColor: sectionColor,\n                  width: \"100%\"\n                }}>\n                <TextField\n                  name={section.name}\n                  onBlur={handleSectionLabelChange}\n                  style={{ \"width\": \"50%\" }}\n                  defaultValue={section.label}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n        </Table>\n        {section.contents.length > 0 &&\n          bodyBuilder(section)\n        }\n      </Table>\n    )\n  }\n\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <Table size=\"small\" style={{ \"border-collapse\": \"collapse\" }}>\n        <TableHead>\n          <TableRow >\n            <TableCell\n              align=\"center\"\n              style={{ border: \"1px solid grey\", fontWeight: \"bold\" }}>\n              Наименование\n            </TableCell>\n            {/* <TableCell\n              align=\"center\"\n              style={{ border: \"1px solid grey\", fontWeight: \"bold\" }}\n            >\n              Тип\n            </TableCell>\n            <TableCell\n              align=\"center\"\n              style={{ border: \"1px solid grey\", fontWeight: \"bold\" }}\n            >\n              ID справочника\n            </TableCell> */}\n            <TableCell\n              align=\"center\"\n              style={{ border: \"1px solid grey\", fontWeight: \"bold\" }}\n            >\n              Редактируемое\n            </TableCell>\n            <TableCell\n              align=\"center\"\n              style={{ border: \"1px solid grey\", fontWeight: \"bold\" }}\n            >\n              Отображаемое\n            </TableCell>\n            <TableCell\n              align=\"center\"\n              style={{ border: \"1px solid grey\", fontWeight: \"bold\" }}\n            >\n              Обязательное\n            </TableCell>\n            <TableCell\n              align=\"center\"\n              style={{ border: \"1px solid grey\", fontWeight: \"bold\" }}\n            >\n              Порядок\n            </TableCell>\n            <TableCell\n              align=\"center\"\n              style={{ border: \"1px solid grey\", fontWeight: \"bold\" }}\n            >\n              -\n            </TableCell>\n            <TableCell\n              align=\"center\"\n              style={{ border: \"1px solid grey\", fontWeight: \"bold\", cursor: \"pointer\" }}\n              onClick={() => showContentItemCreateForm(section.name)}\n            >\n              +\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {section.contents.map(contentItem => (\n            <TableRow style={{ backgroundColor: (selectedRow === contentItem.name ? \"#B8E9F8\" : \"white\") }} onClick={() => rowSelected(contentItem.name)}>\n              <TableCell\n                align=\"center\"\n                style={{ border: \"1px solid grey\" }}\n                width=\"20%\"\n              >\n                <TextField\n                  name={contentItem.name}\n                  onChange={handleContentItemLabelChange}\n                  style={{ \"width\": \"100%\" }}\n                  value={fieldValue[contentItem.name].label}\n                  multiline\n                />\n              </TableCell>\n              {/* <TableCell\n                align=\"center\"\n                style={{ border: \"1px solid grey\" }}\n              >\n                <TextField\n                  name={contentItem.name}\n                  onChange={handleContentItemTypeChange}\n                  style={{ \"width\": \"100%\" }}\n                  value={fieldValue[contentItem.name].type}\n                />\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{ border: \"1px solid grey\" }}\n              >\n                <TextField\n                  name={contentItem.name}\n                  onChange={handleContentItemEnumDefChange}\n                  style={{ \"width\": \"100%\" }}\n                  value={fieldValue[contentItem.name].enumDef}\n                  multiline\n                />\n              </TableCell> */}\n              <TableCell\n                align=\"center\"\n                style={{ border: \"1px solid grey\" }}\n              >\n                <Checkbox\n                  style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                  name={contentItem.name}\n                  onChange={handleCheckboxEditChange}\n                  checked={fieldValue[contentItem.name].edit}\n                />\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{ border: \"1px solid grey\" }}\n              >\n                <Checkbox\n                  style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                  name={contentItem.name}\n                  onChange={handleCheckboxShowChange}\n                  checked={fieldValue[contentItem.name].show}\n                />\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{ height: 30, border: \"1px solid grey\" }}\n              >\n                <Checkbox\n                  style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                  name={contentItem.name}\n                  onChange={handleCheckboxRequiredChange}\n                  checked={fieldValue[contentItem.name].required}\n                />\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{ height: 30, border: \"1px solid grey\" }}\n              >\n                <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\n                  <ArrowUpwardIcon fontSize=\"middle\" style={{ color: \"green\", cursor: \"pointer\" }} onClick={() => contentItemArrowUpClick(contentItem.name)} />\n                  <ArrowDownwardIcon fontSize=\"middle\" style={{ color: \"orange\", cursor: \"pointer\" }} onClick={() => contentItemArrowDownClick(contentItem.name)} />\n                </Grid>\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{ height: 30, border: \"1px solid grey\" }}\n              >\n                <DeleteForeverIcon fontSize=\"middle\" style={{ cursor: \"pointer\" }} onClick={() => contentItemDeleteClick(contentItem.name)} />\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{ height: 30, border: \"1px solid grey\" }}\n              >\n                <EditIcon fontSize=\"middle\" style={{ cursor: \"pointer\" }} onClick={() => contentItemEditClick(contentItem, section.name)} />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n\n  if (updateState !== null && selectedDoc !== null) {\n    try {\n      return (\n        <Grid key={updateState}>\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={12}>\n              <Paper>\n                <Table style={{ \"border-collapse\": \"collapse\", \"align\": \"center\" }}>\n                  <TableHead>\n                    <TableRow style={{ \"maxHeight\": 25 }}>\n                      <TableCell style={{ \"fontSize\": 16, \"color\": \"black\" }}>\n                        <TextField\n                          onBlur={handleFormLabelChange}\n                          style={{ \"width\": \"80%\" }}\n                          defaultValue={selectedDoc.label}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    {selectedDoc.sections.map(section => {\n                      return sectionBuilder(section)\n                    })}\n                  </Grid>\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                    {buttons.map((button, index) => (\n                      <Button\n                        key={index}\n                        name={button.name}\n                        variant=\"outlined\"\n                        onClick={() => buttonClick(button.name, null)}\n                        style={{\n                          margin: 3,\n                          color: button.fontColor,\n                          backgroundColor: button.backgroundColor,\n                          height: 32,\n                          fontSize: 12\n                        }}\n                      >{button.label}\n                      </Button>\n                    )\n                    )}\n                  </Grid>\n                </Table>\n              </Paper>\n              <Modal\n                open={showModal}\n                onClose={() => setShowModal(false)}\n              >\n                <div style={modalStyle} className={classes.modal}>\n                  <table width=\"100%\">\n                    <tr>\n                      <td width=\"30%\">type</td>\n                      <td width=\"60%\">\n                        <TextField\n                          name={\"type\"}\n                          onChange={handleModalContentItemTextChange}\n                          style={{ \"width\": \"100%\" }}\n                          value={modalFieldValue.type}\n                          multiline\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td width=\"30%\">name</td>\n                      <td width=\"60%\">\n                        <TextField\n                          name={\"name\"}\n                          onChange={handleModalContentItemTextChange}\n                          style={{ \"width\": \"100%\" }}\n                          value={modalFieldValue.name}\n                          multiline\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td width=\"30%\">label</td>\n                      <td width=\"60%\">\n                        <TextField\n                          name={\"label\"}\n                          onChange={handleModalContentItemTextChange}\n                          style={{ \"width\": \"100%\" }}\n                          value={modalFieldValue.label}\n                          multiline\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td width=\"30%\">enumDef</td>\n                      <td width=\"60%\">\n                        <TextField\n                          name={\"enumDef\"}\n                          onChange={handleModalContentItemTextChange}\n                          style={{ \"width\": \"100%\" }}\n                          value={modalFieldValue.enumDef}\n                          multiline\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td width=\"30%\">edit</td>\n                      <td width=\"60%\">\n                        <Checkbox\n                          style={{ color: \"green\" }}\n                          name={\"edit\"}\n                          onChange={handleModalContentItemCheckBoxChange}\n                          checked={modalFieldValue.edit}\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td width=\"30%\">show</td>\n                      <td width=\"60%\">\n                        <Checkbox\n                          style={{ color: \"green\" }}\n                          name={\"show\"}\n                          onChange={handleModalContentItemCheckBoxChange}\n                          checked={modalFieldValue.show}\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td width=\"30%\">required</td>\n                      <td width=\"60%\">\n                        <Checkbox\n                          style={{ color: \"green\" }}\n                          name={\"required\"}\n                          onChange={handleModalContentItemCheckBoxChange}\n                          checked={modalFieldValue.required}\n                        />\n                      </td>\n                    </tr>\n                  </table>\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => buttonClick(\"saveContentItem\")}\n                    style={{\n                      margin: 3,\n                      height: 32,\n                      fontSize: 12,\n                      color: \"#2862F4\",\n                      backgroundColor: \"white\"\n                    }}\n                  >Сохранить\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => setShowModal(false)}\n                    style={{\n                      margin: 3,\n                      height: 32,\n                      fontSize: 12,\n                      color: \"#2862F4\",\n                      backgroundColor: \"white\"\n                    }}\n                  >Отмена\n                  </Button>\n                </div>\n              </Modal>\n            </Grid>\n          </Grid>\n        </Grid>\n      )\n    }\n    catch (er) {\n      console.log(\"ERROR\", er)\n      return <LinearProgress />\n    }\n  }\n  else { return <LinearProgress /> }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}