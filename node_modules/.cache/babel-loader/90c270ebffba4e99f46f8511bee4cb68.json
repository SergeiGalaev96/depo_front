{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\NewSecurityApplications\\\\NewSecurityApplications.jsx\";\nimport React, { useState, useEffect } from 'react'; // import clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport Modal from \"@material-ui/core/Modal\";\nimport Menu from '@mui/material/Menu'; // PIN components\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'; // Accordion\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Icons\n\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // import CloseIcon from '@material-ui/icons/Close';\n// import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay'; // Form components\n\nimport GridSelect from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport numberToWordsRu from 'number-to-words-ru'; // https://www.npmjs.com/package/number-to-words-ru\n\nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nvar moment = require('moment');\n\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto'\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto'\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalRutoken: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [docId, setDocId] = useState(props.userTask.docId);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [enumData] = useState(props.userTask.enumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [fieldValue, setFieldValue] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [buttons] = useState(props.userTask.buttons);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [taskType] = useState(props.userTask.taskType);\n  const [showSavedDocuments, setShowSavedDocuments] = useState(false);\n  const [showAttachedDocuments, setShowAttachedDocuments] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [attachedImgs, setAttachedImgs] = useState([]);\n  const [attachedImgsFiles, setAttachedImgsFiles] = useState([]);\n  const [attachedDocs, setAttachedDocs] = useState([]);\n  const [Blobs, setBlobs] = useState([]);\n  const [selectedImg, setSelectedImg] = useState({});\n  const [savedImgs, setSavedImgs] = useState([]);\n  const [savedImagesFiles, setSavedImagesFiles] = useState([]);\n  const [savedDocs, setSavedDocs] = useState([]);\n  const [buttonFilesWordPdfImgId, setButtonFilesWordPdfImgId] = useState(null);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1);\n  const [modalStyle] = useState(getModalStyle);\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [accordionExpanded, setAccordionExpanded] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  const [gridTableId] = useState(getUUID());\n  const [gridFieldValue, setGridFieldValue] = useState({}); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"NEW APPL PROPS\", props);\n    setButtonFilesWordPdfImgId(getUUID());\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        setIsSearchForm(true);\n        setFilteredDocList(parsedData);\n        setInitialDocList(parsedData);\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", -1, \"Int\"));\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc));\n        } else {\n          fetchBySize(0, s - 1, sortedDocList);\n        }\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    } else {\n      setIsSearchForm(false);\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      let fields = {}; // let Form = props.userTask.Form\n\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name;\n          fields[fieldName] = parsedSelectedDoc[fieldName];\n        }\n      }\n\n      console.log(\"SDOC\", parsedSelectedDoc); // console.log(\"FIELDVAL\", fields)\n\n      setSelectedDoc(parsedSelectedDoc);\n      setFieldValue(fields);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            });\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n    }\n\n    if (props.userTask.taskType === \"showNewSecurityApplicationsCreatingForm\") {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      setShowAttachedDocuments(true);\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i].name === \"partners\") {\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            if (props.userTask.enumData[i].data[d].id === parseInt(userProfile.partner)) {\n              setFieldValue({\n                depositor: props.userTask.enumData[i].data[d].label,\n                application_type: parsedSelectedDoc.application_type\n              });\n            }\n          }\n        }\n      } // setFieldValue({depositor: userProfile.firstName + \" \" + userProfile.lastName, application_type: parsedSelectedDoc.application_type})\n\n    }\n\n    if (props.userTask.taskType === \"showNewSecurityApplicationsEditForm\") {\n      setShowAttachedDocuments(true);\n      setShowSavedDocuments(true);\n    }\n\n    if (props.userTask.savedDocs.length !== 0) {\n      for (let d = 0; d < props.userTask.savedDocs.length; d++) {\n        let extension = props.userTask.savedDocs[d].extension;\n\n        if (extension === \".png\") {\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".jpeg\" || extension === \".jpg\") {\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".doc\") {\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".docx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".xlsx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".pdf\") {\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        }\n      }\n    }\n\n    if (gridForm !== null) {\n      let newFields = {};\n\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show;\n        }\n      }\n\n      setGridFieldValue(newFields);\n    }\n\n    setUpdateState(getUUID());\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  } // RuToken functions\n\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\")\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  }); // catch errors while signing docs\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          props.callErrorToast(\"Неизвестная ошибка\");\n      }\n    }\n  } // Sign transfer order with rutoken\n\n\n  function sign(commandJson) {\n    try {\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices().then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0]);\n          } else {// alert(\"Рутокен не обнаружен\");\n          }\n        }) // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice;\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n        }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve();\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin); // 240699\n          }\n        }) // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n        }).then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0];\n            return plugin.parseCertificate(rutokenHandle, certs[0]);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs;\n\n          if (certHandle.length > 0) {\n            var options = {};\n            let inn = \"\";\n            let fullName = \"\";\n\n            for (let i = 0; i < certData.subject.length; i++) {\n              if (certData.subject[i].rdn === \"serialNumber\") {\n                inn = certData.subject[i].value;\n              }\n\n              if (certData.subject[i].rdn === \"commonName\") {\n                fullName = certData.subject[i].value;\n              }\n            }\n\n            props.setEsInn(inn);\n            props.setEsUserFullName(fullName);\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n            let applicationToSign = commandJson.variables.document.value;\n            applicationToSign[\"status\"] = 0;\n            applicationToSign[\"es_inn\"] = inn;\n            applicationToSign[\"es_full_name\"] = fullName;\n            applicationToSign[\"es_date\"] = props.getCurrentFullDateTime();\n            applicationToSign[\"depositor_authorized_person\"] = fullName;\n            commandJson.variables.document.value = JSON.stringify(applicationToSign);\n            console.log(\"SIGN\", applicationToSign, commandJson);\n            handleCloseModalEnterPin();\n            swAllert(\"Документ успешно подписан!\", \"success\");\n            props.sendFieldValues(commandJson);\n            props.clearTabData(commandJson.process_id);\n            return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle);\n        }, handleError);\n      } else {\n        props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n      }\n    } catch (er) {\n      console.log(\"Rutoken ERR\");\n    }\n  }\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded);\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true);\n  };\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  }\n\n  const handleCheckboxChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    });\n  }; // Integer input handler\n  // const handleIntChange = (event) => {\n  //   console.log(\"INT CHANGE\", event.target.name, event.target.value)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  //   if (event.target.name === \"securities_quantity_int\") {\n  //     let converted = numberToWordsRu.convert(event.target.value, {\n  //       currency: {\n  //         currencyNameCases: ['ценная бумага', 'ценных бумаги', 'ценных бумаг'],\n  //         fractionalPartNameCases: ['', '', ''],\n  //         declension: 'nominative',\n  //         currencyNounGender: {\n  //           integer: 1, // 1 => Женский род ('одна', 'две'...)\n  //         }\n  //       },\n  //       showNumberParts: {\n  //         integer: true,\n  //         fractional: false\n  //       }\n  //     })\n  //     // console.log(\"WORD\", converted)\n  //     setFieldValue({ ...fieldValue, [\"securities_quantity_text\"]: converted, [event.target.name]: event.target.value })\n  //   }\n  // }\n  // Float input handler\n\n\n  const handleFloatChange = event => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleIntChange = event => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    });\n\n    if (event.target.name === \"securities_quantity_int\") {\n      let converted = numberToWordsRu.convert(stringNum, {\n        currency: {\n          currencyNameCases: ['ценная бумага', 'ценных бумаги', 'ценных бумаг'],\n          fractionalPartNameCases: ['', '', ''],\n          declension: 'nominative',\n          currencyNounGender: {\n            integer: 1 // 1 => Женский род ('одна', 'две'...)\n\n          }\n        },\n        showNumberParts: {\n          integer: true,\n          fractional: false\n        }\n      }); // console.log(\"WORD\", converted)\n\n      setFieldValue({ ...fieldValue,\n        [\"securities_quantity_text\"]: converted,\n        [event.target.name]: int\n      });\n    }\n  }; // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n\n\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value;\n    console.log(\"OPT\", option.name, option.value);\n    var updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        noSuchOption = false;\n        setSelectedOptions(updateSelectedOptions);\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    if (option.name === \"payer_type\" && (taskType === \"showPaymentsForCDServicesCreatingForm\" || taskType === \"showPaymentsForCDServicesViewForm\" || taskType === \"showPaymentsForCDServicesSearchForm\")) {\n      // console.log(\"SEL\", option.name, option.value)\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          if (Form.sections[s].contents[c].name === \"depositor\") {\n            if (option.value === 1) {\n              Form.sections[s].contents[c].show = true;\n              Form.sections[s].contents[c].edit = true;\n              fieldValue[\"issuer\"] = null;\n\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"issuer\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"issuer\"\n                  };\n                  setSelectedOptions(updateSelectedOptions);\n                  break;\n                }\n              }\n            } else {\n              Form.sections[s].contents[c].show = false;\n              Form.sections[s].contents[c].edit = false;\n            }\n          }\n\n          if (Form.sections[s].contents[c].name === \"issuer\") {\n            if (option.value === 2) {\n              Form.sections[s].contents[c].show = true;\n              Form.sections[s].contents[c].edit = true;\n              fieldValue[\"depositor\"] = null;\n\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"depositor\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"depositor\"\n                  };\n                  setSelectedOptions(updateSelectedOptions);\n                  break;\n                }\n              }\n            } else {\n              Form.sections[s].contents[c].show = false;\n              Form.sections[s].contents[c].edit = false;\n            }\n          }\n        }\n      }\n\n      setForm(Form); // console.log(\"NEW ENUMS\")\n    } else if (option.name === \"recipient_type\" && (taskType === \"showTransitChargeForCDServicesCreatingForm\" || taskType === \"showTransitChargeForCDServicesEditForm\" || taskType === \"showTransitPaymentsForCDServicesCreatingForm\" || taskType === \"showTransitPaymentsForCDServicesEditForm\" || taskType === \"showTransitPaymentsForCDServicesSearchForm\")) {\n      console.log(\"RECIPIENT\", option.name, option.value, fieldValue);\n\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          if (Form.sections[s].contents[c].name === \"registrar\") {\n            if (option.value === 1) {\n              Form.sections[s].contents[c].show = true;\n              Form.sections[s].contents[c].edit = true;\n              fieldValue[\"corr_depository\"] = null;\n\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"corr_depository\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"corr_depository\"\n                  };\n                  setSelectedOptions(updateSelectedOptions);\n                  break;\n                }\n              }\n            } else {\n              Form.sections[s].contents[c].show = false;\n              Form.sections[s].contents[c].edit = false;\n            }\n          }\n\n          if (Form.sections[s].contents[c].name === \"corr_depository\") {\n            if (option.value === 2) {\n              Form.sections[s].contents[c].show = true;\n              Form.sections[s].contents[c].edit = true;\n              fieldValue[\"registrar\"] = null;\n\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"registrar\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"registrar\"\n                  };\n                  setSelectedOptions(updateSelectedOptions);\n                  break;\n                }\n              }\n            } else {\n              Form.sections[s].contents[c].show = false;\n              Form.sections[s].contents[c].edit = false;\n            }\n          }\n        }\n      }\n\n      setForm(Form); // console.log(\"NEW ENUMS\")\n    }\n  }\n\n  function handleDateTimeChange(event) {\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    let fullDateTime = moment(event.target.value).format('YYYY-MM-DDTHH:mm:ss');\n    fieldValue[event.target.name] = fullDateTime;\n    setFieldValue(fieldValue); // console.log(\"DATE CHANGE\", event.target.value)\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  } // filter docList by filled parameters\n\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key);\n\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else if (contentType === \"Enum\") {\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } else {\n              match = false;\n              break;\n            }\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered docList by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList);\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.floor(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  } // random UUID generator\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Collect data to save doc\n\n\n  function getFieldValuesSaveDocument() {\n    let docToSave = {};\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined) {\n          docToSave[fieldName] = false;\n        } else {\n          docToSave[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToSave;\n  }\n\n  function getFieldValuesUpdateDocument() {\n    let docToUpdate = {};\n    docToUpdate[\"created_at\"] = selectedDoc.created_at;\n    docToUpdate[\"id\"] = selectedDoc.id;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false;\n        } else {\n          docToUpdate[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToUpdate;\n  }\n\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = false;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName].length === 0)) {\n          checkedSuccessfuly = false;\n          swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n          return false;\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  function buttonClick(buttonName, item) {\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true);\n      } else {\n        filterDocList(0, size - 1, initialDocList, fieldValue);\n      }\n    } else if (buttonName === \"openDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: {\n            value: JSON.stringify(item)\n          },\n          userAction: {\n            value: \"openDocument\"\n          },\n          docId: {\n            value: item.id\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button openDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocument\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody.files_directory = selectedDoc.files_directory;\n      let commandJson = {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        blobs: Blobs,\n        directory: selectedDoc.files_directory,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"updateDocument:\", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createDocument\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"createDocument\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"createDocument:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"selectApplicationType\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"selectApplicationType\"\n          },\n          selectedDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"selectApplicationType:\", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"signApplication\") {\n      let checkResult = checkForRequieredFields();\n      console.log(\"signApplication\", checkResult);\n\n      if (checkResult === true) {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin();\n        } else {\n          let docToSave = getFieldValuesSaveDocument();\n          let dir = getUUID();\n          docToSave.files_directory = dir;\n          docToSave[\"status\"] = 0;\n          docToSave[\"es_inn\"] = props.esInn;\n          docToSave[\"es_full_name\"] = props.esUserFullName;\n          docToSave[\"es_date\"] = props.getCurrentFullDateTime();\n          docToSave[\"depositor_authorized_person\"] = props.esUserFullName;\n          const commandJson = {\n            commandType: \"saveDocumentsWithFiles\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            userId: userProfile.userId,\n            userRole: userProfile.userRole,\n            blobs: Blobs,\n            directory: dir,\n            variables: {\n              userAction: {\n                value: \"saveDocument\"\n              },\n              document: {\n                value: JSON.stringify(docToSave)\n              }\n            }\n          };\n          console.log(\"button signInstruction: \", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } else if (buttonName === \"SignApplicationSaveButton\") {\n      let docToSave = getFieldValuesSaveDocument();\n      let dir = getUUID();\n      docToSave.files_directory = dir;\n      const commandJson = {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        blobs: Blobs,\n        directory: dir,\n        variables: {\n          userAction: {\n            value: \"saveDocument\"\n          },\n          document: {\n            value: docToSave\n          }\n        }\n      };\n      console.log(\"button SignApplicationSaveButton: \", commandJson);\n      sign(commandJson);\n    } else if (buttonName === \"createSecurity\") {\n      let updateApplication = selectedDoc;\n      updateApplication[\"status\"] = 2;\n      let newSelectedDoc = {\n        security_type: selectedDoc.security_type,\n        is_gov_security: selectedDoc.is_gov_security,\n        code: selectedDoc.code,\n        isin: selectedDoc.isin,\n        nominal: selectedDoc.nominal,\n        currency: selectedDoc.currency,\n        quantity: selectedDoc.securities_quantity_int,\n        reg_date: selectedDoc.securities_placement_begin_date,\n        end_date: selectedDoc.securities_placement_end_date\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"createSecurity\"\n          },\n          updateApplication: {\n            value: JSON.stringify(updateApplication)\n          },\n          selectedDoc: {\n            value: JSON.stringify(newSelectedDoc)\n          }\n        }\n      };\n      console.log(\"createSecurity:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"UNKNOWN Button \", buttonName);\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name];\n    let name = contentItem.name;\n    let type = contentItem.type;\n\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label;\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1246,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newCur = props.currencyBeautifier(value);\n        return newCur;\n      }\n    } else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newInt = props.intBeautifier(value);\n        return newInt;\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1285,\n            columnNumber: 17\n          }\n        }, value);\n      }\n    }\n  } // attached documents\n\n\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files;\n    console.log(\"A DOCS\", selectedFiles);\n\n    if (selectedFiles && selectedFiles[0]) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        if (selectedFiles[i].type === \"application/pdf\" || selectedFiles[i].type === \"application/msword\" || selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n          attachedDocs.push(selectedFiles[i]);\n          setAttachedDocs(attachedDocs);\n          setUpdateState(getUUID()); // console.log(\"A DOCS\", attachedDocs)\n        } else {\n          let reader = new FileReader();\n\n          reader.onload = async function (e) {\n            // push new images to list and show in UI\n            let image = {\n              item: /*#__PURE__*/React.createElement(\"img\", {\n                name: selectedFiles[i].name,\n                height: \"150\",\n                width: \"auto\",\n                src: e.target.result,\n                onClick: () => attachedImgClick(selectedFiles[i].name),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1308,\n                  columnNumber: 33\n                }\n              })\n            };\n            attachedImgs.push(image);\n            setAttachedImgs(attachedImgs);\n            setUpdateState(getUUID()); // console.log(\"IMGLIST\", attachedImgs)\n          };\n\n          reader.readAsDataURL(selectedFiles[i]);\n          attachedImgsFiles.push(selectedFiles[i]); // pushAttachedImage(selectedFiles[i])\n\n          setAttachedImgsFiles(attachedImgsFiles); // console.log(\"A IMGS\", attachedImgsFiles)\n        }\n\n        pushNewBlob(selectedFiles[i]);\n      }\n    }\n  }\n\n  async function pushNewBlob(f) {\n    var blobToBase64 = function (f, cb) {\n      let reader = new FileReader();\n\n      reader.onload = function () {\n        // converts blob to base64\n        var dataUrl = reader.result;\n        var base64 = dataUrl.split(\",\")[1];\n        cb(base64);\n      };\n\n      reader.readAsDataURL(f);\n    };\n\n    blobToBase64(f, async function (base64) {\n      // encode blobs to send to socket\n      let newBlob = {\n        \"name\": f.name,\n        \"blob\": base64,\n        \"size\": f.size,\n        type: f.type\n      };\n      Blobs.push(newBlob);\n      setBlobs(Blobs);\n      console.log(\"BLOBS\", Blobs);\n    });\n  }\n\n  async function attachedImgClick(name) {\n    for (let l = 0; l < attachedImgs.length; l++) {\n      if (attachedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", attachedImgs[l]);\n        setSelectedImg({\n          name: attachedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: attachedImgs[l].item.props.src\n        });\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function attachedDocsList() {\n    console.log(\"A DOCS\", attachedDocs);\n    let selDocsList = [];\n\n    for (let i = 0; i < attachedDocs.length; i++) {\n      selDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1366,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1367,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 15\n        }\n      }, attachedDocs[i].name + \" \", \"(\" + Math.round(attachedDocs[i].size / 1000) + \")\" + \"КБ\")))));\n    }\n\n    return selDocsList;\n  }\n\n  function attachedImgsList() {\n    var imgs = [];\n\n    for (let l = 0; l < attachedImgs.length; l++) {\n      imgs.push( /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1382,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1383,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1384,\n          columnNumber: 13\n        }\n      }, attachedImgs[l].item))));\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 9\n        }\n      }, imgs);\n    }\n  } // Previosly saved documents\n\n\n  function convertBase64ToFile(dataurl, fileName) {\n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    let convFile = new File([u8arr], fileName, {\n      type: mime\n    });\n    handleAttachSavedFile(convFile);\n    console.log(\"CONV FILE\", convFile);\n  }\n\n  function handleAttachSavedFile(file) {\n    console.log(\"FILE\", file);\n\n    if (file.type === \"application/pdf\" || file.type === \"application/msword\" || file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n      savedDocs.push(file);\n      setSavedDocs(savedDocs);\n    } else {\n      savedImagesFiles.push(file);\n      setSavedImagesFiles(savedImagesFiles);\n      pushSavedImage(file);\n    } // setUpdateState(getUUID())\n\n  }\n\n  async function pushSavedImage(f) {\n    let reader = new FileReader();\n\n    reader.onload = async function (e) {\n      // push new images to list and show in UI\n      let image = {\n        item: /*#__PURE__*/React.createElement(\"img\", {\n          name: f.name,\n          height: \"150\",\n          width: \"auto\",\n          src: e.target.result,\n          onClick: () => savedImgClick(f.name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1433,\n            columnNumber: 27\n          }\n        })\n      };\n      savedImgs.push(image); // console.log(\"IMGLIST\", savedImgs)\n\n      setSavedImgs(savedImgs);\n      setUpdateState(getUUID());\n    };\n\n    reader.readAsDataURL(f);\n  }\n\n  async function savedImgClick(name) {\n    for (let l = 0; l < savedImgs.length; l++) {\n      if (savedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", savedImgs[l]);\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        });\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function savedDocsList() {\n    console.log(\"SAVEDOCS\", savedDocs);\n    let savedDocsList = [];\n\n    for (let i = 0; i < savedDocs.length; i++) {\n      savedDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 15\n        }\n      }, savedDocs[i].name + \" \", \"(\" + Math.round(savedDocs[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(savedDocs[i]),\n        download: savedDocs[i].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1469,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 19\n        }\n      }))))))); // console.log(\"FILE\", savedDocs[i])\n    }\n\n    return savedDocsList;\n  }\n\n  function savedImgsList() {\n    console.log(\"SAVEDIMGS\", savedImgs);\n    var imgs = [];\n\n    for (let l = 0; l < savedImgs.length; l++) {\n      let blob = converFileToBlob(savedImgs[l].item.props.src);\n      imgs.push( /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1490,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1491,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1492,\n          columnNumber: 13\n        }\n      }, savedImgs[l].item)), /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1497,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(blob),\n        download: savedImgs[l].item.props.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1498,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1503,\n          columnNumber: 17\n        }\n      }))))));\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1512,\n          columnNumber: 9\n        }\n      }, imgs);\n    }\n  }\n\n  function converFileToBlob(src) {\n    var byteString = atob(src.split(',')[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new Blob([ab], {\n      type: 'image/jpeg'\n    });\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1;\n      console.log(\"IT\", i, gridForm.sections[nextS]);\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"SignApplicationSaveButton\", null);\n    }\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1;\n    } // console.log(\"SORT\", property, sortOrder, type)\n\n\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder;\n        } else {\n          let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n          let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n          var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n          return result * sortOrder;\n        }\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type)); // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1641,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: isSearchForm === true ? 12 : 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1642,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1643,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      style: {\n        width: \"100%\",\n        \"border-collapse\": \"collapse\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1644,\n        columnNumber: 13\n      }\n    }, isSearchForm === false && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1646,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1647,\n        columnNumber: 19\n      }\n    }, Form.label)), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1650,\n        columnNumber: 15\n      }\n    }, Form.sections.map(section => {\n      return sectionBuilder(section);\n    }))))));\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1664,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1665,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1667,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1685,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1686,\n        columnNumber: 9\n      }\n    }, section.contents.map(contentItem => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1689,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1690,\n        columnNumber: 15\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1695,\n        columnNumber: 15\n      }\n    }, contentBuilder(contentItem))))));\n  } // Creating components by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1710,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1743,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1756,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressInt,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        } // defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        // onBlur={handleIntChange}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleIntChange,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: IntegerFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Float\") {\n      console.log(\"FLOAT VAL\", fieldValue[contentItem.name]);\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressFloat,\n        name: contentItem.name // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n        // onBlur={handleFloatChange}\n        // value={fieldValue[contentItem.name]}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleFloatChange,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: FloatFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1784,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressDateTime,\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1800,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        value: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1816,\n          columnNumber: 9\n        }\n      });\n    }\n  } // Key press handlers for some fields\n\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressDateTime(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressInt(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let int = parseInt(stringNum);\n          fieldValue[event.target.name] = int;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressFloat(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let float = parseFloat(stringNum);\n          fieldValue[event.target.name] = float;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function calculateColSpan(contents) {\n    let num = 0;\n\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1;\n      }\n    }\n\n    return num;\n  }\n\n  const handleContextMenu = event => {\n    if (userProfile.userRole === \"1\") {\n      event.preventDefault();\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null); // console.log(\"CLOSE\", fieldValue)\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name];\n      }\n    }\n\n    console.log(\"nForm\", gridForm);\n    setGridForm(gridForm);\n    setUpdateState(getUUID());\n  };\n\n  function createMenuItems() {\n    let columns = [];\n    columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1914,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: 5,\n        cursor: \"pointer\"\n      },\n      name: \"selectAll\",\n      onClick: () => handleTableCheckboxChange(\"selectAll\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1915,\n        columnNumber: 9\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1922,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: \"selectAll\",\n      onChange: handleGridCheckboxChange,\n      checked: gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1923,\n        columnNumber: 11\n      }\n    }))));\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name;\n        columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1936,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            paddingLeft: 5,\n            cursor: \"pointer\",\n            background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\"\n          },\n          name: name,\n          onClick: () => handleTableCheckboxChange(name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1937,\n            columnNumber: 13\n          }\n        }, gridForm.sections[s].contents[c].label), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1944,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          style: {\n            maxWidth: 20,\n            height: 15,\n            color: \"green\"\n          },\n          name: name,\n          onChange: handleGridCheckboxChange,\n          checked: gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1945,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n\n    return columns;\n  }\n\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId));\n  }\n\n  const handleGridCheckboxChange = event => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = {\n        [event.target.name]: event.target.checked\n      };\n\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name];\n      } // console.log(\"selectAll\", newFields)\n\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleTableCheckboxChange = name => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue\n      };\n\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name];\n      }\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [name]: !gridFieldValue[name]\n      });\n    }\n  };\n\n  if (updateState !== null) {\n    try {\n      return /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1991,\n          columnNumber: 9\n        }\n      }, isSearchForm !== null && isSearchForm === true ? /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1995,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1996,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        expanded: accordionExpanded,\n        onChange: () => handleExpandAccordion(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1997,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AccordionSummary, {\n        expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1999,\n            columnNumber: 33\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1998,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2001,\n          columnNumber: 21\n        }\n      }, Form.label)), /*#__PURE__*/React.createElement(AccordionDetails, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2003,\n          columnNumber: 19\n        }\n      }, getForm())))) : getForm(), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2012,\n          columnNumber: 11\n        }\n      }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n        name: button.name,\n        variant: \"outlined\",\n        onClick: () => buttonClick(button.name, null),\n        style: {\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2014,\n          columnNumber: 15\n        }\n      }, button.label))), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n        style: {\n          paddingTop: 3,\n          cursor: \"pointer\"\n        },\n        onClick: () => buttonClick(\"updateDocList\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2030,\n          columnNumber: 13\n        }\n      }), showAttachedDocuments === true && /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2033,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2034,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2035,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.importFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2036,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        accept: \"image/*, application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        className: classes.inputFile,\n        id: buttonFilesWordPdfImgId,\n        multiple: true,\n        type: \"file\",\n        onChange: handleAttachFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2037,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: buttonFilesWordPdfImgId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2045,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        component: \"span\",\n        variant: \"outlined\",\n        style: {\n          margin: 3,\n          color: \"white\",\n          backgroundColor: \"#BB7100\",\n          borderColor: \"#161C87\",\n          height: 32,\n          fontSize: 12\n        },\n        endIcon: /*#__PURE__*/React.createElement(AttachFileIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2057,\n            columnNumber: 34\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2046,\n          columnNumber: 23\n        }\n      }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B\"))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2064,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2065,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2066,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2067,\n          columnNumber: 21\n        }\n      }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"), attachedDocsList(), attachedImgsList()))), showSavedDocuments === true && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2074,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2075,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2076,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2077,\n          columnNumber: 23\n        }\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"), savedDocsList(), savedImgsList())))), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2087,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2088,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2089,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"500px\",\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2090,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        size: \"small\",\n        class: \"main-table-style\",\n        id: gridTableId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2091,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-style\",\n        style: {\n          position: \"sticky\",\n          top: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2092,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2094,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-first-child\",\n        onContextMenu: ev => handleContextMenu(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2095,\n          columnNumber: 27\n        }\n      }), gridForm.sections.map((section, index) => {\n        let showSection = checkToShowSection(section);\n\n        if (showSection === true) {\n          let lastSection = checkSectionOnLastChild(index);\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n            colSpan: calculateColSpan(section.contents),\n            onContextMenu: ev => handleContextMenu(ev),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2101,\n              columnNumber: 33\n            }\n          }, section.label);\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2111,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-style-2row\",\n        rowSpan: \"2\",\n        style: {\n          \"minWidth\": \"65px\"\n        },\n        onContextMenu: ev => handleContextMenu(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2112,\n          columnNumber: 27\n        }\n      }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            rowSpan: \"2\",\n            onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n            onContextMenu: ev => handleContextMenu(ev),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2124,\n              columnNumber: 35\n            }\n          }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2131,\n              columnNumber: 100\n            }\n          }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2131,\n              columnNumber: 153\n            }\n          }) : \"\");\n        }\n      })))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2139,\n          columnNumber: 23\n        }\n      }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          \"height\": 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2142,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-style\",\n        style: {\n          \"maxWidth\": 34\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2143,\n          columnNumber: 31\n        }\n      }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n        key: button.name,\n        name: button.name,\n        variant: \"outlined\" // id={dataItem.id}\n        ,\n        value: button.name,\n        onClick: () => buttonClick(button.name, dataItem),\n        style: {\n          margin: 1,\n          height: 24,\n          fontSize: 10,\n          maxWidth: 32,\n          backgroundColor: button.backgroundColor,\n          borderColor: \"darkgreen\",\n          color: \"darkgreen\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2146,\n          columnNumber: 37\n        }\n      }, button.label))), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-body-style\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2170,\n              columnNumber: 39\n            }\n          }, getGridFormItems(dataItem, contentItem));\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2183,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2184,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2185,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        style: {\n          background: \"#047535\",\n          color: \"white\",\n          height: 28\n        },\n        onClick: () => downloadExcel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2186,\n          columnNumber: 25\n        }\n      }, \"\\u0412 EXCEL\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2193,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          minWidth: 90,\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2194,\n          columnNumber: 25\n        }\n      }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2196,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        style: {\n          minWidth: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2197,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(GridSelect, {\n        onChange: handleChangeRowsPerPage,\n        style: {\n          height: 25,\n          color: \"black\"\n        },\n        value: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2201,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2206,\n          columnNumber: 29\n        }\n      }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2207,\n          columnNumber: 29\n        }\n      }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2208,\n          columnNumber: 29\n        }\n      }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2209,\n          columnNumber: 29\n        }\n      }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2210,\n          columnNumber: 29\n        }\n      }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2211,\n          columnNumber: 29\n        }\n      }, \"500\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 1000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2212,\n          columnNumber: 29\n        }\n      }, \"1000\")))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2217,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2218,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowFirstClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2219,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n        style: {\n          fontSize: \"large\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2220,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2224,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2225,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowLeftClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2226,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2227,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"black\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2231,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          maxWidth: 25\n        },\n        value: page,\n        onChange: handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2232,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2234,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2235,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => GoToPage(),\n        variant: \"outlined\",\n        style: {\n          height: 22,\n          backgroundColor: \"#D1D6D6\",\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2236,\n          columnNumber: 27\n        }\n      }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2248,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2249,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowRightClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2250,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2251,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        class: \"pagination-rows-amount-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2255,\n          columnNumber: 23\n        }\n      }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount(), \" \\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList.length))), /*#__PURE__*/React.createElement(Menu, {\n        anchorEl: anchorEl,\n        open: openMenu,\n        onClose: handleCloseMenu,\n        MenuListProps: {\n          'aria-labelledby': 'basic-button'\n        },\n        style: {\n          paddingLeft: \"100px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2259,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2268,\n          columnNumber: 21\n        }\n      }, createMenuItems()))))), /*#__PURE__*/React.createElement(Modal, {\n        className: classes.modal,\n        open: openModal,\n        onClose: handleCloseModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2276,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.imagePaper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2281,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        name: selectedImg.name,\n        height: 600,\n        width: \"auto\",\n        src: selectedImg.src,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2282,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Snackbar, {\n        open: showSnackBar,\n        onClose: () => handleCloseSnackBar(),\n        autoHideDuration: 1200,\n        message: snackBarMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2285,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Modal, {\n        open: showModalEnterPin,\n        onClose: handleCloseModalEnterPin,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2291,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: modalStyle,\n        className: classes.modalRutoken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2297,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        id: \"simple-modal-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2298,\n          columnNumber: 15\n        }\n      }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        style: {\n          width: \"100%\"\n        },\n        error: wrongPin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2299,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"outlined-adornment-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2300,\n          columnNumber: 17\n        }\n      }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n        type: showPin ? 'text' : 'password',\n        defaultValue: rutokenPin,\n        onChange: handlePinChange,\n        onKeyPress: onKeyPressModalEnterPin,\n        autoFocus: true,\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2308,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPin,\n          edge: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2309,\n            columnNumber: 23\n          }\n        }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2314,\n            columnNumber: 36\n          }\n        }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2314,\n            columnNumber: 53\n          }\n        }))),\n        labelWidth: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2301,\n          columnNumber: 17\n        }\n      })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2321,\n          columnNumber: 37\n        }\n      }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        onClick: () => buttonClick(\"SignApplicationSaveButton\"),\n        style: {\n          margin: 3,\n          height: 32,\n          fontSize: 12,\n          color: \"white\",\n          backgroundColor: \"#2862F4\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2322,\n          columnNumber: 15\n        }\n      }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        onClick: handleCloseModalEnterPin,\n        style: {\n          margin: 3,\n          height: 32,\n          fontSize: 12,\n          color: \"white\",\n          backgroundColor: \"#E73639\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2334,\n          columnNumber: 15\n        }\n      }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2354,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","Snackbar","NumberFormat","PropTypes","Card","Modal","Menu","FormControl","FormControlLabel","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","AttachFileIcon","MenuItem","FirstPageIcon","ArrowForwardIosIcon","ArrowBackIosIcon","LinearProgress","IconButton","ArrowUpwardRoundedIcon","GetAppIcon","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","GridSelect","TextField","Select","Checkbox","swal","Tooltip","numberToWordsRu","rutoken","tableToExcel","moment","require","plugin","rutokenHandle","certHandle","certData","cmsData","generator","FloatFormat","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","IntegerFormat","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","importFile","inputFile","display","modal","alignItems","justifyContent","modalRutoken","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","getModalStyle","top","left","transform","classes","userProfile","session_id","userTask","process_id","taskID","Form","setForm","selectedDoc","setSelectedDoc","docId","setDocId","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","gridForm","setGridForm","gridFormButtons","enumData","enumOptions","setEnumOptions","gridFormEnumData","fieldValue","setFieldValue","selectedOptions","setSelectedOptions","buttons","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","sectionColor","updateState","setUpdateState","taskType","showSavedDocuments","setShowSavedDocuments","showAttachedDocuments","setShowAttachedDocuments","openModal","setOpenModal","attachedImgs","setAttachedImgs","attachedImgsFiles","setAttachedImgsFiles","attachedDocs","setAttachedDocs","Blobs","setBlobs","selectedImg","setSelectedImg","savedImgs","setSavedImgs","savedImagesFiles","setSavedImagesFiles","savedDocs","setSavedDocs","buttonFilesWordPdfImgId","setButtonFilesWordPdfImgId","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","modalStyle","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","isSearchForm","setIsSearchForm","accordionExpanded","setAccordionExpanded","anchorEl","setAnchorEl","openMenu","Boolean","gridTableId","getUUID","gridFieldValue","setGridFieldValue","console","log","parsedData","JSON","parse","s","parseInt","p","sortedDocList","sort","dynamicSort","filterDocList","fetchBySize","er","callErrorToast","undefined","parsedSelectedDoc","fields","sections","length","c","contents","fieldName","newEnumOptions","i","options","d","data","push","id","label","getLostEnumName","partner","depositor","application_type","extension","convertBase64ToFile","content","fileName","newFields","show","enumI","type","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","handleError","reason","isNaN","message","errorCodes","PIN_INCORRECT","sign","commandJson","enumerateDevices","devices","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","alert","inn","fullName","subject","rdn","setEsInn","setEsUserFullName","setEsExpiredDate","validNotAfter","substring","applicationToSign","variables","document","getCurrentFullDateTime","stringify","handleCloseModalEnterPin","swAllert","sendFieldValues","clearTabData","DATA_FORMAT_PLAIN","logout","handleExpandAccordion","handleOpenModal","handleCloseModal","handleOpenModalEnterPin","handlePinChange","event","handleClickShowPin","handleCheckboxChange","checked","handleFloatChange","handleIntChange","stringNum","toString","replace","int","converted","convert","currency","currencyNameCases","fractionalPartNameCases","declension","currencyNounGender","integer","showNumberParts","fractional","handleChange","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","edit","handleDateTimeChange","fullDateTime","format","getContentType","key","fetchFrom","fetchTo","Data","newDocList","Object","keys","match","contentType","searchField","toLowerCase","dataField","includeSearch","includes","parseDate","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","handleCloseSnackBar","getPageAmount","pagesFloat","mathRoundOfPages","Math","floor","uuidv1","text","icon","ok","getFieldValuesSaveDocument","docToSave","getFieldValuesUpdateDocument","docToUpdate","created_at","checkForRequieredFields","checkedSuccessfuly","required","buttonClick","buttonName","item","commandType","userId","userRole","userAction","searchDoc","updateBody","files_directory","blobs","directory","checkResult","esInn","dir","esUserFullName","updateApplication","newSelectedDoc","security_type","is_gov_security","code","isin","nominal","quantity","securities_quantity_int","reg_date","securities_placement_begin_date","end_date","securities_placement_end_date","authorization","getGridFormItems","dataItem","contentItem","l","maxWidth","color","Date","Time","newCur","currencyBeautifier","newInt","intBeautifier","handleAttachFile","e","selectedFiles","files","reader","FileReader","onload","image","attachedImgClick","readAsDataURL","pushNewBlob","f","blobToBase64","cb","dataUrl","base64","split","newBlob","src","newId","attachedDocsList","selDocsList","paddingLeft","minWidth","fontWeight","round","attachedImgsList","imgs","dataurl","arr","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","convFile","File","handleAttachSavedFile","file","pushSavedImage","savedImgClick","savedDocsList","URL","createObjectURL","fontSize","savedImgsList","blob","converFileToBlob","byteString","ab","ArrayBuffer","ia","Blob","checkToShowSection","section","showSection","checkSectionOnLastChild","lastSection","nextS","onKeyPressModalEnterPin","charCode","property","sortOrder","a","b","dateA","timeInSecA","getTime","dateB","timeInSecB","labelA","getEnumLabel","labelB","sortDataByColumn","getForm","maxHeight","map","sectionBuilder","bodyBuilder","contentBuilder","onKeyPressText","selectedOption","body","menuPortal","base","zIndex","onKeyPressInt","inputComponent","onKeyPressFloat","onKeyPressDateTime","shrink","parseFullDateTime","float","parseFloat","calculateColSpan","num","handleContextMenu","preventDefault","currentTarget","handleCloseMenu","createMenuItems","columns","cursor","handleTableCheckboxChange","handleGridCheckboxChange","downloadExcel","getElementById","index","fontColor","paddingTop","borderColor","ev","marginBottom","imagePaper"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/NewSecurityApplications/NewSecurityApplications.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport Modal from \"@material-ui/core/Modal\";\nimport Menu from '@mui/material/Menu';\n// PIN components\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n// Accordion\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Icons\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n\n// import CloseIcon from '@material-ui/icons/Close';\n// import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\n// Form components\nimport GridSelect from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n// Libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport Tooltip from '@material-ui/core/Tooltip';\nimport numberToWordsRu from 'number-to-words-ru'; // https://www.npmjs.com/package/number-to-words-ru\nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\nvar moment = require('moment');\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalRutoken: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n}))\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nexport default (props) => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [docId, setDocId] = useState(props.userTask.docId)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [enumData] = useState(props.userTask.enumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [fieldValue, setFieldValue] = useState({})\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [buttons] = useState(props.userTask.buttons)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [taskType] = useState(props.userTask.taskType)\n  const [showSavedDocuments, setShowSavedDocuments] = useState(false)\n  const [showAttachedDocuments, setShowAttachedDocuments] = useState(false)\n\n  const [openModal, setOpenModal] = useState(false)\n  const [attachedImgs, setAttachedImgs] = useState([])\n  const [attachedImgsFiles, setAttachedImgsFiles] = useState([])\n  const [attachedDocs, setAttachedDocs] = useState([])\n  const [Blobs, setBlobs] = useState([])\n  const [selectedImg, setSelectedImg] = useState({})\n  const [savedImgs, setSavedImgs] = useState([])\n  const [savedImagesFiles, setSavedImagesFiles] = useState([])\n  const [savedDocs, setSavedDocs] = useState([])\n  const [buttonFilesWordPdfImgId, setButtonFilesWordPdfImgId] = useState(null)\n\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n\n  const [modalStyle] = useState(getModalStyle)\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n\n  const [isSearchForm, setIsSearchForm] = useState(null)\n  const [accordionExpanded, setAccordionExpanded] = useState(false)\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n  const [gridTableId] = useState(getUUID())\n  const [gridFieldValue, setGridFieldValue] = useState({})\n\n  // Set data from props to state of component\n  useEffect(() => {\n    console.log(\"NEW APPL PROPS\", props)\n    setButtonFilesWordPdfImgId(getUUID())\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        setIsSearchForm(true)\n        setFilteredDocList(parsedData)\n        setInitialDocList(parsedData)\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", -1, \"Int\"))\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc))\n        }\n        else { fetchBySize(0, s - 1, sortedDocList) }\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    else { setIsSearchForm(false) }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      let fields = {}\n      // let Form = props.userTask.Form\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name\n          fields[fieldName] = parsedSelectedDoc[fieldName]\n        }\n      }\n      console.log(\"SDOC\", parsedSelectedDoc)\n      // console.log(\"FIELDVAL\", fields)\n      setSelectedDoc(parsedSelectedDoc)\n      setFieldValue(fields)\n    }\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {}\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }]\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            })\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n    }\n    if (props.userTask.taskType === \"showNewSecurityApplicationsCreatingForm\") {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      setShowAttachedDocuments(true)\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i].name === \"partners\") {\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            if (props.userTask.enumData[i].data[d].id === parseInt(userProfile.partner)) {\n              setFieldValue({ depositor: props.userTask.enumData[i].data[d].label, application_type: parsedSelectedDoc.application_type })\n            }\n          }\n        }\n      }\n      // setFieldValue({depositor: userProfile.firstName + \" \" + userProfile.lastName, application_type: parsedSelectedDoc.application_type})\n    }\n    if (props.userTask.taskType === \"showNewSecurityApplicationsEditForm\") {\n      setShowAttachedDocuments(true)\n      setShowSavedDocuments(true)\n    }\n    if (props.userTask.savedDocs.length !== 0) {\n      for (let d = 0; d < props.userTask.savedDocs.length; d++) {\n        let extension = props.userTask.savedDocs[d].extension\n        if (extension === \".png\") {\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".jpeg\" || extension === \".jpg\") {\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".doc\") {\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".docx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".xlsx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".pdf\") {\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n      }\n    }\n    if (gridForm !== null) {\n      let newFields = {}\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show\n        }\n      }\n      setGridFieldValue(newFields)\n    }\n    setUpdateState(getUUID())\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n  // RuToken functions\n  rutoken.ready\n    // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n    .then(function () {\n      if (window.chrome || typeof InstallTrigger !== 'undefined') {\n        return rutoken.isExtensionInstalled()\n      } else {\n        return Promise.resolve(true)\n      }\n    })\n    // Проверка установки Рутокен Плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.isPluginInstalled()\n      } else {\n        // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n      }\n    })\n    // Загрузка плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.loadPlugin()\n      } else {\n        // alert(\"Не удаётся найти Плагин\");\n      }\n    })\n    //Можно начинать работать с плагином\n    .then(function (result) {\n      if (!result) {\n        return // alert(\"Не удаётся загрузить Плагин\")\n      } else {\n        plugin = result\n        return Promise.resolve()\n      }\n    })\n\n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          props.callErrorToast(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  // Sign transfer order with rutoken\n  function sign(commandJson) {\n    try {\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices()\n          .then(function (devices) {\n            if (devices.length > 0) {\n              return Promise.resolve(devices[0]);\n            } else {\n              // alert(\"Рутокен не обнаружен\");\n            }\n          })\n          // Проверка залогиненности\n          .then(function (firstDevice) {\n            rutokenHandle = firstDevice;\n            return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n          })\n          // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n          .then(function (isLoggedIn) {\n            if (isLoggedIn) {\n              return Promise.resolve();\n            } else {\n              return plugin.login(rutokenHandle, rutokenPin); // 240699\n            }\n          })\n          // Перебор пользовательских сертификатов на токене\n          .then(function () {\n            return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n          })\n          .then(function (certs) {\n            if (certs.length > 0) {\n              certHandle = certs[0];\n              return plugin.parseCertificate(rutokenHandle, certs[0]);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\");\n            }\n          })\n          // Подписание данных из текстового поля на первом найденом сертификате\n          .then(function (certs) {\n            certData = certs\n            if (certHandle.length > 0) {\n              var options = {};\n              let inn = \"\"\n              let fullName = \"\"\n              for (let i = 0; i < certData.subject.length; i++) {\n                if (certData.subject[i].rdn === \"serialNumber\") {\n                  inn = certData.subject[i].value\n                }\n                if (certData.subject[i].rdn === \"commonName\") {\n                  fullName = certData.subject[i].value\n                }\n              }\n              props.setEsInn(inn)\n              props.setEsUserFullName(fullName)\n              props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n              let applicationToSign = commandJson.variables.document.value\n\n              applicationToSign[\"status\"] = 0\n              applicationToSign[\"es_inn\"] = inn\n              applicationToSign[\"es_full_name\"] = fullName\n              applicationToSign[\"es_date\"] = props.getCurrentFullDateTime()\n              applicationToSign[\"depositor_authorized_person\"] = fullName\n\n              commandJson.variables.document.value = JSON.stringify(applicationToSign)\n              console.log(\"SIGN\", applicationToSign, commandJson)\n              handleCloseModalEnterPin()\n              swAllert(\"Документ успешно подписан!\", \"success\")\n              props.sendFieldValues(commandJson)\n              props.clearTabData(commandJson.process_id)\n              return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\")\n            }\n          })\n          // Закрытие сессии\n          .then(function () {\n            plugin.logout(rutokenHandle)\n          }, handleError)\n      }\n      else { props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\") }\n    }\n    catch (er) {\n      console.log(\"Rutoken ERR\")\n    }\n  }\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded)\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n  const handleCloseModal = () => {\n    setOpenModal(false)\n  }\n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true)\n  }\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin() {\n    setShowPin(!showPin)\n  }\n  const handleCheckboxChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked });\n  }\n  // Integer input handler\n  // const handleIntChange = (event) => {\n  //   console.log(\"INT CHANGE\", event.target.name, event.target.value)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  //   if (event.target.name === \"securities_quantity_int\") {\n  //     let converted = numberToWordsRu.convert(event.target.value, {\n  //       currency: {\n  //         currencyNameCases: ['ценная бумага', 'ценных бумаги', 'ценных бумаг'],\n  //         fractionalPartNameCases: ['', '', ''],\n  //         declension: 'nominative',\n  //         currencyNounGender: {\n  //           integer: 1, // 1 => Женский род ('одна', 'две'...)\n  //         }\n  //       },\n  //       showNumberParts: {\n  //         integer: true,\n  //         fractional: false\n  //       }\n  //     })\n  //     // console.log(\"WORD\", converted)\n  //     setFieldValue({ ...fieldValue, [\"securities_quantity_text\"]: converted, [event.target.name]: event.target.value })\n  //   }\n  // }\n  // Float input handler\n  const handleFloatChange = (event) => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  const handleIntChange = (event) => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '')\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int })\n    if (event.target.name === \"securities_quantity_int\") {\n      let converted = numberToWordsRu.convert(stringNum, {\n        currency: {\n          currencyNameCases: ['ценная бумага', 'ценных бумаги', 'ценных бумаг'],\n          fractionalPartNameCases: ['', '', ''],\n          declension: 'nominative',\n          currencyNounGender: {\n            integer: 1, // 1 => Женский род ('одна', 'две'...)\n          }\n        },\n        showNumberParts: {\n          integer: true,\n          fractional: false\n        }\n      })\n      // console.log(\"WORD\", converted)\n      setFieldValue({ ...fieldValue, [\"securities_quantity_text\"]: converted, [event.target.name]: int })\n    }\n  }\n  // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value\n    console.log(\"OPT\", option.name, option.value)\n    var updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option\n        noSuchOption = false\n        setSelectedOptions(updateSelectedOptions)\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    if (option.name === \"payer_type\" && (taskType === \"showPaymentsForCDServicesCreatingForm\" ||\n      taskType === \"showPaymentsForCDServicesViewForm\" || taskType === \"showPaymentsForCDServicesSearchForm\")) {\n      // console.log(\"SEL\", option.name, option.value)\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          if (Form.sections[s].contents[c].name === \"depositor\") {\n            if (option.value === 1) {\n              Form.sections[s].contents[c].show = true\n              Form.sections[s].contents[c].edit = true\n              fieldValue[\"issuer\"] = null\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"issuer\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"issuer\"\n                  }\n                  setSelectedOptions(updateSelectedOptions)\n                  break\n                }\n              }\n            }\n            else {\n              Form.sections[s].contents[c].show = false\n              Form.sections[s].contents[c].edit = false\n            }\n          }\n          if (Form.sections[s].contents[c].name === \"issuer\") {\n            if (option.value === 2) {\n              Form.sections[s].contents[c].show = true\n              Form.sections[s].contents[c].edit = true\n              fieldValue[\"depositor\"] = null\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"depositor\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"depositor\"\n                  }\n                  setSelectedOptions(updateSelectedOptions)\n                  break\n                }\n              }\n            }\n            else {\n              Form.sections[s].contents[c].show = false\n              Form.sections[s].contents[c].edit = false\n            }\n          }\n        }\n      }\n      setForm(Form)\n\n      // console.log(\"NEW ENUMS\")\n    }\n    else if (option.name === \"recipient_type\" && (taskType === \"showTransitChargeForCDServicesCreatingForm\" ||\n      taskType === \"showTransitChargeForCDServicesEditForm\" ||\n      taskType === \"showTransitPaymentsForCDServicesCreatingForm\" ||\n      taskType === \"showTransitPaymentsForCDServicesEditForm\" ||\n      taskType === \"showTransitPaymentsForCDServicesSearchForm\")) {\n      console.log(\"RECIPIENT\", option.name, option.value, fieldValue)\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          if (Form.sections[s].contents[c].name === \"registrar\") {\n            if (option.value === 1) {\n              Form.sections[s].contents[c].show = true\n              Form.sections[s].contents[c].edit = true\n              fieldValue[\"corr_depository\"] = null\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"corr_depository\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"corr_depository\"\n                  }\n                  setSelectedOptions(updateSelectedOptions)\n                  break\n                }\n              }\n            }\n            else {\n              Form.sections[s].contents[c].show = false\n              Form.sections[s].contents[c].edit = false\n            }\n          }\n          if (Form.sections[s].contents[c].name === \"corr_depository\") {\n            if (option.value === 2) {\n              Form.sections[s].contents[c].show = true\n              Form.sections[s].contents[c].edit = true\n              fieldValue[\"registrar\"] = null\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"registrar\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"registrar\"\n                  }\n                  setSelectedOptions(updateSelectedOptions)\n                  break\n                }\n              }\n            }\n            else {\n              Form.sections[s].contents[c].show = false\n              Form.sections[s].contents[c].edit = false\n            }\n          }\n        }\n      }\n      setForm(Form)\n      // console.log(\"NEW ENUMS\")\n    }\n  }\n  function handleDateTimeChange(event) {\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    let fullDateTime = moment(event.target.value).format('YYYY-MM-DDTHH:mm:ss')\n    fieldValue[event.target.name] = fullDateTime\n    setFieldValue(fieldValue)\n    // console.log(\"DATE CHANGE\", event.target.value)\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  // filter docList by filled parameters\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = []\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data\n    }\n    else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true\n          }\n          else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key)\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                catch (er) {\n                  console.log(\"ERR\", er)\n                  match = true\n                }\n              }\n              else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else { match = true }\n              }\n              else if (contentType === \"Enum\") {\n\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true\n                }\n                else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n              else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n            }\n            else {\n              match = false\n              break\n            }\n          }\n        }\n        if (match === true) {\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered docList by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.floor(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  // random UUID generator\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  // Collect data to save doc\n  function getFieldValuesSaveDocument() {\n    let docToSave = {}\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined) {\n          docToSave[fieldName] = false\n        }\n        else {\n          docToSave[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToSave\n  }\n  function getFieldValuesUpdateDocument() {\n    let docToUpdate = {}\n    docToUpdate[\"created_at\"] = selectedDoc.created_at\n    docToUpdate[\"id\"] = selectedDoc.id\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false\n        }\n        else {\n          docToUpdate[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToUpdate\n  }\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = false\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].required === true && (fieldValue[fieldName] === undefined ||\n          fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName].length === 0)) {\n          checkedSuccessfuly = false\n          swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n          return false\n        }\n        else {\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  function buttonClick(buttonName, item) {\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true)\n      }\n      else {\n        filterDocList(0, size - 1, initialDocList, fieldValue)\n      }\n    }\n    else if (buttonName === \"openDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: { value: JSON.stringify(item) },\n          userAction: { value: \"openDocument\" },\n          docId: { value: item.id },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button openDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocument\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody.files_directory = selectedDoc.files_directory\n      let commandJson =\n      {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        blobs: Blobs,\n        directory: selectedDoc.files_directory,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"updateDocument:\", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createDocument\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"createDocument\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"createDocument:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"selectApplicationType\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"selectApplicationType\" },\n          selectedDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"selectApplicationType:\", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"signApplication\") {\n      let checkResult = checkForRequieredFields()\n      console.log(\"signApplication\", checkResult)\n      if (checkResult === true) {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin()\n        }\n        else {\n          let docToSave = getFieldValuesSaveDocument()\n          let dir = getUUID()\n          docToSave.files_directory = dir\n          docToSave[\"status\"] = 0\n          docToSave[\"es_inn\"] = props.esInn\n          docToSave[\"es_full_name\"] = props.esUserFullName\n          docToSave[\"es_date\"] = props.getCurrentFullDateTime()\n          docToSave[\"depositor_authorized_person\"] = props.esUserFullName\n          const commandJson =\n          {\n            commandType: \"saveDocumentsWithFiles\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            userId: userProfile.userId,\n            userRole: userProfile.userRole,\n            blobs: Blobs,\n            directory: dir,\n            variables: {\n              userAction: { value: \"saveDocument\" },\n              document: { value: JSON.stringify(docToSave) }\n            }\n          }\n          console.log(\"button signInstruction: \", commandJson)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    else if (buttonName === \"SignApplicationSaveButton\") {\n      let docToSave = getFieldValuesSaveDocument()\n      let dir = getUUID()\n      docToSave.files_directory = dir\n      const commandJson =\n      {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        blobs: Blobs,\n        directory: dir,\n        variables: {\n          userAction: { value: \"saveDocument\" },\n          document: { value: docToSave }\n        }\n      }\n      console.log(\"button SignApplicationSaveButton: \", commandJson)\n      sign(commandJson)\n    }\n    else if (buttonName === \"createSecurity\") {\n      let updateApplication = selectedDoc\n      updateApplication[\"status\"] = 2\n      let newSelectedDoc = {\n        security_type: selectedDoc.security_type,\n        is_gov_security: selectedDoc.is_gov_security,\n        code: selectedDoc.code,\n        isin: selectedDoc.isin,\n        nominal: selectedDoc.nominal,\n        currency: selectedDoc.currency,\n        quantity: selectedDoc.securities_quantity_int,\n        reg_date: selectedDoc.securities_placement_begin_date,\n        end_date: selectedDoc.securities_placement_end_date\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"createSecurity\" },\n          updateApplication: { value: JSON.stringify(updateApplication) },\n          selectedDoc: { value: JSON.stringify(newSelectedDoc) }\n        }\n      }\n      console.log(\"createSecurity:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocList\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocList\" },\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else {\n      console.log(\"UNKNOWN Button \", buttonName)\n    }\n  }\n\n  // Create grid form components\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name]\n    let name = contentItem.name\n    let type = contentItem.type\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    else if (type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\" }}\n          checked={(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newCur = props.currencyBeautifier(value)\n        return newCur\n      }\n    }\n    else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newInt = props.intBeautifier(value)\n        return newInt\n      }\n    }\n    else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        return (<td>{value}</td>)\n      }\n    }\n  }\n  // attached documents\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files\n    console.log(\"A DOCS\", selectedFiles)\n    if (selectedFiles && selectedFiles[0]) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        if (selectedFiles[i].type === \"application/pdf\" ||\n          selectedFiles[i].type === \"application/msword\" ||\n          selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n          selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n          attachedDocs.push(selectedFiles[i])\n          setAttachedDocs(attachedDocs)\n          setUpdateState(getUUID())\n          // console.log(\"A DOCS\", attachedDocs)\n        }\n        else {\n          let reader = new FileReader()\n          reader.onload = async function (e) {\n            // push new images to list and show in UI\n            let image = { item: <img name={selectedFiles[i].name} height=\"150\" width=\"auto\" src={e.target.result} onClick={() => attachedImgClick(selectedFiles[i].name)} /> }\n            attachedImgs.push(image)\n            setAttachedImgs(attachedImgs)\n            setUpdateState(getUUID())\n            // console.log(\"IMGLIST\", attachedImgs)\n          }\n          reader.readAsDataURL(selectedFiles[i])\n          attachedImgsFiles.push(selectedFiles[i])\n          // pushAttachedImage(selectedFiles[i])\n          setAttachedImgsFiles(attachedImgsFiles)\n          // console.log(\"A IMGS\", attachedImgsFiles)\n        }\n        pushNewBlob(selectedFiles[i])\n      }\n    }\n\n  }\n  async function pushNewBlob(f) {\n    var blobToBase64 = function (f, cb) {\n      let reader = new FileReader()\n      reader.onload = function () {\n        // converts blob to base64\n        var dataUrl = reader.result\n        var base64 = dataUrl.split(\",\")[1]\n        cb(base64)\n      }\n      reader.readAsDataURL(f)\n    }\n    blobToBase64(f, async function (base64) {\n      // encode blobs to send to socket\n      let newBlob = { \"name\": f.name, \"blob\": base64, \"size\": f.size, type: f.type }\n      Blobs.push(newBlob)\n      setBlobs(Blobs)\n      console.log(\"BLOBS\", Blobs)\n    })\n  }\n  async function attachedImgClick(name) {\n    for (let l = 0; l < attachedImgs.length; l++) {\n      if (attachedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", attachedImgs[l])\n        setSelectedImg({\n          name: attachedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: attachedImgs[l].item.props.src\n        })\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function attachedDocsList() {\n    console.log(\"A DOCS\", attachedDocs)\n    let selDocsList = []\n    for (let i = 0; i < attachedDocs.length; i++) {\n      selDocsList.push(\n        <Card style={{ margin: 3, backgroundColor: \"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\" }}>\n          <table>\n            <tr>\n              <td style={{ color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\" }}>\n                {attachedDocs[i].name + \" \"}{\"(\" + Math.round(attachedDocs[i].size / 1000) + \")\" + \"КБ\"}\n              </td>\n            </tr>\n          </table>\n        </Card>)\n\n    }\n    return (selDocsList)\n  }\n  function attachedImgsList() {\n    var imgs = []\n    for (let l = 0; l < attachedImgs.length; l++) {\n      imgs.push(\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              {attachedImgs[l].item}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      )\n    }\n    if (Object.keys(imgs).length !== 0) {\n      return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      )\n    }\n  }\n  // Previosly saved documents\n  function convertBase64ToFile(dataurl, fileName) {\n    var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n)\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n)\n    }\n    let convFile = new File([u8arr], fileName, { type: mime })\n    handleAttachSavedFile(convFile)\n    console.log(\"CONV FILE\", convFile)\n  }\n  function handleAttachSavedFile(file) {\n    console.log(\"FILE\", file)\n    if (file.type === \"application/pdf\" || file.type === \"application/msword\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n      savedDocs.push(file)\n      setSavedDocs(savedDocs)\n    }\n    else {\n      savedImagesFiles.push(file)\n      setSavedImagesFiles(savedImagesFiles)\n      pushSavedImage(file)\n    }\n    // setUpdateState(getUUID())\n  }\n  async function pushSavedImage(f) {\n    let reader = new FileReader()\n    reader.onload = async function (e) {\n      // push new images to list and show in UI\n      let image = { item: <img name={f.name} height=\"150\" width=\"auto\" src={e.target.result} onClick={() => savedImgClick(f.name)} /> }\n      savedImgs.push(image)\n      // console.log(\"IMGLIST\", savedImgs)\n      setSavedImgs(savedImgs)\n      setUpdateState(getUUID())\n    }\n    reader.readAsDataURL(f)\n  }\n  async function savedImgClick(name) {\n    for (let l = 0; l < savedImgs.length; l++) {\n      if (savedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", savedImgs[l])\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        })\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function savedDocsList() {\n    console.log(\"SAVEDOCS\", savedDocs)\n    let savedDocsList = []\n    for (let i = 0; i < savedDocs.length; i++) {\n      savedDocsList.push(\n        <Card style={{ margin: 3, backgroundColor: \"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\" }}>\n          <table>\n            <tr>\n              <td style={{ color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\" }}>\n                {savedDocs[i].name + \" \"}{\"(\" + Math.round(savedDocs[i].size / 1000) + \")\" + \"КБ\"}\n              </td>\n              <td>\n                <IconButton\n                  component=\"a\"\n                  href={URL.createObjectURL(savedDocs[i])}\n                  download={savedDocs[i].name}\n                >\n                  <GetAppIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                </IconButton>\n              </td>\n            </tr>\n          </table>\n        </Card>)\n      // console.log(\"FILE\", savedDocs[i])\n    }\n    return (savedDocsList)\n  }\n  function savedImgsList() {\n    console.log(\"SAVEDIMGS\", savedImgs)\n    var imgs = []\n    for (let l = 0; l < savedImgs.length; l++) {\n      let blob = converFileToBlob(savedImgs[l].item.props.src)\n      imgs.push(\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              {savedImgs[l].item}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell align=\"center\">\n              <IconButton\n                component=\"a\"\n                href={URL.createObjectURL(blob)}\n                download={savedImgs[l].item.props.name}\n              >\n                <GetAppIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      )\n    }\n    if (Object.keys(imgs).length !== 0) {\n      return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      )\n    }\n  }\n  function converFileToBlob(src) {\n    var byteString = atob(src.split(',')[1])\n    var ab = new ArrayBuffer(byteString.length)\n    var ia = new Uint8Array(ab)\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ab], { type: 'image/jpeg' })\n  }\n  function checkToShowSection(section) {\n    let showSection = false\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true\n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i) {\n    let lastSection = true\n    if (i === gridForm.sections.length - 1) { // The last section\n      return true\n    }\n    else {\n      let nextS = i + 1\n      console.log(\"IT\", i, gridForm.sections[nextS])\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) { // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"SignApplicationSaveButton\", null)\n    }\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1\n    }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA = dateA.getTime() / 1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB = dateB.getTime() / 1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else {\n          if (a[property] === null) {\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n    else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder\n        }\n        else {\n          let labelA = getEnumLabel(property, a[property])\n          // console.log(\"A\", property, a[property], labelA)\n          let labelB = getEnumLabel(property, b[property])\n          // console.log(\"labelB\", labelB, property, b)\n          var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n          return result * sortOrder\n        }\n\n      }\n    }\n  }\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size - 1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function getForm() {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n        <Grid item xs={isSearchForm === true ? 12 : 8}>\n          <Paper>\n            <Table style={{ width: \"100%\", \"border-collapse\": \"collapse\" }}>\n              {isSearchForm === false &&\n                <TableRow style={{ maxHeight: 25 }}>\n                  <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                </TableRow>\n              }\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {Form.sections.map(section => {\n                  return sectionBuilder(section)\n                })}\n              </Grid>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map(contentItem => (\n            contentItem.show === true &&\n            <TableRow style={{ height: 30 }}>\n              <TableCell\n                align=\"left\"\n                style={{ width: \"40%\" }}>\n                {contentItem.label}\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                style={{ width: \"60%\", height: 30 }}\n              >{contentBuilder(contentItem)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n  // Creating components by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur={handleChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name]) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined) ? false : true}\n        />\n      )\n    }\n    else if (contentItem.type === \"Int\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressInt}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          style={{ width: \"100%\" }}\n          // defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          // onBlur={handleIntChange}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleIntChange}\n          name={contentItem.name}\n          InputProps={{ inputComponent: IntegerFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Float\") {\n      console.log(\"FLOAT VAL\", fieldValue[contentItem.name])\n      return (\n        <TextField\n          onKeyPress={onKeyPressFloat}\n          name={contentItem.name}\n          // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n          // onBlur={handleFloatChange}\n          // value={fieldValue[contentItem.name]}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleFloatChange}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: FloatFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressDateTime}\n          type=\"date\"\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\") {\n      return (\n        <TextField\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n      )\n    }\n  }\n  // Key press handlers for some fields\n  function onKeyPressText(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressDateTime(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressInt(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let int = parseInt(stringNum)\n          fieldValue[event.target.name] = int\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressFloat(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let float = parseFloat(stringNum)\n          fieldValue[event.target.name] = float\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n\n  function calculateColSpan(contents) {\n    let num = 0\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1\n      }\n    }\n    return num\n  }\n  const handleContextMenu = (event) => {\n    if (userProfile.userRole === \"1\") {\n      event.preventDefault()\n      setAnchorEl(event.currentTarget)\n    }\n  }\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n    // console.log(\"CLOSE\", fieldValue)\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name]\n      }\n    }\n    console.log(\"nForm\", gridForm)\n    setGridForm(gridForm)\n    setUpdateState(getUUID())\n  }\n  function createMenuItems() {\n    let columns = []\n    columns.push(\n      <tr>\n        <td\n          style={{ paddingLeft: 5, cursor: \"pointer\" }}\n          name={\"selectAll\"}\n          onClick={() => handleTableCheckboxChange(\"selectAll\")}\n        >\n          Выбрать все\n        </td>\n        <td>\n          <Checkbox\n            style={{ maxWidth: 20, height: 15, color: \"green\" }}\n            name={\"selectAll\"}\n            onChange={handleGridCheckboxChange}\n            checked={(gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined) ? false : true}\n          />\n        </td>\n      </tr>\n    )\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name\n        columns.push(\n          <tr>\n            <td\n              style={{ paddingLeft: 5, cursor: \"pointer\", background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\" }}\n              name={name}\n              onClick={() => handleTableCheckboxChange(name)}\n            >\n              {gridForm.sections[s].contents[c].label}\n            </td>\n            <td>\n              <Checkbox\n                style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                name={name}\n                onChange={handleGridCheckboxChange}\n                checked={(gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined) ? false : true}\n              />\n            </td>\n          </tr>\n        )\n      }\n    }\n    return columns\n  }\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId))\n  }\n  const handleGridCheckboxChange = (event) => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = { [event.target.name]: event.target.checked }\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name]\n      }\n      // console.log(\"selectAll\", newFields)\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [event.target.name]: event.target.checked })\n    }\n  }\n  const handleTableCheckboxChange = (name) => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue }\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name]\n      }\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [name]: !gridFieldValue[name] })\n    }\n  }\n  if (updateState !== null) {\n    try {\n      return (\n        <Grid>\n          {isSearchForm !== null &&\n            isSearchForm === true\n            ?\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n              <Grid item xs={8}>\n                <Accordion expanded={accordionExpanded} onChange={() => handleExpandAccordion()}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                  >\n                    <Typography>{Form.label}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    {getForm()}\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n            </Grid>\n            :\n            getForm()\n          }\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            {buttons.map((button, index) => (\n              <Button\n                name={button.name}\n                variant=\"outlined\"\n                onClick={() => buttonClick(button.name, null)}\n                style={{\n                  margin: 3,\n                  color: button.fontColor,\n                  backgroundColor: button.backgroundColor,\n                  height: 32,\n                  fontSize: 12\n                }}\n              >{button.label}\n              </Button>\n            ))}\n          </Grid>\n          {isSearchForm === true &&\n            <ReplayIcon style={{ paddingTop: 3, cursor: \"pointer\" }} onClick={() => buttonClick(\"updateDocList\")} />\n          }\n          {showAttachedDocuments === true &&\n            <Paper>\n              <Grid item>\n                <Grid container direction=\"row\">\n                  <div className={classes.importFile}>\n                    <input\n                      accept=\"image/*, application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                      className={classes.inputFile}\n                      id={buttonFilesWordPdfImgId}\n                      multiple\n                      type=\"file\"\n                      onChange={handleAttachFile}\n                    />\n                    <label htmlFor={buttonFilesWordPdfImgId}>\n                      <Button\n                        component=\"span\"\n                        variant=\"outlined\"\n                        style={{\n                          margin: 3,\n                          color: \"white\",\n                          backgroundColor: \"#BB7100\",\n                          borderColor: \"#161C87\",\n                          height: 32,\n                          fontSize: 12\n                        }}\n                        endIcon={<AttachFileIcon />}\n                      >Прикрепить файлы\n                      </Button>\n                    </label>\n                  </div>\n                </Grid>\n              </Grid>\n              <Grid container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n                <Grid item xs={\"auto\"}>\n                  <Grid container direction=\"column\" spacing={1}>\n                    <div style={{ paddingLeft: 10 }}>Прикрепленные документы</div>\n                    {attachedDocsList()}\n                    {attachedImgsList()}\n                  </Grid>\n                </Grid>\n              </Grid>\n              {showSavedDocuments === true &&\n                <Grid container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n                  <Grid item xs={\"auto\"}>\n                    <Grid container direction=\"column\" spacing={1}>\n                      <div style={{ paddingLeft: 10 }}>Сохраненные документы</div>\n                      {savedDocsList()}\n                      {savedImgsList()}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              }\n            </Paper>\n          }\n          {docList !== null &&\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n              <Grid item sm={\"auto\"}>\n                <Paper>\n                  <div style={{ height: \"500px\", overflow: \"auto\" }}>\n                    <table size=\"small\" class=\"main-table-style\" id={gridTableId}>\n                      <thead class=\"thead-style\" style={{ position: \"sticky\", top: 0 }}>\n                        {/* 1st Row Sections Labels */}\n                        <tr>\n                          <td class=\"td-head-first-child\" onContextMenu={(ev) => handleContextMenu(ev)}></td>\n                          {gridForm.sections.map((section, index) => {\n                            let showSection = checkToShowSection(section)\n                            if (showSection === true) {\n                              let lastSection = checkSectionOnLastChild(index)\n                              return (\n                                <td\n                                  class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                  colSpan={calculateColSpan(section.contents)}\n                                  onContextMenu={(ev) => handleContextMenu(ev)}\n                                >{section.label}</td>\n                              )\n                            }\n                          })}\n                        </tr>\n                        {/* 2nd Row Sections Contents labels */}\n                        <tr>\n                          <td\n                            class=\"td-head-style-2row\"\n                            rowSpan=\"2\"\n                            style={{ \"minWidth\": \"65px\" }}\n                            onContextMenu={(ev) => handleContextMenu(ev)}\n                          >\n                            Действие\n                          </td>\n                          {gridForm.sections.map(section =>\n                            section.contents.map(contentItem => {\n                              if (contentItem.show === true) {\n                                return (\n                                  <td\n                                    class=\"td-head-style-2row\"\n                                    rowSpan=\"2\"\n                                    onClick={() => sortDataByColumn(contentItem.name, contentItem.type)}\n                                    onContextMenu={(ev) => handleContextMenu(ev)}\n                                  >\n                                    {contentItem.label}\n                                    {sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{ marginBottom: -8 }} /> : <ArrowDropUpIcon style={{ marginBottom: -8 }} /> : \"\"}\n                                  </td>\n                                )\n                              }\n                            })\n                          )}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.keys(docList).length !== 0 &&\n                          docList.map(dataItem => (\n                            <tr style={{ \"height\": 30 }}>\n                              <td class=\"td-style\" style={{ \"maxWidth\": 34 }}>\n                                {gridFormButtons !== \"null\" &&\n                                  gridFormButtons.map(button =>\n                                    <Button\n                                      key={button.name}\n                                      name={button.name}\n                                      variant=\"outlined\"\n                                      // id={dataItem.id}\n                                      value={button.name}\n                                      onClick={() => buttonClick(button.name, dataItem)}\n                                      style={{\n                                        margin: 1,\n                                        height: 24,\n                                        fontSize: 10,\n                                        maxWidth: 32,\n                                        backgroundColor: button.backgroundColor,\n                                        borderColor: \"darkgreen\",\n                                        color: \"darkgreen\"\n                                      }}\n                                    >{button.label}\n                                    </Button>\n                                  )}\n                              </td>\n                              {gridForm.sections.map(section => (\n                                section.contents.map(contentItem => {\n                                  if (contentItem.show === true) {\n                                    return (\n                                      <td class=\"td-body-style\">\n                                        {getGridFormItems(dataItem, contentItem)}\n                                      </td>\n                                    )\n                                  }\n                                })\n                              ))}\n                            </tr>\n                          )\n                          )}\n                      </tbody>\n                    </table>\n                  </div>\n                  <tfoot>\n                    <tr>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <Button\n                          variant=\"outlined\"\n                          style={{ background: \"#047535\", color: \"white\", height: 28 }}\n                          onClick={() => downloadExcel()}\n                        >В EXCEL\n                        </Button>\n                      </td>\n                      <td style={{ paddingLeft: \"20px\" }}>\n                        <div style={{ minWidth: 90, color: \"black\" }}>Кол-во записей</div>\n                      </td>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <FormControl\n                          variant=\"outlined\"\n                          style={{ minWidth: 30 }}\n                        >\n                          <GridSelect\n                            onChange={handleChangeRowsPerPage}\n                            style={{ height: 25, color: \"black\" }}\n                            value={size}\n                          >\n                            <MenuItem value={10}>10</MenuItem>\n                            <MenuItem value={20}>20</MenuItem>\n                            <MenuItem value={50}>50</MenuItem>\n                            <MenuItem value={100}>100</MenuItem>\n                            <MenuItem value={200}>200</MenuItem>\n                            <MenuItem value={500}>500</MenuItem>\n                            <MenuItem value={1000}>1000</MenuItem>\n                          </GridSelect>\n                        </FormControl>\n                      </td>\n\n                      <td>\n                        <Tooltip title=\"На первую страницу\">\n                          <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                            <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На предыдущюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                            <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td style={{ color: \"black\", fontSize: 16 }}>\n                        <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                      </td>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <Tooltip title=\"Перейти на указанную страницу\">\n                          <Button\n                            onClick={() => GoToPage()}\n                            variant=\"outlined\"\n                            style={{\n                              height: 22,\n                              backgroundColor: \"#D1D6D6\",\n                              fontSize: 12\n                            }}\n                          >перейти\n                          </Button>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На следующюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                            <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()} Общее кол-во {filteredDocList.length}</td>\n                    </tr>\n\n                  </tfoot>\n                  <Menu\n                    anchorEl={anchorEl}\n                    open={openMenu}\n                    onClose={handleCloseMenu}\n                    MenuListProps={{\n                      'aria-labelledby': 'basic-button',\n                    }}\n                    style={{ paddingLeft: \"100px\" }}\n                  >\n                    <table>\n                      {createMenuItems()}\n                    </table>\n                  </Menu>\n                </Paper>\n              </Grid>\n            </Grid>\n          }\n          <Modal\n            className={classes.modal}\n            open={openModal}\n            onClose={handleCloseModal}\n          >\n            <div className={classes.imagePaper}>\n              <img name={selectedImg.name} height={600} width=\"auto\" src={selectedImg.src} />\n            </div>\n          </Modal>\n          <Snackbar\n            open={showSnackBar}\n            onClose={() => handleCloseSnackBar()}\n            autoHideDuration={1200}\n            message={snackBarMessage}\n          />\n          <Modal\n            open={showModalEnterPin}\n            onClose={handleCloseModalEnterPin}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <div style={modalStyle} className={classes.modalRutoken}>\n              <h3 id=\"simple-modal-title\">Введите ПИН код Рутокена</h3>\n              <FormControl variant=\"outlined\" style={{ width: \"100%\" }} error={wrongPin}>\n                <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n                <OutlinedInput\n                  type={showPin ? 'text' : 'password'}\n                  defaultValue={rutokenPin}\n                  onChange={handlePinChange}\n                  onKeyPress={onKeyPressModalEnterPin}\n                  autoFocus\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPin}\n                        edge=\"end\"\n                      >\n                        {showPin ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  labelWidth={25}\n                />\n              </FormControl>\n              {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n              <Button\n                variant=\"contained\"\n                onClick={() => buttonClick(\"SignApplicationSaveButton\")}\n                style={{\n                  margin: 3,\n                  height: 32,\n                  fontSize: 12,\n                  color: \"white\",\n                  backgroundColor: \"#2862F4\"\n                }}\n              >Ок\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={handleCloseModalEnterPin}\n                style={{\n                  margin: 3,\n                  height: 32,\n                  fontSize: 12,\n                  color: \"white\",\n                  backgroundColor: \"#E73639\"\n                }}\n              >Отмена\n              </Button>\n            </div>\n          </Modal>\n\n        </Grid>\n      )\n    }\n    catch (er) {\n      console.log(\"ERROR\", er)\n      return <LinearProgress />\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}