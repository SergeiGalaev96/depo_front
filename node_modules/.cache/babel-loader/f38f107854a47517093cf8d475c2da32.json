{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\History\\\\History.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types'; //Icons\n\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // Form components\n\nimport Checkbox from '@material-ui/core/Checkbox'; // Libraries\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({}));\nexport default (props => {\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [docId, setDocId] = useState(props.userTask.docId);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [gridForm] = useState(props.userTask.gridForm);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [fieldValue, setFieldValue] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [buttons] = useState(props.userTask.buttons);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [taskType] = useState(props.userTask.taskType); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"HISTORY PROPS\", props);\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        let sortedDocList = parsedData.sort(dynamicSort(\"updated_at\"));\n        console.log(\"DOCL\", sortedDocList);\n        setInitialDocList(sortedDocList);\n        fetchBySize(0, 10, sortedDocList);\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    }\n\n    setUpdateState(getUUID());\n  }, []);\n\n  function dynamicSort(property) {\n    return function (a, b) {\n      if (a[property] !== null && b[property] !== null) {\n        let dateA = new Date(a[property].substring(0, 19));\n        let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n        let dateB = new Date(b[property].substring(0, 19));\n        let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n        var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n        return result * -1;\n      } else {\n        if (a[property] === null) {\n          return 1;\n        }\n\n        return -1;\n      }\n    };\n  } // get rows amount of filtered users by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList);\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, initialDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, initialDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, initialDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, initialDocList);\n    console.log(\"Rows amount changed: \", event.target.value);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, initialDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = initialDocList.length / size;\n    let mathRoundOfPages = Math.round(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  } // random UUID generator\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // random numbers generator\n\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function buttonClick(name, item) {\n    if (name === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (name === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"UNKNOWN Button \", name);\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(value, type, dataItem, name) {\n    if (type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 16\n          }\n        }, \"-\");\n      } else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else if (type === \"Enum\") {\n      for (let i = 0; i < gridFormEnumData.length; i++) {\n        if (gridFormEnumData[i] !== null) {\n          if (name === gridFormEnumData[i].name) {\n            for (let k = 0; k < gridFormEnumData[i].data.length; k++) {\n              if (value === gridFormEnumData[i].data[k].id) {\n                return gridFormEnumData[i].data[k].label;\n              }\n            }\n          }\n        }\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 16\n          }\n        }, \"-\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 16\n          }\n        }, value);\n      }\n    }\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1; // console.log(\"IT\", i, gridForm.sections[nextS])\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  if (updateState !== null) {\n    try {\n      return /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        name: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        style: {\n          width: \"100%\",\n          \"border-collapse\": \"collapse\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        style: {\n          maxHeight: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          fontSize: 16,\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }\n      }, \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438\")))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 19\n        }\n      }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n        key: index,\n        name: button.name,\n        variant: \"outlined\",\n        onClick: () => buttonClick(button.name, null),\n        style: {\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 23\n        }\n      }, button.label))))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }\n      }), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"500px\",\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        size: \"small\",\n        class: \"main-table-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-style\",\n        style: {\n          position: \"sticky\",\n          top: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-first-child\",\n        colSpan: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 27\n        }\n      }), gridForm.sections.map((section, index) => {\n        let showSection = checkToShowSection(section);\n\n        if (showSection === true) {\n          let lastSection = checkSectionOnLastChild(index);\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n            colSpan: section.contents.length,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 33\n            }\n          }, section.label);\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-style-2row\",\n        rowSpan: \"2\",\n        style: {\n          \"minWidth\": \"65px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 27\n        }\n      }, \"\\u0412\\u0440\\u0435\\u043C\\u044F\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            rowSpan: \"2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 35\n            }\n          }, contentItem.label);\n        }\n      })))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 23\n        }\n      }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          \"height\": 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        key: keyGen(5),\n        style: {\n          \"color\": \"black\",\n          \"fontSize\": 12,\n          \"border-bottom\": \"1px solid grey\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 31\n        }\n      }, getGridFormItems(dataItem[\"updated_at\"], \"DateTime\", dataItem, \"updated_at\")), gridForm.sections.map(section => section.contents.map(contentItem => {\n        for (let key in dataItem) {\n          if (key === contentItem.name) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              key: keyGen(5),\n              style: {\n                \"color\": \"black\",\n                \"fontSize\": 12,\n                \"border-bottom\": \"1px solid grey\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 41\n              }\n            }, getGridFormItems(dataItem[key], contentItem.type, dataItem, key));\n          }\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          minWidth: 90,\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }\n      }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        style: {\n          minWidth: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(GridSelect, {\n        onChange: handleChangeRowsPerPage,\n        style: {\n          height: 25,\n          color: \"black\"\n        },\n        value: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 29\n        }\n      }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 29\n        }\n      }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 29\n        }\n      }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 29\n        }\n      }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 29\n        }\n      }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 29\n        }\n      }, \"500\")))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowFirstClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n        style: {\n          fontSize: \"large\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowLeftClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"black\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          maxWidth: 25\n        },\n        value: page,\n        onChange: handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => GoToPage(),\n        variant: \"outlined\",\n        style: {\n          height: 22,\n          backgroundColor: \"#D1D6D6\",\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 29\n        }\n      }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowRightClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"black\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 23\n        }\n      }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount())))))), /*#__PURE__*/React.createElement(Snackbar, {\n        open: showSnackBar,\n        onClose: () => handleCloseSnackBar(),\n        autoHideDuration: 1200,\n        message: snackBarMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }\n      }));\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","GridSelect","FormControl","IconButton","MenuItem","FirstPageIcon","ArrowForwardIosIcon","ArrowBackIosIcon","LinearProgress","Snackbar","NumberFormat","PropTypes","ArrowUpwardRoundedIcon","Checkbox","Tooltip","generator","require","FloatFormat","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","IntegerFormat","useStyles","theme","classes","userProfile","session_id","userTask","process_id","taskID","Form","setForm","selectedDoc","setSelectedDoc","docId","setDocId","formType","docList","setDocList","initialDocList","setInitialDocList","gridForm","gridFormButtons","enumOptions","setEnumOptions","gridFormEnumData","fieldValue","setFieldValue","selectedOptions","setSelectedOptions","buttons","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","sectionColor","updateState","setUpdateState","taskType","console","log","parsedData","JSON","parse","sortedDocList","sort","dynamicSort","fetchBySize","er","callErrorToast","getUUID","property","a","b","dateA","Date","substring","timeInSecA","getTime","dateB","timeInSecB","result","fetchFrom","fetchTo","Data","newDocList","i","undefined","push","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","length","handleChangeRowsPerPage","event","GoToPage","handlePageChange","handleCloseSnackBar","getPageAmount","pagesFloat","mathRoundOfPages","Math","round","uuidv1","keyGen","password","generate","numbers","buttonClick","name","item","commandJson","commandType","userId","userRole","variables","userAction","sendFieldValues","clearTabData","authorization","getGridFormItems","type","dataItem","maxWidth","height","color","fontSize","Time","k","data","id","label","checkToShowSection","section","showSection","contents","show","checkSectionOnLastChild","lastSection","sections","nextS","s","c","width","maxHeight","map","button","index","margin","fontColor","backgroundColor","overflow","position","top","contentItem","Object","keys","key","paddingLeft","minWidth"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/History/History.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { makeStyles} from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\n//Icons\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// Form components\nimport Checkbox from '@material-ui/core/Checkbox';\n// Libraries\nimport Tooltip from '@material-ui/core/Tooltip';\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props){\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles((theme) => ({\n  \n}))\nexport default (props) => {\n  const classes = useStyles()\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [docId, setDocId] = useState(props.userTask.docId)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [gridForm] = useState(props.userTask.gridForm)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [fieldValue, setFieldValue] = useState({})\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [buttons] = useState(props.userTask.buttons)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [taskType] = useState(props.userTask.taskType)\n  \n  // Set data from props to state of component\n  useEffect(()=>{\n    console.log(\"HISTORY PROPS\", props)\n    if(props.userTask.docList !== \"null\" && props.userTask.docList !== null){\n      try{\n        let parsedData  = JSON.parse(props.userTask.docList)\n        let sortedDocList = parsedData.sort(dynamicSort(\"updated_at\"))\n        console.log(\"DOCL\", sortedDocList)\n        setInitialDocList(sortedDocList)\n        fetchBySize(0, 10, sortedDocList)\n      }\n      catch(er){\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    setUpdateState(getUUID())\n  },[])\n  function dynamicSort(property) {\n    return function(a, b){\n      if(a[property] !== null && b[property] !== null){\n        let dateA = new Date(a[property].substring(0, 19))\n        let timeInSecA =  dateA.getTime()/1000\n        // console.log(\"timeInSecA\", timeInSecA)\n        let dateB = new Date(b[property].substring(0, 19))\n        let timeInSecB =  dateB.getTime()/1000\n        // console.log(\"timeInSecB\", timeInSecB)\n        var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n        return result * -1\n      }\n      else{\n        if(a[property] === null){\n          return 1\n        }\n        return -1\n      }\n    }\n  }\n  // get rows amount of filtered users by size\n  function fetchBySize(fetchFrom, fetchTo, Data){\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = []\n    for(let i=fetchFrom; i<=fetchTo; i++){\n      if(Data[i] !== undefined){\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick(){\n    if(page !== 1){\n      setPage(1)\n      fetchBySize(0, size-1, initialDocList)\n    }\n    else{\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page){\n    if(page !== 1){\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage -1) * size) //10\n      let fetchTo = (size * prevPage)-1\n      fetchBySize(fetchFrom, fetchTo, initialDocList)\n    }\n    else{\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page){\n    if(docList.length < size-1){\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    } \n    else{\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size)-1\n      fetchBySize(fetchFrom, fetchTo, initialDocList)\n    }\n    \n  }\n  function handleChangeRowsPerPage(event){\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value-1, initialDocList)\n    console.log(\"Rows amount changed: \", event.target.value)\n  } \n  function GoToPage(){\n    let fetchFrom = (page*size-1)-size\n    let fetchTo = page*size-1\n    fetchBySize(fetchFrom, fetchTo, initialDocList)\n  }\n  function handlePageChange(event){\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar(){\n    setShowSnackBar(false)\n  }\n  function getPageAmount(){\n    let pagesFloat = (initialDocList.length)/size\n    let mathRoundOfPages = Math.round(pagesFloat)\n    if(pagesFloat > mathRoundOfPages){\n      return mathRoundOfPages + 1\n    }\n    else{\n      return mathRoundOfPages\n    }\n  }\n  // random UUID generator\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // random numbers generator\n  function keyGen(length){\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function buttonClick(name, item){      \n    if (name === \"back\"){\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {value: \"back\"}\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(name === \"cancel\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {value: \"token\"},\n          userAction: {value: \"cancel\"},\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else{\n      console.log(\"UNKNOWN Button \", name)\n    }\n  }\n  // Create grid form components\n  function getGridFormItems(value, type, dataItem, name){\n    if(type === \"Bool\"){\n      return(\n        <Checkbox\n          style={{maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\"}}\n          checked = {(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    } \n    else if(type === \"DateTime\"){\n      if(value === null || value === \"\" || value === undefined){\n        return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n      }\n      else{\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else if(type === \"Enum\"){\n      for(let i=0; i<gridFormEnumData.length; i++){\n        if(gridFormEnumData[i] !== null){\n          if(name === gridFormEnumData[i].name){\n            for(let k=0; k<gridFormEnumData[i].data.length; k++){\n              if(value === gridFormEnumData[i].data[k].id){\n                return gridFormEnumData[i].data[k].label\n              }\n            }\n          }\n        }\n      }\n    }\n    else{\n      if(value === null || value === \"\" || value === undefined){\n        return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n      }\n      else{\n        return(<td>{value}</td>)\n      }\n    }\n  }\n  function checkToShowSection(section){\n    let showSection = false\n    for(let i=0; i<section.contents.length; i++){\n      if(section.contents[i].show === true){\n        showSection = true \n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i){\n    let lastSection = true\n    if(i === gridForm.sections.length-1){ // The last section\n      return true\n    }\n    else{\n      let nextS = i+1\n      // console.log(\"IT\", i, gridForm.sections[nextS])\n      for(let s=nextS; s<gridForm.sections.length; s++){\n        for(let c=0; c<gridForm.sections[s].contents.length; c++){ // Check next section\n          if(gridForm.sections[s].contents[c].show === true){\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n  \n  if(updateState !== null){\n    try{\n      return(\n        <Grid>\n          <a name=\"top\"/>\n          {/* Create main search table */}\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={8}>\n              <Paper>\n                <Table\n                  style={{width:\"100%\", \"border-collapse\": \"collapse\"}}>\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    <TableHead>\n                      <TableRow style={{maxHeight: 25}}>\n                        <TableCell style={{fontSize: 16, color: \"black\"}}>История изменений записи</TableCell>\n                      </TableRow>\n                    </TableHead>\n                  </Grid>\n                  <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                    {buttons.map((button, index) => (\n                      <Button\n                        key={index}\n                        name={button.name}\n                        variant=\"outlined\"\n                        onClick = {() => buttonClick(button.name, null)}\n                        style={{\n                          margin: 3,\n                          color: button.fontColor,\n                          backgroundColor: button.backgroundColor,\n                          height: 32,\n                          fontSize: 12\n                        }}\n                      >{button.label}\n                      </Button>\n                    )\n                    )}\n                  </Grid>\n                </Table>  \n              </Paper>\n            </Grid>\n          </Grid>\n          <br></br>\n          {/* Create grid table with data from doclist */}\n          {docList !== null &&\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n              <Grid item sm={\"auto\"}>\n                <Paper>\n                  <div style={{height: \"500px\", overflow: \"auto\"}}>\n                    <table size=\"small\" class=\"main-table-style\">\n                      <thead class=\"thead-style\" style={{position: \"sticky\", top: 0}}>\n                        {/* 1st Row Sections Labels */}\n                        <tr>\n                          <td class=\"td-head-first-child\" colSpan=\"1\"></td>\n                          {gridForm.sections.map((section, index) => {\n                            let showSection = checkToShowSection(section)\n                            if(showSection === true){\n                              let lastSection = checkSectionOnLastChild(index)\n                              return (\n                                <td \n                                  class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                  colSpan={section.contents.length}\n                                >{section.label}</td>\n                              )\n                            }\n                          })}\n                        </tr>\n                        {/* 2nd Row Sections Contents labels */}\n                        <tr>\n                          <td \n                            class=\"td-head-style-2row\"\n                            rowSpan=\"2\" \n                            style={{\"minWidth\": \"65px\"}}\n                          >\n                            Время\n                          </td>\n                          {gridForm.sections.map(section =>\n                            section.contents.map(contentItem => {\n                              if(contentItem.show === true){\n                                return (\n                                  <td \n                                    class=\"td-head-style-2row\"\n                                    rowSpan=\"2\"\n                                  >\n                                    {contentItem.label}\n                                  </td>\n                                )\n                              }\n                            })\n                          )}\n                        </tr>\n                      </thead>\n                      <TableBody>\n                        {Object.keys(docList).length !== 0 &&\n                          docList.map(dataItem => (\n                            <tr style={{\"height\": 30}}>\n                              <td key = {keyGen(5)}style={{\"color\": \"black\", \"fontSize\": 12, \"border-bottom\": \"1px solid grey\"}}>\n                                {getGridFormItems(dataItem[\"updated_at\"], \"DateTime\", dataItem, \"updated_at\")}\n                              </td>\n                              {gridForm.sections.map(section => (\n                                section.contents.map(contentItem => {\n                                  for(let key in dataItem){\n                                    if(key === contentItem.name){\n                                      return(\n                                        <td key = {keyGen(5)}style={{\"color\": \"black\", \"fontSize\": 12, \"border-bottom\": \"1px solid grey\"}}>\n                                          {getGridFormItems(dataItem[key], contentItem.type, dataItem, key)}\n                                        </td>\n                                      )\n                                    }\n                                  }\n                                })\n                              ))}\n                            </tr>\n                          )\n                        )}                    \n                      </TableBody>\n                    </table>\n                  </div> \n                  <tfoot>\n                    <tr>\n                      <td style={{paddingLeft: \"20px\"}}>\n                        <div style={{minWidth: 90, color: \"black\"}}>Кол-во записей</div>\n                      </td>                    \n                      <td style={{paddingLeft: \"3px\"}}>\n                        <FormControl\n                          variant=\"outlined\"\n                          style={{minWidth: 30}}\n                        >\n                          <GridSelect \n                            onChange={handleChangeRowsPerPage}\n                            style={{height: 25, color: \"black\"}}\n                            value = {size}\n                            > \n                            <MenuItem value = {10}>10</MenuItem>\n                            <MenuItem value = {20}>20</MenuItem>\n                            <MenuItem value = {50}>50</MenuItem>\n                            <MenuItem value = {100}>100</MenuItem>\n                            <MenuItem value = {200}>200</MenuItem>\n                            <MenuItem value = {500}>500</MenuItem>\n                          </GridSelect>\n                        </FormControl>\n                      </td>\n                      \n                      <td>\n                        <Tooltip title=\"На первую страницу\">\n                          <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                            <FirstPageIcon style={{fontSize: \"large\", color: \"black\"}}/>\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На предыдущюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                            <ArrowBackIosIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td style={{color: \"black\", fontSize: 16}}>\n                        <input style={{maxWidth: 25}} value={page} onChange={handlePageChange}></input>\n                      </td>\n                      <td style={{paddingLeft: \"3px\"}}>\n                        <Tooltip title=\"Перейти на указанную страницу\">                              \n                            <Button\n                              onClick={()=> GoToPage()}\n                              variant=\"outlined\"\n                              style={{\n                                height: 22,\n                                backgroundColor: \"#D1D6D6\",\n                                fontSize: 12\n                              }}\n                            >перейти\n                            </Button>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На следующюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                            <ArrowForwardIosIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td style={{color: \"black\", fontSize: 16}}>Стр. {page} из {getPageAmount()}</td>                   \n                    </tr>\n                    \n                  </tfoot>                \n                </Paper>\n              </Grid>\n            </Grid>\n          }\n          <Snackbar\n            open={showSnackBar}\n            onClose={()=> handleCloseSnackBar()}\n            autoHideDuration={1200} \n            message={snackBarMessage}\n          />\n        </Grid>\n      )\n    }\n    catch(er){\n      console.log(\"ERROR\", er)\n      return <LinearProgress/>\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}