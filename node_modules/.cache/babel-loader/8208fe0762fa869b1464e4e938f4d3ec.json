{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\Users\\\\Users.jsx\";\nimport React, { useState, useEffect } from 'react'; // import clsx from 'clsx';\n// import { makeStyles} from '@material-ui/core/styles';\n\nimport MTable from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableFooter from '@material-ui/core/TableFooter';\nimport { Table } from 'reactstrap'; // Core ui table for grid form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem'; // Icons\n\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay'; // Form components\n\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nvar generator = require('generate-password');\n\nexport default (props => {\n  // This.state\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [Form] = useState(props.userTask.Form);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [userEnabled, setUserEnabled] = useState(null);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState([]);\n  const [filteredDocList, setFilteredDocList] = useState([]);\n  const [initialDocList, setInitialDocList] = useState([]);\n  const [gridForm] = useState(props.userTask.gridForm);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [enumData] = useState(props.userTask.enumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [fieldValue, setFieldValue] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [buttons] = useState(props.userTask.buttons);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"User PROPS\", props.userTask);\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedDocList = JSON.parse(props.userTask.docList);\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        let newDocList = [];\n\n        for (let i = 0; i < parsedDocList.length; i++) {\n          try {\n            let newUser = {\n              id: parsedDocList[i].id,\n              enabled: parsedDocList[i].enabled,\n              username: parsedDocList[i].username,\n              firstName: parsedDocList[i].firstName,\n              lastName: parsedDocList[i].lastName,\n              email: parsedDocList[i].email,\n              online: parsedDocList[i].online,\n              lastAccess: parsedDocList[i].lastAccess,\n              userRole: parseInt(parsedDocList[i].attributes.userRole[0]),\n              partner: parseInt(parsedDocList[i].attributes.partner[0]),\n              middleName: parsedDocList[i].attributes.middleName[0],\n              phone: parsedDocList[i].attributes.phone[0]\n            };\n            newDocList.push(newUser);\n          } catch (er) {\n            console.log(\"ERR\", er);\n          }\n        }\n\n        console.log(\"DOCL\", newDocList);\n        setInitialDocList(newDocList);\n        setFilteredDocList(newDocList);\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          let parsedDoc = JSON.parse(props.userTask.selectedDoc);\n          console.log(\"SHDOC\", parsedDoc);\n          setFieldValue(parsedDoc);\n          setSelectedDoc(parsedDoc);\n          filterDocList(0, s - 1, newDocList, parsedDoc);\n        } else {\n          fetchBySize(0, s - 1, newDocList);\n        }\n\n        setIsSearchForm(true);\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== null && props.userTask.docList === \"null\") {\n      let parsedDoc = JSON.parse(props.userTask.selectedDoc);\n      setUserEnabled(parsedDoc.enabled);\n      let fields = {\n        // id: parsedDoc.id,\n        username: parsedDoc.username,\n        firstName: parsedDoc.firstName,\n        lastName: parsedDoc.lastName,\n        email: parsedDoc.email\n      };\n\n      for (let i in parsedDoc.attributes) {\n        let value = parsedDoc.attributes[i][0] === \"true\" ? true : parsedDoc.attributes[i][0] === \"false\" ? false : parsedDoc.attributes[i][0];\n        fields[i] = value;\n      }\n\n      setFieldValue(fields);\n      setSelectedDoc(parsedDoc);\n      console.log(\"SDOC\", parsedDoc);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            });\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n    } // var d = new Date(1628246614000)\n    // let nd = d.toLocaleString()\n    // console.log(\"TIME\", nd)\n\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  const handleCheckboxChange = event => {\n    console.log(\"CHECK\", event.target.name, event.target.checked);\n\n    if (event.target.name === \"selectAllAdminFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"administartor\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllTradingFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"tradingSystems\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllMainFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"mainFunctions\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllAccountingFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"accountingDepartment\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllMortgageFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"mortgageCoverage\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllInstructionTypes\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"InstructionsAccessSection\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllReportTypes\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"ReportsAccessSection\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else {\n      setFieldValue({ ...fieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n\n    setUpdateState(getUUID());\n  };\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  }\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key);\n\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else if (contentType === \"Enum\") {\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } else {\n              match = false;\n              break;\n            }\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered users by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList);\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.round(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  }\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  }\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleSelectChange(event) {\n    console.log(\"SO\", event);\n    fieldValue[event.name] = event.value;\n    setFieldValue(fieldValue);\n    let updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (event.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = event;\n        setSelectedOptions(updateSelectedOptions); // console.log(\"SO\", selectedOptions)\n\n        noSuchOption = false;\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(event);\n      setSelectedOptions(updateSelectedOptions); // console.log(\"SO\", selectedOptions)\n    }\n\n    if (event.name === \"userRole\" && props.userTask.taskType === \"showCreateUser\") {\n      if (event.value === 1) {\n        // console.log(\"SO\", event.name, event.value)\n        for (let i = 0; i < Form.sections.length; i++) {\n          for (let c = 0; c < Form.sections[i].contents.length; c++) {\n            if (Form.sections[i].contents[c].type === \"Bool\") {\n              fieldValue[Form.sections[i].contents[c].name] = true;\n              setFieldValue(fieldValue);\n            }\n          }\n        }\n      }\n    }\n  } // Collect data to create new user in REST\n\n\n  function getFieldValuesRest(keycloakUser) {\n    let restUser = {\n      user_id: null,\n      name: fieldValue[\"username\"],\n      lastname: fieldValue[\"lastName\"],\n      firstname: fieldValue[\"firstName\"],\n      email: fieldValue[\"email\"],\n      attributes: JSON.stringify(keycloakUser.attributes)\n    };\n\n    for (let key in keycloakUser.attributes) {\n      if (key === \"userId\") {\n        restUser[\"user_id\"] = keycloakUser.attributes[key];\n      }\n    }\n\n    return restUser;\n  } // Collect data to create new user\n\n\n  function getFieldValuesKeycloakCreate() {\n    let attrs = {\n      locale: \"ru\",\n      userId: getUUID(),\n      enabled: true\n    };\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let name = Form.sections[s].contents[c].name;\n        let type = Form.sections[s].contents[c].type; // console.log(\"NAME \", name, \"VAL\", fieldValue[name])\n\n        if (name !== \"username\" && name !== \"firstName\" && name !== \"lastName\" && name !== \"email\") {\n          if (type === \"Enum\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = null;\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          } else if (type === \"Text\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = \"-\";\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          } else if (type === \"Bool\") {\n            if (fieldValue[name] === undefined) {\n              attrs[name] = false;\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          }\n        }\n      }\n    }\n\n    let newUser = {\n      username: fieldValue[\"username\"],\n      firstName: fieldValue[\"firstName\"],\n      lastName: fieldValue[\"lastName\"],\n      email: fieldValue[\"email\"],\n      emailVerified: true,\n      enabled: true,\n      requiredActions: [\"UPDATE_PASSWORD\"],\n      attributes: attrs,\n      credentials: [{\n        type: \"password\",\n        value: \"12345\"\n      }]\n    }; // console.log(\"USER\", newUser)\n\n    return newUser;\n  } // Collect data to update existed user\n\n\n  function getFieldValuesKeycloakUpdate() {\n    let attrs = {\n      locale: \"ru\",\n      userId: fieldValue[\"userId\"],\n      enabled: selectedDoc.enabled\n    };\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let name = Form.sections[s].contents[c].name;\n        let type = Form.sections[s].contents[c].type;\n\n        if (name !== \"username\" && name !== \"firstName\" && name !== \"lastName\" && name !== \"email\" && name !== \"selectAllAdminFunctions\" && name !== \"selectAllTradingFunctions\" && name !== \"selectAllMainFunctions\" && name !== \"selectAllAccountingFunctions\" && name !== \"selectAllMortgageFunctions\" && name !== \"selectAllInstructionTypes\" && name !== \"selectAllReportTypes\") {\n          if (type === \"Enum\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = null;\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          } else if (type === \"Text\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = \"-\";\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          } else if (type === \"Bool\") {\n            if (fieldValue[name] === undefined) {\n              attrs[name] = false;\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          }\n        }\n      }\n    }\n\n    let updateUser = {\n      username: fieldValue[\"username\"],\n      firstName: fieldValue[\"firstName\"],\n      lastName: fieldValue[\"lastName\"],\n      email: fieldValue[\"email\"],\n      emailVerified: true,\n      enabled: selectedDoc.enabled,\n      attributes: attrs\n    }; // console.log(\"UPDATE\", updateUser)\n\n    return updateUser;\n  } // Collect data to reset existed user password\n\n\n  function getFieldValuesKeycloakResetPassword() {\n    let attrs = {};\n\n    for (let key in selectedDoc.attributes) {\n      attrs[key] = selectedDoc.attributes[key][0];\n    }\n\n    let updateUser = {\n      username: selectedDoc.username,\n      firstName: selectedDoc[\"firstName\"],\n      lastName: selectedDoc[\"lastName\"],\n      email: selectedDoc[\"email\"],\n      emailVerified: true,\n      enabled: selectedDoc.enabled,\n      requiredActions: [\"UPDATE_PASSWORD\"],\n      attributes: attrs,\n      credentials: [{\n        type: \"password\",\n        value: \"12345\"\n      }]\n    };\n    return updateUser;\n  } // Collect data to set state deleted\n\n\n  function getFieldValuesKeycloakChangeAccesUser(access) {\n    console.log(\"ACC\", access);\n    let attrs = {};\n\n    for (let key in selectedDoc.attributes) {\n      if (key === \"enabled\") {\n        attrs[key] = access;\n      } else {\n        attrs[key] = selectedDoc.attributes[key][0];\n      }\n    }\n\n    let updateUser = {\n      username: selectedDoc.username,\n      firstName: selectedDoc[\"firstName\"],\n      lastName: selectedDoc[\"lastName\"],\n      email: selectedDoc[\"email\"],\n      emailVerified: true,\n      enabled: access,\n      attributes: attrs\n    };\n    return updateUser;\n  } // Validate input data\n\n\n  function checkForWrongFields(commandJson) {\n    let enabledToSend = false;\n    var parsedGridFormData = JSON.parse(props.userTask.docList);\n\n    if (fieldValue[\"userRole\"] !== undefined && fieldValue[\"userRole\"] !== \"\") {\n      if (fieldValue[\"username\"] !== undefined && fieldValue[\"username\"] !== \"\") {\n        if (fieldValue[\"firstName\"] !== undefined && fieldValue[\"firstName\"] !== \"\") {\n          if (fieldValue[\"lastName\"] !== undefined && fieldValue[\"lastName\"] !== \"\") {\n            if (fieldValue[\"username\"] !== undefined && fieldValue[\"username\"] !== \"\") {\n              if (fieldValue[\"partner\"] !== undefined && fieldValue[\"partner\"] !== \"\") {\n                for (let i = 0; i < parsedGridFormData.length; i++) {\n                  if (parsedGridFormData[i].username === fieldValue[\"username\"]) {\n                    enabledToSend = false;\n                    return swAllert(\"Пользователь с таким логином уже существует\", \"warning\");\n                  } else enabledToSend = true;\n                }\n              } else swAllert(\"Введите Контрагента\", \"warning\");\n            } else swAllert(\"Введите Email\", \"warning\");\n          } else swAllert(\"Введите Имя\", \"warning\");\n        } else swAllert(\"Введите Фамилию\", \"warning\");\n      } else swAllert(\"Введите Логин\", \"warning\");\n    } else swAllert(\"Введите Роль\", \"warning\");\n\n    if (enabledToSend === true) {\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id); // swAllert(\"Пользователь успешно создан!\", \"success\")\n    }\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  }\n\n  async function buttonClick(buttonName, item) {\n    if (buttonName === \"createUser\") {\n      // let KeycloakDoc = getFieldValuesSelectedDoc()\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"createUser\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button createUser: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"saveUser\") {\n      // console.log(\"button saveUser: \", keycloakUser, restUser)\n      let keycloakUser = getFieldValuesKeycloakCreate(); // let role = getEnumLabelById(\"userRole\")\n\n      let restUser = getFieldValuesRest(keycloakUser); // let userMgment = role === \"Администратор\" ? \"true\" : \"false\"\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"saveUser\"\n          },\n          keycloakUserData: {\n            value: JSON.stringify(keycloakUser)\n          },\n          restUserData: {\n            value: JSON.stringify(restUser)\n          },\n          createdUserName: {\n            value: fieldValue[\"username\"]\n          }\n        }\n      };\n      checkForWrongFields(commandJson);\n    } else if (buttonName === \"findUser\") {\n      filterDocList(0, size, initialDocList, fieldValue);\n    } else if (buttonName === \"editUser\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"editUser\"\n          },\n          keycloakUserId: {\n            value: item.id\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button editUser: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateUser\") {\n      let keycloakUser = getFieldValuesKeycloakUpdate(); // let role = getEnumLabelById(\"userRole\")\n\n      let restUser = getFieldValuesRest(keycloakUser);\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"updateUser\"\n          },\n          keycloakUserId: {\n            value: selectedDoc.id\n          },\n          keycloakUserData: {\n            value: JSON.stringify(keycloakUser)\n          },\n          restUserData: {\n            value: JSON.stringify(restUser)\n          },\n          setRoleBody: {\n            value: JSON.stringify([{\n              \"id\": \"b9bc93bb-7915-485b-8c46-925098613a59\",\n              \"name\": \"userManagement\"\n            }])\n          }\n        }\n      };\n      console.log(\"updateUser:\", commandJson);\n      props.sendFieldValues(commandJson); // swAllert(\"Пользователь успешно обновлен!\", \"success\")\n\n      props.clearTabData(process_id);\n    } else if (buttonName === \"resetPassword\") {\n      swal({\n        text: \"Вы точно хотите сбросить пароль?\",\n        icon: \"warning\",\n        buttons: {\n          ok: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"ok\") {\n          var keycloakUser = getFieldValuesKeycloakResetPassword();\n          let commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            userId: userProfile.userId,\n            userRole: userProfile.userRole,\n            variables: {\n              authorization: {\n                value: \"token\"\n              },\n              userAction: {\n                value: \"resetPassword\"\n              },\n              keycloakUserId: {\n                value: selectedDoc.id\n              },\n              keycloakUserData: {\n                value: JSON.stringify(keycloakUser)\n              }\n            }\n          };\n          props.sendFieldValues(commandJson);\n          swAllert(\"Пароль успешно сброшен!\", \"success\");\n          props.clearTabData(process_id);\n          console.log(\"REST PWD:\", commandJson);\n        }\n      });\n    } else if (buttonName === \"disableUser\") {\n      swal({\n        text: \"Вы точно хотите заблокировать пользователя?\",\n        icon: \"warning\",\n        buttons: {\n          ok: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"ok\") {\n          let keycloakUser = getFieldValuesKeycloakChangeAccesUser(false);\n          let restUser = getFieldValuesRest(keycloakUser);\n          let commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            userId: userProfile.userId,\n            userRole: userProfile.userRole,\n            variables: {\n              userAction: {\n                value: \"disableUser\"\n              },\n              keycloakUserId: {\n                value: selectedDoc.id\n              },\n              keycloakUserData: {\n                value: JSON.stringify(keycloakUser)\n              },\n              restUserData: {\n                value: JSON.stringify(restUser)\n              }\n            }\n          };\n          console.log(\"disableUser:\", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id); // swAllert(\"Пользователь заблокирован!\", \"success\")\n        }\n      });\n    } else if (buttonName === \"enableUser\") {\n      let keycloakUser = getFieldValuesKeycloakChangeAccesUser(true);\n      let restUser = getFieldValuesRest(keycloakUser);\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"enableUser\"\n          },\n          keycloakUserId: {\n            value: selectedDoc.id\n          },\n          keycloakUserData: {\n            value: JSON.stringify(keycloakUser)\n          },\n          restUserData: {\n            value: JSON.stringify(restUser)\n          }\n        }\n      };\n      console.log(\"enableUser:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id); // swAllert(\"Пользователь разблокирован!\", \"success\")\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"Button \", buttonName);\n    }\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section, index) {\n    return /*#__PURE__*/React.createElement(MTable, {\n      size: \"small\",\n      key: index + \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(MTable, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 9\n      }\n    }, section.contents.map((contentItem, index) => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 15\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 15\n      }\n    }, contentBuilder(contentItem))))));\n  } // Creating components by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        multiline: true,\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox // key={this.getUUID()}\n      , {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === true ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 9\n        }\n      });\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name];\n    let name = contentItem.name;\n    let type = contentItem.type;\n\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label;\n                }\n              }\n            }\n          } else {// console.log(\"Ошибка сбора справочной информации \")\n          }\n        }\n      }\n    } else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"-\";\n\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\";\n        }\n\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"Введено -> На исполнении\";\n        }\n\n        if (dataItem[\"executed\"] === true) {\n          status = \"На исполнении -> Исполнено\";\n        }\n\n        if (dataItem[\"canceled\"] === true) {\n          status = \"На исполнении -> Отменено\";\n        }\n\n        return status;\n      } else {\n        if (value === null || value === \"\" || value === undefined) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            align: \"center\",\n            style: {\n              color: \"black\",\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 19\n            }\n          }, \"-\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 19\n            }\n          }, value);\n        }\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1150,\n            columnNumber: 17\n          }\n        }, value);\n      }\n    }\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1;\n      console.log(\"IT\", i, gridForm.sections[nextS]);\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1;\n    } // console.log(\"SORT\", property, sortOrder, type)\n\n\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder;\n        } else {\n          let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n          let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n          var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n          return result * sortOrder;\n        }\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type)); // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === name) {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function getFontColor(dataItem) {\n    if (dataItem.enabled === true) {\n      if (dataItem.online === true) {\n        return \"green\";\n      } else {\n        return \"black\";\n      }\n    } else {\n      return \"#FE6767\";\n    }\n  }\n\n  if (docList === null && props.userTask.taskType === \"showSearchUser\") {\n    return /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1283,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1284,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1286,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1289,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1290,\n        columnNumber: 23\n      }\n    }, Form.label)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 17\n      }\n    }, Form.sections.map((section, index) => {\n      return sectionBuilder(section, index);\n    }))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1302,\n        columnNumber: 11\n      }\n    }, buttons.map((button, index) => {\n      if (button.name === \"disableUser\") {\n        if (userEnabled === true) {\n          return /*#__PURE__*/React.createElement(Button, {\n            key: index,\n            name: button.name,\n            variant: \"outlined\",\n            value: button.name,\n            onClick: () => buttonClick(button.name, null),\n            style: {\n              margin: 3,\n              backgroundColor: button.backgroundColor,\n              height: 32,\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1307,\n              columnNumber: 21\n            }\n          }, button.label);\n        }\n      } else if (button.name === \"enableUser\") {\n        if (userEnabled === false) {\n          return /*#__PURE__*/React.createElement(Button, {\n            key: button.name + index,\n            name: button.name,\n            variant: \"outlined\",\n            value: button.name,\n            onClick: () => buttonClick(button.name, null),\n            style: {\n              margin: 3,\n              backgroundColor: button.backgroundColor,\n              height: 32,\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1327,\n              columnNumber: 21\n            }\n          }, button.label);\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(Button, {\n          key: button.name + index,\n          name: button.name,\n          variant: \"outlined\",\n          value: button.name,\n          onClick: () => buttonClick(button.name, null),\n          style: {\n            margin: 3,\n            backgroundColor: button.backgroundColor,\n            height: 32,\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1346,\n            columnNumber: 19\n          }\n        }, button.label);\n      }\n    }))), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n      style: {\n        paddingTop: 3,\n        cursor: \"pointer\"\n      },\n      onClick: () => buttonClick(\"updateDocList\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1367,\n        columnNumber: 11\n      }\n    }), docList !== null && props.userTask.taskType === \"showSearchUser\" && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1372,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"500px\",\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1374,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      class: \"main-table-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1375,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      style: {\n        position: \"sticky\",\n        top: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1376,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-first-child\",\n      colSpan: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1379,\n        columnNumber: 25\n      }\n    }), gridForm.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        let lastSection = checkSectionOnLastChild(index);\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n          colSpan: section.contents.length,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 31\n          }\n        }, section.label);\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1394,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-style-2row\",\n      rowSpan: \"2\",\n      style: {\n        \"minWidth\": \"65px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1395,\n        columnNumber: 25\n      }\n    }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n      if (contentItem.show === true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: \"td-head-style-2row\",\n          rowSpan: \"2\",\n          onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1406,\n            columnNumber: 33\n          }\n        }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1412,\n            columnNumber: 98\n          }\n        }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1412,\n            columnNumber: 151\n          }\n        }) : \"\");\n      }\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1420,\n        columnNumber: 21\n      }\n    }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        \"height\": 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-style\",\n      style: {\n        \"maxWidth\": 34\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1424,\n        columnNumber: 29\n      }\n    }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n      key: button.name,\n      name: button.name,\n      variant: \"outlined\" // id={dataItem.id}\n      ,\n      value: button.name,\n      onClick: () => buttonClick(button.name, dataItem),\n      style: {\n        margin: 1,\n        height: 24,\n        fontSize: 10,\n        maxWidth: 32,\n        backgroundColor: button.backgroundColor,\n        borderColor: \"darkgreen\",\n        color: \"darkgreen\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1427,\n        columnNumber: 35\n      }\n    }, button.label))), gridForm.sections.map(section => section.contents.map(contentItem => {\n      if (contentItem.show === true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: keyGen(4),\n          align: \"left\",\n          style: {\n            color: getFontColor(dataItem),\n            fontWeight: dataItem.online === true ? \"bold\" : \"normal\",\n            fontSize: 12,\n            \"text-align\": \"center\",\n            \"border-bottom\": \"1px solid grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 37\n          }\n        }, getGridFormItems(dataItem, contentItem));\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: 90,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1467,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1469,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        minWidth: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1470,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(GridSelect, {\n      onChange: handleChangeRowsPerPage,\n      style: {\n        height: 25,\n        color: \"black\"\n      },\n      value: size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1474,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1479,\n        columnNumber: 27\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 27\n      }\n    }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1481,\n        columnNumber: 27\n      }\n    }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1482,\n        columnNumber: 27\n      }\n    }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1483,\n        columnNumber: 27\n      }\n    }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1484,\n        columnNumber: 27\n      }\n    }, \"500\")))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1489,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1490,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowFirstClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1491,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1492,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1496,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1497,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLeftClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1498,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1499,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: \"black\",\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1503,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        maxWidth: 25\n      },\n      value: page,\n      onChange: handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1504,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1506,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => GoToPage(),\n      variant: \"outlined\",\n      style: {\n        height: 22,\n        backgroundColor: \"#D1D6D6\",\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1508,\n        columnNumber: 25\n      }\n    }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1520,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1521,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowRightClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1522,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1523,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"pagination-rows-amount-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1527,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount(), \" \\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList.length)))))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: showSnackBar,\n      onClose: () => handleCloseSnackBar(),\n      autoHideDuration: 1200,\n      message: snackBarMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1535,\n        columnNumber: 9\n      }\n    }));\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","MTable","TableFooter","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","GridSelect","FormControl","IconButton","MenuItem","FirstPageIcon","ArrowForwardIosIcon","ArrowBackIosIcon","LinearProgress","Snackbar","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","TextField","Select","Checkbox","Tooltip","swal","generator","require","props","userProfile","session_id","userTask","process_id","taskID","Form","selectedDoc","setSelectedDoc","userEnabled","setUserEnabled","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","gridForm","gridFormButtons","enumData","enumOptions","setEnumOptions","gridFormEnumData","fieldValue","setFieldValue","selectedOptions","setSelectedOptions","buttons","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","sectionColor","updateState","setUpdateState","isSearchForm","setIsSearchForm","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","console","log","parsedDocList","JSON","parse","s","parseInt","p","newDocList","i","length","newUser","id","enabled","username","firstName","lastName","email","online","lastAccess","userRole","attributes","partner","middleName","phone","push","er","parsedDoc","filterDocList","fetchBySize","callErrorToast","taskType","fields","value","undefined","newEnumOptions","options","name","d","data","label","getLostEnumName","enumI","sections","c","contents","type","handleCheckboxChange","event","target","checked","getUUID","getContentType","key","fetchFrom","fetchTo","Data","Object","keys","match","contentType","searchField","toLowerCase","dataField","includeSearch","includes","toString","parseDate","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","handleCloseSnackBar","getPageAmount","pagesFloat","mathRoundOfPages","Math","round","uuidv1","keyGen","password","generate","numbers","handleChange","handleSelectChange","updateSelectedOptions","slice","noSuchOption","getFieldValuesRest","keycloakUser","restUser","user_id","lastname","firstname","stringify","getFieldValuesKeycloakCreate","attrs","locale","userId","emailVerified","requiredActions","credentials","getFieldValuesKeycloakUpdate","updateUser","getFieldValuesKeycloakResetPassword","getFieldValuesKeycloakChangeAccesUser","access","checkForWrongFields","commandJson","enabledToSend","parsedGridFormData","swAllert","sendFieldValues","clearTabData","text","icon","ok","buttonClick","buttonName","item","commandType","variables","authorization","userAction","searchDoc","keycloakUserData","restUserData","createdUserName","keycloakUserId","setRoleBody","cancel","then","click","sectionBuilder","section","index","height","color","fontSize","backgroundColor","width","bodyBuilder","map","contentItem","show","contentBuilder","edit","selectedOption","document","body","menuPortal","base","zIndex","maxWidth","getGridFormItems","dataItem","l","Date","substring","Time","status","checkToShowSection","showSection","checkSectionOnLastChild","lastSection","nextS","dynamicSort","property","sortOrder","a","b","dateA","timeInSecA","getTime","dateB","timeInSecB","result","labelA","getEnumLabel","labelB","sortDataByColumn","sortedDocList","sort","getFontColor","maxHeight","button","margin","paddingTop","cursor","overflow","position","top","marginBottom","borderColor","fontWeight","paddingLeft","minWidth"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/Users/Users.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import clsx from 'clsx';\n// import { makeStyles} from '@material-ui/core/styles';\nimport MTable from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableFooter from '@material-ui/core/TableFooter';\nimport { Table } from 'reactstrap';  // Core ui table for grid form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n// Icons\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\n// Form components\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\n// Libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nvar generator = require('generate-password');\n\nexport default (props) => {\n  // This.state\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [Form] = useState(props.userTask.Form)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [userEnabled, setUserEnabled] = useState(null)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState([])\n  const [filteredDocList, setFilteredDocList] = useState([])\n  const [initialDocList, setInitialDocList] = useState([])\n  const [gridForm] = useState(props.userTask.gridForm)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [enumData] = useState(props.userTask.enumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [fieldValue, setFieldValue] = useState({})\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [buttons] = useState(props.userTask.buttons)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [isSearchForm, setIsSearchForm] = useState(null)\n\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n\n  // Set data from props to state of component\n  useEffect(() => {\n    console.log(\"User PROPS\", props.userTask)\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedDocList = JSON.parse(props.userTask.docList)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        let newDocList = []\n        for (let i = 0; i < parsedDocList.length; i++) {\n          try {\n            let newUser = {\n              id: parsedDocList[i].id,\n              enabled: parsedDocList[i].enabled,\n              username: parsedDocList[i].username,\n              firstName: parsedDocList[i].firstName,\n              lastName: parsedDocList[i].lastName,\n              email: parsedDocList[i].email,\n              online: parsedDocList[i].online,\n              lastAccess: parsedDocList[i].lastAccess,\n              userRole: parseInt(parsedDocList[i].attributes.userRole[0]),\n              partner: parseInt(parsedDocList[i].attributes.partner[0]),\n              middleName: parsedDocList[i].attributes.middleName[0],\n              phone: parsedDocList[i].attributes.phone[0]\n            }\n            newDocList.push(newUser)\n          }\n          catch (er) { console.log(\"ERR\", er) }\n        }\n        console.log(\"DOCL\", newDocList)\n        setInitialDocList(newDocList)\n        setFilteredDocList(newDocList)\n        if (props.userTask.selectedDoc !== \"null\") {\n          let parsedDoc = JSON.parse(props.userTask.selectedDoc)\n          console.log(\"SHDOC\", parsedDoc)\n          setFieldValue(parsedDoc)\n          setSelectedDoc(parsedDoc)\n          filterDocList(0, s - 1, newDocList, parsedDoc)\n        }\n        else { fetchBySize(0, s - 1, newDocList) }\n        setIsSearchForm(true)\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== null && props.userTask.docList === \"null\") {\n      let parsedDoc = JSON.parse(props.userTask.selectedDoc)\n      setUserEnabled(parsedDoc.enabled)\n      let fields = {\n        // id: parsedDoc.id,\n        username: parsedDoc.username,\n        firstName: parsedDoc.firstName,\n        lastName: parsedDoc.lastName,\n        email: parsedDoc.email\n      }\n      for (let i in parsedDoc.attributes) {\n        let value = parsedDoc.attributes[i][0] === \"true\" ? true : parsedDoc.attributes[i][0] === \"false\" ? false : parsedDoc.attributes[i][0]\n        fields[i] = value\n      }\n      setFieldValue(fields)\n      setSelectedDoc(parsedDoc)\n      console.log(\"SDOC\", parsedDoc)\n    }\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {}\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }]\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            })\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n    }\n    // var d = new Date(1628246614000)\n    // let nd = d.toLocaleString()\n    // console.log(\"TIME\", nd)\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n\n  const handleCheckboxChange = (event) => {\n    console.log(\"CHECK\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAllAdminFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"administartor\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllTradingFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"tradingSystems\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllMainFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"mainFunctions\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllAccountingFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"accountingDepartment\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllMortgageFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"mortgageCoverage\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllInstructionTypes\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"InstructionsAccessSection\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllReportTypes\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"ReportsAccessSection\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else {\n      setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n    }\n    setUpdateState(getUUID())\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = []\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data\n    }\n    else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true\n          }\n          else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key)\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                catch (er) {\n                  console.log(\"ERR\", er)\n                  match = true\n                }\n              }\n              else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else { match = true }\n              }\n              else if (contentType === \"Enum\") {\n\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true\n                }\n                else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n              else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n            }\n            else {\n              match = false\n              break\n            }\n          }\n        }\n        if (match === true) {\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered users by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.round(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleSelectChange(event) {\n    console.log(\"SO\", event)\n    fieldValue[event.name] = event.value\n    setFieldValue(fieldValue)\n    let updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (event.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = event\n        setSelectedOptions(updateSelectedOptions)\n        // console.log(\"SO\", selectedOptions)\n        noSuchOption = false\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(event)\n      setSelectedOptions(updateSelectedOptions)\n      // console.log(\"SO\", selectedOptions)\n    }\n\n    if (event.name === \"userRole\" && props.userTask.taskType === \"showCreateUser\") {\n      if (event.value === 1) {\n        // console.log(\"SO\", event.name, event.value)\n        for (let i = 0; i < Form.sections.length; i++) {\n          for (let c = 0; c < Form.sections[i].contents.length; c++) {\n            if (Form.sections[i].contents[c].type === \"Bool\") {\n              fieldValue[Form.sections[i].contents[c].name] = true\n              setFieldValue(fieldValue)\n            }\n          }\n        }\n      }\n    }\n  }\n  // Collect data to create new user in REST\n  function getFieldValuesRest(keycloakUser) {\n    let restUser = {\n      user_id: null,\n      name: fieldValue[\"username\"],\n      lastname: fieldValue[\"lastName\"],\n      firstname: fieldValue[\"firstName\"],\n      email: fieldValue[\"email\"],\n      attributes: JSON.stringify(keycloakUser.attributes)\n    }\n    for (let key in keycloakUser.attributes) {\n      if (key === \"userId\") {\n        restUser[\"user_id\"] = keycloakUser.attributes[key]\n      }\n    }\n    return restUser\n  }\n  // Collect data to create new user\n  function getFieldValuesKeycloakCreate() {\n    let attrs = {\n      locale: \"ru\",\n      userId: getUUID(),\n      enabled: true\n    }\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let name = Form.sections[s].contents[c].name\n        let type = Form.sections[s].contents[c].type\n        // console.log(\"NAME \", name, \"VAL\", fieldValue[name])\n        if (name !== \"username\" && name !== \"firstName\" && name !== \"lastName\" && name !== \"email\") {\n          if (type === \"Enum\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = null\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n          else if (type === \"Text\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = \"-\"\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n          else if (type === \"Bool\") {\n            if (fieldValue[name] === undefined) {\n              attrs[name] = false\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n\n        }\n\n      }\n    }\n    let newUser = {\n      username: fieldValue[\"username\"],\n      firstName: fieldValue[\"firstName\"],\n      lastName: fieldValue[\"lastName\"],\n      email: fieldValue[\"email\"],\n      emailVerified: true,\n      enabled: true,\n      requiredActions: [\"UPDATE_PASSWORD\"],\n      attributes: attrs,\n      credentials: [\n        {\n          type: \"password\",\n          value: \"12345\"\n        }\n      ]\n    }\n    // console.log(\"USER\", newUser)\n    return newUser\n  }\n  // Collect data to update existed user\n  function getFieldValuesKeycloakUpdate() {\n    let attrs = {\n      locale: \"ru\",\n      userId: fieldValue[\"userId\"],\n      enabled: selectedDoc.enabled\n    }\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let name = Form.sections[s].contents[c].name\n        let type = Form.sections[s].contents[c].type\n        if (name !== \"username\" && name !== \"firstName\" && name !== \"lastName\" && name !== \"email\" && name !== \"selectAllAdminFunctions\"\n          && name !== \"selectAllTradingFunctions\" && name !== \"selectAllMainFunctions\" && name !== \"selectAllAccountingFunctions\"\n          && name !== \"selectAllMortgageFunctions\" && name !== \"selectAllInstructionTypes\" && name !== \"selectAllReportTypes\") {\n          if (type === \"Enum\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = null\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n          else if (type === \"Text\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = \"-\"\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n          else if (type === \"Bool\") {\n            if (fieldValue[name] === undefined) {\n              attrs[name] = false\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n        }\n\n      }\n    }\n    let updateUser = {\n      username: fieldValue[\"username\"],\n      firstName: fieldValue[\"firstName\"],\n      lastName: fieldValue[\"lastName\"],\n      email: fieldValue[\"email\"],\n      emailVerified: true,\n      enabled: selectedDoc.enabled,\n      attributes: attrs\n    }\n    // console.log(\"UPDATE\", updateUser)\n    return updateUser\n  }\n  // Collect data to reset existed user password\n  function getFieldValuesKeycloakResetPassword() {\n    let attrs = {}\n    for (let key in selectedDoc.attributes) {\n      attrs[key] = selectedDoc.attributes[key][0]\n    }\n\n    let updateUser = {\n      username: selectedDoc.username,\n      firstName: selectedDoc[\"firstName\"],\n      lastName: selectedDoc[\"lastName\"],\n      email: selectedDoc[\"email\"],\n      emailVerified: true,\n      enabled: selectedDoc.enabled,\n      requiredActions: [\"UPDATE_PASSWORD\"],\n      attributes: attrs,\n      credentials: [\n        {\n          type: \"password\",\n          value: \"12345\"\n        }\n      ]\n    }\n    return updateUser\n  }\n  // Collect data to set state deleted\n  function getFieldValuesKeycloakChangeAccesUser(access) {\n    console.log(\"ACC\", access)\n    let attrs = {}\n    for (let key in selectedDoc.attributes) {\n      if (key === \"enabled\") {\n        attrs[key] = access\n      }\n      else {\n        attrs[key] = selectedDoc.attributes[key][0]\n      }\n    }\n    let updateUser = {\n      username: selectedDoc.username,\n      firstName: selectedDoc[\"firstName\"],\n      lastName: selectedDoc[\"lastName\"],\n      email: selectedDoc[\"email\"],\n      emailVerified: true,\n      enabled: access,\n      attributes: attrs\n    }\n    return updateUser\n  }\n\n  // Validate input data\n  function checkForWrongFields(commandJson) {\n    let enabledToSend = false\n    var parsedGridFormData = JSON.parse(props.userTask.docList)\n    if (fieldValue[\"userRole\"] !== undefined && fieldValue[\"userRole\"] !== \"\") {\n      if (fieldValue[\"username\"] !== undefined && fieldValue[\"username\"] !== \"\") {\n        if (fieldValue[\"firstName\"] !== undefined && fieldValue[\"firstName\"] !== \"\") {\n          if (fieldValue[\"lastName\"] !== undefined && fieldValue[\"lastName\"] !== \"\") {\n            if (fieldValue[\"username\"] !== undefined && fieldValue[\"username\"] !== \"\") {\n              if (fieldValue[\"partner\"] !== undefined && fieldValue[\"partner\"] !== \"\") {\n                for (let i = 0; i < parsedGridFormData.length; i++) {\n                  if (parsedGridFormData[i].username === fieldValue[\"username\"]) {\n                    enabledToSend = false\n                    return swAllert(\"Пользователь с таким логином уже существует\", \"warning\")\n                  } else enabledToSend = true\n                }\n              } else swAllert(\"Введите Контрагента\", \"warning\")\n            } else swAllert(\"Введите Email\", \"warning\")\n          } else swAllert(\"Введите Имя\", \"warning\")\n        } else swAllert(\"Введите Фамилию\", \"warning\")\n      } else swAllert(\"Введите Логин\", \"warning\")\n    } else swAllert(\"Введите Роль\", \"warning\")\n    if (enabledToSend === true) {\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n      // swAllert(\"Пользователь успешно создан!\", \"success\")\n    }\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  async function buttonClick(buttonName, item) {\n    if (buttonName === \"createUser\") {\n      // let KeycloakDoc = getFieldValuesSelectedDoc()\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"createUser\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button createUser: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"saveUser\") {\n      // console.log(\"button saveUser: \", keycloakUser, restUser)\n      let keycloakUser = getFieldValuesKeycloakCreate()\n      // let role = getEnumLabelById(\"userRole\")\n      let restUser = getFieldValuesRest(keycloakUser)\n      // let userMgment = role === \"Администратор\" ? \"true\" : \"false\"\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"saveUser\" },\n          keycloakUserData: { value: JSON.stringify(keycloakUser) },\n          restUserData: { value: JSON.stringify(restUser) },\n          createdUserName: { value: fieldValue[\"username\"] }\n        }\n      }\n      checkForWrongFields(commandJson)\n    }\n    else if (buttonName === \"findUser\") {\n      filterDocList(0, size, initialDocList, fieldValue)\n    }\n    else if (buttonName === \"editUser\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"editUser\" },\n          keycloakUserId: { value: item.id },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button editUser: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateUser\") {\n      let keycloakUser = getFieldValuesKeycloakUpdate()\n      // let role = getEnumLabelById(\"userRole\")\n      let restUser = getFieldValuesRest(keycloakUser)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"updateUser\" },\n          keycloakUserId: { value: selectedDoc.id },\n          keycloakUserData: { value: JSON.stringify(keycloakUser) },\n          restUserData: { value: JSON.stringify(restUser) },\n          setRoleBody: { value: JSON.stringify([{ \"id\": \"b9bc93bb-7915-485b-8c46-925098613a59\", \"name\": \"userManagement\" }]) }\n        }\n      }\n      console.log(\"updateUser:\", commandJson)\n      props.sendFieldValues(commandJson)\n      // swAllert(\"Пользователь успешно обновлен!\", \"success\")\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"resetPassword\") {\n      swal({\n        text: \"Вы точно хотите сбросить пароль?\",\n        icon: \"warning\",\n        buttons: { ok: \"Да\", cancel: \"Отмена\" }\n      })\n        .then((click) => {\n          if (click === \"ok\") {\n            var keycloakUser = getFieldValuesKeycloakResetPassword()\n            let commandJson =\n            {\n              commandType: \"completeTask\",\n              session_id: session_id,\n              process_id: process_id,\n              taskID: taskID,\n              userId: userProfile.userId,\n              userRole: userProfile.userRole,\n              variables: {\n                authorization: { value: \"token\" },\n                userAction: { value: \"resetPassword\" },\n                keycloakUserId: { value: selectedDoc.id },\n                keycloakUserData: { value: JSON.stringify(keycloakUser) }\n              }\n            }\n            props.sendFieldValues(commandJson)\n            swAllert(\"Пароль успешно сброшен!\", \"success\")\n            props.clearTabData(process_id)\n            console.log(\"REST PWD:\", commandJson)\n          }\n        })\n    }\n    else if (buttonName === \"disableUser\") {\n      swal({\n        text: \"Вы точно хотите заблокировать пользователя?\",\n        icon: \"warning\",\n        buttons: { ok: \"Да\", cancel: \"Отмена\" }\n      })\n        .then((click) => {\n          if (click === \"ok\") {\n            let keycloakUser = getFieldValuesKeycloakChangeAccesUser(false)\n            let restUser = getFieldValuesRest(keycloakUser)\n            let commandJson =\n            {\n              commandType: \"completeTask\",\n              session_id: session_id,\n              process_id: process_id,\n              taskID: taskID,\n              userId: userProfile.userId,\n              userRole: userProfile.userRole,\n              variables: {\n                userAction: { value: \"disableUser\" },\n                keycloakUserId: { value: selectedDoc.id },\n                keycloakUserData: { value: JSON.stringify(keycloakUser) },\n                restUserData: { value: JSON.stringify(restUser) }\n              }\n            }\n            console.log(\"disableUser:\", commandJson)\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n            // swAllert(\"Пользователь заблокирован!\", \"success\")\n          }\n        })\n    }\n    else if (buttonName === \"enableUser\") {\n      let keycloakUser = getFieldValuesKeycloakChangeAccesUser(true)\n      let restUser = getFieldValuesRest(keycloakUser)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"enableUser\" },\n          keycloakUserId: { value: selectedDoc.id },\n          keycloakUserData: { value: JSON.stringify(keycloakUser) },\n          restUserData: { value: JSON.stringify(restUser) }\n        }\n      }\n      console.log(\"enableUser:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n      // swAllert(\"Пользователь разблокирован!\", \"success\")\n    }\n    else if (buttonName === \"updateDocList\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocList\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else {\n      console.log(\"Button \", buttonName)\n    }\n  }\n\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section, index) {\n    return (\n      <MTable size=\"small\" key={index + \"table\"}>\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              key={index = \"head\"}\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </MTable>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <MTable size=\"small\">\n        <TableBody>\n          {section.contents.map((contentItem, index) => (\n            contentItem.show === true &&\n            <TableRow key={index} style={{ height: 30 }}>\n              <TableCell\n                key={index + \"cell1\"}\n                align=\"left\"\n                style={{ width: \"40%\" }}>\n                {contentItem.label}\n              </TableCell>\n              <TableCell\n                key={index + \"cell2\"}\n                align=\"left\"\n                style={{ width: \"60%\", height: 30 }}\n              >{contentBuilder(contentItem)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </MTable>\n    )\n  }\n  // Creating components by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          multiline\n          onBlur={handleChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name]) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          // key={this.getUUID()}\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={fieldValue[contentItem.name] === true ? true : false}\n        />\n      )\n    }\n  }\n  // Create grid form components\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name]\n    let name = contentItem.name\n    let type = contentItem.type\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label\n                }\n              }\n            }\n          }\n          else {\n            // console.log(\"Ошибка сбора справочной информации \")\n          }\n        }\n      }\n    }\n    else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\" }}\n          checked={(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"-\"\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\"\n        }\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"Введено -> На исполнении\"\n        }\n        if (dataItem[\"executed\"] === true) {\n          status = \"На исполнении -> Исполнено\"\n        }\n        if (dataItem[\"canceled\"] === true) {\n          status = \"На исполнении -> Отменено\"\n        }\n        return status\n      }\n      else {\n        if (value === null || value === \"\" || value === undefined) {\n          return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n        }\n        else {\n          return (<td>{value}</td>)\n        }\n      }\n    }\n    else {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        return (<td>{value}</td>)\n      }\n    }\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true\n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i) {\n    let lastSection = true\n    if (i === gridForm.sections.length - 1) { // The last section\n      return true\n    }\n    else {\n      let nextS = i + 1\n      console.log(\"IT\", i, gridForm.sections[nextS])\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) { // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1\n    }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA = dateA.getTime() / 1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB = dateB.getTime() / 1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else {\n          if (a[property] === null) {\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n    else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder\n        }\n        else {\n          let labelA = getEnumLabel(property, a[property])\n          // console.log(\"A\", property, a[property], labelA)\n          let labelB = getEnumLabel(property, b[property])\n          // console.log(\"labelB\", labelB, property, b)\n          var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n          return result * sortOrder\n        }\n\n      }\n    }\n  }\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size - 1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === name) {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function getFontColor(dataItem) {\n    if (dataItem.enabled === true) {\n      if (dataItem.online === true) {\n        return \"green\"\n      }\n      else {\n        return \"black\"\n      }\n    }\n    else {\n      return \"#FE6767\"\n    }\n  }\n  if (docList === null && props.userTask.taskType === \"showSearchUser\") {\n    return <LinearProgress />\n  }\n  else {\n    return (\n      <Grid>\n        {/* Create main search table */}\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n          <Grid item xs={9}>\n            <Paper>\n              <MTable>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                  <TableHead>\n                    <TableRow style={{ maxHeight: 25 }}>\n                      <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Grid>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                  {Form.sections.map((section, index) => {\n                    return sectionBuilder(section, index)\n                  })}\n                </Grid>\n              </MTable>\n            </Paper>\n          </Grid>\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n            {buttons.map((button, index) => {\n              if (button.name === \"disableUser\") {\n                if (userEnabled === true) {\n                  return (\n                    <Button\n                      key={index}\n                      name={button.name}\n                      variant=\"outlined\"\n                      value={button.name}\n                      onClick={() => buttonClick(button.name, null)}\n                      style={{\n                        margin: 3,\n                        backgroundColor: button.backgroundColor,\n                        height: 32,\n                        fontSize: 12\n                      }}\n                    >{button.label}\n                    </Button>\n                  )\n                }\n              }\n              else if (button.name === \"enableUser\") {\n                if (userEnabled === false) {\n                  return (\n                    <Button\n                      key={button.name + index}\n                      name={button.name}\n                      variant=\"outlined\"\n                      value={button.name}\n                      onClick={() => buttonClick(button.name, null)}\n                      style={{\n                        margin: 3,\n                        backgroundColor: button.backgroundColor,\n                        height: 32,\n                        fontSize: 12\n                      }}\n                    >{button.label}\n                    </Button>\n                  )\n                }\n              }\n              else {\n                return (\n                  <Button\n                    key={button.name + index}\n                    name={button.name}\n                    variant=\"outlined\"\n                    value={button.name}\n                    onClick={() => buttonClick(button.name, null)}\n                    style={{\n                      margin: 3,\n                      backgroundColor: button.backgroundColor,\n                      height: 32,\n                      fontSize: 12\n                    }}\n                  >{button.label}\n                  </Button>\n                )\n              }\n            }\n            )}\n          </Grid>\n        </Grid>\n        {isSearchForm === true &&\n          <ReplayIcon style={{ paddingTop: 3, cursor: \"pointer\" }} onClick={() => buttonClick(\"updateDocList\")} />\n        }\n        {/* Create grid table with data from doclist */}\n        {docList !== null && props.userTask.taskType === \"showSearchUser\" &&\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <div style={{ height: \"500px\", overflow: \"auto\" }}>\n                  <table size=\"small\" class=\"main-table-style\">\n                    <thead class=\"thead-style\" style={{ position: \"sticky\", top: 0 }}>\n                      {/* 1st Row Sections Labels */}\n                      <tr>\n                        <td class=\"td-head-first-child\" colSpan=\"1\"></td>\n                        {gridForm.sections.map((section, index) => {\n                          let showSection = checkToShowSection(section)\n                          if (showSection === true) {\n                            let lastSection = checkSectionOnLastChild(index)\n                            return (\n                              <td\n                                class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                colSpan={section.contents.length}\n                              >{section.label}</td>\n                            )\n                          }\n                        })}\n                      </tr>\n                      {/* 2nd Row Sections Contents labels */}\n                      <tr>\n                        <td\n                          class=\"td-head-style-2row\"\n                          rowSpan=\"2\"\n                          style={{ \"minWidth\": \"65px\" }}\n                        >\n                          Действие\n                        </td>\n                        {gridForm.sections.map(section =>\n                          section.contents.map(contentItem => {\n                            if (contentItem.show === true) {\n                              return (\n                                <td\n                                  class=\"td-head-style-2row\"\n                                  rowSpan=\"2\"\n                                  onClick={() => sortDataByColumn(contentItem.name, contentItem.type)}\n                                >\n                                  {contentItem.label}\n                                  {sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{ marginBottom: -8 }} /> : <ArrowDropUpIcon style={{ marginBottom: -8 }} /> : \"\"}\n                                </td>\n                              )\n                            }\n                          })\n                        )}\n                      </tr>\n                    </thead>\n                    <TableBody>\n                      {Object.keys(docList).length !== 0 &&\n                        docList.map(dataItem => (\n                          <tr style={{ \"height\": 30 }}>\n                            <td class=\"td-style\" style={{ \"maxWidth\": 34 }}>\n                              {gridFormButtons !== \"null\" &&\n                                gridFormButtons.map(button =>\n                                  <Button\n                                    key={button.name}\n                                    name={button.name}\n                                    variant=\"outlined\"\n                                    // id={dataItem.id}\n                                    value={button.name}\n                                    onClick={() => buttonClick(button.name, dataItem)}\n                                    style={{\n                                      margin: 1,\n                                      height: 24,\n                                      fontSize: 10,\n                                      maxWidth: 32,\n                                      backgroundColor: button.backgroundColor,\n                                      borderColor: \"darkgreen\",\n                                      color: \"darkgreen\"\n                                    }}\n                                  >{button.label}\n                                  </Button>\n                                )}\n                            </td>\n                            {gridForm.sections.map(section => (\n                              section.contents.map(contentItem => {\n                                if (contentItem.show === true) {\n                                  return (\n                                    <td key={keyGen(4)} align=\"left\" style={{ color: getFontColor(dataItem), fontWeight: dataItem.online === true ? \"bold\" : \"normal\", fontSize: 12, \"text-align\": \"center\", \"border-bottom\": \"1px solid grey\" }}>\n                                      {getGridFormItems(dataItem, contentItem)}\n                                    </td>\n                                  )\n                                }\n                              })\n                            ))}\n                          </tr>\n                        )\n                        )}\n                    </TableBody>\n                  </table>\n                </div>\n                <tfoot>\n                  <tr>\n                    <td style={{ paddingLeft: \"20px\" }}>\n                      <div style={{ minWidth: 90, color: \"black\" }}>Кол-во записей</div>\n                    </td>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <FormControl\n                        variant=\"outlined\"\n                        style={{ minWidth: 30 }}\n                      >\n                        <GridSelect\n                          onChange={handleChangeRowsPerPage}\n                          style={{ height: 25, color: \"black\" }}\n                          value={size}\n                        >\n                          <MenuItem value={10}>10</MenuItem>\n                          <MenuItem value={20}>20</MenuItem>\n                          <MenuItem value={50}>50</MenuItem>\n                          <MenuItem value={100}>100</MenuItem>\n                          <MenuItem value={200}>200</MenuItem>\n                          <MenuItem value={500}>500</MenuItem>\n                        </GridSelect>\n                      </FormControl>\n                    </td>\n\n                    <td>\n                      <Tooltip title=\"На первую страницу\">\n                        <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                          <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На предыдущюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                          <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td style={{ color: \"black\", fontSize: 16 }}>\n                      <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                    </td>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <Tooltip title=\"Перейти на указанную страницу\">\n                        <Button\n                          onClick={() => GoToPage()}\n                          variant=\"outlined\"\n                          style={{\n                            height: 22,\n                            backgroundColor: \"#D1D6D6\",\n                            fontSize: 12\n                          }}\n                        >перейти\n                        </Button>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На следующюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                          <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()} Общее кол-во {filteredDocList.length}</td>\n                  </tr>\n\n                </tfoot>\n              </Paper>\n            </Grid>\n          </Grid>\n        }\n        <Snackbar\n          open={showSnackBar}\n          onClose={() => handleCloseSnackBar()}\n          autoHideDuration={1200}\n          message={snackBarMessage}\n        />\n      </Grid>\n    )\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}