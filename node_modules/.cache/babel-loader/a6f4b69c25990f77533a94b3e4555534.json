{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\RegistryGIK\\\\RegistryGIK.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@mui/material/Menu'; // import MenuItem from '@mui/material/MenuItem';\n\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip'; // Accordion\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Icons\n\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay'; // Form components\n\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select'; // https://react-select.com/home\n\nimport Checkbox from '@material-ui/core/Checkbox'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport hotkeys from 'hotkeys-js'; // https://github.com/jaywcjlove/hotkeys\n// Custom components\n\nimport \"../../components/GridForm/GridFormCSS.css\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default (props => {\n  // This.state\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [docId, setDocId] = useState(props.userTask.docId);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [enumData] = useState(props.userTask.enumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [fieldValue, setFieldValue] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [buttons] = useState(props.userTask.buttons);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [taskType] = useState(props.userTask.taskType);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [accordionExpanded, setAccordionExpanded] = useState(false);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  const [gridTableId] = useState(getUUID());\n  const [gridFieldValue, setGridFieldValue] = useState({}); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"RegistryGIK PROPS\", props.userTask, props.userProfile);\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        setFilteredDocList(parsedData);\n        setIsSearchForm(true);\n        setInitialDocList(parsedData);\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", -1, \"Int\"));\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n          console.log(\"SHDOC\", parsedSelectedDoc);\n          filterDocList(0, s - 1, sortedDocList, parsedSelectedDoc);\n        } else {\n          fetchBySize(0, s - 1, sortedDocList);\n        }\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    } else {\n      setIsSearchForm(false);\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      let fields = {}; // let Form = props.userTask.Form\n\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name;\n          fields[fieldName] = parsedSelectedDoc[fieldName];\n        }\n      }\n\n      console.log(\"SDOC\", parsedSelectedDoc); // console.log(\"FIELDVAL\", fields)\n\n      setSelectedDoc(parsedSelectedDoc);\n      setFieldValue(fields);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            });\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n    }\n\n    if (gridForm !== null) {\n      let newFields = {};\n\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show;\n        }\n      }\n\n      setGridFieldValue(newFields);\n    }\n\n    setUpdateState(getUUID());\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded);\n    }\n  });\n\n  const handleCheckboxChange = event => {\n    console.log(\"CHBX\", event.target.name, event.target.checked);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleBoolCustomChange = event => {\n    console.log(\"BoolCustom\", event.target.checked);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    });\n  }; // Integer input handler\n\n\n  const handleIntChange = event => {\n    console.log(\"EVENT\", event.target.name, event.target.value);\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    });\n  }; // Float input handler\n\n\n  const handleFloatChange = event => {\n    console.log(\"FLOAT CHANGE\", event.target.name, event.target.value);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  }; // const handleIntChange = (event) => {\n  //   console.log(\"EVENT\", event.target.name, event.target.value)\n  //   let stringNum = event.target.value.toString().replace(/ /g, '')\n  //   let int = parseInt(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: int })\n  // }\n  // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n  // Text input handler\n\n\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value;\n    console.log(\"OPT\", option.name, option.value);\n    var updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        noSuchOption = false;\n        setSelectedOptions(updateSelectedOptions);\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n  }\n\n  function handleDateTimeChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let fullDate = props.parseDate(event.target.value);\n    var hours = new Date().getHours();\n    var minutes = new Date().getMinutes();\n    var seconds = new Date().getSeconds();\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\";\n    fieldValue[event.target.name] = convertedDate;\n    setFieldValue(fieldValue); // console.log(\"DATE CHANGE\", event.target.value)\n  }\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded);\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  } // filter docList by filled parameters\n\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key);\n\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else if (contentType === \"Enum\") {\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } else {\n              match = false;\n              break;\n            }\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered docList by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setFilteredDocList(Data);\n    setDocList(newDocList);\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.round(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  } // random UUID generator\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // random numbers generator\n\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Collect data to save doc\n\n\n  function getFieldValuesSaveDocument() {\n    let docToSave = {};\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined) {\n          docToSave[fieldName] = false;\n        } else if (Form.sections[s].contents[c].type === \"BoolCustom\") {\n          if (fieldValue[fieldName] === true || fieldValue[fieldName] === Form.sections[s].contents[c].valueTrue) {\n            docToSave[fieldName] = Form.sections[s].contents[c].valueTrue;\n          } else {\n            docToSave[fieldName] = Form.sections[s].contents[c].valueFalse;\n          }\n        } else {\n          docToSave[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToSave;\n  } // Collect data to update doc\n\n\n  function getFieldValuesUpdateDocument() {\n    let docToUpdate = selectedDoc; // docToUpdate[\"created_at\"] = selectedDoc.created_at\n\n    docToUpdate[\"id\"] = parseInt(docId);\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false;\n        } else if (Form.sections[s].contents[c].type === \"BoolCustom\") {\n          if (fieldValue[fieldName] === true || fieldValue[fieldName] === Form.sections[s].contents[c].valueTrue) {\n            docToUpdate[fieldName] = Form.sections[s].contents[c].valueTrue;\n          } else {\n            docToUpdate[fieldName] = Form.sections[s].contents[c].valueFalse;\n          }\n        } else {\n          docToUpdate[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToUpdate;\n  }\n\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false;\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n            return checkedSuccessfuly;\n          } else {\n            checkedSuccessfuly = true;\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  function buttonClick(buttonName, item) {\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true);\n      } else {\n        filterDocList(0, size - 1, initialDocList, fieldValue);\n      }\n    } else if (buttonName === \"openDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: {\n            value: JSON.stringify(item)\n          },\n          userAction: {\n            value: \"openDocument\"\n          },\n          docId: {\n            value: item.id\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button openDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"editDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"editDocument\"\n          }\n        }\n      };\n      console.log(\"button editDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocument\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"updateDocument:\", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createDocument\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"createDocument\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"createDocument:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"saveDocument\") {\n      let docToSave = getFieldValuesSaveDocument();\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"saveDocument\"\n          },\n          document: {\n            value: JSON.stringify(docToSave)\n          }\n        }\n      };\n      console.log(\"saveDocument:\", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"history\") {\n      if (selectedDoc !== null) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: {\n              value: \"history\"\n            },\n            docId: {\n              value: selectedDoc.id\n            }\n          }\n        };\n        console.log(\"history:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        // session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"UNKNOWN Button \", buttonName);\n    }\n  } // Key press handlers for some fields\n\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressDateTime(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressInt(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let int = parseInt(stringNum);\n          fieldValue[event.target.name] = int;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressFloat(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let float = parseFloat(stringNum);\n          fieldValue[event.target.name] = float;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name];\n    let name = contentItem.name;\n    let type = contentItem.type;\n\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label;\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"BoolCustom\") {\n      // console.log(\"ITEM\", name, value, type)\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: \"green\"\n        },\n        checked: value === contentItem.valueTrue ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"-\";\n\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\";\n        }\n\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"Введено -> На исполнении\";\n        }\n\n        if (dataItem[\"executed\"] === true) {\n          status = \"На исполнении -> Исполнено\";\n        }\n\n        if (dataItem[\"canceled\"] === true) {\n          status = \"На исполнении -> Отменено\";\n        }\n\n        return status;\n      } else {\n        if (value === null || value === \"\" || value === undefined) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            align: \"center\",\n            style: {\n              color: \"black\",\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 19\n            }\n          }, \"-\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 19\n            }\n          }, value);\n        }\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 17\n          }\n        }, value);\n      }\n    }\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1; // console.log(\"IT\", i, gridForm.sections[nextS])\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: isSearchForm === true ? 12 : 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      style: {\n        width: \"100%\",\n        \"border-collapse\": \"collapse\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 13\n      }\n    }, isSearchForm === false && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 19\n      }\n    }, Form.label)), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 15\n      }\n    }, Form.sections.map(section => {\n      return sectionBuilder(section);\n    }))))));\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 9\n      }\n    }, section.contents.map(contentItem => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 15\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 15\n      }\n    }, contentBuilder(contentItem))))));\n  } // Creating components by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleTextChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"BoolCustom\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleBoolCustomChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false // checked = {(fieldValue[contentItem.name] === contentItem.valueTrue || fieldValue[contentItem.name] === contentItem.valueTrue === true) ? true : false}\n        ,\n        checked: fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressInt,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        } // defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        // onBlur={handleIntChange}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleIntChange,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: IntegerFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Float\") {\n      // console.log(\"FLOAT VAL\", fieldValue[contentItem.name])\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressFloat,\n        name: contentItem.name // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n        // onBlur={handleFloatChange}\n        // value={fieldValue[contentItem.name]}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleFloatChange,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: FloatFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressDateTime,\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1;\n    }\n\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder;\n        } else {\n          let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n          let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n          var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n          return result * sortOrder;\n        }\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type));\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function calculateColSpan(contents) {\n    let num = 0;\n\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1;\n      }\n    }\n\n    return num;\n  }\n\n  const handleContextMenu = event => {\n    event.preventDefault();\n    console.log(\"CONT MENU\");\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null); // console.log(\"CLOSE\", fieldValue)\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name];\n      }\n    }\n\n    console.log(\"nForm\", gridForm);\n    setGridForm(gridForm);\n    setUpdateState(getUUID());\n  };\n\n  function createMenuItems() {\n    let columns = [];\n    columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1241,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: 5,\n        cursor: \"pointer\"\n      },\n      name: \"selectAll\",\n      onClick: () => handleTableCheckboxChange(\"selectAll\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 9\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: \"selectAll\",\n      onChange: handleGridCheckboxChange,\n      checked: gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 11\n      }\n    }))));\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name;\n        columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1263,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            paddingLeft: 5,\n            cursor: \"pointer\",\n            background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\"\n          },\n          name: name,\n          onClick: () => handleTableCheckboxChange(name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 13\n          }\n        }, gridForm.sections[s].contents[c].label), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          style: {\n            maxWidth: 20,\n            height: 15,\n            color: \"green\"\n          },\n          name: name,\n          onChange: handleGridCheckboxChange,\n          checked: gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n\n    return columns;\n  }\n\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId));\n  }\n\n  const handleGridCheckboxChange = event => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = {\n        [event.target.name]: event.target.checked\n      };\n\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name];\n      } // console.log(\"selectAll\", newFields)\n\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleTableCheckboxChange = name => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue\n      };\n\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name];\n      }\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [name]: !gridFieldValue[name]\n      });\n    }\n  };\n\n  if (updateState !== null) {\n    try {\n      return /*#__PURE__*/React.createElement(Grid, {\n        key: updateState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1318,\n          columnNumber: 9\n        }\n      }, isSearchForm !== null && isSearchForm === true ? /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        expanded: accordionExpanded,\n        onChange: () => handleExpandAccordion(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AccordionSummary, {\n        expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 33\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1328,\n          columnNumber: 21\n        }\n      }, Form.label)), /*#__PURE__*/React.createElement(AccordionDetails, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 19\n        }\n      }, getForm())))) : getForm(), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 11\n        }\n      }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n        name: button.name,\n        variant: \"outlined\",\n        onClick: () => buttonClick(button.name, null),\n        style: {\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1341,\n          columnNumber: 15\n        }\n      }, button.label))), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n        style: {\n          paddingTop: 3,\n          cursor: \"pointer\"\n        },\n        onClick: () => buttonClick(\"updateDocList\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 13\n        }\n      }), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1361,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1362,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"500px\",\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1364,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        size: \"small\",\n        class: \"main-table-style\",\n        id: gridTableId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-style\",\n        style: {\n          position: \"sticky\",\n          top: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1366,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-first-child\",\n        colSpan: \"1\",\n        onContextMenu: ev => handleContextMenu(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 27\n        }\n      }), gridForm.sections.map((section, index) => {\n        let showSection = checkToShowSection(section);\n\n        if (showSection === true) {\n          let lastSection = checkSectionOnLastChild(index);\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n            colSpan: calculateColSpan(section.contents),\n            onContextMenu: ev => handleContextMenu(ev),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1375,\n              columnNumber: 33\n            }\n          }, section.label);\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1386,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-style-2row\",\n        rowSpan: \"2\",\n        style: {\n          \"minWidth\": \"65px\"\n        },\n        onContextMenu: ev => handleContextMenu(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1387,\n          columnNumber: 27\n        }\n      }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            rowSpan: \"2\",\n            onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n            onContextMenu: ev => handleContextMenu(ev),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1399,\n              columnNumber: 35\n            }\n          }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1406,\n              columnNumber: 100\n            }\n          }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1406,\n              columnNumber: 153\n            }\n          }) : \"\");\n        }\n      })))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1414,\n          columnNumber: 23\n        }\n      }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          \"height\": 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1417,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-style\",\n        style: {\n          \"maxWidth\": 34\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 31\n        }\n      }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n        key: button.name,\n        name: button.name,\n        variant: \"outlined\",\n        value: button.name,\n        onClick: () => buttonClick(button.name, dataItem),\n        style: {\n          margin: 1,\n          height: 24,\n          fontSize: 10,\n          maxWidth: 32,\n          backgroundColor: button.backgroundColor,\n          borderColor: \"darkgreen\",\n          color: \"darkgreen\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1424,\n          columnNumber: 37\n        }\n      }, button.label))), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: keyGen(4),\n            align: \"left\",\n            style: {\n              color: \"black\",\n              fontSize: 12,\n              \"text-align\": \"center\",\n              \"border-bottom\": \"1px solid grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1447,\n              columnNumber: 39\n            }\n          }, getGridFormItems(dataItem, contentItem));\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1460,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1461,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        style: {\n          background: \"#047535\",\n          color: \"white\",\n          height: 28\n        },\n        onClick: () => downloadExcel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463,\n          columnNumber: 25\n        }\n      }, \"\\u0412 EXCEL\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1470,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          minWidth: 90,\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 25\n        }\n      }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        style: {\n          minWidth: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(GridSelect, {\n        onChange: handleChangeRowsPerPage,\n        style: {\n          height: 25,\n          color: \"black\"\n        },\n        value: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1483,\n          columnNumber: 29\n        }\n      }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 29\n        }\n      }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 29\n        }\n      }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 29\n        }\n      }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 29\n        }\n      }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 29\n        }\n      }, \"500\")))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1494,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowFirstClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n        style: {\n          fontSize: \"large\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1500,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowLeftClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1503,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"black\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          maxWidth: 25\n        },\n        value: page,\n        onChange: handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1510,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => GoToPage(),\n        variant: \"outlined\",\n        style: {\n          height: 22,\n          backgroundColor: \"#D1D6D6\",\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1512,\n          columnNumber: 27\n        }\n      }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1524,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowRightClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1526,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1527,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        class: \"pagination-rows-amount-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1531,\n          columnNumber: 23\n        }\n      }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount(), \" \\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList.length))), /*#__PURE__*/React.createElement(Menu, {\n        anchorEl: anchorEl,\n        open: openMenu,\n        onClose: handleCloseMenu,\n        MenuListProps: {\n          'aria-labelledby': 'basic-button'\n        },\n        style: {\n          paddingLeft: \"100px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1544,\n          columnNumber: 21\n        }\n      }, createMenuItems()))))), /*#__PURE__*/React.createElement(Snackbar, {\n        open: showSnackBar,\n        onClose: () => handleCloseSnackBar(),\n        autoHideDuration: 1200,\n        message: snackBarMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1552,\n          columnNumber: 11\n        }\n      }));\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1563,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","GridSelect","FormControl","IconButton","Menu","ListItemIcon","MenuItem","LinearProgress","Snackbar","NumberFormat","PropTypes","Tooltip","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","FirstPageIcon","ArrowForwardIosIcon","ArrowBackIosIcon","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","TextField","Select","Checkbox","swal","hotkeys","tableToExcel","generator","require","FloatFormat","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","IntegerFormat","userProfile","session_id","userTask","process_id","taskID","Form","setForm","selectedDoc","setSelectedDoc","docId","setDocId","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","gridForm","setGridForm","gridFormButtons","enumData","enumOptions","setEnumOptions","gridFormEnumData","fieldValue","setFieldValue","selectedOptions","setSelectedOptions","buttons","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","sectionColor","updateState","setUpdateState","taskType","isSearchForm","setIsSearchForm","accordionExpanded","setAccordionExpanded","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","anchorEl","setAnchorEl","openMenu","Boolean","gridTableId","getUUID","gridFieldValue","setGridFieldValue","console","log","parsedData","JSON","parse","s","parseInt","p","sortedDocList","sort","dynamicSort","parsedSelectedDoc","filterDocList","fetchBySize","er","callErrorToast","undefined","fields","sections","length","c","contents","fieldName","newEnumOptions","i","options","d","data","push","id","label","getLostEnumName","newFields","show","enumI","type","event","handler","key","handleCheckboxChange","checked","handleBoolCustomChange","handleIntChange","stringNum","toString","replace","int","handleFloatChange","handleTextChange","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","handleDateTimeChange","fullDate","parseDate","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","convertedDate","handleExpandAccordion","getContentType","fetchFrom","fetchTo","Data","newDocList","Object","keys","match","contentType","searchField","toLowerCase","dataField","includeSearch","includes","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","handleCloseSnackBar","getPageAmount","pagesFloat","mathRoundOfPages","Math","round","uuidv1","keyGen","password","generate","numbers","swAllert","text","icon","ok","getFieldValuesSaveDocument","docToSave","valueTrue","valueFalse","getFieldValuesUpdateDocument","docToUpdate","checkForRequieredFields","checkedSuccessfuly","required","buttonClick","buttonName","item","commandJson","commandType","userId","userRole","variables","stringify","userAction","searchDoc","sendFieldValues","clearTabData","updateBody","document","checkResult","authorization","onKeyPressText","code","charCode","onKeyPressDateTime","onKeyPressInt","onKeyPressFloat","float","parseFloat","getGridFormItems","dataItem","contentItem","color","fontSize","l","maxWidth","height","substring","Time","status","checkToShowSection","section","showSection","checkSectionOnLastChild","lastSection","nextS","getForm","width","maxHeight","map","sectionBuilder","backgroundColor","bodyBuilder","contentBuilder","edit","selectedOption","body","menuPortal","base","zIndex","inputComponent","shrink","getEnumLabel","property","sortOrder","a","b","dateA","timeInSecA","getTime","dateB","timeInSecB","result","labelA","labelB","sortDataByColumn","calculateColSpan","num","handleContextMenu","preventDefault","currentTarget","handleCloseMenu","createMenuItems","columns","paddingLeft","cursor","handleTableCheckboxChange","handleGridCheckboxChange","background","downloadExcel","convert","getElementById","button","index","margin","fontColor","paddingTop","overflow","position","top","ev","marginBottom","borderColor","minWidth"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/RegistryGIK/RegistryGIK.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@mui/material/Menu';\n// import MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\n// Accordion\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Icons\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\n// Form components\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select'; // https://react-select.com/home\nimport Checkbox from '@material-ui/core/Checkbox';\n// Libraries\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\nimport hotkeys from 'hotkeys-js'; // https://github.com/jaywcjlove/hotkeys\n// Custom components\nimport \"../../components/GridForm/GridFormCSS.css\"\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        })\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nexport default (props) => {\n  // This.state\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [docId, setDocId] = useState(props.userTask.docId)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm)\n\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [enumData] = useState(props.userTask.enumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [fieldValue, setFieldValue] = useState({})\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [buttons] = useState(props.userTask.buttons)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [taskType] = useState(props.userTask.taskType)\n  const [isSearchForm, setIsSearchForm] = useState(null)\n  const [accordionExpanded, setAccordionExpanded] = useState(false)\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n  const [gridTableId] = useState(getUUID())\n  const [gridFieldValue, setGridFieldValue] = useState({})\n\n  // Set data from props to state of component\n  useEffect(() => {\n    console.log(\"RegistryGIK PROPS\", props.userTask, props.userProfile)\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        setFilteredDocList(parsedData)\n        setIsSearchForm(true)\n        setInitialDocList(parsedData)\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", -1, \"Int\"))\n        if (props.userTask.selectedDoc !== \"null\") {\n          let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n          console.log(\"SHDOC\", parsedSelectedDoc)\n          filterDocList(0, s - 1, sortedDocList, parsedSelectedDoc)\n        }\n        else { fetchBySize(0, s - 1, sortedDocList) }\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    else { setIsSearchForm(false) }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      let fields = {}\n      // let Form = props.userTask.Form\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name\n          fields[fieldName] = parsedSelectedDoc[fieldName]\n        }\n      }\n      console.log(\"SDOC\", parsedSelectedDoc)\n      // console.log(\"FIELDVAL\", fields)\n      setSelectedDoc(parsedSelectedDoc)\n      setFieldValue(fields)\n    }\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {}\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }]\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            })\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n    }\n    if (gridForm !== null) {\n      let newFields = {}\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show\n        }\n      }\n      setGridFieldValue(newFields)\n    }\n    setUpdateState(getUUID())\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded)\n    }\n  })\n  const handleCheckboxChange = (event) => {\n    console.log(\"CHBX\", event.target.name, event.target.checked)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n  }\n\n  const handleBoolCustomChange = (event) => {\n    console.log(\"BoolCustom\", event.target.checked)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked });\n  }\n  // Integer input handler\n  const handleIntChange = (event) => {\n    console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '')\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int })\n  }\n  // Float input handler\n  const handleFloatChange = (event) => {\n    console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  // const handleIntChange = (event) => {\n  //   console.log(\"EVENT\", event.target.name, event.target.value)\n  //   let stringNum = event.target.value.toString().replace(/ /g, '')\n  //   let int = parseInt(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: int })\n  // }\n  // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n  // Text input handler\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value\n    console.log(\"OPT\", option.name, option.value)\n    var updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option\n        noSuchOption = false\n        setSelectedOptions(updateSelectedOptions)\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n  }\n  function handleDateTimeChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let fullDate = props.parseDate(event.target.value)\n    var hours = new Date().getHours()\n    var minutes = new Date().getMinutes()\n    var seconds = new Date().getSeconds()\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\"\n    fieldValue[event.target.name] = convertedDate\n    setFieldValue(fieldValue)\n    // console.log(\"DATE CHANGE\", event.target.value)\n  }\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded)\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  // filter docList by filled parameters\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = []\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data\n    }\n    else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true\n          }\n          else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key)\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                catch (er) {\n                  console.log(\"ERR\", er)\n                  match = true\n                }\n              }\n              else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else { match = true }\n              }\n              else if (contentType === \"Enum\") {\n\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true\n                }\n                else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n              else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n            }\n            else {\n              match = false\n              break\n            }\n          }\n        }\n        if (match === true) {\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered docList by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setFilteredDocList(Data)\n    setDocList(newDocList)\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.round(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  // random UUID generator\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // random numbers generator\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  // Collect data to save doc\n  function getFieldValuesSaveDocument() {\n    let docToSave = {}\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined) {\n          docToSave[fieldName] = false\n        }\n        else if (Form.sections[s].contents[c].type === \"BoolCustom\") {\n          if (fieldValue[fieldName] === true || fieldValue[fieldName] === Form.sections[s].contents[c].valueTrue) {\n            docToSave[fieldName] = Form.sections[s].contents[c].valueTrue\n          }\n          else {\n            docToSave[fieldName] = Form.sections[s].contents[c].valueFalse\n          }\n        }\n        else {\n          docToSave[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToSave\n  }\n  // Collect data to update doc\n  function getFieldValuesUpdateDocument() {\n    let docToUpdate = selectedDoc\n    // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    docToUpdate[\"id\"] = parseInt(docId)\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false\n        }\n        else if (Form.sections[s].contents[c].type === \"BoolCustom\") {\n          if (fieldValue[fieldName] === true || fieldValue[fieldName] === Form.sections[s].contents[c].valueTrue) {\n            docToUpdate[fieldName] = Form.sections[s].contents[c].valueTrue\n          }\n          else {\n            docToUpdate[fieldName] = Form.sections[s].contents[c].valueFalse\n          }\n        }\n        else {\n          docToUpdate[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToUpdate\n  }\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null ||\n            fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n            return checkedSuccessfuly\n          }\n          else {\n            checkedSuccessfuly = true\n          }\n        }\n        else {\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  function buttonClick(buttonName, item) {\n    if (buttonName === \"findDocument\") {\n      if(accordionExpanded === false){\n        setAccordionExpanded(true)\n      }\n      else{\n        filterDocList(0, size - 1, initialDocList, fieldValue)\n      }\n    }\n    else if (buttonName === \"openDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: { value: JSON.stringify(item) },\n          userAction: { value: \"openDocument\" },\n          docId: { value: item.id },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button openDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"editDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"editDocument\" }\n        }\n      }\n      console.log(\"button editDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocument\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"updateDocument:\", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createDocument\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"createDocument\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"createDocument:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"saveDocument\") {\n      let docToSave = getFieldValuesSaveDocument()\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"saveDocument\" },\n          document: { value: JSON.stringify(docToSave) }\n        }\n      }\n      console.log(\"saveDocument:\", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"history\") {\n      if (selectedDoc !== null) {\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: { value: \"history\" },\n            docId: { value: selectedDoc.id }\n          }\n        }\n        console.log(\"history:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"back\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        // session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocList\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocList\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else {\n      console.log(\"UNKNOWN Button \", buttonName)\n    }\n  }\n\n  // Key press handlers for some fields\n  function onKeyPressText(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressDateTime(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressInt(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let int = parseInt(stringNum)\n          fieldValue[event.target.name] = int\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressFloat(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let float = parseFloat(stringNum)\n          fieldValue[event.target.name] = float\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  // Create grid form components\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name]\n    let name = contentItem.name\n    let type = contentItem.type\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\" }}\n          checked={(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if (type === \"BoolCustom\") {\n      // console.log(\"ITEM\", name, value, type)\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: \"green\" }}\n          checked={(value === contentItem.valueTrue) ? true : false}\n        />\n      )\n    }\n    else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"-\"\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\"\n        }\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"Введено -> На исполнении\"\n        }\n        if (dataItem[\"executed\"] === true) {\n          status = \"На исполнении -> Исполнено\"\n        }\n        if (dataItem[\"canceled\"] === true) {\n          status = \"На исполнении -> Отменено\"\n        }\n        return status\n      }\n      else {\n        if (value === null || value === \"\" || value === undefined) {\n          return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n        }\n        else {\n          return (<td>{value}</td>)\n        }\n      }\n    }\n    else {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        return (<td>{value}</td>)\n      }\n    }\n  }\n  function checkToShowSection(section) {\n    let showSection = false\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true\n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i) {\n    let lastSection = true\n    if (i === gridForm.sections.length - 1) { // The last section\n      return true\n    }\n    else {\n      let nextS = i + 1\n      // console.log(\"IT\", i, gridForm.sections[nextS])\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) { // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n  function getForm() {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n        <Grid item xs={isSearchForm === true ? 12 : 8}>\n          <Paper>\n            <Table style={{ width: \"100%\", \"border-collapse\": \"collapse\" }}>\n              {isSearchForm === false &&\n                <TableRow style={{ maxHeight: 25 }}>\n                  <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                </TableRow>\n              }\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {Form.sections.map(section => {\n                  return sectionBuilder(section)\n                })}\n              </Grid>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map(contentItem => (\n            contentItem.show === true &&\n            <TableRow style={{ height: 30 }}>\n              <TableCell\n                align=\"left\"\n                style={{ width: \"40%\" }}>\n                {contentItem.label}\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                style={{ width: \"60%\", height: 30 }}\n              >{contentBuilder(contentItem)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n  // Creating components by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur={handleTextChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name]) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined) ? false : true}\n        />\n      )\n    }\n    else if (contentItem.type === \"BoolCustom\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleBoolCustomChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          // checked = {(fieldValue[contentItem.name] === contentItem.valueTrue || fieldValue[contentItem.name] === contentItem.valueTrue === true) ? true : false}\n          checked={(fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined) ? false : true}\n        />\n      )\n    }\n    else if (contentItem.type === \"Int\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressInt}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          style={{ width: \"100%\" }}\n          // defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          // onBlur={handleIntChange}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleIntChange}\n          name={contentItem.name}\n          InputProps={{ inputComponent: IntegerFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Float\") {\n      // console.log(\"FLOAT VAL\", fieldValue[contentItem.name])\n      return (\n        <TextField\n          onKeyPress={onKeyPressFloat}\n          name={contentItem.name}\n          // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n          // onBlur={handleFloatChange}\n          // value={fieldValue[contentItem.name]}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleFloatChange}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: FloatFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressDateTime}\n          type=\"date\"\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1\n    }\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA = dateA.getTime() / 1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB = dateB.getTime() / 1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else {\n          if (a[property] === null) {\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n    else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder\n        }\n        else {\n          let labelA = getEnumLabel(property, a[property])\n          // console.log(\"A\", property, a[property], labelA)\n          let labelB = getEnumLabel(property, b[property])\n          // console.log(\"labelB\", labelB, property, b)\n          var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n          return result * sortOrder\n        }\n      }\n    }\n  }\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size - 1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function calculateColSpan(contents) {\n    let num = 0\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1\n      }\n    }\n    return num\n  }\n  const handleContextMenu = (event) => {\n    event.preventDefault()\n    console.log(\"CONT MENU\")\n    setAnchorEl(event.currentTarget)\n  }\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n    // console.log(\"CLOSE\", fieldValue)\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name]\n      }\n    }\n    console.log(\"nForm\", gridForm)\n    setGridForm(gridForm)\n    setUpdateState(getUUID())\n  }\n  function createMenuItems() {\n    let columns = []\n    columns.push(\n      <tr>\n        <td\n          style={{ paddingLeft: 5, cursor: \"pointer\" }}\n          name={\"selectAll\"}\n          onClick={() => handleTableCheckboxChange(\"selectAll\")}\n        >\n          Выбрать все\n        </td>\n        <td>\n          <Checkbox\n            style={{ maxWidth: 20, height: 15, color: \"green\" }}\n            name={\"selectAll\"}\n            onChange={handleGridCheckboxChange}\n            checked={(gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined) ? false : true}\n          />\n        </td>\n      </tr>\n    )\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name\n        columns.push(\n          <tr>\n            <td\n              style={{ paddingLeft: 5, cursor: \"pointer\", background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\" }}\n              name={name}\n              onClick={() => handleTableCheckboxChange(name)}\n            >\n              {gridForm.sections[s].contents[c].label}\n            </td>\n            <td>\n              <Checkbox\n                style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                name={name}\n                onChange={handleGridCheckboxChange}\n                checked={(gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined) ? false : true}\n              />\n            </td>\n          </tr>\n        )\n      }\n    }\n    return columns\n  }\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId))\n  }\n  const handleGridCheckboxChange = (event) => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = { [event.target.name]: event.target.checked }\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name]\n      }\n      // console.log(\"selectAll\", newFields)\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [event.target.name]: event.target.checked })\n    }\n  }\n  const handleTableCheckboxChange = (name) => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue }\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name]\n      }\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [name]: !gridFieldValue[name] })\n    }\n  }\n  if (updateState !== null) {\n    try {\n      return (\n        <Grid key={updateState}>\n          {isSearchForm !== null &&\n            isSearchForm === true\n            ?\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n              <Grid item xs={8}>\n                <Accordion expanded={accordionExpanded} onChange={() => handleExpandAccordion()}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                  >\n                    <Typography>{Form.label}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    {getForm()}\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n            </Grid>\n            :\n            getForm()\n          }\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            {buttons.map((button, index) => (\n              <Button\n                name={button.name}\n                variant=\"outlined\"\n                onClick={() => buttonClick(button.name, null)}\n                style={{\n                  margin: 3,\n                  color: button.fontColor,\n                  backgroundColor: button.backgroundColor,\n                  height: 32,\n                  fontSize: 12\n                }}\n              >{button.label}\n              </Button>\n            ))}\n          </Grid>\n          {isSearchForm === true &&\n            <ReplayIcon style={{ paddingTop: 3, cursor: \"pointer\" }} onClick={() => buttonClick(\"updateDocList\")} />\n          }\n          {/* Create grid table with data from doclist */}\n          {docList !== null &&\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n              <Grid item sm={\"auto\"}>\n                <Paper>\n                  <div style={{ height: \"500px\", overflow: \"auto\" }}>\n                    <table size=\"small\" class=\"main-table-style\" id={gridTableId}>\n                      <thead class=\"thead-style\" style={{ position: \"sticky\", top: 0 }}>\n                        {/* 1st Row Sections Labels */}\n                        <tr>\n                          <td class=\"td-head-first-child\" colSpan=\"1\" onContextMenu={(ev) => handleContextMenu(ev)}></td>\n                          {gridForm.sections.map((section, index) => {\n                            let showSection = checkToShowSection(section)\n                            if (showSection === true) {\n                              let lastSection = checkSectionOnLastChild(index)\n                              return (\n                                <td\n                                  class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                  colSpan={calculateColSpan(section.contents)}\n                                  onContextMenu={(ev) => handleContextMenu(ev)}\n                                >{section.label}\n                                </td>\n                              )\n                            }\n                          })}\n                        </tr>\n                        {/* 2nd Row Sections Contents labels */}\n                        <tr>\n                          <td\n                            class=\"td-head-style-2row\"\n                            rowSpan=\"2\"\n                            style={{ \"minWidth\": \"65px\" }}\n                            onContextMenu={(ev) => handleContextMenu(ev)}\n                          >\n                            Действие\n                          </td>\n                          {gridForm.sections.map(section =>\n                            section.contents.map(contentItem => {\n                              if (contentItem.show === true) {\n                                return (\n                                  <td\n                                    class=\"td-head-style-2row\"\n                                    rowSpan=\"2\"\n                                    onClick={() => sortDataByColumn(contentItem.name, contentItem.type)}\n                                    onContextMenu={(ev) => handleContextMenu(ev)}\n                                  >\n                                    {contentItem.label}\n                                    {sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{ marginBottom: -8 }} /> : <ArrowDropUpIcon style={{ marginBottom: -8 }} /> : \"\"}\n                                  </td>\n                                )\n                              }\n                            })\n                          )}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.keys(docList).length !== 0 &&\n                          docList.map(dataItem => (\n                            <tr style={{ \"height\": 30 }}>\n                              <td\n                                class=\"td-style\"\n                                style={{ \"maxWidth\": 34 }}\n                              >\n                                {gridFormButtons !== \"null\" &&\n                                  gridFormButtons.map(button =>\n                                    <Button\n                                      key={button.name}\n                                      name={button.name}\n                                      variant=\"outlined\"\n                                      value={button.name}\n                                      onClick={() => buttonClick(button.name, dataItem)}\n                                      style={{\n                                        margin: 1,\n                                        height: 24,\n                                        fontSize: 10,\n                                        maxWidth: 32,\n                                        backgroundColor: button.backgroundColor,\n                                        borderColor: \"darkgreen\",\n                                        color: \"darkgreen\"\n                                      }}\n                                    >{button.label}\n                                    </Button>\n                                  )}\n                              </td>\n                              {gridForm.sections.map(section => (\n                                section.contents.map(contentItem => {\n                                  if (contentItem.show === true) {\n                                    return (\n                                      <td key={keyGen(4)} align=\"left\" style={{ color: \"black\", fontSize: 12, \"text-align\": \"center\", \"border-bottom\": \"1px solid grey\" }}>\n                                        {getGridFormItems(dataItem, contentItem)}\n                                      </td>\n                                    )\n                                  }\n                                })\n                              ))}\n                            </tr>\n                          )\n                          )}\n                      </tbody>\n                    </table>\n                  </div>\n                  <tfoot>\n                    <tr>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <Button\n                          variant=\"outlined\"\n                          style={{ background: \"#047535\", color: \"white\", height: 28 }}\n                          onClick={() => downloadExcel()}\n                        >В EXCEL\n                        </Button>\n                      </td>\n                      <td style={{ paddingLeft: \"20px\" }}>\n                        <div style={{ minWidth: 90, color: \"black\" }}>Кол-во записей</div>\n                      </td>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <FormControl\n                          variant=\"outlined\"\n                          style={{ minWidth: 30 }}\n                        >\n                          <GridSelect\n                            onChange={handleChangeRowsPerPage}\n                            style={{ height: 25, color: \"black\" }}\n                            value={size}\n                          >\n                            <MenuItem value={10}>10</MenuItem>\n                            <MenuItem value={20}>20</MenuItem>\n                            <MenuItem value={50}>50</MenuItem>\n                            <MenuItem value={100}>100</MenuItem>\n                            <MenuItem value={200}>200</MenuItem>\n                            <MenuItem value={500}>500</MenuItem>\n                          </GridSelect>\n                        </FormControl>\n                      </td>\n\n                      <td>\n                        <Tooltip title=\"На первую страницу\">\n                          <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                            <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На предыдущюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                            <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td style={{ color: \"black\", fontSize: 16 }}>\n                        <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                      </td>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <Tooltip title=\"Перейти на указанную страницу\">\n                          <Button\n                            onClick={() => GoToPage()}\n                            variant=\"outlined\"\n                            style={{\n                              height: 22,\n                              backgroundColor: \"#D1D6D6\",\n                              fontSize: 12\n                            }}\n                          >перейти\n                          </Button>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На следующюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                            <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()} Общее кол-во {filteredDocList.length}\n                      </td>\n                    </tr>\n                  </tfoot>\n                  <Menu\n                    anchorEl={anchorEl}\n                    open={openMenu}\n                    onClose={handleCloseMenu}\n                    MenuListProps={{\n                      'aria-labelledby': 'basic-button',\n                    }}\n                    style={{ paddingLeft: \"100px\" }}\n                  >\n                    <table>\n                      {createMenuItems()}\n                    </table>\n                  </Menu>\n                </Paper>\n              </Grid>\n            </Grid>\n          }\n          <Snackbar\n            open={showSnackBar}\n            onClose={() => handleCloseSnackBar()}\n            autoHideDuration={1200}\n            message={snackBarMessage}\n          />\n        </Grid>\n      )\n    }\n    catch (er) {\n      console.log(\"ERROR\", er)\n      return <LinearProgress />\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}