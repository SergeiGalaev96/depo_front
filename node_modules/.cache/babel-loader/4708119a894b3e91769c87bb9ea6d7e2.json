{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Serj\\\\Desktop\\\\depo\\\\src\\\\lib\\\\components\\\\Provider.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactKeycloakContext from './Context';\nconst initialState = {\n  initialized: false,\n  isLoading: true,\n  token: undefined\n};\n\nclass KeycloakProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...initialState\n    };\n\n    this.onKeycloakError = event => error => {\n      const {\n        onError,\n        onEvent\n      } = this.props; // @Deprecated: Remove on next major\n\n      onError && onError(error); // Notify Events listener\n\n      onEvent && onEvent(event, error);\n    };\n\n    this.updateState = event => () => {\n      const {\n        keycloak,\n        onEvent,\n        onToken,\n        onTokens,\n        isLoadingCheck\n      } = this.props;\n      const {\n        initialized: prevInitialized,\n        isLoading: prevLoading,\n        token: prevToken\n      } = this.state;\n      const {\n        idToken,\n        refreshToken,\n        token: newToken\n      } = keycloak; // Notify Events listener\n\n      onEvent && onEvent(event); // Check Loading state\n\n      const isLoading = isLoadingCheck ? isLoadingCheck(keycloak) : false; // Avoid double-refresh if state hasn't changed\n\n      if (!prevInitialized || isLoading !== prevLoading || newToken !== prevToken) {\n        this.setState({\n          initialized: true,\n          isLoading,\n          token: newToken\n        });\n      } // Notify token listener, if any\n\n\n      if (newToken !== prevToken) {\n        // @Deprecated: Remove on next major\n        onToken && onToken(newToken);\n        onTokens && onTokens({\n          idToken,\n          refreshToken,\n          token: newToken\n        });\n      }\n    };\n\n    this.refreshKeycloakToken = event => () => {\n      const {\n        keycloak,\n        onEvent\n      } = this.props; // Notify Events listener\n\n      onEvent && onEvent(event); // Refresh Keycloak token\n\n      keycloak.updateToken();\n    };\n\n    const {\n      keycloak: _keycloak\n    } = props;\n\n    if (!_keycloak) {\n      throw new Error(\"KeycloakProvider requires 'keycloak' prop to be defined\");\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.init();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidUpdate(_ref) {\n    let {\n      keycloak: prevKeycloak\n    } = _ref;\n\n    if (this.props.keycloak !== prevKeycloak) {\n      // De-init previous Keycloak instance\n      prevKeycloak.onReady = null;\n      prevKeycloak.onAuthSuccess = null;\n      prevKeycloak.onAuthError = null;\n      prevKeycloak.onAuthRefreshSuccess = null;\n      prevKeycloak.onAuthRefreshError = null;\n      prevKeycloak.onAuthLogout = null;\n      prevKeycloak.onTokenExpired = null; // Reset state\n\n      this.setState({ ...initialState\n      }); // Init new Keycloak instance\n\n      this.init();\n    }\n  }\n\n  init() {\n    const {\n      initConfig,\n      keycloak\n    } = this.props; // Attach Keycloak listeners\n\n    keycloak.onReady = this.updateState('onReady');\n    keycloak.onAuthSuccess = this.updateState('onAuthSuccess');\n    keycloak.onAuthError = this.onKeycloakError('onAuthError');\n    keycloak.onAuthRefreshSuccess = this.updateState('onAuthRefreshSuccess');\n    keycloak.onAuthRefreshError = this.onKeycloakError('onAuthRefreshError');\n    keycloak.onAuthLogout = this.updateState('onAuthLogout');\n    keycloak.onTokenExpired = this.refreshKeycloakToken('onTokenExpired'); // keycloak.init({ ...initConfig });\n\n    keycloak.init({\n      onLoad: 'login-required',\n      \"checkLoginIframe\": false\n    });\n  }\n\n  render() {\n    const {\n      children,\n      keycloak,\n      LoadingComponent\n    } = this.props;\n    const {\n      initialized,\n      isLoading\n    } = this.state;\n\n    if (!!LoadingComponent && (!initialized || isLoading)) {\n      return LoadingComponent;\n    }\n\n    return /*#__PURE__*/React.createElement(ReactKeycloakContext.Provider, {\n      value: {\n        initialized,\n        keycloak\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nKeycloakProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n  keycloak: PropTypes.shape({\n    init: PropTypes.func.isRequired,\n    updateToken: PropTypes.func.isRequired\n  }).isRequired,\n  initConfig: PropTypes.shape({}),\n  isLoadingCheck: PropTypes.func,\n  LoadingComponent: PropTypes.element,\n  onError: PropTypes.func,\n  onEvent: PropTypes.func,\n  onToken: PropTypes.func\n};\nKeycloakProvider.defaultProps = {\n  initConfig: {\n    onLoad: 'check-sso'\n  },\n  isLoadingCheck: null,\n  LoadingComponent: null,\n  onError: null,\n  onEvent: null,\n  onToken: null\n};\nexport default KeycloakProvider;","map":{"version":3,"names":["React","Component","PropTypes","ReactKeycloakContext","initialState","initialized","isLoading","token","undefined","KeycloakProvider","constructor","props","state","onKeycloakError","event","error","onError","onEvent","updateState","keycloak","onToken","onTokens","isLoadingCheck","prevInitialized","prevLoading","prevToken","idToken","refreshToken","newToken","setState","refreshKeycloakToken","updateToken","Error","componentDidMount","_isMounted","init","componentWillUnmount","componentDidUpdate","prevKeycloak","onReady","onAuthSuccess","onAuthError","onAuthRefreshSuccess","onAuthRefreshError","onAuthLogout","onTokenExpired","initConfig","onLoad","render","children","LoadingComponent","propTypes","element","isRequired","shape","func","defaultProps"],"sources":["C:/Users/Serj/Desktop/depo/src/lib/components/Provider.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactKeycloakContext from './Context';\n\nconst initialState = {\n  initialized: false,\n  isLoading: true,\n  token: undefined,\n};\n\nclass KeycloakProvider extends Component {\n  state = { ...initialState };\n\n  constructor(props) {\n    super(props);\n\n    const { keycloak } = props;\n    if (!keycloak) {\n      throw new Error(\"KeycloakProvider requires 'keycloak' prop to be defined\");\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.init();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidUpdate({ keycloak: prevKeycloak }) {\n    if (this.props.keycloak !== prevKeycloak) {\n      // De-init previous Keycloak instance\n      prevKeycloak.onReady = null;\n      prevKeycloak.onAuthSuccess = null;\n      prevKeycloak.onAuthError = null;\n      prevKeycloak.onAuthRefreshSuccess = null;\n      prevKeycloak.onAuthRefreshError = null;\n      prevKeycloak.onAuthLogout = null;\n      prevKeycloak.onTokenExpired = null;\n\n      // Reset state\n      this.setState({ ...initialState });\n      // Init new Keycloak instance\n      this.init();\n    }\n  }\n\n  init() {\n    const { initConfig, keycloak } = this.props;\n\n    // Attach Keycloak listeners\n    keycloak.onReady = this.updateState('onReady');\n    keycloak.onAuthSuccess = this.updateState('onAuthSuccess');\n    keycloak.onAuthError = this.onKeycloakError('onAuthError');\n    keycloak.onAuthRefreshSuccess = this.updateState('onAuthRefreshSuccess');\n    keycloak.onAuthRefreshError = this.onKeycloakError('onAuthRefreshError');\n    keycloak.onAuthLogout = this.updateState('onAuthLogout');\n    keycloak.onTokenExpired = this.refreshKeycloakToken('onTokenExpired');\n\n    // keycloak.init({ ...initConfig });\n    keycloak.init({onLoad: 'login-required', \"checkLoginIframe\": false})\n  }\n\n  onKeycloakError = event => error => {\n    const { onError, onEvent } = this.props;\n    // @Deprecated: Remove on next major\n    onError && onError(error);\n\n    // Notify Events listener\n    onEvent && onEvent(event, error);\n  };\n\n  updateState = event => () => {\n    const { keycloak, onEvent, onToken, onTokens, isLoadingCheck } = this.props;\n    const {\n      initialized: prevInitialized,\n      isLoading: prevLoading,\n      token: prevToken,\n    } = this.state;\n    const { idToken, refreshToken, token: newToken } = keycloak;\n\n    // Notify Events listener\n    onEvent && onEvent(event);\n\n    // Check Loading state\n    const isLoading = isLoadingCheck ? isLoadingCheck(keycloak) : false;\n\n    // Avoid double-refresh if state hasn't changed\n    if (\n      !prevInitialized ||\n      isLoading !== prevLoading ||\n      newToken !== prevToken\n    ) {\n      this.setState({\n        initialized: true,\n        isLoading,\n        token: newToken,\n      });\n    }\n\n    // Notify token listener, if any\n    if (newToken !== prevToken) {\n      // @Deprecated: Remove on next major\n      onToken && onToken(newToken);\n      onTokens &&\n        onTokens({\n          idToken,\n          refreshToken,\n          token: newToken,\n        });\n    }\n  };\n\n  refreshKeycloakToken = event => () => {\n    const { keycloak, onEvent } = this.props;\n    // Notify Events listener\n    onEvent && onEvent(event);\n\n    // Refresh Keycloak token\n    keycloak.updateToken();\n  };\n\n  render() {\n    const { children, keycloak, LoadingComponent } = this.props;\n    const { initialized, isLoading } = this.state;\n\n    if (!!LoadingComponent && (!initialized || isLoading)) {\n      return LoadingComponent;\n    }\n\n    return (\n      <ReactKeycloakContext.Provider value={{ initialized, keycloak }}>\n        {children}\n      </ReactKeycloakContext.Provider>\n    );\n  }\n}\n\nKeycloakProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n  keycloak: PropTypes.shape({\n    init: PropTypes.func.isRequired,\n    updateToken: PropTypes.func.isRequired,\n  }).isRequired,\n  initConfig: PropTypes.shape({}),\n  isLoadingCheck: PropTypes.func,\n  LoadingComponent: PropTypes.element,\n  onError: PropTypes.func,\n  onEvent: PropTypes.func,\n  onToken: PropTypes.func,\n};\n\nKeycloakProvider.defaultProps = {\n  initConfig: {\n    onLoad: 'check-sso',\n  },\n  isLoadingCheck: null,\n  LoadingComponent: null,\n  onError: null,\n  onEvent: null,\n  onToken: null,\n};\n\nexport default KeycloakProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}