{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\Instructions\\\\Instructions.jsx\";\n// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select'; // import MaskedInput from 'react-text-mask';\n\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Menu from '@mui/material/Menu'; // import Input from '@material-ui/core/Input';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridSelect from '@material-ui/core/Select'; // PIN components\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'; // Icons\n\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // Accordion\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Import libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport hotkeys from 'hotkeys-js';\nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nvar moment = require('moment');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [process_id] = useState(props.userTask.process_id);\n  const [session_id] = useState(props.userTask.session_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [taskType] = useState(props.userTask.taskType);\n  const [enumData] = useState(props.userTask.enumData);\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [fieldValue, setFieldValue] = useState({}); // opened: false\n\n  const [docId] = useState(props.userTask.docId);\n  const [buttons] = useState(props.userTask.buttons);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const [showModalCancelInstruction, setShowModalCancelInstruction] = useState(false);\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false);\n  const [updateState, setUpdateState] = useState(null);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [accordionExpanded, setAccordionExpanded] = useState(false);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  const [gridTableId] = useState(getUUID());\n  const [gridFieldValue, setGridFieldValue] = useState({}); // Initializing\n\n  useEffect(() => {\n    console.log(\"INSTR PROPS\", props);\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        setFilteredDocList(parsedData);\n\n        if (taskType !== \"showInstructionsTypeSelectingForm\" || taskType !== \"showInstructionsGIKTypeSelectingForm\") {\n          setIsSearchForm(true);\n        } // setInitialDocList(parsedData)\n        // let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"))\n        // if (props.userTask.selectedDoc !== \"null\") {\n        //   filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc))\n        // }\n        // else { fetchBySize(0, s - 1, sortedDocList) }\n\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    } else {\n      setIsSearchForm(false);\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      let fields = { ...parsedSelectedDoc\n      };\n\n      if (taskType === \"showInstructionsCreationForm\") {\n        // Creater instruction\n        let ed = props.userTask.enumData;\n\n        if (userProfile.userRole === \"3\") {\n          //Depositor  || userProfile.userRole === \"4\" || userProfile.userRole === \"6\" || userProfile.userRole === \"8\" Registrar, GIK, CorrDepo\n          let newForm = Form;\n          let editDepositor = null;\n          let editDepositor2 = null;\n          let editAccFrom = null;\n          let editAccTo = null; // 1 step check wheter both fields are allowed for input\n\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              if (Form.sections[s].contents[c].name === \"depositor\") {\n                editDepositor = Form.sections[s].contents[c].edit;\n              }\n\n              if (Form.sections[s].contents[c].name === \"accFrom\") {\n                // if account from is allowed for input depositor is sender\n                editAccFrom = Form.sections[s].contents[c].edit;\n              }\n\n              if (Form.sections[s].contents[c].name === \"depositor2\") {\n                editDepositor2 = Form.sections[s].contents[c].edit;\n              }\n\n              if (Form.sections[s].contents[c].name === \"accTo\") {\n                // if account to is allowed for input depositor is recipient\n                editAccTo = Form.sections[s].contents[c].edit;\n              }\n            }\n          }\n\n          console.log(editDepositor, editAccFrom, editDepositor2, editAccTo); // 2 step block field \"accTo\" for depositor who create the instruction\n          // 1 Variant both fields are allowed\n\n          if (editDepositor === true && editDepositor2 === true) {\n            console.log(\"2 Fields alowed\");\n\n            for (let s = 0; s < Form.sections.length; s++) {\n              for (let c = 0; c < Form.sections[s].contents.length; c++) {\n                // separate by allowed account From/To fields\n                if (Form.sections[s].contents[c].name === \"depositor\") {\n                  if (editAccFrom === true && editAccTo === false || editAccFrom === true && editAccTo === true) {\n                    // if depositor is SENDER\n                    newForm.sections[s].contents[c].edit = false; // block field\n                    // find partner for cur depositor and insert it to field depositor don't allow him to choose another depositor\n                    // console.log(\"Block depositor\")\n\n                    for (let i = 0; i < ed.length; i++) {\n                      if (ed[i].name === \"depositor\") {\n                        for (let d = 0; d < ed[i].data.length; d++) {\n                          // console.log(\"Put depositor\", ed[i].data[d].id)\n                          if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                            let depositorId = ed[i].data[d].id;\n                            fields[\"depositor\"] = depositorId; // set field from profile\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n\n                if (Form.sections[s].contents[c].name === \"accTo\") {\n                  if (editAccFrom === true && editAccTo === false) {\n                    // if depositor is SENDER\n                    newForm.sections[s].contents[c].edit = false; // block field\n\n                    newForm.sections[s].contents[c].show = false; // hide field\n                    // console.log(\"Block AccTo\")\n                  }\n                }\n\n                if (Form.sections[s].contents[c].name === \"depositor2\") {\n                  if (editAccFrom === false && editAccTo === true || editAccFrom === true && editAccTo === true) {\n                    // if depositor is RECIPIENT\n                    newForm.sections[s].contents[c].edit = false; // block field\n                    // find partner for cur depositor and insert it to field depositor2 don't allow him to choose another depositor\n                    // console.log(\"Block depositor2\")\n\n                    for (let i = 0; i < ed.length; i++) {\n                      if (ed[i].name === \"depositor2\") {\n                        for (let d = 0; d < ed[i].data.length; d++) {\n                          // console.log(\"Put depositor\", ed[i].data[d].id)\n                          if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                            let depositorId = ed[i].data[d].id;\n                            fields[\"depositor2\"] = depositorId; // set field from profile\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n\n                if (Form.sections[s].contents[c].name === \"accFrom\") {\n                  if (editAccFrom === false && editAccTo === true) {\n                    // if depositor is RECIPIENT\n                    newForm.sections[s].contents[c].edit = false; // block field\n\n                    newForm.sections[s].contents[c].show = false; // hide field\n                    // console.log(\"Block AccFrom\")\n                  }\n                }\n              }\n            }\n          } // 2 Variant 1 fields allowed\n\n\n          if (editDepositor === true && editDepositor2 === false || editDepositor === false && editDepositor2 === true) {\n            // console.log(\"1 Field alowed\")\n            for (let s = 0; s < Form.sections.length; s++) {\n              for (let c = 0; c < Form.sections[s].contents.length; c++) {\n                // separate by allowed account From/To fields\n                if (Form.sections[s].contents[c].name === \"depositor\") {\n                  if (editDepositor === true) {\n                    newForm.sections[s].contents[c].edit = false; // block field\n                    // find partner for cur depositor and insert it to field depositor don't allow him to choose another depositor\n                    // console.log(\"Block depositor\")\n\n                    for (let i = 0; i < ed.length; i++) {\n                      if (ed[i].name === \"depositor\") {\n                        for (let d = 0; d < ed[i].data.length; d++) {\n                          // console.log(\"Put depositor\", ed[i].data[d].id)\n                          if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                            let depositorId = ed[i].data[d].id;\n                            fields[\"depositor\"] = depositorId; // set field from profile\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n\n                if (Form.sections[s].contents[c].name === \"depositor2\") {\n                  if (editDepositor2 === true) {\n                    newForm.sections[s].contents[c].edit = false; // block field\n                    // find partner for cur depositor and insert it to field depositor2 don't allow him to choose another depositor\n                    // console.log(\"Block depositor2\")\n\n                    for (let i = 0; i < ed.length; i++) {\n                      if (ed[i].name === \"depositor2\") {\n                        for (let d = 0; d < ed[i].data.length; d++) {\n                          // console.log(\"Put depositor\", ed[i].data[d].id)\n                          if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                            let depositorId = ed[i].data[d].id;\n                            fields[\"depositor2\"] = depositorId; // set field from profile\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          setForm(newForm);\n        }\n      } else {\n        if (Object.keys(parsedSelectedDoc).length > 0) {\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              let fieldName = Form.sections[s].contents[c].name;\n              fields[fieldName] = parsedSelectedDoc[fieldName];\n            }\n          }\n        }\n      }\n\n      console.log(\"SDOC\", parsedSelectedDoc);\n      console.log(\"INITIAL FIELDVALUES\", fields);\n      setSelectedDoc(parsedSelectedDoc);\n      setFieldValue(fields);\n    }\n\n    if (taskType === \"showInstructionsSearchForm\") {\n      // Search instructions\n      if (userProfile.userRole === \"3\") {\n        //Depositor  || userProfile.userRole === \"4\" || userProfile.userRole === \"6\" || userProfile.userRole === \"8\" Registrar, GIK, CorrDepo\n        let newForm = Form; // Hide field depositor\n\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            // separate by allowed account From/To fields\n            if (Form.sections[s].contents[c].name === \"depositor\" || Form.sections[s].contents[c].name === \"depositor2\") {\n              newForm.sections[s].contents[c].show = false; // hide field\n            }\n          }\n        }\n\n        setForm(newForm);\n      }\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let eData = props.userTask.enumData;\n      let newEnumOptions = {};\n\n      for (let i = 0; i < eData.length; i++) {\n        if (eData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": eData[i].name\n          }];\n\n          if (eData[i].name === \"type\") {\n            if (props.userTask.taskType === \"showInstructionsTypeSelectingForm\") {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                if (props.userProfile[getInstructionTypeName(eData[i].data[d].id)] === true) {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  });\n                }\n              }\n            } else {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                options.push({\n                  \"value\": eData[i].data[d].id,\n                  \"label\": eData[i].data[d].label,\n                  \"name\": eData[i].name\n                });\n              }\n            }\n          } else if (eData[i].name === \"accFrom\" || eData[i].name === \"accTo\") {\n            // Filter allowed account types for selected instruction\n            if (props.userTask.taskType === \"showInstructionsCreationForm\" || props.userTask.taskType === \"showInstructionsViewForm\") {\n              console.log(\"CREATE TASK\"); // console.log(\"ACC\")\n\n              let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n              let instructionTypeId = parsedSelectedDoc.type;\n              let filteredRelations = []; // allowed account types\n\n              for (let i = 0; i < eData.length; i++) {\n                if (eData[i].name === \"instructionAccountRelations\") {\n                  // Find tabels that indicate allowed account types\n                  for (let d = 0; d < eData[i].data.length; d++) {\n                    if (eData[i].data[d].id === instructionTypeId) {\n                      filteredRelations.push(eData[i].data[d]);\n                    }\n                  }\n                }\n              } // console.log(\"filteredRelations\", filteredRelations)\n\n\n              for (let d = 0; d < eData[i].data.length; d++) {\n                // if (filteredRelations.length > 0) { // Has relations to filter accounts\n                let checkResult = checkForPushing(eData[i].data[d].label, instructionTypeId);\n\n                if (checkResult.enableToPush === true) {\n                  // console.log(\"PUSH ? \", eData[i].data[d].label, checkResult)\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  });\n                }\n              }\n            }\n          } else if (eData[i].name === \"account\") {\n            if (props.userTask.taskType === \"showInstructionsSearchForm\") {\n              if (userProfile.userRole === \"3\") {\n                console.log(\"SEASRCH TASK\"); // console.log(\"Clear ACC\", parseInt(userProfile.partner))\n\n                for (let d = 0; d < eData[i].data.length; d++) {\n                  if (eData[i].data[d].partner === parseInt(userProfile.partner)) {\n                    options.push({\n                      \"value\": eData[i].data[d].id,\n                      \"label\": eData[i].data[d].label,\n                      \"name\": eData[i].name\n                    });\n                  }\n                }\n              } else {\n                for (let d = 0; d < eData[i].data.length; d++) {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  });\n                }\n              }\n\n              console.log(\"Clear ACC\", options);\n            }\n          } else {\n            for (let d = 0; d < eData[i].data.length; d++) {\n              options.push({\n                \"value\": eData[i].data[d].id,\n                \"label\": eData[i].data[d].label,\n                \"name\": eData[i].name\n              });\n            }\n          }\n\n          newEnumOptions[eData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      console.log(\"EN OPTS\", newEnumOptions);\n      setEnumOptions(newEnumOptions);\n    }\n\n    if (gridForm !== null) {\n      let newFields = {};\n\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show;\n        }\n      }\n\n      setGridFieldValue(newFields);\n    } // setUpdateState(getUUID())\n\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded);\n    }\n  }); // CancelInstruction MODAL\n\n  const handleOpenModalCancelInstruction = () => {\n    setShowModalCancelInstruction(true);\n  };\n\n  const handleCloseModalCancelInstruction = () => {\n    setShowModalCancelInstruction(false);\n  };\n\n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true);\n  };\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded);\n  }\n\n  function getInstructionTypeName(id) {\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionTypesNames\") {\n        for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n          if (props.userTask.enumData[i].data[d].id === id) {\n            return props.userTask.enumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  } // filter accounts that can be selected by instruction type\n\n\n  function checkForPushing(label, instructionTypeId) {\n    // console.log(\"CHK\", label, instructionTypeId)\n    let checkResult = {\n      enableToPush: false // allowedAccountCode: null\n\n    };\n\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionAccountRelations\") {\n        // 1) Push accounts related to Instruction type\n        let relations = props.userTask.enumData[i].data;\n\n        for (let d = 0; d < relations.length; d++) {\n          if (relations[d].id === instructionTypeId) {\n            // find allowed account types\n            let splitedAccountName = relations[d].label.split(\"-\");\n            let allowedAccountCode = splitedAccountName[1];\n            let splitedAccountLabel = label.split(\"-\");\n            let accCode = splitedAccountLabel[1];\n            let accPartner = splitedAccountLabel[2]; // console.log(allowedAccountCode, accCode)\n\n            if (accCode === allowedAccountCode) {\n              // if (userProfile.userRole === \"2\" || userProfile.userRole === \"3\" || userProfile.userRole === \"4\" || userProfile.userRole === \"8\") {\n              // Operator, Broker, Registrar, CorrDepo\n              if (userProfile.userRole === \"1\" || userProfile.userRole === \"5\" || userProfile.userRole === \"7\") {\n                // Admin, Accountant, CD\n                // console.log(\"ALOLOWED All\", accCode)\n                checkResult.enableToPush = true; // checkResult[\"allowedAccountCode\"] = allowedAccountCode\n\n                break;\n              } else {\n                // Other users\n                if (accPartner === userProfile.partner) {\n                  // Depositor, Registrar, corrDepo, GIK, ...\n                  // console.log(\"ALOLOWED\", accCode, accPartner, userProfile.partner)\n                  checkResult.enableToPush = true; // checkResult[\"allowedAccountCode\"] = allowedAccountCode\n\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return checkResult;\n  } // RuToken functions\n\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  }\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\")\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  }); // catch errors while signing docs\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  } // Sign transfer order with rutoken\n\n\n  function sign(commandJson) {\n    try {\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices().then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0]);\n          } else {\n            alert(\"Рутокен не обнаружен\");\n          }\n        }) // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice;\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n        }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve();\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin);\n          }\n        }) // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n        }).then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0];\n            return plugin.parseCertificate(rutokenHandle, certs[0]);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs; // console.log(\"RUTDATA\", certData)\n\n          let tokenRemainingTime = new Date(certData.validNotAfter).getTime() - Date.now();\n\n          if (tokenRemainingTime > 0) {\n            if (certHandle.length > 0) {\n              var options = {};\n              let inn = \"\";\n              let fullName = \"\";\n\n              for (let i = 0; i < certData.subject.length; i++) {\n                if (certData.subject[i].rdn === \"serialNumber\") {\n                  inn = certData.subject[i].value;\n                }\n\n                if (certData.subject[i].rdn === \"commonName\") {\n                  fullName = certData.subject[i].value;\n                }\n              }\n\n              props.setEsInn(inn);\n              props.setEsUserFullName(fullName);\n              props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n              let instructionToSign = commandJson.variables.document.value;\n\n              if (selectedDoc.filled === undefined || selectedDoc.filled === null || selectedDoc.filled === false) {\n                // Depositor\n                instructionToSign[\"filled\"] = true;\n                instructionToSign[\"filled_at\"] = props.getCurrentFullDateTime();\n                instructionToSign[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n                instructionToSign[\"signed_depositor_inn\"] = inn;\n                instructionToSign[\"signed_depositor_full_name\"] = fullName;\n                instructionToSign[\"signed_at_depositor\"] = props.getCurrentFullDateTime();\n                commandJson.variables.status.value = \"filled\";\n              } else {\n                // Depository\n                instructionToSign[\"onExecution\"] = true;\n                instructionToSign[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n                instructionToSign[\"signed_cd_inn\"] = inn;\n                instructionToSign[\"signed_cd_full_name\"] = fullName;\n                instructionToSign[\"signed_at_cd\"] = props.getCurrentFullDateTime();\n                commandJson.variables.status.value = \"onExecution\";\n              }\n\n              commandJson.variables.document.value = JSON.stringify(instructionToSign);\n              console.log(\"SIGN\", instructionToSign, commandJson.variables.document);\n              handleCloseModalEnterPin(); // swAllert(\"Поручение успешно подписано!\", \"success\")\n\n              props.sendFieldValues(commandJson);\n              props.clearTabData(commandJson.process_id);\n              return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\");\n            }\n          } else {\n            plugin.logout(rutokenHandle);\n            props.callErrorToast(\"Рутокен просрочен\", \"warning\");\n          }\n        }) // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle);\n        }, handleError);\n      } else {\n        props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n      }\n    } catch (er) {\n      console.log(\"Rutoken ERR\");\n    }\n  } // Input handlers\n\n\n  const handleCheckboxChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    }); // console.log(\"Check change\", event.target.checked)\n  }; // Radio group handler\n\n\n  const handleRadioGroupChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue); // console.log(\"FIELDVALUE\", fieldValue)\n  } // Float input handler\n\n\n  const handleFloatChange = event => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  }; // Integer input handler\n\n\n  const handleIntChange = event => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    });\n  }; // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n\n\n  function handleDateTimeChange(event) {\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    // setFieldValue(fieldValue)\n    fieldValue[event.target.name] = moment(event.target.value).format(\"YYYY-MM-DDTHH:mm:ss\");\n    setFieldValue(fieldValue);\n    console.log(\"DATE CHANGE\", fieldValue[event.target.name], event.target.value);\n  } // Handler of select copmponet changes\n\n\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value;\n    console.log(\"OPT\", option.name, option.value);\n    var updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        noSuchOption = false;\n        setSelectedOptions(updateSelectedOptions);\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    if (option.name === \"depositor\") {\n      let newOptions = [];\n      let depositorPartner = getDepositorPartner(option.value); // find depositor partner id\n\n      if (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\") {\n        // Первый депонент выбран нужно отфильтровать поле \"Со счета\" и отобразить счета только выбранного депонента\n        // console.log(\"PARTNER\", depositorPartner)\n        for (let i = 0; i < enumData.length; i++) {\n          if (enumData[i].name === \"accFrom\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"]);\n              console.log(\"PUSH?\", enumData[i].data[d].label, fieldValue[\"type\"]);\n\n              if (checkResult.enableToPush === true) {\n                if (enumData[i].data[d].partner === depositorPartner) {\n                  // compare depositor partner and account partner\n                  newOptions.push({\n                    \"value\": enumData[i].data[d].id,\n                    \"label\": enumData[i].data[d].label,\n                    \"name\": enumData[i].name\n                  });\n                }\n              }\n            }\n          }\n        }\n\n        console.log(\"NEW ENUMS\", newOptions);\n        enumOptions[\"accFrom\"] = newOptions;\n        setEnumOptions(enumOptions);\n      } else if (taskType === \"showInstructionsSearchForm\") {\n        // депонент выбран нужно отфильтровать поле \"Счет\" и отобразить счета только выбранного депонента\n        // console.log(\"PARTNER\", depositorPartner)\n        for (let i = 0; i < enumData.length; i++) {\n          if (enumData[i].name === \"account\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].partner === depositorPartner) {\n                // compare depositor partner and account partner\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\": enumData[i].name\n                });\n              }\n            }\n          }\n        }\n\n        enumOptions[\"account\"] = newOptions;\n        setEnumOptions(enumOptions);\n      }\n    } else if (option.name === \"depositor2\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // Второй депонент выбран нужно отфильтровать поле \"На счет\" и отобразить счета только выбранного депонента\n      let newOptions = [];\n      let depositorPartner = getDepositorPartner(option.value); // find depositor partner id\n      // console.log(\"PARTNER\", depositorPartner)\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"accTo\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].partner === depositorPartner) {\n              // compare depositor partner and account partner\n              let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"]); // console.log(\"PUSH\", enumData[i].data[d].label)\n\n              if (checkResult.enableToPush === true) {\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\": enumData[i].name\n                });\n              }\n            }\n          }\n        }\n      } // console.log(\"NEW ENUMS\", newOptions)\n\n\n      enumOptions[\"accTo\"] = newOptions;\n      setEnumOptions(enumOptions);\n    } else if (option.name === \"security\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // выбрана ценная бумага нужно найти эмитента и отобразить\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"security\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].id === option.value) {\n              let issuerId = enumData[i].data[d].issuer;\n              fieldValue[\"issuer\"] = issuerId;\n\n              for (let j = 0; j < enumData.length; j++) {\n                if (enumData[j].name === \"issuer\") {\n                  // console.log(\"issuerID\", issuerId)\n                  for (let h = 0; h < enumData[j].data.length; h++) {\n                    if (enumData[j].data[h].id === issuerId) {\n                      let issuerOption = {\n                        value: issuerId,\n                        name: \"issuer\",\n                        label: enumData[j].data[h].label\n                      };\n                      console.log(\"issuerOption\", issuerOption);\n                      let noIssuerOption = true;\n\n                      for (let y = 0; y < updateSelectedOptions.length; y++) {\n                        if (updateSelectedOptions[y].name === \"issuer\") {\n                          updateSelectedOptions[y] = issuerOption;\n                          noIssuerOption = false;\n                          setSelectedOptions(updateSelectedOptions);\n                          break;\n                        } else {\n                          noIssuerOption = true;\n                        }\n                      }\n\n                      if (noIssuerOption === true) {\n                        updateSelectedOptions.push(issuerOption);\n                        setSelectedOptions(updateSelectedOptions); // console.log(\"NO Issuer\", updateSelectedOptions)\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      } // console.log(\"NEW ENUMS\", newOptions)\n      // enumOptions[\"issuer\"] = newOptions\n      // setEnumOptions(enumOptions)\n\n    }\n\n    setFieldValue(fieldValue);\n  }\n\n  function getDepositorPartner(depId) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"depositor\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === depId) {\n            return enumData[i].data[d].partner;\n          }\n        }\n      }\n    }\n  } // Returns random id\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Collecting all field values and return as attributes\n\n\n  function getFieldValuesCreateDocument() {\n    let fields = {};\n\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\") {\n        fields[key] = fieldValue[key];\n      }\n    }\n\n    return fields;\n  }\n\n  function getFieldValuesSaveInstruction() {\n    let fields = {};\n\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\" && key !== \"id\") {\n        fields[key] = fieldValue[key];\n      }\n    }\n\n    fields.filled = false;\n    fields.onExecution = false;\n    fields.executed = false;\n    fields.canceled = false;\n    fields.opened = false;\n    fields.signed = false;\n    fields.created_user_partner = getCreatedPartner();\n    return fields;\n  }\n\n  function getCreatedPartner() {\n    let partner = parseInt(userProfile.partner);\n\n    if (userProfile.userRole === \"3\") {\n      // Depositor\n      partner = parseInt(userProfile.partner);\n    } else {\n      let editDepositor = null;\n      let editDepositor2 = null;\n      let editAccFrom = null;\n      let editAccTo = null; // 1 step check wheter both fields are allowed for input\n\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let ed = Form.sections[s].contents[c].edit;\n          let sh = Form.sections[s].contents[c].show;\n\n          if (Form.sections[s].contents[c].name === \"depositor\") {\n            editDepositor = ed === true && sh === true ? true : false;\n          }\n\n          if (Form.sections[s].contents[c].name === \"accFrom\") {\n            // if account from is allowed for input depositor is sender\n            editAccFrom = ed === true && sh === true ? true : false;\n          }\n\n          if (Form.sections[s].contents[c].name === \"depositor2\") {\n            editDepositor2 = ed === true && sh === true ? true : false;\n          }\n\n          if (Form.sections[s].contents[c].name === \"accTo\") {\n            // if account to is allowed for input depositor is recipient\n            editAccTo = ed === true && sh === true ? true : false;\n          }\n        }\n      }\n\n      console.log(editDepositor, editAccFrom, editDepositor2, editAccTo); // 1 Variant Depositor is sender\n\n      if (editDepositor === true && editAccFrom === true) {\n        partner = getDepositorPartnerId(fieldValue.depositor);\n        console.log(\"SENDER P\", partner);\n      } // 2 Depositor is recipient\n\n\n      if (editDepositor2 === true && editAccTo === true) {\n        partner = getDepositorPartnerId(fieldValue.depositor2);\n        console.log(\"RECIPIENT P\", partner);\n      }\n    }\n\n    return partner;\n  }\n\n  function getDepositorPartnerId(id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"depositor\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].partner;\n          }\n        }\n      }\n    }\n  } // Collect data to update doc\n\n\n  function getFieldValuesUpdateInstruction() {\n    let docToUpdate = selectedDoc; // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false;\n        } else {\n          docToUpdate[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToUpdate;\n  }\n\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false;\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n            return checkedSuccessfuly;\n          } else {\n            checkedSuccessfuly = true;\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Main button click handler\n\n\n  function buttonClick(buttonName, dataItem) {\n    // console.log(\"Button\", buttonName)\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true);\n      } else {\n        filterDocList(0, size - 1, initialDocList, fieldValue);\n      }\n    } else if (buttonName === \"createDocument\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        const createDocument = getFieldValuesCreateDocument();\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"createDocument\"\n            },\n            selectedDoc: {\n              value: JSON.stringify(createDocument)\n            },\n            searchDoc: {\n              value: JSON.stringify(fieldValue)\n            },\n            userId: {\n              value: userProfile.userId\n            },\n            userRole: {\n              value: userProfile.userRole\n            }\n          }\n        };\n        console.log(\"button createDocument: \", commandJson);\n        let checkResult = checkForRequieredFields();\n\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } // else if(buttonName === \"selectSample\"){\n    //   if(props.operDayIsOpened === false){\n    //     swal({\n    //       text: \"Операционный день закрыт вы не можете создавать поручения!\",\n    //       icon: \"warning\",\n    //       buttons: {ok: \"Ок\"}\n    //     })\n    //   }\n    //   else{\n    //     const commandJson = \n    //     {\n    //       commandType: \"completeTask\",\n    //       session_id: session_id,\n    //       process_id: process_id,\n    //       taskID: taskID,\n    //       variables: {\n    //         userAction: {value: \"selectSample\"},\n    //         searchDoc: {value: JSON.stringify(fieldValue)}\n    //       }\n    //     }\n    //     console.log(\"button selectSample: \", commandJson)\n    //     props.sendFieldValues(commandJson)\n    //     props.clearTabData(process_id)\n    //   }\n    // }\n    else if (buttonName === \"selectInstruction\") {\n      let createFormDefId = null;\n      let report = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              createFormDefId = enumData[k].data[d].create_form;\n              report = enumData[k].data[d].reportName;\n            }\n          }\n        }\n      }\n\n      let copyFields = {};\n      copyFields.type = dataItem.type;\n      copyFields.urgent = dataItem.urgent;\n      copyFields.depositor = dataItem.depositor;\n      copyFields.accFrom = dataItem.accFrom;\n      copyFields.depositor2 = dataItem.depositor2;\n      copyFields.accTo = dataItem.accTo;\n      copyFields.issuer = dataItem.issuer;\n      copyFields.security = dataItem.security;\n      copyFields.currency = dataItem.currency;\n      copyFields.quantity = dataItem.quantity;\n      copyFields.basis = dataItem.basis;\n      copyFields.ownerName = dataItem.ownerName;\n      copyFields.ownerDocument = dataItem.ownerDocument;\n      copyFields.ownerAddress = dataItem.ownerAddress;\n      copyFields.additional_information = dataItem.additional_information;\n      copyFields.payment_account = dataItem.payment_account;\n      copyFields.payment_bank = dataItem.payment_bank;\n      copyFields.payment_bik = dataItem.payment_bik;\n      copyFields.payment_purpose = dataItem.payment_purpose;\n      copyFields.payment_recipient = dataItem.payment_recipient;\n      copyFields.tradingSystem = dataItem.tradingSystem; // for(let s=0; s<Form.sections.length; s++){\n      //   for(let c=0; c<Form.sections[s].contents.length; c++){\n      //     let fieldName = Form.sections[s].contents[c].name\n      //     if(Form.sections[s].contents[c].show === true){\n      //       copyFields[fieldName] = dataItem[fieldName]\n      //     }\n      //   }\n      // }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"createInstruction\"\n          },\n          selectedDoc: {\n            value: JSON.stringify(copyFields)\n          },\n          instructionType: {\n            value: fieldValue[\"type\"]\n          },\n          createFormDefId: {\n            value: createFormDefId\n          },\n          reportName: {\n            value: report\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button selectInstruction: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"editDocument\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"editDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          }\n        }\n      };\n      console.log(\"button editDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocument\") {\n      const updateDocument = getFieldValuesUpdateInstruction();\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateDocument)\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          }\n        }\n      };\n      console.log(\"button updateDocument: \", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        let createFormDefId = null;\n        let report = null;\n\n        for (let k = 0; k < enumData.length; k++) {\n          if (enumData[k].name === \"type\") {\n            for (let d = 0; d < enumData[k].data.length; d++) {\n              if (fieldValue[\"type\"] === enumData[k].data[d].id) {\n                createFormDefId = enumData[k].data[d].create_form;\n                report = enumData[k].data[d].reportName;\n              }\n            }\n          }\n        }\n\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"createInstruction\"\n            },\n            userId: {\n              value: userProfile.userId\n            },\n            userRole: {\n              value: userProfile.userRole\n            },\n            selectedDoc: {\n              value: JSON.stringify({\n                type: fieldValue[\"type\"]\n              })\n            },\n            instructionType: {\n              value: fieldValue[\"type\"]\n            },\n            createFormDefId: {\n              value: createFormDefId\n            },\n            reportName: {\n              value: report\n            }\n          }\n        };\n        console.log(\"button createInstruction: \", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"saveInstruction\") {\n      const createDocument = getFieldValuesSaveInstruction();\n      let notBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getNotificationsCount\"\n          }\n        }\n      };\n      let showTransferOrder = true;\n      let transferOrder = {\n        instruction_id: \"null\",\n        registered_person: fieldValue[\"ownerName\"],\n        address: fieldValue[\"ownerAddress\"],\n        security: fieldValue[\"security\"],\n        issuer: fieldValue[\"issuer\"],\n        quantity_int: fieldValue[\"quantity\"],\n        basis: fieldValue[\"basis\"]\n      };\n\n      for (let t = 0; t < enumData.length; t++) {\n        // if (enumData[t].name === \"issuer\") {\n        //   for (let dt = 0; dt < enumData[t].data.length; dt++) {\n        //     if (fieldValue[\"issuer\"] === enumData[t].data[dt].id) {\n        //       transferOrder[\"registrar\"] = enumData[t].data[dt].registrar\n        //     }\n        //   }\n        // }\n        if (enumData[t].name === \"security\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"security\"] === enumData[t].data[dt].id) {\n              transferOrder[\"security_type\"] = enumData[t].data[dt].security_type;\n              transferOrder[\"registrar\"] = enumData[t].data[dt].registrar;\n            }\n          }\n        }\n\n        if (enumData[t].name === \"type\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"type\"] === enumData[t].data[dt].id) {\n              showTransferOrder = enumData[t].data[dt].transfer_order;\n            }\n          }\n        }\n      }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"saveInstruction\"\n          },\n          saveBody: {\n            value: JSON.stringify(createDocument)\n          },\n          selectedDoc: {\n            value: JSON.stringify(createDocument)\n          },\n          notificationsBody: {\n            value: JSON.stringify(notBody)\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          // reportName: {value: reportName},\n          showTransferOrder: {\n            value: showTransferOrder\n          },\n          transferOrder: {\n            value: JSON.stringify(transferOrder)\n          }\n        }\n      };\n\n      if (fieldValue[\"urgent\"] === true) {\n        swal({\n          text: \"ВНИМАНИЕ поручения со статусом \\\"СРОЧНОЕ\\\" будет тарифицироваться в соответствии с тарифами ЦД на срочные поручения, хотите продолжить?\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\",\n            cancel: \"Отмена\"\n          } // dangerMode: true,\n\n        }).then(click => {\n          if (click === \"ok\") {\n            let checkResult = checkForRequieredFields();\n\n            if (checkResult === true) {\n              props.sendFieldValues(commandJson);\n              props.clearTabData(process_id);\n            }\n          }\n        });\n      } else {\n        let checkResult = checkForRequieredFields(); // console.log(\"PASSED\", checkResult)\n\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n\n      console.log(\"button saveInstruction: \", commandJson);\n    } else if (buttonName === \"viewInstruction\") {\n      let currentStatus = \"saved\";\n      let notBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getNotificationsCount\"\n          }\n        }\n      };\n\n      if (dataItem.filled === true) {\n        currentStatus = \"filled\";\n\n        if (dataItem.onExecution === true) {\n          currentStatus = \"onExecution\";\n\n          if (dataItem.executed === true) {\n            currentStatus = \"executed\";\n          } else {\n            if (dataItem.canceled === true) {\n              currentStatus = \"canceled\";\n            }\n          }\n        } else {\n          if (dataItem.canceled === true) {\n            currentStatus = \"canceled\";\n          }\n        }\n      }\n\n      let editFormDefId = null;\n      let report = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              editFormDefId = enumData[k].data[d].edit_form;\n              report = enumData[k].data[d].reportName;\n            }\n          }\n        }\n      }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          notificationsBody: {\n            value: JSON.stringify(notBody)\n          },\n          userAction: {\n            value: \"viewInstruction\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          docId: {\n            value: dataItem.id\n          },\n          instructionType: {\n            value: dataItem.type\n          },\n          status: {\n            value: currentStatus\n          },\n          editFormDefId: {\n            value: editFormDefId\n          },\n          reportName: {\n            value: report\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button viewInstruction: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"sendToCD\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin();\n        } else {\n          let updateDocument = getFieldValuesUpdateInstruction();\n          updateDocument[\"filled\"] = true;\n          updateDocument[\"filled_at\"] = props.getCurrentFullDateTime();\n          updateDocument[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n          updateDocument[\"signed_depositor_inn\"] = props.esInn;\n          updateDocument[\"signed_depositor_full_name\"] = props.esUserFullName;\n          updateDocument[\"signed_at_depositor\"] = props.getCurrentFullDateTime();\n          const commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"updateDocument\"\n              },\n              userId: {\n                value: userProfile.userId\n              },\n              userRole: {\n                value: userProfile.userRole\n              },\n              document: {\n                value: JSON.stringify(updateDocument)\n              },\n              status: {\n                value: \"filled\"\n              }\n            }\n          }; // console.log(buttonName, commandJson)\n\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } else if (buttonName === \"sendToCDWithoutES\") {\n      const updateDocument = getFieldValuesUpdateInstruction();\n      updateDocument.filled = true;\n      updateDocument.filledUser = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n      updateDocument.signed_at_depositor = props.getCurrentFullDateTime();\n      updateDocument.filled_at = props.getCurrentFullDateTime();\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          document: {\n            value: JSON.stringify(updateDocument)\n          },\n          status: {\n            value: \"filled\"\n          }\n        }\n      };\n      console.log(\"button sendToCDWithoutES: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"SignInstructionSaveButton\") {\n      const updateDocument = getFieldValuesUpdateInstruction();\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          document: {\n            value: updateDocument\n          },\n          status: {\n            value: \"\"\n          }\n        }\n      };\n      console.log(\"button signInstruction: \", commandJson);\n      sign(commandJson);\n    } else if (buttonName === \"deleteDocument\") {\n      let docToDelete = selectedDoc.id;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"deleteDocument\"\n          },\n          document: {\n            value: docToDelete.toString()\n          }\n        }\n      };\n      console.log(\"deleteDocument:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно удалить это поручение?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      });\n    } else if (buttonName === \"onExecution\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin();\n        } else {\n          let updateDocument = getFieldValuesUpdateInstruction();\n          updateDocument[\"onExecution\"] = true;\n          updateDocument[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n          updateDocument[\"onExecutionDate\"] = props.getCurrentFullDateTime();\n          updateDocument[\"signed_cd_inn\"] = props.esInn;\n          updateDocument[\"signed_cd_full_name\"] = props.esUserFullName;\n          updateDocument[\"signed_at_cd\"] = props.getCurrentFullDateTime();\n          const commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"updateDocument\"\n              },\n              userId: {\n                value: userProfile.userId\n              },\n              userRole: {\n                value: userProfile.userRole\n              },\n              document: {\n                value: JSON.stringify(updateDocument)\n              },\n              status: {\n                value: \"onExecution\"\n              }\n            }\n          };\n          console.log(\"onExecution:\", commandJson, updateDocument);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } else if (buttonName === \"Execute\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        const updateDocument = getFieldValuesUpdateInstruction();\n        updateDocument[\"executed\"] = true;\n        updateDocument[\"executedUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n        updateDocument[\"executedDate\"] = props.getCurrentFullDateTime();\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"updateDocument\"\n            },\n            userId: {\n              value: userProfile.userId\n            },\n            userRole: {\n              value: userProfile.userRole\n            },\n            document: {\n              value: JSON.stringify(updateDocument)\n            },\n            status: {\n              value: \"executed\"\n            }\n          }\n        };\n        console.log(\"button Execute: \", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"CancelInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        handleOpenModalCancelInstruction();\n      }\n    } else if (buttonName === \"CancelInstructionSaveButton\") {\n      handleCloseModalCancelInstruction();\n      const updateDocument = getFieldValuesUpdateInstruction();\n      updateDocument[\"canceled\"] = true;\n      updateDocument[\"canceledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n      updateDocument[\"cancelationReason\"] = fieldValue.cancelationReason;\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancelInstruction\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          selectedDoc: {\n            value: JSON.stringify(updateDocument)\n          },\n          documentsToCancel: {\n            value: JSON.stringify([{\n              id: selectedDoc.id\n            }])\n          },\n          cancelationReason: {\n            value: fieldValue.cancelationReason\n          },\n          status: {\n            value: \"canceled\"\n          }\n        }\n      };\n      console.log(\"button CancelInstructionSaveButton: \", commandJson, selectedDoc);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"CancelInstructionCancelButton\") {\n      handleCloseModalCancelInstruction();\n      fieldValue[\"cancelationReason\"] = null;\n      setFieldValue(fieldValue);\n      console.log(\"FIELDS\", fieldValue);\n    } else if (buttonName === \"uploadToXML\") {\n      // Create xml\n      let xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><InstructionsList xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><instructions>\";\n\n      for (let i = 0; i < filteredDocList.length; i++) {\n        xml += \"<instruction>\";\n\n        for (let prop in filteredDocList[i]) {\n          xml += \"<\" + prop + \">\";\n          xml += filteredDocList[i][prop];\n          xml += \"</\" + prop + \">\";\n        }\n\n        xml += \"</instruction>\";\n      }\n\n      xml += \"</instructions></InstructionsList>\";\n      let finalxml = xml.replace(/<\\/?[0-9]{1,}>/g, '').toString(); // Download xml\n\n      let pom = document.createElement('a');\n      let filename = \"UploadInstructions.xml\";\n      let bb = new Blob([finalxml], {\n        type: 'text/plain'\n      });\n      pom.setAttribute('href', window.URL.createObjectURL(bb));\n      pom.setAttribute('download', filename);\n      pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');\n      pom.draggable = true;\n      pom.classList.add('dragout');\n      pom.click();\n    } else if (buttonName === \"showInstructionReport\") {\n      let reportName = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (selectedDoc.type === enumData[k].data[d].id) {\n              let reportId = enumData[k].data[d].report;\n\n              for (let e = 0; e < enumData.length; e++) {\n                if (enumData[e].name === \"instructionReports\") {\n                  for (let t = 0; t < enumData[e].data.length; t++) {\n                    if (reportId === enumData[e].data[t].id) {\n                      reportName = enumData[e].data[t].reportName;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      let reportExecutions = {\n        \"reportUnitUri\": \"/reports/interactive/\" + reportName,\n        \"async\": true,\n        \"interactive\": true,\n        \"freshData\": false,\n        \"saveDataSnapshot\": false,\n        \"outputFormat\": \"pdf\",\n        // html xlsx pdf docx\n        \"parameters\": {\n          \"reportParameter\": [{\n            name: \"id\",\n            value: [selectedDoc.id.toString()]\n          }, {\n            name: \"first_n\",\n            value: [userProfile.firstName.trim()]\n          }, {\n            name: \"last_n\",\n            value: [userProfile.lastName.trim()]\n          }, {\n            name: \"middle_n\",\n            value: [userProfile.middleName.trim()]\n          }]\n        }\n      };\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"showInstructionReport\"\n          },\n          docId: {\n            value: selectedDoc.id.toString()\n          },\n          instructionType: {\n            value: selectedDoc.type\n          },\n          reportName: {\n            value: reportName\n          },\n          reportVars: {\n            value: \"?id=\" + selectedDoc.id + \"&first_n=\" + userProfile.firstName.trim() + \"&last_n=\" + userProfile.lastName.trim() + \"&middle_n=\" + userProfile.middleName.trim()\n          },\n          reportExecutions: {\n            value: JSON.stringify(reportExecutions)\n          }\n        }\n      };\n      console.log(\"button showInstructionReport: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"test\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"test\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"button: \", buttonName);\n    }\n  } // Returns Button component\n\n\n  function createButton(button, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      key: index,\n      onClick: () => buttonClick(button.name),\n      style: {\n        margin: 3,\n        color: button.fontColor,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      value: button.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1833,\n        columnNumber: 7\n      }\n    }, button.label);\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section, index) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      key: index + \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1853,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1854,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1855,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1856,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1875,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1876,\n        columnNumber: 9\n      }\n    }, section.contents.map((contentItem, index) => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1879,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1880,\n        columnNumber: 15\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1886,\n        columnNumber: 15\n      }\n    }, contentBuilder(contentItem))))));\n  } // Create component by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleTextChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1902,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressDateTime,\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1915,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        value: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseFullDateTime(fieldValue[contentItem.name], \"T\") : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1931,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          // console.log(\"F SEL\", contentItem.name, fieldValue[contentItem.name])\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            // console.log(\"F SEL\", contentItem.name, fieldValue[contentItem.name])\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1968,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressInt,\n        name: contentItem.name // defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        // onBlur={handleIntChange}\n        // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleIntChange,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: IntegerFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1981,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Float\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressFloat,\n        name: contentItem.name // onBlur={handleFloatChange}\n        // value={fieldValue[contentItem.name]}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleFloatChange,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: FloatFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1997,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2012,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"RadioGroup\") {\n      let radioGroupItems = [];\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === contentItem.name) {\n          radioGroupItems = enumData[i].data;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(RadioGroup, {\n        name: contentItem.name,\n        value: fieldValue[contentItem.name],\n        onChange: handleRadioGroupChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2029,\n          columnNumber: 9\n        }\n      }, radioGroupItems.map(groupItem => {\n        return /*#__PURE__*/React.createElement(FormControlLabel, {\n          value: groupItem.id,\n          label: groupItem.label,\n          control: /*#__PURE__*/React.createElement(Radio, {\n            style: {\n              height: \"5px\",\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2039,\n              columnNumber: 26\n            }\n          }),\n          disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2036,\n            columnNumber: 15\n          }\n        });\n      }));\n    }\n  } // Key press handlers for some fields\n\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressDateTime(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressInt(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let int = parseInt(stringNum);\n          fieldValue[event.target.name] = int;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressFloat(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let float = parseFloat(stringNum);\n          fieldValue[event.target.name] = float;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"SignInstructionSaveButton\", null);\n    }\n  }\n\n  function onKeyPressModalCancelInstruction(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"CancelInstructionSaveButton\", null);\n    }\n  } // custom allerts\n\n\n  function swAlert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  }\n\n  function getGridFormEnumLabel(name, value) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (name === gridFormEnumData[i].name) {\n          for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n            if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n              return gridFormEnumData[i].data[l].label;\n            }\n          }\n        }\n      }\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(value, type, dataItem, name) {\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        return getGridFormEnumLabel(name, value);\n      }\n    } else if (type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2151,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        return props.parseFullDateTime(value, \" \"); // return moment(value).format('YYYY-MM-DD HH:MM')\n      }\n    } else if (type === \"Text\") {\n      if (name === \"instructionStatus\") {\n        return getInstructionStatus(dataItem);\n      } else {\n        if (value === null || value === \"\" || value === undefined) {\n          return \"-\";\n        } else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2175,\n              columnNumber: 19\n            }\n          }, value);\n        }\n      }\n    } else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newCur = props.currencyBeautifier(value);\n        return newCur;\n      }\n    } else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newInt = props.intBeautifier(value);\n        return newInt;\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2202,\n            columnNumber: 17\n          }\n        }, value);\n      }\n    }\n  }\n\n  function getInstructionStatus(dataItem) {\n    let status = \"\";\n\n    if (dataItem[\"filled\"] === true) {\n      status = \"Введено\";\n    }\n\n    if (dataItem[\"onExecution\"] === true) {\n      status = \"На исполнении\";\n    }\n\n    if (dataItem[\"executed\"] === true) {\n      status = \"Исполнено\";\n    }\n\n    if (dataItem[\"canceled\"] === true) {\n      status = \"Отменено\";\n    }\n\n    return status;\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  } // filter docList by filled parameters\n\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            // if(Data[i][key] !== null){\n            let contentType = getContentType(key);\n\n            if (contentType === \"Text\") {\n              if (Data[i][key] !== null) {\n                try {\n                  let searchField = fields[key].toLowerCase().trim();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else {\n                match = false;\n                break;\n              }\n            } else if (contentType === \"Int\" || contentType === \"Float\") {\n              if (Data[i][key] !== null) {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else {\n                match = false;\n                break;\n              }\n            } else if (contentType === \"Enum\") {\n              if (key === \"depositor\") {\n                // console.log(\"DEPOSITOR\", fields[key], Data[i][\"depositor2\"])\n                if (fields[key] === Data[i][key] || fields[key] === Data[i][\"depositor2\"]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (key === \"account\") {\n                if (fields[key] === Data[i][\"accFrom\"] || fields[key] === Data[i][\"accTo\"]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } else if (contentType === \"DateTime\") {\n              if (Data[i][key] !== null) {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else {\n                match = false;\n                break;\n              }\n            } else if (contentType === \"Bool\") {\n              if (key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\") {\n                let instrStatus = \"\";\n                let statusSelected = false;\n                let fieldStatus = \"\"; // Check fields\n\n                if (fields[\"filled\"] === true) {\n                  fieldStatus = \"filled\";\n                  statusSelected = true;\n                }\n\n                if (fields[\"onExecution\"] === true) {\n                  fieldStatus = \"onExecution\";\n                  statusSelected = true;\n                }\n\n                if (fields[\"executed\"] === true) {\n                  fieldStatus = \"executed\";\n                  statusSelected = true;\n                }\n\n                if (fields[\"canceled\"] === true) {\n                  fieldStatus = \"canceled\";\n                  statusSelected = true;\n                }\n\n                if (statusSelected === true) {\n                  // Check Instruction\n                  if (Data[i][\"filled\"] === true) {\n                    instrStatus = \"filled\";\n                  }\n\n                  if (Data[i][\"onExecution\"] === true) {\n                    instrStatus = \"onExecution\";\n                  }\n\n                  if (Data[i][\"executed\"] === true) {\n                    instrStatus = \"executed\";\n                  }\n\n                  if (Data[i][\"canceled\"] === true) {\n                    instrStatus = \"canceled\";\n                  } // Check whether statuses are equal\n\n\n                  if (fieldStatus === instrStatus) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else {\n                if (Data[i][key] === null || fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } // }\n            // else{\n            //   match = false\n            //   break\n            // }\n\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered docList by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList); // setUpdateState(getUUID())\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLastClick() {\n    if (page !== getPageAmount()) {\n      setPage(getPageAmount());\n      fetchBySize((getPageAmount() - 1) * size, filteredDocList.length, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на последней странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.floor(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  }\n\n  function getBackgroundColor(signed, urgent) {\n    if (signed !== undefined) {\n      if (signed === true) {\n        return \"white\";\n      } else {\n        if (urgent === true) {\n          return \"#EFB2B2\";\n        } else {\n          return \"#FCEAD3\";\n        }\n      }\n    } else return \"white\";\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1; // console.log(\"IT\", i, gridForm.sections[nextS])\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2558,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: isSearchForm === true ? 12 : 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2559,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2560,\n        columnNumber: 11\n      }\n    }, isSearchForm === false && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2562,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2563,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2564,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2565,\n        columnNumber: 21\n      }\n    }, Form.label)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2570,\n        columnNumber: 13\n      }\n    }, Form.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        return sectionBuilder(section, index);\n      }\n    })))));\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    // if (type === \"DateTime\" || type === \"Bool\") {\n    //   sortOrder = sortOrder * -1\n    // }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if (type === \"DateTime\") {\n      sortOrder = sortOrder * -1;\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\") {\n      if (property === \"instructionStatus\") {\n        return function (a, b) {\n          // console.log(\"A\", a)\n          let statusA = getInstructionStatus(a);\n          let statusB = getInstructionStatus(b);\n          var result = statusA < statusB ? -1 : statusA > statusB ? 1 : 0;\n          return result * sortOrder;\n        };\n      } else {\n        return function (a, b) {\n          var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n          return result * -1 * sortOrder;\n        };\n      }\n    } else if (type === \"Bool\" || type === \"BoolCustom\") {\n      sortOrder = sortOrder * -1;\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n        let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n        var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n        return result * sortOrder;\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type));\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function getSecType(id) {\n    let type = 1;\n\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"security\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === id) {\n              type = gridFormEnumData[i].data[d].type;\n            }\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"securityTypes\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === type) {\n              return gridFormEnumData[i].data[d].label;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function calculateColSpan(contents) {\n    let num = 0;\n\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1;\n      }\n    }\n\n    return num;\n  }\n\n  const handleContextMenu = event => {\n    if (userProfile.userRole === \"1\") {\n      event.preventDefault();\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null); // console.log(\"CLOSE\", fieldValue)\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name];\n      }\n    }\n\n    console.log(\"nForm\", gridForm);\n    setGridForm(gridForm);\n    setUpdateState(getUUID());\n  };\n\n  function createMenuItems() {\n    let columns = [];\n    columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2726,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: 5,\n        cursor: \"pointer\"\n      },\n      name: \"selectAll\",\n      onClick: () => handleTableCheckboxChange(\"selectAll\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2727,\n        columnNumber: 9\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2734,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: \"selectAll\",\n      onChange: handleGridCheckboxChange,\n      checked: gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2735,\n        columnNumber: 11\n      }\n    }))));\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name;\n        columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2748,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            paddingLeft: 5,\n            cursor: \"pointer\",\n            background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\"\n          },\n          name: name,\n          onClick: () => handleTableCheckboxChange(name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2749,\n            columnNumber: 13\n          }\n        }, gridForm.sections[s].contents[c].label), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2756,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          style: {\n            maxWidth: 20,\n            height: 15,\n            color: \"green\"\n          },\n          name: name,\n          onChange: handleGridCheckboxChange,\n          checked: gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2757,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n\n    return columns;\n  }\n\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId));\n  }\n\n  const handleGridCheckboxChange = event => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = {\n        [event.target.name]: event.target.checked\n      };\n\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name];\n      } // console.log(\"selectAll\", newFields)\n\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleTableCheckboxChange = name => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue\n      };\n\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name];\n      }\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [name]: !gridFieldValue[name]\n      });\n    }\n  };\n\n  function previewInstruction(instr) {\n    // console.log(\"SELECTED INSTR\", instr)\n    setSelectedInstruction(instr);\n  }\n\n  try {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2806,\n        columnNumber: 7\n      }\n    }, isSearchForm !== null && isSearchForm === true ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2810,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2811,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      expanded: accordionExpanded,\n      onChange: () => handleExpandAccordion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2812,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AccordionSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2814,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2813,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2816,\n        columnNumber: 19\n      }\n    }, Form.label)), /*#__PURE__*/React.createElement(AccordionDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2818,\n        columnNumber: 17\n      }\n    }, getForm())))) : getForm(), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2827,\n        columnNumber: 9\n      }\n    }, buttons.map((button, index) => {\n      return createButton(button, index);\n    }), taskType !== \"showInstructionsGIKSearchForm\" && taskType !== \"showInstructionsGIKViewForm\" && taskType !== \"showInstructionsGIKTypeSelectingForm\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      href: \"../\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D.docx\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      onClick: () => buttonClick(\"downloadES\"),\n      startIcon: /*#__PURE__*/React.createElement(DescriptionIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2847,\n          columnNumber: 28\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2834,\n        columnNumber: 15\n      }\n    }, \"\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F \\u042D\\u0426\\u041F\"), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://www.rutoken.ru/support/download/rutoken-plugin/\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2850,\n        columnNumber: 15\n      }\n    }, \"\\u041F\\u043B\\u0430\\u0433\\u0438\\u043D\"), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://www.rutoken.ru/support/download/windows/\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2866,\n        columnNumber: 15\n      }\n    }, \"\\u0414\\u0440\\u0430\\u0439\\u0432\\u0435\\u0440\"))), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n      style: {\n        paddingTop: 3,\n        cursor: \"pointer\"\n      },\n      onClick: () => buttonClick(\"updateDocList\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2886,\n        columnNumber: 11\n      }\n    }), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2890,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2891,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2892,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"500px\",\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2893,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      class: \"main-table-style\",\n      id: gridTableId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2894,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      style: {\n        position: \"sticky\",\n        top: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2895,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2897,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-first-child\",\n      colSpan: \"1\",\n      onContextMenu: ev => handleContextMenu(ev),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2898,\n        columnNumber: 25\n      }\n    }), gridForm.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        let lastSection = checkSectionOnLastChild(index);\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n          colSpan: calculateColSpan(section.contents),\n          onContextMenu: ev => handleContextMenu(ev),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2904,\n            columnNumber: 31\n          }\n        }, section.label);\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2916,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-style-2row\",\n      rowSpan: \"2\",\n      style: {\n        \"minWidth\": \"65px\"\n      },\n      onContextMenu: ev => handleContextMenu(ev),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2917,\n        columnNumber: 25\n      }\n    }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n      if (contentItem.show === true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: \"td-head-style-2row\",\n          rowSpan: \"2\",\n          onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n          onContextMenu: ev => handleContextMenu(ev),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2929,\n            columnNumber: 33\n          }\n        }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2935,\n            columnNumber: 117\n          }\n        }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2935,\n            columnNumber: 170\n          }\n        }) : \"\");\n      }\n    })))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2943,\n        columnNumber: 21\n      }\n    }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        \"height\": 30,\n        \"backgroundColor\": getBackgroundColor(dataItem.opened, dataItem.urgent),\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2946,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        \"width\": 34,\n        \"border-bottom\": \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2947,\n        columnNumber: 29\n      }\n    }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n      key: button.name,\n      name: button.name,\n      variant: \"outlined\",\n      value: button.name,\n      onClick: () => buttonClick(button.name, dataItem),\n      style: {\n        margin: 1,\n        height: 24,\n        fontSize: 10,\n        maxWidth: 32,\n        backgroundColor: button.backgroundColor,\n        borderColor: \"darkgreen\",\n        color: \"darkgreen\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2950,\n        columnNumber: 35\n      }\n    }, button.label))), gridForm.sections.map(section => {\n      return section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-body-style\",\n            style: {\n              color: selectedInstruction !== null ? selectedInstruction.id === dataItem.id ? \"blue\" : \"black\" : \"black\"\n            },\n            onClick: () => previewInstruction(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2974,\n              columnNumber: 39\n            }\n          }, getGridFormItems(dataItem[contentItem.name], contentItem.type, dataItem, contentItem.name));\n        }\n      });\n    })))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2988,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2989,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2990,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        background: \"#047535\",\n        color: \"white\",\n        height: 28\n      },\n      onClick: () => downloadExcel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2991,\n        columnNumber: 23\n      }\n    }, \"\\u0412 EXCEL\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2998,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: 90,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2999,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3001,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        minWidth: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3002,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(GridSelect, {\n      onChange: handleChangeRowsPerPage,\n      style: {\n        height: 25,\n        color: \"black\"\n      },\n      value: size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3006,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3011,\n        columnNumber: 27\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3012,\n        columnNumber: 27\n      }\n    }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3013,\n        columnNumber: 27\n      }\n    }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3014,\n        columnNumber: 27\n      }\n    }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3015,\n        columnNumber: 27\n      }\n    }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3016,\n        columnNumber: 27\n      }\n    }, \"500\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3017,\n        columnNumber: 27\n      }\n    }, \"1000\")))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3021,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3022,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowFirstClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3023,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3024,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3028,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3029,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLeftClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3030,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3031,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: \"black\",\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3035,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        maxWidth: 25\n      },\n      value: page,\n      onChange: handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3036,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3038,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3039,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => GoToPage(),\n      variant: \"outlined\",\n      style: {\n        height: 22,\n        backgroundColor: \"#D1D6D6\",\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3040,\n        columnNumber: 25\n      }\n    }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3052,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3053,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowRightClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3054,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3055,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3059,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3060,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLastClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3061,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(LastPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3062,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"pagination-rows-amount-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3066,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount()), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3067,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: 90,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3068,\n        columnNumber: 23\n      }\n    }, \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList !== null ? filteredDocList.length : 0))))), selectedInstruction !== null && /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3074,\n        columnNumber: 17\n      }\n    }, selectedInstruction.depositor !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3076,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3077,\n        columnNumber: 23\n      }\n    }, \"\\u0414\\u0435\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442(\\u0421\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430):\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3078,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"depositor\", selectedInstruction.depositor))), selectedInstruction.accFrom !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3082,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3083,\n        columnNumber: 23\n      }\n    }, \"\\u0421\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3084,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"accFrom\", selectedInstruction.accFrom))), selectedInstruction.depositor2 !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3088,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3089,\n        columnNumber: 23\n      }\n    }, \"\\u0414\\u0435\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442(\\u041D\\u0430 \\u0441\\u0447\\u0451\\u0442):\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3090,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"depositor2\", selectedInstruction.depositor2))), selectedInstruction.accTo !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3094,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3095,\n        columnNumber: 23\n      }\n    }, \"\\u041D\\u0430 \\u0441\\u0447\\u0451\\u0442:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3096,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"accTo\", selectedInstruction.accTo))), selectedInstruction.security !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3101,\n        columnNumber: 23\n      }\n    }, \"\\u0426\\u0435\\u043D\\u043D\\u0430\\u044F \\u0431\\u0443\\u043C\\u0430\\u0433\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3102,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"security\", selectedInstruction.security) + \" \" + getSecType(selectedInstruction.security))), selectedInstruction.currency !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3108,\n        columnNumber: 23\n      }\n    }, \"\\u0412\\u0430\\u043B\\u044E\\u0442\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3109,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"currency\", selectedInstruction.currency))), selectedInstruction.security !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3115,\n        columnNumber: 23\n      }\n    }, \"\\u042D\\u043C\\u0438\\u0442\\u0435\\u043D\\u0442:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3116,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"issuer\", selectedInstruction.issuer))), selectedInstruction.tradingSystem !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3121,\n        columnNumber: 23\n      }\n    }, \"\\u0422\\u043E\\u0440\\u0433\\u043E\\u0432\\u0430\\u044F \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3122,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"tradingSystem\", selectedInstruction.tradingSystem))), selectedInstruction.corrDepository !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3127,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u0440\\u0440. \\u0434\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u0430\\u0440\\u0438\\u0439:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3128,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"corrDepository\", selectedInstruction.corrDepository))), (selectedInstruction.ownerName !== null || selectedInstruction.ownerDocument !== null || selectedInstruction.ownerAddress !== null) && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3133,\n        columnNumber: 23\n      }\n    }, \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u0432\\u043B\\u0430\\u0434\\u0435\\u043B\\u044C\\u0446\\u0435:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3134,\n        columnNumber: 23\n      }\n    }, selectedInstruction.ownerName + \" \" + selectedInstruction.ownerDocument + \" \" + selectedInstruction.ownerAddress)), selectedInstruction.quantity !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3139,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3140,\n        columnNumber: 23\n      }\n    }, selectedInstruction.quantity)), selectedInstruction.basis !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3145,\n        columnNumber: 23\n      }\n    }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3146,\n        columnNumber: 23\n      }\n    }, selectedInstruction.basis))), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: anchorEl,\n      open: openMenu,\n      onClose: handleCloseMenu,\n      MenuListProps: {\n        'aria-labelledby': 'basic-button'\n      },\n      style: {\n        paddingLeft: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3151,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3160,\n        columnNumber: 17\n      }\n    }, createMenuItems())))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: showSnackBar,\n      onClose: () => handleCloseSnackBar(),\n      autoHideDuration: 1200,\n      message: snackBarMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3167,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalCancelInstruction,\n      onClose: handleCloseModalCancelInstruction,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3179,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3180,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0443 \\u043E\\u0442\\u043C\\u0435\\u043D\\u044B\"), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      multiline: true,\n      autoFocus: true,\n      name: \"cancelationReason\",\n      defaultValue: fieldValue[\"cancelationReason\"] >= 0 ? fieldValue[\"cancelationReason\"] : \"\",\n      onChange: handleTextChange,\n      onKeyPress: onKeyPressModalCancelInstruction,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3181,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"CancelInstructionSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3191,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"CancelInstructionCancelButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3203,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalEnterPin,\n      onClose: handleCloseModalEnterPin,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3224,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"100%\"\n      },\n      error: wrongPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3226,\n        columnNumber: 15\n      }\n    }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n      type: showPin ? 'text' : 'password',\n      defaultValue: rutokenPin,\n      onChange: handlePinChange,\n      onKeyPress: onKeyPressModalEnterPin,\n      autoFocus: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3234,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPin,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3235,\n          columnNumber: 21\n        }\n      }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3240,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3240,\n          columnNumber: 51\n        }\n      }))),\n      labelWidth: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3227,\n        columnNumber: 15\n      }\n    })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3247,\n        columnNumber: 35\n      }\n    }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"SignInstructionSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3248,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleCloseModalEnterPin,\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3260,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3281,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3282,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3283,\n        columnNumber: 11\n      }\n    })));\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Select","NumberFormat","PropTypes","Grid","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Menu","Snackbar","LinearProgress","MenuItem","Paper","Radio","RadioGroup","Tooltip","IconButton","Modal","makeStyles","GridSelect","FormControl","FormControlLabel","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","ArrowForwardIosIcon","ArrowBackIosIcon","FirstPageIcon","LastPageIcon","DescriptionIcon","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","ArrowUpwardRoundedIcon","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","swal","hotkeys","rutoken","tableToExcel","plugin","rutokenHandle","certHandle","certData","cmsData","moment","require","FloatFormat","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","IntegerFormat","getModalStyle","top","left","transform","useStyles","theme","modal","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","classes","userProfile","process_id","userTask","session_id","taskID","taskType","enumData","gridFormEnumData","enumOptions","setEnumOptions","Form","setForm","gridForm","setGridForm","selectedDoc","setSelectedDoc","fieldValue","setFieldValue","docId","buttons","gridFormButtons","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","page","setPage","size","setSize","selectedOptions","setSelectedOptions","sectionColor","snackBarMessage","setSnackBarMessage","showSnackBar","setShowSnackBar","modalStyle","showModalCancelInstruction","setShowModalCancelInstruction","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","updateState","setUpdateState","isSearchForm","setIsSearchForm","accordionExpanded","setAccordionExpanded","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","selectedInstruction","setSelectedInstruction","anchorEl","setAnchorEl","openMenu","Boolean","gridTableId","getUUID","gridFieldValue","setGridFieldValue","console","log","parsedData","JSON","parse","s","parseInt","p","er","callErrorToast","undefined","parsedSelectedDoc","fields","ed","userRole","newForm","editDepositor","editDepositor2","editAccFrom","editAccTo","sections","length","c","contents","edit","i","d","data","partner","depositorId","id","show","Object","keys","fieldName","eData","newEnumOptions","options","getInstructionTypeName","push","label","instructionTypeId","type","filteredRelations","checkResult","checkForPushing","enableToPush","getLostEnumName","newFields","enumI","event","handler","key","handleOpenModalCancelInstruction","handleCloseModalCancelInstruction","handleOpenModalEnterPin","handleCloseModalEnterPin","handleExpandAccordion","relations","splitedAccountName","split","allowedAccountCode","splitedAccountLabel","accCode","accPartner","handlePinChange","handleClickShowPin","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","handleError","reason","isNaN","message","errorCodes","PIN_INCORRECT","sign","commandJson","enumerateDevices","devices","alert","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","tokenRemainingTime","Date","validNotAfter","getTime","now","inn","fullName","subject","rdn","setEsInn","setEsUserFullName","setEsExpiredDate","substring","instructionToSign","variables","document","filled","getCurrentFullDateTime","firstName","lastName","middleName","status","stringify","sendFieldValues","clearTabData","DATA_FORMAT_PLAIN","logout","handleCheckboxChange","checked","handleRadioGroupChange","handleTextChange","handleFloatChange","handleIntChange","stringNum","toString","replace","int","handleDateTimeChange","format","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","newOptions","depositorPartner","getDepositorPartner","issuerId","issuer","j","h","issuerOption","noIssuerOption","y","depId","uuidv1","getFieldValuesCreateDocument","getFieldValuesSaveInstruction","onExecution","executed","canceled","opened","signed","created_user_partner","getCreatedPartner","sh","getDepositorPartnerId","depositor","depositor2","getFieldValuesUpdateInstruction","docToUpdate","checkForRequieredFields","checkedSuccessfuly","required","swAllert","text","icon","ok","buttonClick","buttonName","dataItem","filterDocList","operDayIsOpened","createDocument","commandType","userAction","searchDoc","userId","createFormDefId","report","k","create_form","reportName","copyFields","urgent","accFrom","accTo","security","currency","quantity","basis","ownerName","ownerDocument","ownerAddress","additional_information","payment_account","payment_bank","payment_bik","payment_purpose","payment_recipient","tradingSystem","instructionType","updateDocument","notBody","user_session_id","showTransferOrder","transferOrder","instruction_id","registered_person","address","quantity_int","t","dt","security_type","registrar","transfer_order","saveBody","notificationsBody","cancel","click","currentStatus","editFormDefId","edit_form","esInn","esUserFullName","filledUser","signed_at_depositor","filled_at","docToDelete","yes","cancelationReason","documentsToCancel","xml","prop","finalxml","pom","createElement","filename","bb","Blob","setAttribute","URL","createObjectURL","dataset","downloadurl","download","href","join","draggable","classList","add","reportId","e","reportExecutions","trim","reportVars","createButton","button","index","margin","color","fontColor","height","fontSize","sectionBuilder","section","bodyBuilder","map","contentItem","contentBuilder","onKeyPressText","onKeyPressDateTime","parseDate","shrink","parseFullDateTime","selectedOption","body","menuPortal","base","zIndex","onKeyPressInt","inputComponent","onKeyPressFloat","maxWidth","radioGroupItems","groupItem","code","charCode","float","parseFloat","onKeyPressModalEnterPin","onKeyPressModalCancelInstruction","swAlert","getGridFormEnumLabel","l","getGridFormItems","getInstructionStatus","newCur","currencyBeautifier","newInt","intBeautifier","handleCloseSnackBar","getContentType","fetchFrom","fetchTo","Data","newDocList","match","contentType","searchField","toLowerCase","dataField","includeSearch","includes","instrStatus","statusSelected","fieldStatus","fetchBySize","KeyboardArrowFirstClick","KeyboardArrowLastClick","getPageAmount","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","pagesFloat","mathRoundOfPages","Math","floor","getBackgroundColor","checkToShowSection","showSection","checkSectionOnLastChild","lastSection","nextS","getForm","maxHeight","getEnumLabel","dynamicSort","property","sortOrder","a","b","dateA","timeInSecA","dateB","timeInSecB","statusA","statusB","labelA","labelB","sortDataByColumn","sortedDocList","sort","getSecType","calculateColSpan","num","handleContextMenu","preventDefault","currentTarget","handleCloseMenu","createMenuItems","columns","paddingLeft","cursor","handleTableCheckboxChange","handleGridCheckboxChange","downloadExcel","convert","getElementById","previewInstruction","instr","paddingTop","overflow","ev","marginBottom","borderColor","minWidth","corrDepository","error"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/Instructions/Instructions.jsx"],"sourcesContent":["// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\n// import MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Menu from '@mui/material/Menu';\n// import Input from '@material-ui/core/Input';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridSelect from '@material-ui/core/Select';\n// PIN components\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n// Icons\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// Accordion\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Import libraries\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\nimport hotkeys from 'hotkeys-js';\nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\nvar moment = require('moment');\n\nfunction FloatFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n}))\nexport default (props) => {\n  // This.state\n  const classes = useStyles()\n  const [userProfile] = useState(props.userProfile)\n  const [process_id] = useState(props.userTask.process_id)\n  const [session_id] = useState(props.userTask.session_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [taskType] = useState(props.userTask.taskType)\n  const [enumData] = useState(props.userTask.enumData)\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [fieldValue, setFieldValue] = useState({}) // opened: false\n  const [docId] = useState(props.userTask.docId)\n  const [buttons] = useState(props.userTask.buttons)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [modalStyle] = useState(getModalStyle)\n  const [showModalCancelInstruction, setShowModalCancelInstruction] = useState(false)\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n  const [updateState, setUpdateState] = useState(null)\n  const [isSearchForm, setIsSearchForm] = useState(null)\n  const [accordionExpanded, setAccordionExpanded] = useState(false)\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n  const [selectedInstruction, setSelectedInstruction] = useState(null)\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n  const [gridTableId] = useState(getUUID())\n  const [gridFieldValue, setGridFieldValue] = useState({})\n\n  // Initializing\n  useEffect(() => {\n    console.log(\"INSTR PROPS\", props)\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        setFilteredDocList(parsedData)\n        if (taskType !== \"showInstructionsTypeSelectingForm\" || taskType !== \"showInstructionsGIKTypeSelectingForm\") {\n          setIsSearchForm(true)\n        }\n        // setInitialDocList(parsedData)\n        // let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"))\n\n        // if (props.userTask.selectedDoc !== \"null\") {\n        //   filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc))\n        // }\n        // else { fetchBySize(0, s - 1, sortedDocList) }\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    else { setIsSearchForm(false) }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      let fields = { ...parsedSelectedDoc }\n      if (taskType === \"showInstructionsCreationForm\") { // Creater instruction\n        let ed = props.userTask.enumData\n        if (userProfile.userRole === \"3\") { //Depositor  || userProfile.userRole === \"4\" || userProfile.userRole === \"6\" || userProfile.userRole === \"8\" Registrar, GIK, CorrDepo\n          let newForm = Form\n          let editDepositor = null\n          let editDepositor2 = null\n          let editAccFrom = null\n          let editAccTo = null\n          // 1 step check wheter both fields are allowed for input\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              if (Form.sections[s].contents[c].name === \"depositor\") {\n                editDepositor = Form.sections[s].contents[c].edit\n              }\n              if (Form.sections[s].contents[c].name === \"accFrom\") { // if account from is allowed for input depositor is sender\n                editAccFrom = Form.sections[s].contents[c].edit\n              }\n              if (Form.sections[s].contents[c].name === \"depositor2\") {\n                editDepositor2 = Form.sections[s].contents[c].edit\n              }\n              if (Form.sections[s].contents[c].name === \"accTo\") { // if account to is allowed for input depositor is recipient\n                editAccTo = Form.sections[s].contents[c].edit\n              }\n            }\n          }\n          console.log(editDepositor, editAccFrom, editDepositor2, editAccTo)\n          // 2 step block field \"accTo\" for depositor who create the instruction\n          // 1 Variant both fields are allowed\n          if (editDepositor === true && editDepositor2 === true) {\n            console.log(\"2 Fields alowed\")\n            for (let s = 0; s < Form.sections.length; s++) {\n              for (let c = 0; c < Form.sections[s].contents.length; c++) {\n                // separate by allowed account From/To fields\n                if (Form.sections[s].contents[c].name === \"depositor\") {\n                  if ((editAccFrom === true && editAccTo === false) || (editAccFrom === true && editAccTo === true)) { // if depositor is SENDER\n                    newForm.sections[s].contents[c].edit = false // block field\n                    // find partner for cur depositor and insert it to field depositor don't allow him to choose another depositor\n                    // console.log(\"Block depositor\")\n                    for (let i = 0; i < ed.length; i++) {\n                      if (ed[i].name === \"depositor\") {\n                        for (let d = 0; d < ed[i].data.length; d++) {\n                          // console.log(\"Put depositor\", ed[i].data[d].id)\n                          if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                            let depositorId = ed[i].data[d].id\n                            fields[\"depositor\"] = depositorId // set field from profile\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                if (Form.sections[s].contents[c].name === \"accTo\") {\n                  if (editAccFrom === true && editAccTo === false) { // if depositor is SENDER\n                    newForm.sections[s].contents[c].edit = false  // block field\n                    newForm.sections[s].contents[c].show = false // hide field\n                    // console.log(\"Block AccTo\")\n                  }\n                }\n                if (Form.sections[s].contents[c].name === \"depositor2\") {\n                  if ((editAccFrom === false && editAccTo === true) || (editAccFrom === true && editAccTo === true)) { // if depositor is RECIPIENT\n                    newForm.sections[s].contents[c].edit = false // block field\n                    // find partner for cur depositor and insert it to field depositor2 don't allow him to choose another depositor\n                    // console.log(\"Block depositor2\")\n                    for (let i = 0; i < ed.length; i++) {\n                      if (ed[i].name === \"depositor2\") {\n                        for (let d = 0; d < ed[i].data.length; d++) {\n                          // console.log(\"Put depositor\", ed[i].data[d].id)\n                          if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                            let depositorId = ed[i].data[d].id\n                            fields[\"depositor2\"] = depositorId // set field from profile\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                if (Form.sections[s].contents[c].name === \"accFrom\") {\n                  if (editAccFrom === false && editAccTo === true) { // if depositor is RECIPIENT\n                    newForm.sections[s].contents[c].edit = false // block field\n                    newForm.sections[s].contents[c].show = false // hide field\n                    // console.log(\"Block AccFrom\")\n                  }\n                }\n              }\n            }\n          }\n          // 2 Variant 1 fields allowed\n          if ((editDepositor === true && editDepositor2 === false) || (editDepositor === false && editDepositor2 === true)) {\n            // console.log(\"1 Field alowed\")\n            for (let s = 0; s < Form.sections.length; s++) {\n              for (let c = 0; c < Form.sections[s].contents.length; c++) {\n                // separate by allowed account From/To fields\n                if (Form.sections[s].contents[c].name === \"depositor\") {\n                  if (editDepositor === true) {\n                    newForm.sections[s].contents[c].edit = false // block field\n                    // find partner for cur depositor and insert it to field depositor don't allow him to choose another depositor\n                    // console.log(\"Block depositor\")\n                    for (let i = 0; i < ed.length; i++) {\n                      if (ed[i].name === \"depositor\") {\n                        for (let d = 0; d < ed[i].data.length; d++) {\n                          // console.log(\"Put depositor\", ed[i].data[d].id)\n                          if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                            let depositorId = ed[i].data[d].id\n                            fields[\"depositor\"] = depositorId // set field from profile\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                if (Form.sections[s].contents[c].name === \"depositor2\") {\n                  if (editDepositor2 === true) {\n                    newForm.sections[s].contents[c].edit = false // block field\n                    // find partner for cur depositor and insert it to field depositor2 don't allow him to choose another depositor\n                    // console.log(\"Block depositor2\")\n                    for (let i = 0; i < ed.length; i++) {\n                      if (ed[i].name === \"depositor2\") {\n                        for (let d = 0; d < ed[i].data.length; d++) {\n                          // console.log(\"Put depositor\", ed[i].data[d].id)\n                          if (parseInt(props.userProfile.partner) === ed[i].data[d].partner) {\n                            let depositorId = ed[i].data[d].id\n                            fields[\"depositor2\"] = depositorId // set field from profile\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          setForm(newForm)\n        }\n      }\n      else {\n        if (Object.keys(parsedSelectedDoc).length > 0) {\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              let fieldName = Form.sections[s].contents[c].name\n              fields[fieldName] = parsedSelectedDoc[fieldName]\n            }\n          }\n        }\n      }\n      console.log(\"SDOC\", parsedSelectedDoc)\n      console.log(\"INITIAL FIELDVALUES\", fields)\n      setSelectedDoc(parsedSelectedDoc)\n      setFieldValue(fields)\n    }\n    if (taskType === \"showInstructionsSearchForm\") { // Search instructions\n      if (userProfile.userRole === \"3\") { //Depositor  || userProfile.userRole === \"4\" || userProfile.userRole === \"6\" || userProfile.userRole === \"8\" Registrar, GIK, CorrDepo\n        let newForm = Form\n        // Hide field depositor\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            // separate by allowed account From/To fields\n            if (Form.sections[s].contents[c].name === \"depositor\" || Form.sections[s].contents[c].name === \"depositor2\") {\n              newForm.sections[s].contents[c].show = false // hide field\n            }\n          }\n        }\n        setForm(newForm)\n      }\n    }\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let eData = props.userTask.enumData\n      let newEnumOptions = {}\n      for (let i = 0; i < eData.length; i++) {\n        if (eData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": eData[i].name\n          }]\n          if (eData[i].name === \"type\") {\n            if (props.userTask.taskType === \"showInstructionsTypeSelectingForm\") {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                if (props.userProfile[getInstructionTypeName(eData[i].data[d].id)] === true) {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  })\n                }\n              }\n            }\n            else {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                options.push({\n                  \"value\": eData[i].data[d].id,\n                  \"label\": eData[i].data[d].label,\n                  \"name\": eData[i].name\n                })\n              }\n            }\n          }\n          else if (eData[i].name === \"accFrom\" || eData[i].name === \"accTo\") { // Filter allowed account types for selected instruction\n            if (props.userTask.taskType === \"showInstructionsCreationForm\" || props.userTask.taskType === \"showInstructionsViewForm\") {\n              console.log(\"CREATE TASK\")\n              // console.log(\"ACC\")\n              let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n              let instructionTypeId = parsedSelectedDoc.type\n              let filteredRelations = [] // allowed account types\n              for (let i = 0; i < eData.length; i++) {\n                if (eData[i].name === \"instructionAccountRelations\") { // Find tabels that indicate allowed account types\n                  for (let d = 0; d < eData[i].data.length; d++) {\n                    if (eData[i].data[d].id === instructionTypeId) {\n                      filteredRelations.push(eData[i].data[d])\n                    }\n                  }\n                }\n              }\n              // console.log(\"filteredRelations\", filteredRelations)\n              for (let d = 0; d < eData[i].data.length; d++) {\n                // if (filteredRelations.length > 0) { // Has relations to filter accounts\n                let checkResult = checkForPushing(eData[i].data[d].label, instructionTypeId)\n                if (checkResult.enableToPush === true) {\n                  // console.log(\"PUSH ? \", eData[i].data[d].label, checkResult)\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  })\n                }\n              }\n            }\n          }\n          else if (eData[i].name === \"account\") {\n            if (props.userTask.taskType === \"showInstructionsSearchForm\") {\n              if (userProfile.userRole === \"3\") {\n                console.log(\"SEASRCH TASK\")\n                // console.log(\"Clear ACC\", parseInt(userProfile.partner))\n                for (let d = 0; d < eData[i].data.length; d++) {\n                  if (eData[i].data[d].partner === parseInt(userProfile.partner)) {\n                    options.push({\n                      \"value\": eData[i].data[d].id,\n                      \"label\": eData[i].data[d].label,\n                      \"name\": eData[i].name\n                    })\n                  }\n                }\n              }\n              else {\n                for (let d = 0; d < eData[i].data.length; d++) {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  })\n                }\n              }\n              console.log(\"Clear ACC\", options)\n            }\n          }\n          else {\n            for (let d = 0; d < eData[i].data.length; d++) {\n              options.push({\n                \"value\": eData[i].data[d].id,\n                \"label\": eData[i].data[d].label,\n                \"name\": eData[i].name\n              })\n            }\n          }\n          newEnumOptions[eData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      console.log(\"EN OPTS\", newEnumOptions)\n      setEnumOptions(newEnumOptions)\n    }\n    if (gridForm !== null) {\n      let newFields = {}\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show\n        }\n      }\n      setGridFieldValue(newFields)\n    }\n    // setUpdateState(getUUID())\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded)\n    }\n  })\n\n  // CancelInstruction MODAL\n  const handleOpenModalCancelInstruction = () => {\n    setShowModalCancelInstruction(true)\n  }\n  const handleCloseModalCancelInstruction = () => {\n    setShowModalCancelInstruction(false)\n  }\n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true)\n  }\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded)\n  }\n\n  function getInstructionTypeName(id) {\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionTypesNames\") {\n        for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n          if (props.userTask.enumData[i].data[d].id === id) {\n            return props.userTask.enumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  // filter accounts that can be selected by instruction type\n  function checkForPushing(label, instructionTypeId) {\n    // console.log(\"CHK\", label, instructionTypeId)\n    let checkResult = {\n      enableToPush: false,\n      // allowedAccountCode: null\n    }\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionAccountRelations\") { // 1) Push accounts related to Instruction type\n        let relations = props.userTask.enumData[i].data\n        for (let d = 0; d < relations.length; d++) {\n          if (relations[d].id === instructionTypeId) { // find allowed account types\n            let splitedAccountName = relations[d].label.split(\"-\")\n            let allowedAccountCode = splitedAccountName[1]\n            let splitedAccountLabel = label.split(\"-\")\n            let accCode = splitedAccountLabel[1]\n            let accPartner = splitedAccountLabel[2]\n            // console.log(allowedAccountCode, accCode)\n            if (accCode === allowedAccountCode) {\n              // if (userProfile.userRole === \"2\" || userProfile.userRole === \"3\" || userProfile.userRole === \"4\" || userProfile.userRole === \"8\") {\n              // Operator, Broker, Registrar, CorrDepo\n              if (userProfile.userRole === \"1\" || userProfile.userRole === \"5\" || userProfile.userRole === \"7\") { // Admin, Accountant, CD\n                // console.log(\"ALOLOWED All\", accCode)\n                checkResult.enableToPush = true\n                // checkResult[\"allowedAccountCode\"] = allowedAccountCode\n                break\n              }\n              else { // Other users\n                if (accPartner === userProfile.partner) {// Depositor, Registrar, corrDepo, GIK, ...\n                  // console.log(\"ALOLOWED\", accCode, accPartner, userProfile.partner)\n                  checkResult.enableToPush = true\n                  // checkResult[\"allowedAccountCode\"] = allowedAccountCode\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return checkResult\n  }\n  // RuToken functions\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin() {\n    setShowPin(!showPin)\n  }\n  rutoken.ready\n    // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n    .then(function () {\n      if (window.chrome || typeof InstallTrigger !== 'undefined') {\n        return rutoken.isExtensionInstalled()\n      } else {\n        return Promise.resolve(true)\n      }\n    })\n    // Проверка установки Рутокен Плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.isPluginInstalled()\n      } else {\n        // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n      }\n    })\n    // Загрузка плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.loadPlugin()\n      } else {\n        // alert(\"Не удаётся найти Плагин\");\n      }\n    })\n    //Можно начинать работать с плагином\n    .then(function (result) {\n      if (!result) {\n        return // alert(\"Не удаётся загрузить Плагин\")\n      } else {\n        plugin = result\n        return Promise.resolve()\n      }\n    })\n\n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  // Sign transfer order with rutoken\n  function sign(commandJson) {\n    try {\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices()\n          .then(function (devices) {\n            if (devices.length > 0) {\n              return Promise.resolve(devices[0]);\n            } else {\n              alert(\"Рутокен не обнаружен\");\n            }\n          })\n          // Проверка залогиненности\n          .then(function (firstDevice) {\n            rutokenHandle = firstDevice;\n            return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n          })\n          // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n          .then(function (isLoggedIn) {\n            if (isLoggedIn) {\n              return Promise.resolve();\n            } else {\n              return plugin.login(rutokenHandle, rutokenPin);\n            }\n          })\n          // Перебор пользовательских сертификатов на токене\n          .then(function () {\n            return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n          })\n          .then(function (certs) {\n            if (certs.length > 0) {\n              certHandle = certs[0];\n              return plugin.parseCertificate(rutokenHandle, certs[0]);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\");\n            }\n          })\n          // Подписание данных из текстового поля на первом найденом сертификате\n          .then(function (certs) {\n            certData = certs\n            // console.log(\"RUTDATA\", certData)\n            let tokenRemainingTime = new Date(certData.validNotAfter).getTime() - Date.now()\n            if (tokenRemainingTime > 0) {\n              if (certHandle.length > 0) {\n                var options = {};\n\n                let inn = \"\"\n                let fullName = \"\"\n                for (let i = 0; i < certData.subject.length; i++) {\n                  if (certData.subject[i].rdn === \"serialNumber\") {\n                    inn = certData.subject[i].value\n                  }\n                  if (certData.subject[i].rdn === \"commonName\") {\n                    fullName = certData.subject[i].value\n                  }\n                }\n                props.setEsInn(inn)\n                props.setEsUserFullName(fullName)\n                props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n                let instructionToSign = commandJson.variables.document.value\n                if (selectedDoc.filled === undefined || selectedDoc.filled === null || selectedDoc.filled === false) { // Depositor\n                  instructionToSign[\"filled\"] = true\n                  instructionToSign[\"filled_at\"] = props.getCurrentFullDateTime()\n                  instructionToSign[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n                  instructionToSign[\"signed_depositor_inn\"] = inn\n                  instructionToSign[\"signed_depositor_full_name\"] = fullName\n                  instructionToSign[\"signed_at_depositor\"] = props.getCurrentFullDateTime()\n                  commandJson.variables.status.value = \"filled\"\n                }\n                else { // Depository\n                  instructionToSign[\"onExecution\"] = true\n                  instructionToSign[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n                  instructionToSign[\"signed_cd_inn\"] = inn\n                  instructionToSign[\"signed_cd_full_name\"] = fullName\n                  instructionToSign[\"signed_at_cd\"] = props.getCurrentFullDateTime()\n                  commandJson.variables.status.value = \"onExecution\"\n                }\n                commandJson.variables.document.value = JSON.stringify(instructionToSign)\n                console.log(\"SIGN\", instructionToSign, commandJson.variables.document)\n                handleCloseModalEnterPin()\n                // swAllert(\"Поручение успешно подписано!\", \"success\")\n                props.sendFieldValues(commandJson)\n                props.clearTabData(commandJson.process_id)\n                return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n              } else {\n                alert(\"Сертификат на Рутокен не обнаружен\")\n              }\n            }\n            else {\n              plugin.logout(rutokenHandle)\n              props.callErrorToast(\"Рутокен просрочен\", \"warning\")\n            }\n          })\n          // Закрытие сессии\n          .then(function () {\n            plugin.logout(rutokenHandle)\n          }, handleError)\n      }\n      else { props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\") }\n    }\n    catch (er) {\n      console.log(\"Rutoken ERR\")\n    }\n  }\n  // Input handlers\n  const handleCheckboxChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n    // console.log(\"Check change\", event.target.checked)\n  }\n  // Radio group handler\n  const handleRadioGroupChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    // console.log(\"FIELDVALUE\", fieldValue)\n  }\n\n  // Float input handler\n  const handleFloatChange = (event) => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  // Integer input handler\n  const handleIntChange = (event) => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '')\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int })\n  }\n  // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n  function handleDateTimeChange(event) {\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    // setFieldValue(fieldValue)\n    fieldValue[event.target.name] = moment(event.target.value).format(\"YYYY-MM-DDTHH:mm:ss\")\n    setFieldValue(fieldValue)\n    console.log(\"DATE CHANGE\", fieldValue[event.target.name], event.target.value)\n  }\n  // Handler of select copmponet changes\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value\n    console.log(\"OPT\", option.name, option.value)\n    var updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option\n        noSuchOption = false\n        setSelectedOptions(updateSelectedOptions)\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    if (option.name === \"depositor\") {\n      let newOptions = []\n      let depositorPartner = getDepositorPartner(option.value) // find depositor partner id\n      if (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\") {\n        // Первый депонент выбран нужно отфильтровать поле \"Со счета\" и отобразить счета только выбранного депонента\n\n        // console.log(\"PARTNER\", depositorPartner)\n        for (let i = 0; i < enumData.length; i++) {\n          if (enumData[i].name === \"accFrom\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"])\n              console.log(\"PUSH?\", enumData[i].data[d].label, fieldValue[\"type\"])\n              if (checkResult.enableToPush === true) {\n                if (enumData[i].data[d].partner === depositorPartner) { // compare depositor partner and account partner\n                  newOptions.push({\n                    \"value\": enumData[i].data[d].id,\n                    \"label\": enumData[i].data[d].label,\n                    \"name\": enumData[i].name\n                  })\n                }\n              }\n            }\n          }\n        }\n        console.log(\"NEW ENUMS\", newOptions)\n        enumOptions[\"accFrom\"] = newOptions\n        setEnumOptions(enumOptions)\n      }\n      else if (taskType === \"showInstructionsSearchForm\") {\n        // депонент выбран нужно отфильтровать поле \"Счет\" и отобразить счета только выбранного депонента\n        // console.log(\"PARTNER\", depositorPartner)\n        for (let i = 0; i < enumData.length; i++) {\n          if (enumData[i].name === \"account\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].partner === depositorPartner) { // compare depositor partner and account partner\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\": enumData[i].name\n                })\n              }\n            }\n          }\n        }\n        enumOptions[\"account\"] = newOptions\n        setEnumOptions(enumOptions)\n      }\n    }\n    else if (option.name === \"depositor2\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // Второй депонент выбран нужно отфильтровать поле \"На счет\" и отобразить счета только выбранного депонента\n      let newOptions = []\n      let depositorPartner = getDepositorPartner(option.value) // find depositor partner id\n      // console.log(\"PARTNER\", depositorPartner)\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"accTo\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].partner === depositorPartner) { // compare depositor partner and account partner\n              let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"])\n              // console.log(\"PUSH\", enumData[i].data[d].label)\n              if (checkResult.enableToPush === true) {\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\": enumData[i].name\n                })\n              }\n            }\n          }\n        }\n      }\n      // console.log(\"NEW ENUMS\", newOptions)\n      enumOptions[\"accTo\"] = newOptions\n      setEnumOptions(enumOptions)\n    }\n    else if (option.name === \"security\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // выбрана ценная бумага нужно найти эмитента и отобразить\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"security\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].id === option.value) {\n              let issuerId = enumData[i].data[d].issuer\n              fieldValue[\"issuer\"] = issuerId\n              for (let j = 0; j < enumData.length; j++) {\n                if (enumData[j].name === \"issuer\") {\n                  // console.log(\"issuerID\", issuerId)\n                  for (let h = 0; h < enumData[j].data.length; h++) {\n                    if (enumData[j].data[h].id === issuerId) {\n                      let issuerOption = {\n                        value: issuerId,\n                        name: \"issuer\",\n                        label: enumData[j].data[h].label\n                      }\n                      console.log(\"issuerOption\", issuerOption)\n                      let noIssuerOption = true\n                      for (let y = 0; y < updateSelectedOptions.length; y++) {\n                        if (updateSelectedOptions[y].name === \"issuer\") {\n                          updateSelectedOptions[y] = issuerOption\n                          noIssuerOption = false\n                          setSelectedOptions(updateSelectedOptions)\n                          break\n                        }\n                        else {\n                          noIssuerOption = true\n                        }\n                      }\n                      if (noIssuerOption === true) {\n                        updateSelectedOptions.push(issuerOption)\n                        setSelectedOptions(updateSelectedOptions)\n                        // console.log(\"NO Issuer\", updateSelectedOptions)\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      // console.log(\"NEW ENUMS\", newOptions)\n      // enumOptions[\"issuer\"] = newOptions\n      // setEnumOptions(enumOptions)\n    }\n    setFieldValue(fieldValue)\n  }\n  function getDepositorPartner(depId) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"depositor\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === depId) {\n            return enumData[i].data[d].partner\n          }\n        }\n      }\n    }\n  }\n  // Returns random id\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // Collecting all field values and return as attributes\n  function getFieldValuesCreateDocument() {\n    let fields = {}\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\") {\n        fields[key] = fieldValue[key]\n      }\n    }\n    return (fields)\n  }\n  function getFieldValuesSaveInstruction() {\n    let fields = {}\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\" && key !== \"id\") {\n        fields[key] = fieldValue[key]\n      }\n    }\n    fields.filled = false\n    fields.onExecution = false\n    fields.executed = false\n    fields.canceled = false\n    fields.opened = false\n    fields.signed = false\n    fields.created_user_partner = getCreatedPartner()\n    return (fields)\n  }\n  function getCreatedPartner() {\n    let partner = parseInt(userProfile.partner)\n    if (userProfile.userRole === \"3\") { // Depositor\n      partner = parseInt(userProfile.partner)\n    }\n    else {\n      let editDepositor = null\n      let editDepositor2 = null\n      let editAccFrom = null\n      let editAccTo = null\n      // 1 step check wheter both fields are allowed for input\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let ed = Form.sections[s].contents[c].edit\n          let sh = Form.sections[s].contents[c].show\n          if (Form.sections[s].contents[c].name === \"depositor\") {\n            editDepositor = (ed === true && sh === true) ? true : false\n          }\n          if (Form.sections[s].contents[c].name === \"accFrom\") { // if account from is allowed for input depositor is sender\n            editAccFrom = (ed === true && sh === true) ? true : false\n          }\n          if (Form.sections[s].contents[c].name === \"depositor2\") {\n            editDepositor2 = (ed === true && sh === true) ? true : false\n          }\n          if (Form.sections[s].contents[c].name === \"accTo\") { // if account to is allowed for input depositor is recipient\n            editAccTo = (ed === true && sh === true) ? true : false\n          }\n        }\n      }\n      console.log(editDepositor, editAccFrom, editDepositor2, editAccTo)\n      // 1 Variant Depositor is sender\n      if (editDepositor === true && editAccFrom === true) {\n        partner = getDepositorPartnerId(fieldValue.depositor)\n        console.log(\"SENDER P\", partner)\n      }\n      // 2 Depositor is recipient\n      if (editDepositor2 === true && editAccTo === true) {\n        partner = getDepositorPartnerId(fieldValue.depositor2)\n        console.log(\"RECIPIENT P\", partner)\n      }\n    }\n    return partner\n  }\n  function getDepositorPartnerId(id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"depositor\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].partner\n          }\n        }\n      }\n    }\n  }\n  // Collect data to update doc\n  function getFieldValuesUpdateInstruction() {\n    let docToUpdate = selectedDoc\n    // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false\n        }\n        else {\n          docToUpdate[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToUpdate\n  }\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null ||\n            fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n            return checkedSuccessfuly\n          }\n          else {\n            checkedSuccessfuly = true\n          }\n        }\n        else {\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  // Main button click handler\n  function buttonClick(buttonName, dataItem) {\n    // console.log(\"Button\", buttonName)\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true)\n      }\n      else {\n        filterDocList(0, size - 1, initialDocList, fieldValue)\n      }\n    }\n    else if (buttonName === \"createDocument\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        const createDocument = getFieldValuesCreateDocument()\n        const commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: { value: \"createDocument\" },\n            selectedDoc: { value: JSON.stringify(createDocument) },\n            searchDoc: { value: JSON.stringify(fieldValue) },\n            userId: { value: userProfile.userId },\n            userRole: { value: userProfile.userRole }\n          }\n        }\n        console.log(\"button createDocument: \", commandJson)\n        let checkResult = checkForRequieredFields()\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    // else if(buttonName === \"selectSample\"){\n    //   if(props.operDayIsOpened === false){\n    //     swal({\n    //       text: \"Операционный день закрыт вы не можете создавать поручения!\",\n    //       icon: \"warning\",\n    //       buttons: {ok: \"Ок\"}\n    //     })\n    //   }\n    //   else{\n    //     const commandJson = \n    //     {\n    //       commandType: \"completeTask\",\n    //       session_id: session_id,\n    //       process_id: process_id,\n    //       taskID: taskID,\n    //       variables: {\n    //         userAction: {value: \"selectSample\"},\n    //         searchDoc: {value: JSON.stringify(fieldValue)}\n    //       }\n    //     }\n    //     console.log(\"button selectSample: \", commandJson)\n    //     props.sendFieldValues(commandJson)\n    //     props.clearTabData(process_id)\n    //   }\n    // }\n    else if (buttonName === \"selectInstruction\") {\n      let createFormDefId = null\n      let report = null\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              createFormDefId = enumData[k].data[d].create_form\n              report = enumData[k].data[d].reportName\n            }\n          }\n        }\n      }\n      let copyFields = {}\n      copyFields.type = dataItem.type\n      copyFields.urgent = dataItem.urgent\n      copyFields.depositor = dataItem.depositor\n      copyFields.accFrom = dataItem.accFrom\n      copyFields.depositor2 = dataItem.depositor2\n      copyFields.accTo = dataItem.accTo\n      copyFields.issuer = dataItem.issuer\n      copyFields.security = dataItem.security\n      copyFields.currency = dataItem.currency\n      copyFields.quantity = dataItem.quantity\n      copyFields.basis = dataItem.basis\n      copyFields.ownerName = dataItem.ownerName\n      copyFields.ownerDocument = dataItem.ownerDocument\n      copyFields.ownerAddress = dataItem.ownerAddress\n      copyFields.additional_information = dataItem.additional_information\n      copyFields.payment_account = dataItem.payment_account\n      copyFields.payment_bank = dataItem.payment_bank\n      copyFields.payment_bik = dataItem.payment_bik\n      copyFields.payment_purpose = dataItem.payment_purpose\n      copyFields.payment_recipient = dataItem.payment_recipient\n      copyFields.tradingSystem = dataItem.tradingSystem\n\n      // for(let s=0; s<Form.sections.length; s++){\n      //   for(let c=0; c<Form.sections[s].contents.length; c++){\n      //     let fieldName = Form.sections[s].contents[c].name\n      //     if(Form.sections[s].contents[c].show === true){\n      //       copyFields[fieldName] = dataItem[fieldName]\n      //     }\n      //   }\n      // }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"createInstruction\" },\n          selectedDoc: { value: JSON.stringify(copyFields) },\n          instructionType: { value: fieldValue[\"type\"] },\n          createFormDefId: { value: createFormDefId },\n          reportName: { value: report },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button selectInstruction: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"editDocument\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"editDocument\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole }\n        }\n      }\n      console.log(\"button editDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocument\") {\n      const updateDocument = getFieldValuesUpdateInstruction()\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          document: { value: JSON.stringify(updateDocument) },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole }\n        }\n      }\n      console.log(\"button updateDocument: \", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        let createFormDefId = null\n        let report = null\n        for (let k = 0; k < enumData.length; k++) {\n          if (enumData[k].name === \"type\") {\n            for (let d = 0; d < enumData[k].data.length; d++) {\n              if (fieldValue[\"type\"] === enumData[k].data[d].id) {\n                createFormDefId = enumData[k].data[d].create_form\n                report = enumData[k].data[d].reportName\n              }\n            }\n          }\n        }\n        const commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: { value: \"createInstruction\" },\n            userId: { value: userProfile.userId },\n            userRole: { value: userProfile.userRole },\n            selectedDoc: { value: JSON.stringify({ type: fieldValue[\"type\"] }) },\n            instructionType: { value: fieldValue[\"type\"] },\n            createFormDefId: { value: createFormDefId },\n            reportName: { value: report }\n          }\n        }\n        console.log(\"button createInstruction: \", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"saveInstruction\") {\n      const createDocument = getFieldValuesSaveInstruction()\n      let notBody = {\n        variables:\n        {\n          user_session_id: { value: session_id },\n          userAction: { value: \"getNotificationsCount\" }\n        }\n      }\n      let showTransferOrder = true\n      let transferOrder = {\n        instruction_id: \"null\",\n        registered_person: fieldValue[\"ownerName\"],\n        address: fieldValue[\"ownerAddress\"],\n        security: fieldValue[\"security\"],\n        issuer: fieldValue[\"issuer\"],\n        quantity_int: fieldValue[\"quantity\"],\n        basis: fieldValue[\"basis\"]\n      }\n      for (let t = 0; t < enumData.length; t++) {\n        // if (enumData[t].name === \"issuer\") {\n        //   for (let dt = 0; dt < enumData[t].data.length; dt++) {\n        //     if (fieldValue[\"issuer\"] === enumData[t].data[dt].id) {\n        //       transferOrder[\"registrar\"] = enumData[t].data[dt].registrar\n        //     }\n        //   }\n        // }\n        if (enumData[t].name === \"security\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"security\"] === enumData[t].data[dt].id) {\n              transferOrder[\"security_type\"] = enumData[t].data[dt].security_type\n              transferOrder[\"registrar\"] = enumData[t].data[dt].registrar\n            }\n          }\n        }\n        if (enumData[t].name === \"type\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"type\"] === enumData[t].data[dt].id) {\n              showTransferOrder = enumData[t].data[dt].transfer_order\n            }\n          }\n        }\n      }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"saveInstruction\" },\n          saveBody: { value: JSON.stringify(createDocument) },\n          selectedDoc: { value: JSON.stringify(createDocument) },\n          notificationsBody: { value: JSON.stringify(notBody) },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          // reportName: {value: reportName},\n          showTransferOrder: { value: showTransferOrder },\n          transferOrder: { value: JSON.stringify(transferOrder) }\n        }\n      }\n      if (fieldValue[\"urgent\"] === true) {\n        swal({\n          text: \"ВНИМАНИЕ поручения со статусом \\\"СРОЧНОЕ\\\" будет тарифицироваться в соответствии с тарифами ЦД на срочные поручения, хотите продолжить?\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\", cancel: \"Отмена\" },\n          // dangerMode: true,\n        })\n          .then((click) => {\n            if (click === \"ok\") {\n              let checkResult = checkForRequieredFields()\n              if (checkResult === true) {\n                props.sendFieldValues(commandJson)\n                props.clearTabData(process_id)\n              }\n            }\n          })\n      }\n      else {\n        let checkResult = checkForRequieredFields()\n        // console.log(\"PASSED\", checkResult)\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n      console.log(\"button saveInstruction: \", commandJson)\n    }\n    else if (buttonName === \"viewInstruction\") {\n      let currentStatus = \"saved\"\n      let notBody = {\n        variables:\n        {\n          user_session_id: { value: session_id },\n          userAction: { value: \"getNotificationsCount\" }\n        }\n      }\n      if (dataItem.filled === true) {\n        currentStatus = \"filled\"\n        if (dataItem.onExecution === true) {\n          currentStatus = \"onExecution\"\n          if (dataItem.executed === true) {\n            currentStatus = \"executed\"\n          }\n          else {\n            if (dataItem.canceled === true) {\n              currentStatus = \"canceled\"\n            }\n          }\n        }\n        else {\n          if (dataItem.canceled === true) {\n            currentStatus = \"canceled\"\n          }\n        }\n      }\n\n      let editFormDefId = null\n      let report = null\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              editFormDefId = enumData[k].data[d].edit_form\n              report = enumData[k].data[d].reportName\n            }\n          }\n        }\n      }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          notificationsBody: { value: JSON.stringify(notBody) },\n          userAction: { value: \"viewInstruction\" },\n          userId: { value: userProfile.userId },\n          docId: { value: dataItem.id },\n          instructionType: { value: dataItem.type },\n          status: { value: currentStatus },\n          editFormDefId: { value: editFormDefId },\n          reportName: { value: report },\n          searchDoc: { value: JSON.stringify(fieldValue) },\n        }\n      }\n      console.log(\"button viewInstruction: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"sendToCD\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin()\n        }\n        else {\n          let updateDocument = getFieldValuesUpdateInstruction()\n          updateDocument[\"filled\"] = true\n          updateDocument[\"filled_at\"] = props.getCurrentFullDateTime()\n          updateDocument[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n          updateDocument[\"signed_depositor_inn\"] = props.esInn\n          updateDocument[\"signed_depositor_full_name\"] = props.esUserFullName\n          updateDocument[\"signed_at_depositor\"] = props.getCurrentFullDateTime()\n          const commandJson =\n          {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: { value: \"updateDocument\" },\n              userId: { value: userProfile.userId },\n              userRole: { value: userProfile.userRole },\n              document: { value: JSON.stringify(updateDocument) },\n              status: { value: \"filled\" }\n            }\n          }\n          // console.log(buttonName, commandJson)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    else if (buttonName === \"sendToCDWithoutES\") {\n      const updateDocument = getFieldValuesUpdateInstruction()\n      updateDocument.filled = true\n      updateDocument.filledUser = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n      updateDocument.signed_at_depositor = props.getCurrentFullDateTime()\n      updateDocument.filled_at = props.getCurrentFullDateTime()\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          document: { value: JSON.stringify(updateDocument) },\n          status: { value: \"filled\" }\n        }\n      }\n      console.log(\"button sendToCDWithoutES: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"SignInstructionSaveButton\") {\n      const updateDocument = getFieldValuesUpdateInstruction()\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          document: { value: updateDocument },\n          status: { value: \"\" }\n        }\n      }\n      console.log(\"button signInstruction: \", commandJson)\n      sign(commandJson)\n    }\n    else if (buttonName === \"deleteDocument\") {\n      let docToDelete = selectedDoc.id\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"deleteDocument\" },\n          document: { value: docToDelete.toString() }\n        }\n      }\n      console.log(\"deleteDocument:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно удалить это поручение?\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n          }\n        })\n    }\n    else if (buttonName === \"onExecution\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin()\n        }\n        else {\n          let updateDocument = getFieldValuesUpdateInstruction()\n          updateDocument[\"onExecution\"] = true\n          updateDocument[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n          updateDocument[\"onExecutionDate\"] = props.getCurrentFullDateTime()\n          updateDocument[\"signed_cd_inn\"] = props.esInn\n          updateDocument[\"signed_cd_full_name\"] = props.esUserFullName\n          updateDocument[\"signed_at_cd\"] = props.getCurrentFullDateTime()\n          const commandJson =\n          {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: { value: \"updateDocument\" },\n              userId: { value: userProfile.userId },\n              userRole: { value: userProfile.userRole },\n              document: { value: JSON.stringify(updateDocument) },\n              status: { value: \"onExecution\" }\n            }\n          }\n          console.log(\"onExecution:\", commandJson, updateDocument)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    else if (buttonName === \"Execute\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        const updateDocument = getFieldValuesUpdateInstruction()\n        updateDocument[\"executed\"] = true\n        updateDocument[\"executedUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n        updateDocument[\"executedDate\"] = props.getCurrentFullDateTime()\n        const commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: { value: \"updateDocument\" },\n            userId: { value: userProfile.userId },\n            userRole: { value: userProfile.userRole },\n            document: { value: JSON.stringify(updateDocument) },\n            status: { value: \"executed\" }\n          }\n        }\n        console.log(\"button Execute: \", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"CancelInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        handleOpenModalCancelInstruction()\n      }\n    }\n    else if (buttonName === \"CancelInstructionSaveButton\") {\n      handleCloseModalCancelInstruction()\n      const updateDocument = getFieldValuesUpdateInstruction()\n      updateDocument[\"canceled\"] = true\n      updateDocument[\"canceledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n      updateDocument[\"cancelationReason\"] = fieldValue.cancelationReason\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"cancelInstruction\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          selectedDoc: { value: JSON.stringify(updateDocument) },\n          documentsToCancel: { value: JSON.stringify([{ id: selectedDoc.id }]) },\n          cancelationReason: { value: fieldValue.cancelationReason },\n          status: { value: \"canceled\" }\n        }\n      }\n      console.log(\"button CancelInstructionSaveButton: \", commandJson, selectedDoc)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"CancelInstructionCancelButton\") {\n      handleCloseModalCancelInstruction()\n      fieldValue[\"cancelationReason\"] = null\n      setFieldValue(fieldValue)\n      console.log(\"FIELDS\", fieldValue)\n    }\n    else if (buttonName === \"uploadToXML\") {\n      // Create xml\n      let xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><InstructionsList xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><instructions>\"\n      for (let i = 0; i < filteredDocList.length; i++) {\n        xml += \"<instruction>\"\n        for (let prop in filteredDocList[i]) {\n          xml += \"<\" + prop + \">\"\n          xml += filteredDocList[i][prop]\n          xml += \"</\" + prop + \">\"\n        }\n        xml += \"</instruction>\"\n      }\n      xml += \"</instructions></InstructionsList>\"\n      let finalxml = xml.replace(/<\\/?[0-9]{1,}>/g, '').toString()\n\n      // Download xml\n      let pom = document.createElement('a')\n      let filename = \"UploadInstructions.xml\"\n      let bb = new Blob([finalxml], { type: 'text/plain' })\n\n      pom.setAttribute('href', window.URL.createObjectURL(bb))\n      pom.setAttribute('download', filename)\n\n      pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':')\n      pom.draggable = true\n      pom.classList.add('dragout')\n      pom.click()\n    }\n    else if (buttonName === \"showInstructionReport\") {\n      let reportName = null\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (selectedDoc.type === enumData[k].data[d].id) {\n              let reportId = enumData[k].data[d].report\n              for (let e = 0; e < enumData.length; e++) {\n                if (enumData[e].name === \"instructionReports\") {\n                  for (let t = 0; t < enumData[e].data.length; t++) {\n                    if (reportId === enumData[e].data[t].id) {\n                      reportName = enumData[e].data[t].reportName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      let reportExecutions = {\n        \"reportUnitUri\": \"/reports/interactive/\" + reportName,\n        \"async\": true,\n        \"interactive\": true,\n        \"freshData\": false,\n        \"saveDataSnapshot\": false,\n        \"outputFormat\": \"pdf\", // html xlsx pdf docx\n        \"parameters\": {\n          \"reportParameter\": [\n            { name: \"id\", value: [selectedDoc.id.toString()] },\n            { name: \"first_n\", value: [userProfile.firstName.trim()] },\n            { name: \"last_n\", value: [userProfile.lastName.trim()] },\n            { name: \"middle_n\", value: [userProfile.middleName.trim()] }\n          ]\n        }\n      }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"showInstructionReport\" },\n          docId: { value: selectedDoc.id.toString() },\n          instructionType: { value: selectedDoc.type },\n          reportName: { value: reportName },\n          reportVars: { value: \"?id=\" + selectedDoc.id + \"&first_n=\" + userProfile.firstName.trim() + \"&last_n=\" + userProfile.lastName.trim() + \"&middle_n=\" + userProfile.middleName.trim() },\n          reportExecutions: { value: JSON.stringify(reportExecutions) }\n\n        }\n      }\n      console.log(\"button showInstructionReport: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocList\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocList\" },\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"test\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"test\" },\n        }\n      }\n      console.log(\"button back: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n\n    else {\n      console.log(\"button: \", buttonName)\n    }\n  }\n  // Returns Button component\n  function createButton(button, index) {\n    return (\n      <Button variant=\"outlined\"\n        name={button.name}\n        key={index}\n        onClick={() => buttonClick(button.name)}\n        style={{\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        }}\n        value={button.name}\n      >\n        {button.label}\n      </Button>\n    )\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section, index) {\n    return (\n      <Table size=\"small\" key={index + \"table\"}>\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              key={index = \"head\"}\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map((contentItem, index) => (\n            contentItem.show === true &&\n            <TableRow key={index} style={{ height: 30 }}>\n              <TableCell\n                key={index + \"cell1\"}\n                align=\"left\"\n                style={{ width: \"40%\" }}>\n                {contentItem.label}\n              </TableCell>\n              <TableCell\n                key={index + \"cell2\"}\n                align=\"left\"\n                style={{ width: \"60%\", height: 30 }}\n              >{contentBuilder(contentItem)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n  // Create component by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur={handleTextChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressDateTime}\n          type=\"date\"\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\") {\n      return (\n        <TextField\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseFullDateTime(fieldValue[contentItem.name], \"T\") : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          // console.log(\"F SEL\", contentItem.name, fieldValue[contentItem.name])\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            // console.log(\"F SEL\", contentItem.name, fieldValue[contentItem.name])\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Int\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressInt}\n          name={contentItem.name}\n          // defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          // onBlur={handleIntChange}\n          // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleIntChange}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: IntegerFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Float\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressFloat}\n          name={contentItem.name}\n          // onBlur={handleFloatChange}\n          // value={fieldValue[contentItem.name]}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleFloatChange}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: FloatFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true) ? true : false}\n        />\n      )\n    }\n    else if (contentItem.type === \"RadioGroup\") {\n      let radioGroupItems = []\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === contentItem.name) {\n          radioGroupItems = enumData[i].data\n        }\n      }\n      return (\n        <RadioGroup\n          name={contentItem.name}\n          value={fieldValue[contentItem.name]}\n          onChange={handleRadioGroupChange}\n        >\n          {radioGroupItems.map(groupItem => {\n            return (\n              <FormControlLabel\n                value={groupItem.id}\n                label={groupItem.label}\n                control={<Radio style={{ height: \"5px\", color: \"green\" }} />}\n                disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n              />\n            )\n          })}\n\n        </RadioGroup>\n      )\n    }\n  }\n  // Key press handlers for some fields\n  function onKeyPressText(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressDateTime(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressInt(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let int = parseInt(stringNum)\n          fieldValue[event.target.name] = int\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressFloat(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let float = parseFloat(stringNum)\n          fieldValue[event.target.name] = float\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"SignInstructionSaveButton\", null)\n    }\n  }\n  function onKeyPressModalCancelInstruction(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"CancelInstructionSaveButton\", null)\n    }\n  }\n\n  // custom allerts\n  function swAlert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" }\n      })\n    )\n  }\n  function getGridFormEnumLabel(name, value) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (name === gridFormEnumData[i].name) {\n          for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n            if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n              return gridFormEnumData[i].data[l].label\n            }\n          }\n        }\n      }\n    }\n  }\n  // Create grid form components\n  function getGridFormItems(value, type, dataItem, name) {\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        return getGridFormEnumLabel(name, value)\n      }\n    }\n    else if (type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\" }}\n          checked={(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        return props.parseFullDateTime(value, \" \")\n        // return moment(value).format('YYYY-MM-DD HH:MM')\n      }\n    }\n    else if (type === \"Text\") {\n      if (name === \"instructionStatus\") {\n        return getInstructionStatus(dataItem)\n      }\n      else {\n        if (value === null || value === \"\" || value === undefined) {\n          return \"-\"\n        }\n        else {\n          return (<td>{value}</td>)\n        }\n      }\n    }\n    else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newCur = props.currencyBeautifier(value)\n        return newCur\n      }\n    }\n    else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newInt = props.intBeautifier(value)\n        return newInt\n      }\n    }\n    else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        return (<td>{value}</td>)\n      }\n    }\n\n  }\n  function getInstructionStatus(dataItem) {\n    let status = \"\"\n    if (dataItem[\"filled\"] === true) {\n      status = \"Введено\"\n    }\n    if (dataItem[\"onExecution\"] === true) {\n      status = \"На исполнении\"\n    }\n    if (dataItem[\"executed\"] === true) {\n      status = \"Исполнено\"\n    }\n    if (dataItem[\"canceled\"] === true) {\n      status = \"Отменено\"\n    }\n    return status\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  // filter docList by filled parameters\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = []\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data\n    }\n    else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true\n          }\n          else {\n            // if(Data[i][key] !== null){\n            let contentType = getContentType(key)\n            if (contentType === \"Text\") {\n              if (Data[i][key] !== null) {\n                try {\n                  let searchField = fields[key].toLowerCase().trim()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                catch (er) {\n                  console.log(\"ERR\", er)\n                  match = true\n                }\n              }\n              else {\n                match = false\n                break\n              }\n            }\n            else if (contentType === \"Int\" || contentType === \"Float\") {\n              if (Data[i][key] !== null) {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else { match = true }\n              }\n              else {\n                match = false\n                break\n              }\n            }\n            else if (contentType === \"Enum\") {\n              if (key === \"depositor\") {\n                // console.log(\"DEPOSITOR\", fields[key], Data[i][\"depositor2\"])\n                if (fields[key] === Data[i][key] || fields[key] === Data[i][\"depositor2\"]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else if (key === \"account\") {\n                if (fields[key] === Data[i][\"accFrom\"] || fields[key] === Data[i][\"accTo\"]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else {\n                if (fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n\n            }\n            else if (contentType === \"DateTime\") {\n              if (Data[i][key] !== null) {\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true\n                }\n                else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n              else {\n                match = false\n                break\n              }\n            }\n            else if (contentType === \"Bool\") {\n              if (key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\") {\n                let instrStatus = \"\"\n                let statusSelected = false\n                let fieldStatus = \"\"\n                // Check fields\n                if (fields[\"filled\"] === true) {\n                  fieldStatus = \"filled\"\n                  statusSelected = true\n                }\n                if (fields[\"onExecution\"] === true) {\n                  fieldStatus = \"onExecution\"\n                  statusSelected = true\n                }\n                if (fields[\"executed\"] === true) {\n                  fieldStatus = \"executed\"\n                  statusSelected = true\n                }\n                if (fields[\"canceled\"] === true) {\n                  fieldStatus = \"canceled\"\n                  statusSelected = true\n                }\n                if (statusSelected === true) {\n                  // Check Instruction\n                  if (Data[i][\"filled\"] === true) {\n                    instrStatus = \"filled\"\n                  }\n                  if (Data[i][\"onExecution\"] === true) {\n                    instrStatus = \"onExecution\"\n                  }\n                  if (Data[i][\"executed\"] === true) {\n                    instrStatus = \"executed\"\n                  }\n                  if (Data[i][\"canceled\"] === true) {\n                    instrStatus = \"canceled\"\n                  }\n                  // Check whether statuses are equal\n                  if (fieldStatus === instrStatus) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else {\n                  match = true\n                }\n              }\n              else {\n                if (Data[i][key] === null || fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n            }\n            // }\n            // else{\n            //   match = false\n            //   break\n            // }\n          }\n        }\n        if (match === true) {\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered docList by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n    // setUpdateState(getUUID())\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLastClick() {\n    if (page !== getPageAmount()) {\n      setPage(getPageAmount())\n      fetchBySize((getPageAmount() - 1) * size, filteredDocList.length, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на последней странице!\")\n      setShowSnackBar(true)\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.floor(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  function getBackgroundColor(signed, urgent) {\n    if (signed !== undefined) {\n      if (signed === true) {\n        return \"white\"\n      }\n      else {\n        if (urgent === true) {\n          return \"#EFB2B2\"\n        }\n        else {\n          return \"#FCEAD3\"\n        }\n      }\n    }\n    else return \"white\"\n  }\n  function checkToShowSection(section) {\n    let showSection = false\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true\n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i) {\n    let lastSection = true\n    if (i === gridForm.sections.length - 1) { // The last section\n      return true\n    }\n    else {\n      let nextS = i + 1\n      // console.log(\"IT\", i, gridForm.sections[nextS])\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) { // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n\n  function getForm() {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n        <Grid item xs={isSearchForm === true ? 12 : 9}>\n          <Paper>\n            {isSearchForm === false &&\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <TableHead>\n                  <TableRow style={{ maxHeight: 25 }}>\n                    <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                  </TableRow>\n                </TableHead>\n              </Grid>\n            }\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              {Form.sections.map((section, index) => {\n                let showSection = checkToShowSection(section)\n                if (showSection === true) {\n                  return sectionBuilder(section, index)\n                }\n              })}\n            </Grid>\n\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function dynamicSort(property, sortOrder, type) {\n    // if (type === \"DateTime\" || type === \"Bool\") {\n    //   sortOrder = sortOrder * -1\n    // }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if (type === \"DateTime\") {\n      sortOrder = sortOrder * -1\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA = dateA.getTime() / 1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB = dateB.getTime() / 1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else {\n          if (a[property] === null) {\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if (type === \"Int\" || type === \"Text\" || type === \"Float\") {\n      if (property === \"instructionStatus\") {\n        return function (a, b) {\n          // console.log(\"A\", a)\n          let statusA = getInstructionStatus(a)\n          let statusB = getInstructionStatus(b)\n          var result = (statusA < statusB) ? -1 : (statusA > statusB) ? 1 : 0\n          return result * sortOrder\n        }\n      }\n      else {\n        return function (a, b) {\n          var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n          return result * -1 * sortOrder\n        }\n      }\n\n    }\n    else if (type === \"Bool\" || type === \"BoolCustom\") {\n      sortOrder = sortOrder * -1\n      return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n    else if (type === \"Enum\") {\n      return function (a, b) {\n        let labelA = getEnumLabel(property, a[property])\n        // console.log(\"A\", property, a[property], labelA)\n        let labelB = getEnumLabel(property, b[property])\n        // console.log(\"labelB\", labelB, property, b)\n        var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n  }\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size - 1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function getSecType(id) {\n    let type = 1\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"security\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === id) {\n              type = gridFormEnumData[i].data[d].type\n            }\n          }\n        }\n      }\n    }\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"securityTypes\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === type) {\n              return gridFormEnumData[i].data[d].label\n            }\n          }\n        }\n      }\n    }\n  }\n  function calculateColSpan(contents) {\n    let num = 0\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1\n      }\n    }\n    return num\n  }\n  const handleContextMenu = (event) => {\n    if (userProfile.userRole === \"1\") {\n      event.preventDefault()\n      setAnchorEl(event.currentTarget)\n    }\n  }\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n    // console.log(\"CLOSE\", fieldValue)\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name]\n      }\n    }\n    console.log(\"nForm\", gridForm)\n    setGridForm(gridForm)\n    setUpdateState(getUUID())\n  }\n  function createMenuItems() {\n    let columns = []\n    columns.push(\n      <tr>\n        <td\n          style={{ paddingLeft: 5, cursor: \"pointer\" }}\n          name={\"selectAll\"}\n          onClick={() => handleTableCheckboxChange(\"selectAll\")}\n        >\n          Выбрать все\n        </td>\n        <td>\n          <Checkbox\n            style={{ maxWidth: 20, height: 15, color: \"green\" }}\n            name={\"selectAll\"}\n            onChange={handleGridCheckboxChange}\n            checked={(gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined) ? false : true}\n          />\n        </td>\n      </tr>\n    )\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name\n        columns.push(\n          <tr>\n            <td\n              style={{ paddingLeft: 5, cursor: \"pointer\", background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\" }}\n              name={name}\n              onClick={() => handleTableCheckboxChange(name)}\n            >\n              {gridForm.sections[s].contents[c].label}\n            </td>\n            <td>\n              <Checkbox\n                style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                name={name}\n                onChange={handleGridCheckboxChange}\n                checked={(gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined) ? false : true}\n              />\n            </td>\n          </tr>\n        )\n      }\n    }\n    return columns\n  }\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId))\n  }\n  const handleGridCheckboxChange = (event) => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = { [event.target.name]: event.target.checked }\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name]\n      }\n      // console.log(\"selectAll\", newFields)\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [event.target.name]: event.target.checked })\n    }\n  }\n  const handleTableCheckboxChange = (name) => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue }\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name]\n      }\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [name]: !gridFieldValue[name] })\n    }\n  }\n  function previewInstruction(instr) {\n    // console.log(\"SELECTED INSTR\", instr)\n    setSelectedInstruction(instr)\n  }\n  try {\n    return (\n      <Grid>\n        {isSearchForm !== null &&\n          isSearchForm === true\n          ?\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={9}>\n              <Accordion expanded={accordionExpanded} onChange={() => handleExpandAccordion()}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                >\n                  <Typography>{Form.label}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {getForm()}\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n          </Grid>\n          :\n          getForm()\n        }\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n          {buttons.map((button, index) => {\n            return createButton(button, index)\n          })}\n          {taskType !== \"showInstructionsGIKSearchForm\" && taskType !== \"showInstructionsGIKViewForm\" && taskType !== \"showInstructionsGIKTypeSelectingForm\" &&\n\n            <>\n              <Button\n                component=\"a\"\n                href=\"../Инструкция Рутокен.docx\"\n                download\n                variant=\"outlined\"\n                style={{\n                  margin: 3,\n                  backgroundColor: \"#13611B\",\n                  color: \"white\",\n                  height: 32,\n                  fontSize: 12\n                }}\n                onClick={() => buttonClick(\"downloadES\")}\n                startIcon={<DescriptionIcon />}\n              >Инструкция ЭЦП\n              </Button>\n              <Button\n                component=\"a\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.rutoken.ru/support/download/rutoken-plugin/\"\n                download\n                variant=\"outlined\"\n                style={{\n                  margin: 3,\n                  backgroundColor: \"#13611B\",\n                  color: \"white\",\n                  height: 32,\n                  fontSize: 12\n                }}\n              >Плагин\n              </Button>\n              <Button\n                component=\"a\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.rutoken.ru/support/download/windows/\"\n                download\n                variant=\"outlined\"\n                style={{\n                  margin: 3,\n                  backgroundColor: \"#13611B\",\n                  color: \"white\",\n                  height: 32,\n                  fontSize: 12\n                }}\n              >Драйвер\n              </Button>\n            </>\n          }\n        </Grid>\n        {isSearchForm === true &&\n          <ReplayIcon style={{ paddingTop: 3, cursor: \"pointer\" }} onClick={() => buttonClick(\"updateDocList\")} />\n        }\n        {/* Create grid table with data from doclist */}\n        {docList !== null &&\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <div style={{ height: \"500px\", overflow: \"auto\" }}>\n                  <table size=\"small\" class=\"main-table-style\" id={gridTableId}>\n                    <thead class=\"thead-style\" style={{ position: \"sticky\", top: 0 }}>\n                      {/* 1st Row Sections Labels */}\n                      <tr>\n                        <td class=\"td-head-first-child\" colSpan=\"1\" onContextMenu={(ev) => handleContextMenu(ev)}></td>\n                        {gridForm.sections.map((section, index) => {\n                          let showSection = checkToShowSection(section)\n                          if (showSection === true) {\n                            let lastSection = checkSectionOnLastChild(index)\n                            return (\n                              <td\n                                class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                colSpan={calculateColSpan(section.contents)}\n                                onContextMenu={(ev) => handleContextMenu(ev)}\n                              >\n                                {section.label}\n                              </td>\n                            )\n                          }\n                        })}\n                      </tr>\n                      {/* 2nd Row Sections Contents labels */}\n                      <tr>\n                        <td\n                          class=\"td-head-style-2row\"\n                          rowSpan=\"2\"\n                          style={{ \"minWidth\": \"65px\" }}\n                          onContextMenu={(ev) => handleContextMenu(ev)}\n                        >\n                          Действие\n                        </td>\n                        {gridForm.sections.map(section =>\n                          section.contents.map(contentItem => {\n                            if (contentItem.show === true) {\n                              return (\n                                <td\n                                  class=\"td-head-style-2row\"\n                                  rowSpan=\"2\"\n                                  onClick={() => sortDataByColumn(contentItem.name, contentItem.type)}\n                                  onContextMenu={(ev) => handleContextMenu(ev)}\n                                >\n                                  {contentItem.label}{sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{ marginBottom: -8 }} /> : <ArrowDropUpIcon style={{ marginBottom: -8 }} /> : \"\"}\n                                </td>\n                              )\n                            }\n                          })\n                        )}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.keys(docList).length !== 0 &&\n                        docList.map(dataItem => (\n                          <tr style={{ \"height\": 30, \"backgroundColor\": getBackgroundColor(dataItem.opened, dataItem.urgent), cursor: \"pointer\" }}>\n                            <td style={{ \"width\": 34, \"border-bottom\": \"1px solid grey\" }}>\n                              {gridFormButtons !== \"null\" &&\n                                gridFormButtons.map(button =>\n                                  <Button\n                                    key={button.name}\n                                    name={button.name}\n                                    variant=\"outlined\"\n                                    value={button.name}\n                                    onClick={() => buttonClick(button.name, dataItem)}\n                                    style={{\n                                      margin: 1,\n                                      height: 24,\n                                      fontSize: 10,\n                                      maxWidth: 32,\n                                      backgroundColor: button.backgroundColor,\n                                      borderColor: \"darkgreen\",\n                                      color: \"darkgreen\"\n                                    }}\n                                  >{button.label}\n                                  </Button>\n                                )}\n                            </td>\n                            {gridForm.sections.map(section => {\n                              return (\n                                section.contents.map(contentItem => {\n                                  if (contentItem.show === true) {\n                                    return (\n                                      <td class=\"td-body-style\" style={{ color: (selectedInstruction !== null ? (selectedInstruction.id === dataItem.id ? \"blue\" : \"black\") : \"black\") }} onClick={() => previewInstruction(dataItem)}>\n                                        {getGridFormItems(dataItem[contentItem.name], contentItem.type, dataItem, contentItem.name)}\n                                      </td>\n                                    )\n                                  }\n                                })\n                              )\n                            })}\n                          </tr>\n                        )\n                        )}\n                    </tbody>\n                  </table>\n                </div>\n                <tfoot>\n                  <tr>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <Button\n                        variant=\"outlined\"\n                        style={{ background: \"#047535\", color: \"white\", height: 28 }}\n                        onClick={() => downloadExcel()}\n                      >В EXCEL\n                      </Button>\n                    </td>\n                    <td style={{ paddingLeft: \"20px\" }}>\n                      <div style={{ minWidth: 90, color: \"black\" }}>Кол-во записей</div>\n                    </td>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <FormControl\n                        variant=\"outlined\"\n                        style={{ minWidth: 30 }}\n                      >\n                        <GridSelect\n                          onChange={handleChangeRowsPerPage}\n                          style={{ height: 25, color: \"black\" }}\n                          value={size}\n                        >\n                          <MenuItem value={10}>10</MenuItem>\n                          <MenuItem value={20}>20</MenuItem>\n                          <MenuItem value={50}>50</MenuItem>\n                          <MenuItem value={100}>100</MenuItem>\n                          <MenuItem value={200}>200</MenuItem>\n                          <MenuItem value={500}>500</MenuItem>\n                          <MenuItem value={500}>1000</MenuItem>\n                        </GridSelect>\n                      </FormControl>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На первую страницу\">\n                        <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                          <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На предыдущюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                          <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td style={{ color: \"black\", fontSize: 16 }}>\n                      <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                    </td>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <Tooltip title=\"Перейти на указанную страницу\">\n                        <Button\n                          onClick={() => GoToPage()}\n                          variant=\"outlined\"\n                          style={{\n                            height: 22,\n                            backgroundColor: \"#D1D6D6\",\n                            fontSize: 12\n                          }}\n                        >перейти\n                        </Button>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На следующюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                          <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На последнюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowLastClick()}>\n                          <LastPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()}</td>\n                    <td style={{ paddingLeft: \"30px\" }}>\n                      <div style={{ minWidth: 90, color: \"black\" }}>Общее кол-во {filteredDocList !== null ? filteredDocList.length : 0}</div>\n                    </td>\n                  </tr>\n                </tfoot>\n              </Paper>\n              {selectedInstruction !== null &&\n                <table size=\"small\" style={{ width: \"100%\" }}>\n                  {selectedInstruction.depositor !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Депонент(Со счёта):</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"depositor\", selectedInstruction.depositor)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.accFrom !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Со счёта:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"accFrom\", selectedInstruction.accFrom)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.depositor2 !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Депонент(На счёт):</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"depositor2\", selectedInstruction.depositor2)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.accTo !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>На счёт:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"accTo\", selectedInstruction.accTo)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.security !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Ценная бумага:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"security\", selectedInstruction.security) + \" \" + getSecType(selectedInstruction.security)}</td>\n                    </tr>\n\n                  }\n                  {selectedInstruction.currency !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Валюта:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"currency\", selectedInstruction.currency)}</td>\n                    </tr>\n\n                  }\n                  {selectedInstruction.security !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Эмитент:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"issuer\", selectedInstruction.issuer)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.tradingSystem !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Торговая система:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"tradingSystem\", selectedInstruction.tradingSystem)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.corrDepository !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Корр. депозитарий:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{getGridFormEnumLabel(\"corrDepository\", selectedInstruction.corrDepository)}</td>\n                    </tr>\n                  }\n                  {(selectedInstruction.ownerName !== null || selectedInstruction.ownerDocument !== null || selectedInstruction.ownerAddress !== null) &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Данные о владельце:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{selectedInstruction.ownerName + \" \" + selectedInstruction.ownerDocument + \" \" + selectedInstruction.ownerAddress}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.quantity !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Количество:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{selectedInstruction.quantity}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.basis !== null &&\n                    <tr>\n                      <td style={{ fontSize: 11 }}>Основание:</td>\n                      <td style={{ fontSize: 11, border: \"1px solid black\" }}>{selectedInstruction.basis}</td>\n                    </tr>\n                  }\n                </table>\n              }\n              <Menu\n                anchorEl={anchorEl}\n                open={openMenu}\n                onClose={handleCloseMenu}\n                MenuListProps={{\n                  'aria-labelledby': 'basic-button',\n                }}\n                style={{ paddingLeft: \"100px\" }}\n              >\n                <table>\n                  {createMenuItems()}\n                </table>\n              </Menu>\n            </Grid>\n          </Grid>\n        }\n        <Snackbar\n          open={showSnackBar}\n          onClose={() => handleCloseSnackBar()}\n          autoHideDuration={1200}\n          message={snackBarMessage}\n        />\n        <Modal\n          open={showModalCancelInstruction}\n          onClose={handleCloseModalCancelInstruction}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Введите причину отмены</h3>\n            <TextField\n              variant=\"outlined\"\n              multiline\n              autoFocus\n              name=\"cancelationReason\"\n              defaultValue={(fieldValue[\"cancelationReason\"] >= 0) ? fieldValue[\"cancelationReason\"] : \"\"}\n              onChange={handleTextChange}\n              onKeyPress={onKeyPressModalCancelInstruction}\n              style={{ width: \"100%\" }}\n            />\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"CancelInstructionSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"CancelInstructionCancelButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#E73639\"\n              }}\n            >Отмена\n            </Button>\n          </div>\n        </Modal>\n        <Modal\n          open={showModalEnterPin}\n          onClose={handleCloseModalEnterPin}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Введите ПИН код Рутокена</h3>\n            <FormControl variant=\"outlined\" style={{ width: \"100%\" }} error={wrongPin}>\n              <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n              <OutlinedInput\n                type={showPin ? 'text' : 'password'}\n                defaultValue={rutokenPin}\n                onChange={handlePinChange}\n                onKeyPress={onKeyPressModalEnterPin}\n                autoFocus\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPin}\n                      edge=\"end\"\n                    >\n                      {showPin ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={25}\n              />\n            </FormControl>\n            {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"SignInstructionSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={handleCloseModalEnterPin}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#E73639\"\n              }}\n            >Отмена\n            </Button>\n          </div>\n        </Modal>\n\n      </Grid>\n    )\n  }\n  catch (error) {\n    console.log(\"ERROR\", error)\n    return (\n      <Grid container direction=\"row\" justify=\"center\" spacing={0}>\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      </Grid>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}