{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\ImportFileGIK\\\\ImportFileGIK.jsx\";\n// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper'; // Table\n\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\"; // Import libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport ImportConfig from './ImportConfig.json';\nimport XLSX from 'xlsx';\n\nvar generator = require('generate-password');\n\nvar convert = require('xml-js');\n\nexport default (props => {\n  // This.state\n  const [userProfile] = useState(props.userProfile);\n  const [process_id] = useState(props.userTask.process_id);\n  const [session_id] = useState(props.userTask.session_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [taskType] = useState(props.userTask.taskType);\n  const [gridForm] = useState(props.userTask.gridForm);\n  const [buttons] = useState(props.userTask.buttons);\n  const [docList, setDocList] = useState(null);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [showLoading, setShowLoading] = useState(false);\n  useEffect(() => {\n    console.log(\"IMPORT PROPS\", props);\n  }, []); // Main button click handler\n\n  function buttonClick(buttonName, dataItem) {\n    console.log(\"Button\", buttonName);\n\n    if (buttonName === \"insertDataToDB\") {\n      if (docList !== null) {\n        let testDosList = [];\n        testDosList.push(docList[9]);\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"insertDataToDB\"\n            },\n            // document: {value: JSON.stringify(docList)}\n            document: {\n              value: JSON.stringify(testDosList)\n            }\n          }\n        };\n        console.log(\"button insertDataToDB: \", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id); // swAlert(\"Данные загружены в базу!\", \"success\")\n      } else {\n        swAlert(\"Данные для загрузки не обнаружены!\", \"warning\");\n      }\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"button: \", buttonName);\n    }\n  } // Returns Button component\n\n\n  function createButton(button, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      id: () => keyGen(5),\n      name: button.name,\n      key: index,\n      onClick: () => buttonClick(button.name),\n      style: {\n        margin: 3,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      value: button.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, button.label);\n  } // custom allerts\n\n\n  function swAlert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // random numbers generator\n\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function handleChange(e) {\n    const files = e.target.files;\n\n    if (files && files[0]) {\n      handleFile(files[0]);\n    }\n  }\n\n  function handleFile(inpFile) {\n    setShowLoading(true);\n    setDocList(null);\n\n    try {\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        /* Parse data */\n        const strxml = e.target.result;\n        let convertedJson = JSON.parse(convert.xml2json(strxml, {\n          compact: true,\n          spaces: 2\n        }));\n        let data = convertedJson.РеестрИпотечныхЦенныхБумаг.ИпотечныеЦенныеБумаги.ИпотечнаяЦеннаяБумага;\n        let newDocList = [];\n\n        for (let i = 1; i < data.length; i++) {\n          let newItem = {};\n\n          for (let key in data[i]) {\n            let name = ImportConfig.namesConfig[key];\n            let value = null;\n\n            if (data[i][key][\"_text\"] !== undefined) {\n              value = data[i][key][\"_text\"];\n            }\n\n            newItem[name] = value;\n          }\n\n          newDocList.push(newItem);\n        } // console.log(\"DATA\", newDocList)\n\n\n        setDocList(newDocList);\n        setShowLoading(false);\n      };\n\n      reader.readAsText(inpFile);\n    } catch (re) {\n      swAlert(\"Нет данных для отображения!\", \"warning\");\n    }\n  } // function handleFile(selectedFile){\n  //   const fileReader = new FileReader()\n  //   fileReader.onload = function(event) {\n  //     var data = event.target.result;\n  //     var workbook = XLSX.read(data, {\n  //       type: \"binary\"\n  //     });\n  //     workbook.SheetNames.forEach(sheet => {\n  //       let rowObject = XLSX.utils.sheet_to_row_object_array(\n  //         workbook.Sheets[sheet]\n  //       );\n  //       let header = rowObject[0]\n  //       let arr = []\n  //       for(let i=1; i<rowObject.length; i++){\n  //         let newObj = {}\n  //         for(let key in rowObject[i]){\n  //           newObj[header[key]] = rowObject[i][key]\n  //         }\n  //         arr.push(newObj)\n  //       }\n  //       console.log(\"DATA\", rowObject);\n  //     });\n  //   };\n  //   fileReader.readAsBinaryString(selectedFile);\n  // }\n\n\n  function getGridFormItems(name, value, index) {\n    if (name === \"rowNumber\") {\n      let rowNum = index + 1;\n      return /*#__PURE__*/React.createElement(\"td\", {\n        align: \"left\",\n        style: {\n          \"color\": \"black\",\n          \"fontSize\": 12,\n          \"border\": \"1px solid grey\",\n          \"fontWeight\": \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 14\n        }\n      }, rowNum);\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"left\",\n          style: {\n            \"color\": \"black\",\n            \"fontSize\": 12,\n            \"border\": \"1px solid grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 16\n          }\n        }, \"-\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"left\",\n          style: {\n            \"color\": \"black\",\n            \"fontSize\": 12,\n            \"border\": \"1px solid grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 16\n          }\n        }, value);\n      }\n    }\n  }\n\n  try {\n    if (buttons === undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 38\n        }\n      }, \"No Buttons\");\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0438\\u043C\\u043F\\u043E\\u0440\\u0442\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438\\u0437 XML\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      id: \"file\" // accept={\"application/xml\"} \n      ,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, buttons.map((button, index) => {\n      return createButton(button, index);\n    }))))), showLoading === true && /*#__PURE__*/React.createElement(\"div\", {\n      align: \"center\",\n      style: {\n        paddingTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      style: {\n        width: \"100%\",\n        \"border-collapse\": \"collapse\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      style: {\n        backgroundColor: sectionColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, gridForm.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: section.contents.length,\n        style: {\n          \"color\": \"black\",\n          \"fontSize\": 13,\n          \"border\": \"1px solid grey\",\n          \"text-align\": \"center\",\n          \"font-weight\": \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }, section.label);\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }\n    }, gridForm.sections.map(section => section.contents.map(contentItem => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        rowSpan: \"2\",\n        style: {\n          \"color\": \"black\",\n          \"fontSize\": 12,\n          \"border\": \"1px solid grey\",\n          \"text-align\": \"center\",\n          \"font-weight\": \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 27\n        }\n      }, contentItem.label);\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, docList !== null && docList.map((dataItem, index) => gridForm.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          height: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 27\n        }\n      }, section.contents.map(contentItem => {\n        return getGridFormItems(contentItem.name, dataItem[contentItem.name], index);\n      }));\n    }))))))));\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 12\n      }\n    }, \"error\");\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Grid","Button","Paper","Table","TableHead","TableRow","TableBody","TableCell","swal","ImportConfig","XLSX","generator","require","convert","props","userProfile","process_id","userTask","session_id","taskID","taskType","gridForm","buttons","docList","setDocList","sectionColor","showLoading","setShowLoading","console","log","buttonClick","buttonName","dataItem","testDosList","push","commandJson","commandType","variables","userAction","value","document","JSON","stringify","sendFieldValues","clearTabData","swAlert","createButton","button","index","keyGen","name","margin","backgroundColor","height","fontSize","label","text","icon","ok","length","password","generate","numbers","handleChange","e","files","target","handleFile","inpFile","reader","FileReader","onload","strxml","result","convertedJson","parse","xml2json","compact","spaces","data","РеестрИпотечныхЦенныхБумаг","ИпотечныеЦенныеБумаги","ИпотечнаяЦеннаяБумага","newDocList","i","newItem","key","namesConfig","undefined","readAsText","re","getGridFormItems","rowNum","color","width","map","paddingTop","sections","section","contents","contentItem","error"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/ImportFileGIK/ImportFileGIK.jsx"],"sourcesContent":["// Import material and react components\nimport React, {useState, useEffect} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n// Table\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\n// Import libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport ImportConfig from './ImportConfig.json';\nimport XLSX from 'xlsx';\n\nvar generator = require('generate-password');\nvar convert = require('xml-js');\n\nexport default(props) =>{\n  // This.state\n  const [userProfile] = useState(props.userProfile)\n  const [process_id] = useState(props.userTask.process_id)\n  const [session_id] = useState(props.userTask.session_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [taskType] = useState(props.userTask.taskType)\n  const [gridForm] = useState(props.userTask.gridForm)\n  const [buttons] = useState(props.userTask.buttons)\n  const [docList, setDocList] = useState(null)\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [showLoading, setShowLoading] = useState(false)\n  \n\n  useEffect(()=>{\n    console.log(\"IMPORT PROPS\", props)\n  },[])\n\n  // Main button click handler\n  function buttonClick(buttonName, dataItem){\n    console.log(\"Button\", buttonName)\n    if(buttonName === \"insertDataToDB\"){\n      if(docList !== null){\n        let testDosList = []\n        testDosList.push(docList[9])\n        const commandJson = \n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {value: \"insertDataToDB\"},\n            // document: {value: JSON.stringify(docList)}\n            document: {value: JSON.stringify(testDosList)}\n          }\n        }\n        console.log(\"button insertDataToDB: \", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n        // swAlert(\"Данные загружены в базу!\", \"success\")\n      }\n      else{\n        swAlert(\"Данные для загрузки не обнаружены!\", \"warning\")\n      }\n    }\n    else if(buttonName === \"cancel\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"cancel\"},\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else{\n      console.log(\"button: \", buttonName)\n    }\n  }\n  // Returns Button component\n  function createButton(button, index){\n    return(\n      <Button variant=\"outlined\"\n        id = {()=> keyGen(5)}\n        name = {button.name}\n        key = {index}\n        onClick = {()=> buttonClick(button.name)}\n        style={{\n          margin: 3,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        }}\n        value = {button.name}\n        >\n          {button.label}\n      </Button> \n    )\n  }\n  // custom allerts\n  function swAlert(text, icon){\n    return(\n      swal({\n        text: text,\n        icon: icon,\n        buttons: {ok: \"Ок\"}\n      })\n    )\n  }\n  // random numbers generator\n  function keyGen(length){\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function handleChange(e) {\n    const files = e.target.files\n    if (files && files[0]){\n      handleFile(files[0])\n    }\n  }\n  function handleFile(inpFile){\n    setShowLoading(true)\n    setDocList(null)\n    try{\n      const reader = new FileReader()  \n      reader.onload = (e) => {\n        /* Parse data */\n        const strxml = e.target.result\n        let convertedJson = JSON.parse(convert.xml2json(strxml, {compact: true, spaces: 2}))\n        let data = convertedJson.РеестрИпотечныхЦенныхБумаг.ИпотечныеЦенныеБумаги.ИпотечнаяЦеннаяБумага\n        \n        let newDocList = []\n        for(let i=1; i<data.length; i++){\n          let newItem = {}\n          for(let key in data[i]){\n            let name = ImportConfig.namesConfig[key]\n            let value = null\n            if(data[i][key][\"_text\"] !== undefined){\n              value = data[i][key][\"_text\"]\n            }\n            newItem[name] = value\n          }\n          newDocList.push(newItem)\n        }\n        // console.log(\"DATA\", newDocList)\n        setDocList(newDocList)\n        setShowLoading(false)\n      }\n      reader.readAsText(inpFile)\n    }\n    catch(re){\n      swAlert(\"Нет данных для отображения!\", \"warning\")\n    }\n  }\n  // function handleFile(selectedFile){\n  //   const fileReader = new FileReader()\n  //   fileReader.onload = function(event) {\n  //     var data = event.target.result;\n\n  //     var workbook = XLSX.read(data, {\n  //       type: \"binary\"\n  //     });\n  //     workbook.SheetNames.forEach(sheet => {\n  //       let rowObject = XLSX.utils.sheet_to_row_object_array(\n  //         workbook.Sheets[sheet]\n  //       );\n  //       let header = rowObject[0]\n  //       let arr = []\n  //       for(let i=1; i<rowObject.length; i++){\n  //         let newObj = {}\n  //         for(let key in rowObject[i]){\n  //           newObj[header[key]] = rowObject[i][key]\n  //         }\n  //         arr.push(newObj)\n  //       }\n  //       console.log(\"DATA\", rowObject);\n  //     });\n  //   };\n  //   fileReader.readAsBinaryString(selectedFile);\n  // }\n  function getGridFormItems(name, value, index){\n    if(name === \"rowNumber\"){\n      let rowNum = index + 1\n      return(<td align=\"left\" style={{\"color\": \"black\", \"fontSize\": 12, \"border\": \"1px solid grey\", \"fontWeight\": \"bold\"}}>{rowNum}</td>)\n    }\n    else{\n      if(value === null || value === \"\" || value === undefined){\n        return(<td align=\"left\" style={{\"color\": \"black\", \"fontSize\": 12, \"border\": \"1px solid grey\"}}>{\"-\"}</td>)\n      }      \n      else{\n        return(<td align=\"left\" style={{\"color\": \"black\", \"fontSize\": 12, \"border\": \"1px solid grey\"}}>{value}</td>)\n      }\n    }\n    \n  }\n  try{\n    if(buttons === undefined){return <div>No Buttons</div>}\n    return (\n      <Grid>\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n          <Grid item xs={8}>\n            <Paper>\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow style={{height: 30}}>\n                      <TableCell\n                        style={{\n                          color: \"black\", \n                          fontSize: 14,\n                          backgroundColor:  sectionColor,\n                          width: \"100%\"\n                        }}>\n                        Форма импорта данных из XML\n                      </TableCell> \n                    </TableRow>\n                  </TableHead>\n                </Table>\n                <br/>\n                <input \n                  type=\"file\" \n                  className=\"form-control\" \n                  id=\"file\" \n                  // accept={\"application/xml\"} \n                  onChange={handleChange} \n                />\n                <br />\n              </Grid>\n              <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                {buttons.map((button, index) => {\n                  return createButton(button, index)\n                })}\n              </Grid> \n            </Paper>\n          </Grid>\n        </Grid>\n        {showLoading === true &&\n          <div align=\"center\" style={{paddingTop: 20}}>\n            <div>Загрузка...</div>\n          </div> \n        }\n        <br></br>\n        {/* Create grid table with data from doclist */}\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n          <Grid item sm={\"auto\"}>\n            <Paper>\n              <table \n                size=\"small\"\n                style={{width:\"100%\", \"border-collapse\": \"collapse\"}}\n              >\n                <thead style={{backgroundColor: sectionColor}}>\n                  <tr>\n                    {gridForm.sections.map(section => {\n                      return (\n                        <td colSpan={section.contents.length} style={{\"color\": \"black\", \"fontSize\": 13, \"border\": \"1px solid grey\", \"text-align\": \"center\", \"font-weight\":\"bold\"}}>{section.label}</td>\n                      )\n                    })}\n                  </tr>\n                  <tr>\n                    {gridForm.sections.map(section =>\n                      section.contents.map(contentItem => {\n                        return (\n                          <td rowSpan=\"2\" style={{\"color\": \"black\", \"fontSize\": 12, \"border\": \"1px solid grey\", \"text-align\": \"center\", \"font-weight\":\"bold\"}}>{contentItem.label}</td>\n                        )\n                      })\n                    )}\n                  </tr>\n                </thead>\n                <TableBody>\n                  {docList !== null &&\n                    docList.map((dataItem, index) => (\n                      gridForm.sections.map(section => {\n                        return(\n                          <tr style={{height: 30}}>\n                            {section.contents.map(contentItem => {\n                              return(getGridFormItems(contentItem.name, dataItem[contentItem.name], index))\n                            })}\n                          </tr>\n                        )\n                      })\n                    )\n                  )} \n                                      \n                </TableBody>\n              </table>              \n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>  \n    )\n  }\n  catch(error){\n    console.log(\"ERROR\", error)\n    return <div>error</div>\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}