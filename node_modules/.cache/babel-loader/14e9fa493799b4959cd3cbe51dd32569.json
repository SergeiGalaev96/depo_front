{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\Instructions\\\\Instructions.jsx\";\n// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select'; // import MaskedInput from 'react-text-mask';\n\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Menu from '@mui/material/Menu'; // import Input from '@material-ui/core/Input';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridSelect from '@material-ui/core/Select'; // PIN components\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'; // Icons\n\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // Accordion\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Import libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport hotkeys from 'hotkeys-js';\nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [process_id] = useState(props.userTask.process_id);\n  const [session_id] = useState(props.userTask.session_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [taskType] = useState(props.userTask.taskType);\n  const [enumData] = useState(props.userTask.enumData);\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [fieldValue, setFieldValue] = useState({}); // opened: false\n\n  const [docId] = useState(props.userTask.docId);\n  const [buttons] = useState(props.userTask.buttons);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const [showModalCancelInstruction, setShowModalCancelInstruction] = useState(false);\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false);\n  const [updateState, setUpdateState] = useState(null);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [accordionExpanded, setAccordionExpanded] = useState(false);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  const [gridTableId] = useState(getUUID());\n  const [gridFieldValue, setGridFieldValue] = useState({}); // Initializing\n\n  useEffect(() => {\n    console.log(\"INSTR PROPS\", props);\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        setFilteredDocList(parsedData);\n\n        if (taskType !== \"showInstructionsTypeSelectingForm\") {\n          setIsSearchForm(true);\n        }\n\n        setInitialDocList(parsedData);\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"));\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc));\n        } else {\n          fetchBySize(0, s - 1, sortedDocList);\n        }\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    } else {\n      setIsSearchForm(false);\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      let fields = {};\n\n      if (taskType === \"showInstructionsCreationForm\") {\n        if (userProfile.userRole === \"3\") {\n          let newForm = Form;\n\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              if (Form.sections[s].contents[c].name === \"depositor2\") {\n                // console.log(\"FFF\", Form.sections[s].contents[c])\n                if (Form.sections[s].contents[c].show === true) {\n                  newForm.sections[s].contents[c].edit = false;\n                  setForm(newForm);\n\n                  for (let i = 0; i < props.userTask.enumData.length; i++) {\n                    if (props.userTask.enumData[i].name === \"depositor2\") {\n                      for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n                        if (parseInt(props.userProfile.partner) === props.userTask.enumData[i].data[d].partner) {\n                          let depositorId = props.userTask.enumData[i].data[d].id;\n                          console.log(\"DDD\", depositorId);\n                          fields[\"depositor2\"] = depositorId;\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                let fieldName = Form.sections[s].contents[c].name;\n                fields[fieldName] = parsedSelectedDoc[fieldName];\n              }\n            }\n          }\n        } else {\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              let fieldName = Form.sections[s].contents[c].name;\n              fields[fieldName] = parsedSelectedDoc[fieldName];\n            }\n          }\n        }\n      } else {\n        if (Object.keys(parsedSelectedDoc).length > 0) {\n          for (let s = 0; s < Form.sections.length; s++) {\n            for (let c = 0; c < Form.sections[s].contents.length; c++) {\n              let fieldName = Form.sections[s].contents[c].name;\n              fields[fieldName] = parsedSelectedDoc[fieldName];\n            }\n          }\n        }\n      }\n\n      console.log(\"SDOC\", parsedSelectedDoc);\n      console.log(\"INITIAL FIELDVALUES\", fields);\n      setSelectedDoc(parsedSelectedDoc);\n      setFieldValue(fields);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let eData = props.userTask.enumData;\n      let newEnumOptions = {};\n\n      for (let i = 0; i < eData.length; i++) {\n        if (eData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": eData[i].name\n          }];\n\n          if (eData[i].name === \"type\") {\n            if (props.userTask.taskType === \"showInstructionsTypeSelectingForm\") {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                if (props.userProfile[getInstructionTypeName(eData[i].data[d].id)] === true) {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  });\n                }\n              }\n            } else {\n              for (let d = 0; d < eData[i].data.length; d++) {\n                options.push({\n                  \"value\": eData[i].data[d].id,\n                  \"label\": eData[i].data[d].label,\n                  \"name\": eData[i].name\n                });\n              }\n            }\n          } else if (eData[i].name === \"accFrom\" || eData[i].name === \"accTo\") {\n            if (props.userTask.taskType === \"showInstructionsCreationForm\" || props.userTask.taskType === \"showInstructionsViewForm\") {\n              let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n              let instructionTypeId = parsedSelectedDoc.type;\n              let filteredRelations = getInstrAccRelations(instructionTypeId, eData);\n\n              for (let d = 0; d < eData[i].data.length; d++) {\n                // console.log(\"PUSH ? \", eData[i].data[d].label)\n                if (filteredRelations.length > 0) {\n                  let checkResult = checkForPushing(eData[i].data[d].label, instructionTypeId);\n\n                  if (checkResult.enableToPush === true) {\n                    options.push({\n                      \"value\": eData[i].data[d].id,\n                      \"label\": eData[i].data[d].label,\n                      \"name\": eData[i].name\n                    });\n                  }\n                } else {\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\": eData[i].name\n                  });\n                }\n              }\n            }\n          } else {\n            for (let d = 0; d < eData[i].data.length; d++) {\n              options.push({\n                \"value\": eData[i].data[d].id,\n                \"label\": eData[i].data[d].label,\n                \"name\": eData[i].name\n              });\n            }\n          }\n\n          newEnumOptions[eData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n    }\n\n    if (gridForm !== null) {\n      let newFields = {};\n\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show;\n        }\n      }\n\n      setGridFieldValue(newFields);\n    } // setUpdateState(getUUID())\n\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded);\n    }\n  }); // CancelInstruction MODAL\n\n  const handleOpenModalCancelInstruction = () => {\n    setShowModalCancelInstruction(true);\n  };\n\n  const handleCloseModalCancelInstruction = () => {\n    setShowModalCancelInstruction(false);\n  };\n\n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true);\n  };\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded);\n  }\n\n  function getInstructionTypeName(id) {\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionTypesNames\") {\n        for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n          if (props.userTask.enumData[i].data[d].id === id) {\n            return props.userTask.enumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function getInstrAccRelations(iType, eData) {\n    let filteredRelations = [];\n\n    for (let i = 0; i < eData.length; i++) {\n      if (eData[i].name === \"instructionAccountRelations\") {\n        for (let d = 0; d < eData[i].data.length; d++) {\n          if (eData[i].data[d].id === iType) {\n            filteredRelations.push(eData[i].data[d]);\n          }\n        }\n      }\n    }\n\n    return filteredRelations;\n  } // filter accounts that can be selected by instruction type\n\n\n  function checkForPushing(label, instructionTypeId) {\n    let checkResult = {\n      enableToPush: false,\n      accountShortName: null\n    };\n\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"instructionAccountRelations\") {\n        for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n          if (props.userTask.enumData[i].data[d].id === instructionTypeId) {\n            let splitedAccountName = props.userTask.enumData[i].data[d].label.split(\"-\");\n            let accountShortName = splitedAccountName[1];\n            let splitedAccountLabel = label.split(\"-\");\n            let shortLabel = splitedAccountLabel[1];\n\n            if (shortLabel === accountShortName) {\n              if (userProfile.userRole === \"3\" || userProfile.userRole === \"4\" || userProfile.userRole === \"8\") {\n                let accPartner = splitedAccountLabel[2];\n\n                if (accPartner === userProfile.partner) {\n                  checkResult[\"enableToPush\"] = true;\n                  checkResult[\"accountShortName\"] = accountShortName;\n                  break;\n                }\n              } else {\n                checkResult[\"enableToPush\"] = true;\n                checkResult[\"accountShortName\"] = accountShortName;\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return checkResult;\n  } // RuToken functions\n\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  }\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\")\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  }); // catch errors while signing docs\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  } // Sign transfer order with rutoken\n\n\n  function sign(data, commandJson) {\n    try {\n      // Получение текста для подписи\n      var textToSign = data;\n\n      if (textToSign.length == 0) {\n        console.log(\"Не хватает текста для подписи\");\n        return;\n      }\n\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices().then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0]);\n          } else {\n            alert(\"Рутокен не обнаружен\");\n          }\n        }) // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice;\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n        }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve();\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin);\n          }\n        }) // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n        }).then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0];\n            return plugin.parseCertificate(rutokenHandle, certs[0]);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs;\n          console.log(\"RUTDATA\", certData);\n\n          if (certHandle.length > 0) {\n            var options = {};\n            let inn = \"\";\n            let fullName = \"\";\n\n            for (let i = 0; i < certData.subject.length; i++) {\n              if (certData.subject[i].rdn === \"serialNumber\") {\n                inn = certData.subject[i].value;\n              }\n\n              if (certData.subject[i].rdn === \"commonName\") {\n                fullName = certData.subject[i].value;\n              }\n            }\n\n            props.setEsInn(inn);\n            props.setEsUserFullName(fullName);\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n            let instructionToSign = commandJson.variables.document.value;\n\n            if (selectedDoc.filled === undefined || selectedDoc.filled === null || selectedDoc.filled === false) {\n              // Depositor\n              instructionToSign[\"filled\"] = true;\n              instructionToSign[\"filled_at\"] = props.getCurrentFullDateTime();\n              instructionToSign[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n              instructionToSign[\"signed_depositor_inn\"] = inn;\n              instructionToSign[\"signed_depositor_full_name\"] = fullName;\n              instructionToSign[\"signed_at_depositor\"] = props.getCurrentFullDateTime();\n              commandJson.variables.status.value = \"filled\";\n            } else {\n              // Depository\n              instructionToSign[\"onExecution\"] = true;\n              instructionToSign[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n              instructionToSign[\"signed_cd_inn\"] = inn;\n              instructionToSign[\"signed_cd_full_name\"] = fullName;\n              instructionToSign[\"signed_at_cd\"] = props.getCurrentFullDateTime();\n              commandJson.variables.status.value = \"onExecution\";\n            }\n\n            commandJson.variables.document.value = JSON.stringify(instructionToSign);\n            console.log(\"SIGN\", instructionToSign, commandJson.variables.document);\n            handleCloseModalEnterPin(); // swAllert(\"Поручение успешно подписано!\", \"success\")\n\n            props.sendFieldValues(commandJson);\n            props.clearTabData(commandJson.process_id);\n            return plugin.sign(rutokenHandle, certHandle, textToSign, plugin.DATA_FORMAT_PLAIN, options);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle);\n        }, handleError);\n      } else {\n        swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n      }\n    } catch (er) {\n      console.log(\"Rutoken ERR\");\n    }\n  } // Input handlers\n\n\n  const handleCheckboxChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    }); // console.log(\"Check change\", event.target.checked)\n  }; // Radio group handler\n\n\n  const handleRadioGroupChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  } // Integer input handler\n\n\n  const handleIntChange = event => {\n    console.log(\"EVENT\", event.target.name, event.target.value);\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    }); // setUpdateState(getUUID())\n  }; // Float input handler\n\n\n  const handleFloatChange = event => {\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let float = parseFloat(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: float\n    });\n    console.log(\"FLOAT CHANGE\", event.target.name, fieldValue);\n  };\n\n  function handleDateTimeChange(event) {\n    let fullDate = props.parseDate(event.target.value);\n    var hours = new Date().getHours();\n    var minutes = new Date().getMinutes();\n    var seconds = new Date().getSeconds();\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\";\n    fieldValue[event.target.name] = convertedDate;\n    setFieldValue(fieldValue); // console.log(\"DATE CHANGE\", event.target.value)\n  } // Handler of select copmponet changes\n\n\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value;\n    console.log(\"OPT\", option.name, option.value);\n    var updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        noSuchOption = false;\n        setSelectedOptions(updateSelectedOptions);\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    if (option.name === \"depositor\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // Первый депонент выбран нужно отфильтровать поле \"Со счета\" и отобразить счета только выбранного депонента\n      let newOptions = [];\n      let depositorPartner = getDepositorPartner(option.value); // find depositor partner id\n      // console.log(\"PARTNER\", depositorPartner)\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"accFrom\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].partner === depositorPartner) {\n              // compare depositor partner and account partner\n              newOptions.push({\n                \"value\": enumData[i].data[d].id,\n                \"label\": enumData[i].data[d].label,\n                \"name\": enumData[i].name\n              });\n            }\n          }\n        }\n      }\n\n      console.log(\"NEW ENUMS\", newOptions);\n      enumOptions[\"accFrom\"] = newOptions;\n      setEnumOptions(enumOptions);\n    } else if (option.name === \"depositor2\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // Второй депонент выбран нужно отфильтровать поле \"На счет\" и отобразить счета только выбранного депонента\n      let newOptions = [];\n      let depositorPartner = getDepositorPartner(option.value); // find depositor partner id\n      // console.log(\"PARTNER\", depositorPartner)\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"accTo\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].partner === depositorPartner) {\n              // compare depositor partner and account partner\n              let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"]);\n              console.log(\"PUSH\", enumData[i].data[d].label);\n\n              if (checkResult.enableToPush === true) {\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\": enumData[i].name\n                });\n              }\n            }\n          }\n        }\n      } // console.log(\"NEW ENUMS\", newOptions)\n\n\n      enumOptions[\"accTo\"] = newOptions;\n      setEnumOptions(enumOptions);\n    } else if (option.name === \"security\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")) {\n      // выбрана ценная бумага нужно найти эмитента и отобразить\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"security\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].id === option.value) {\n              let issuerId = enumData[i].data[d].issuer;\n              fieldValue[\"issuer\"] = issuerId;\n\n              for (let j = 0; j < enumData.length; j++) {\n                if (enumData[j].name === \"issuer\") {\n                  // console.log(\"issuerID\", issuerId)\n                  for (let h = 0; h < enumData[j].data.length; h++) {\n                    if (enumData[j].data[h].id === issuerId) {\n                      let issuerOption = {\n                        value: issuerId,\n                        name: \"issuer\",\n                        label: enumData[j].data[h].label\n                      };\n                      console.log(\"issuerOption\", issuerOption);\n                      let noIssuerOption = true;\n\n                      for (let y = 0; y < updateSelectedOptions.length; y++) {\n                        if (updateSelectedOptions[y].name === \"issuer\") {\n                          updateSelectedOptions[y] = issuerOption;\n                          noIssuerOption = false;\n                          setSelectedOptions(updateSelectedOptions);\n                          break;\n                        } else {\n                          noIssuerOption = true;\n                        }\n                      }\n\n                      if (noIssuerOption === true) {\n                        updateSelectedOptions.push(issuerOption);\n                        setSelectedOptions(updateSelectedOptions); // console.log(\"NO Issuer\", updateSelectedOptions)\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      } // console.log(\"NEW ENUMS\", newOptions)\n      // enumOptions[\"issuer\"] = newOptions\n      // setEnumOptions(enumOptions)\n\n    }\n\n    setFieldValue(fieldValue);\n  }\n\n  function getDepositorPartner(depId) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"depositor\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === depId) {\n            return enumData[i].data[d].partner;\n          }\n        }\n      }\n    }\n  } // Returns random id\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Collecting all field values and return as attributes\n\n\n  function getFieldValuesCreateDocument() {\n    let fields = {};\n\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\") {\n        fields[key] = fieldValue[key];\n      }\n    }\n\n    return fields;\n  }\n\n  function getFieldValuesSaveInstruction() {\n    let fields = {\n      filled: false,\n      onExecution: false,\n      executed: false,\n      canceled: false,\n      opened: false,\n      // \"filledUser\" : userProfile.firstName + \" \" + userProfile.lastName,\n      signed: false\n    };\n\n    for (let key in fieldValue) {\n      if (fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\") {\n        fields[key] = fieldValue[key];\n      }\n    }\n\n    return fields;\n  } // Collect data to update doc\n\n\n  function getFieldValuesUpdateInstruction() {\n    let docToUpdate = selectedDoc; // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false;\n        } else {\n          docToUpdate[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToUpdate;\n  }\n\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false;\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n            return checkedSuccessfuly;\n          } else {\n            checkedSuccessfuly = true;\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Main button click handler\n\n\n  function buttonClick(buttonName, dataItem) {\n    // console.log(\"Button\", buttonName)\n    if (buttonName === \"findDocument\") {\n      filterDocList(0, size - 1, initialDocList, fieldValue);\n    } else if (buttonName === \"createDocument\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        const createDocument = getFieldValuesCreateDocument();\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"createDocument\"\n            },\n            selectedDoc: {\n              value: JSON.stringify(createDocument)\n            },\n            searchDoc: {\n              value: JSON.stringify(fieldValue)\n            },\n            userId: {\n              value: userProfile.userId\n            },\n            userRole: {\n              value: userProfile.userRole\n            }\n          }\n        };\n        console.log(\"button createDocument: \", commandJson);\n        let checkResult = checkForRequieredFields();\n\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } // else if(buttonName === \"selectSample\"){\n    //   if(props.operDayIsOpened === false){\n    //     swal({\n    //       text: \"Операционный день закрыт вы не можете создавать поручения!\",\n    //       icon: \"warning\",\n    //       buttons: {ok: \"Ок\"}\n    //     })\n    //   }\n    //   else{\n    //     const commandJson = \n    //     {\n    //       commandType: \"completeTask\",\n    //       session_id: session_id,\n    //       process_id: process_id,\n    //       taskID: taskID,\n    //       variables: {\n    //         userAction: {value: \"selectSample\"},\n    //         searchDoc: {value: JSON.stringify(fieldValue)}\n    //       }\n    //     }\n    //     console.log(\"button selectSample: \", commandJson)\n    //     props.sendFieldValues(commandJson)\n    //     props.clearTabData(process_id)\n    //   }\n    // }\n    else if (buttonName === \"selectInstruction\") {\n      let createFormDefId = null;\n      let report = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              createFormDefId = enumData[k].data[d].create_form;\n              report = enumData[k].data[d].reportName;\n            }\n          }\n        }\n      }\n\n      let copyFields = dataItem;\n      dataItem.filled = null;\n      dataItem.filledUser = null;\n      dataItem.filled_at = null;\n      dataItem.onExecution = null;\n      dataItem.onExecutionUser = null;\n      dataItem.executed = null;\n      dataItem.executedUser = null;\n      dataItem.onExecutionDate = null;\n      dataItem.executed_at = null;\n      dataItem.signed = null;\n      dataItem.signed_at = null;\n      dataItem.signed_at_cd = null;\n      dataItem.signed_at_depositor = null;\n      dataItem.signed_user_full_name = null;\n      dataItem.signed_depositor_inn = null;\n      dataItem.signed_depositor_full_name = null;\n      dataItem.signed_cd_inn = null;\n      dataItem.signed_cd_full_name = null;\n      dataItem.canceled = null;\n      dataItem.canceledUser = null;\n      dataItem.canceledDate = null;\n      dataItem.filled = null;\n      dataItem.filled = null;\n      dataItem.filled = null; // for(let s=0; s<Form.sections.length; s++){\n      //   for(let c=0; c<Form.sections[s].contents.length; c++){\n      //     let fieldName = Form.sections[s].contents[c].name\n      //     if(Form.sections[s].contents[c].show === true){\n      //       copyFields[fieldName] = dataItem[fieldName]\n      //     }\n      //   }\n      // }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"createInstruction\"\n          },\n          selectedDoc: {\n            value: JSON.stringify(copyFields)\n          },\n          instructionType: {\n            value: fieldValue[\"type\"]\n          },\n          createFormDefId: {\n            value: createFormDefId\n          },\n          reportName: {\n            value: report\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button selectInstruction: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"editDocument\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"editDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          }\n        }\n      };\n      console.log(\"button editDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocument\") {\n      const updateDocument = getFieldValuesUpdateInstruction();\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateDocument)\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          }\n        }\n      };\n      console.log(\"button updateDocument: \", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        let createFormDefId = null;\n        let report = null;\n\n        for (let k = 0; k < enumData.length; k++) {\n          if (enumData[k].name === \"type\") {\n            for (let d = 0; d < enumData[k].data.length; d++) {\n              if (fieldValue[\"type\"] === enumData[k].data[d].id) {\n                createFormDefId = enumData[k].data[d].create_form;\n                report = enumData[k].data[d].reportName;\n              }\n            }\n          }\n        }\n\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"createInstruction\"\n            },\n            userId: {\n              value: userProfile.userId\n            },\n            userRole: {\n              value: userProfile.userRole\n            },\n            selectedDoc: {\n              value: JSON.stringify({\n                type: fieldValue[\"type\"]\n              })\n            },\n            instructionType: {\n              value: fieldValue[\"type\"]\n            },\n            createFormDefId: {\n              value: createFormDefId\n            },\n            reportName: {\n              value: report\n            }\n          }\n        };\n        console.log(\"button createInstruction: \", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"saveInstruction\") {\n      const createDocument = getFieldValuesSaveInstruction();\n      let notBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getNotificationsCount\"\n          }\n        }\n      };\n      let showTreansferOrder = true;\n      let transferOrder = {\n        instruction_id: \"null\",\n        registered_person: fieldValue[\"ownerName\"],\n        address: fieldValue[\"ownerAddress\"],\n        security: fieldValue[\"security\"],\n        issuer: fieldValue[\"issuer\"],\n        quantity_int: fieldValue[\"quantity\"],\n        basis: fieldValue[\"basis\"]\n      };\n\n      for (let t = 0; t < enumData.length; t++) {\n        if (enumData[t].name === \"issuer\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"issuer\"] === enumData[t].data[dt].id) {\n              transferOrder[\"registrar\"] = enumData[t].data[dt].registrar;\n            }\n          }\n        }\n\n        if (enumData[t].name === \"security\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"security\"] === enumData[t].data[dt].id) {\n              transferOrder[\"security_type\"] = enumData[t].data[dt].security_type;\n            }\n          }\n        }\n\n        if (enumData[t].name === \"type\") {\n          for (let dt = 0; dt < enumData[t].data.length; dt++) {\n            if (fieldValue[\"type\"] === enumData[t].data[dt].id) {\n              showTreansferOrder = enumData[t].data[dt].transfer_order;\n            }\n          }\n        }\n      }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"saveInstruction\"\n          },\n          saveBody: {\n            value: JSON.stringify(createDocument)\n          },\n          selectedDoc: {\n            value: JSON.stringify(createDocument)\n          },\n          notificationsBody: {\n            value: JSON.stringify(notBody)\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          // reportName: {value: reportName},\n          showTreansferOrder: {\n            value: showTreansferOrder\n          },\n          transferOrder: {\n            value: JSON.stringify(transferOrder)\n          }\n        }\n      };\n\n      if (fieldValue[\"urgent\"] === true) {\n        swal({\n          text: \"ВНИМАНИЕ поручения со статусом \\\"СРОЧНОЕ\\\" будет тарифицироваться в соответствии с тарифами ЦД на срочные поручения, хотите продолжить?\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\",\n            cancel: \"Отмена\"\n          } // dangerMode: true,\n\n        }).then(click => {\n          if (click === \"ok\") {\n            let checkResult = checkForRequieredFields();\n\n            if (checkResult === true) {\n              props.sendFieldValues(commandJson);\n              props.clearTabData(process_id);\n            }\n          }\n        });\n      } else {\n        let checkResult = checkForRequieredFields();\n        console.log(\"PASSED\", checkResult);\n\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n\n      console.log(\"button saveInstruction: \", commandJson);\n    } else if (buttonName === \"viewInstruction\") {\n      let currentStatus = \"saved\";\n      let notBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getNotificationsCount\"\n          }\n        }\n      };\n\n      if (dataItem.filled === true) {\n        currentStatus = \"filled\";\n\n        if (dataItem.onExecution === true) {\n          currentStatus = \"onExecution\";\n\n          if (dataItem.executed === true) {\n            currentStatus = \"executed\";\n          } else {\n            if (dataItem.canceled === true) {\n              currentStatus = \"canceled\";\n            }\n          }\n        } else {\n          if (dataItem.canceled === true) {\n            currentStatus = \"canceled\";\n          }\n        }\n      }\n\n      let editFormDefId = null;\n      let report = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              editFormDefId = enumData[k].data[d].edit_form;\n              report = enumData[k].data[d].reportName;\n            }\n          }\n        }\n      }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          notificationsBody: {\n            value: JSON.stringify(notBody)\n          },\n          userAction: {\n            value: \"viewInstruction\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          docId: {\n            value: dataItem.id\n          },\n          instructionType: {\n            value: dataItem.type\n          },\n          status: {\n            value: currentStatus\n          },\n          editFormDefId: {\n            value: editFormDefId\n          },\n          reportName: {\n            value: report\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button viewInstruction: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"sendToCD\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin();\n        } else {\n          let updateDocument = getFieldValuesUpdateInstruction();\n          updateDocument[\"filled\"] = true;\n          updateDocument[\"filled_at\"] = props.getCurrentFullDateTime();\n          updateDocument[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n          updateDocument[\"signed_depositor_inn\"] = props.esInn;\n          updateDocument[\"signed_depositor_full_name\"] = props.esUserFullName;\n          updateDocument[\"signed_at_depositor\"] = props.getCurrentFullDateTime();\n          const commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"updateDocument\"\n              },\n              userId: {\n                value: userProfile.userId\n              },\n              userRole: {\n                value: userProfile.userRole\n              },\n              document: {\n                value: JSON.stringify(updateDocument)\n              },\n              status: {\n                value: \"filled\"\n              }\n            }\n          }; // console.log(buttonName, commandJson)\n\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } else if (buttonName === \"sendToCDWithoutES\") {\n      const updateDocument = getFieldValuesUpdateInstruction();\n      updateDocument.filled = true;\n      updateDocument.filledUser = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          document: {\n            value: JSON.stringify(updateDocument)\n          },\n          status: {\n            value: \"filled\"\n          }\n        }\n      };\n      console.log(\"button sendToCDWithoutES: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"SignInstructionSaveButton\") {\n      const updateDocument = getFieldValuesUpdateInstruction();\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          document: {\n            value: updateDocument\n          },\n          status: {\n            value: \"\"\n          }\n        }\n      };\n      console.log(\"button signInstruction: \", commandJson);\n      sign(\"signInstruction\", commandJson);\n    } else if (buttonName === \"deleteDocument\") {\n      let docToDelete = selectedDoc.id;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"deleteDocument\"\n          },\n          document: {\n            value: docToDelete.toString()\n          }\n        }\n      };\n      console.log(\"deleteDocument:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно удалить это поручение?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      });\n    } else if (buttonName === \"onExecution\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin();\n        } else {\n          let updateDocument = getFieldValuesUpdateInstruction();\n          updateDocument[\"onExecution\"] = true;\n          updateDocument[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n          updateDocument[\"onExecutionDate\"] = props.getCurrentFullDateTime();\n          updateDocument[\"signed_cd_inn\"] = props.esInn;\n          updateDocument[\"signed_cd_full_name\"] = props.esUserFullName;\n          updateDocument[\"signed_at_cd\"] = props.getCurrentFullDateTime();\n          const commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"updateDocument\"\n              },\n              userId: {\n                value: userProfile.userId\n              },\n              userRole: {\n                value: userProfile.userRole\n              },\n              document: {\n                value: JSON.stringify(updateDocument)\n              },\n              status: {\n                value: \"onExecution\"\n              }\n            }\n          };\n          console.log(\"onExecution:\", commandJson, updateDocument);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } else if (buttonName === \"Execute\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        const updateDocument = getFieldValuesUpdateInstruction();\n        updateDocument[\"executed\"] = true;\n        updateDocument[\"executedUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n        updateDocument[\"executedDate\"] = props.getCurrentFullDateTime();\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {\n              value: \"updateDocument\"\n            },\n            userId: {\n              value: userProfile.userId\n            },\n            userRole: {\n              value: userProfile.userRole\n            },\n            document: {\n              value: JSON.stringify(updateDocument)\n            },\n            status: {\n              value: \"executed\"\n            }\n          }\n        };\n        console.log(\"button Execute: \", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"CancelInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        handleOpenModalCancelInstruction();\n      }\n    } else if (buttonName === \"CancelInstructionSaveButton\") {\n      handleCloseModalCancelInstruction();\n      const updateDocument = getFieldValuesUpdateInstruction();\n      updateDocument[\"canceled\"] = true;\n      updateDocument[\"сanceledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          document: {\n            value: JSON.stringify(updateDocument)\n          },\n          status: {\n            value: \"canceled\"\n          }\n        }\n      };\n      console.log(\"button CancelInstructionSaveButton: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"CancelInstructionCancelButton\") {\n      handleCloseModalCancelInstruction();\n      fieldValue[\"cancelationReason\"] = null;\n      setFieldValue(fieldValue);\n      console.log(\"FIELDS\", fieldValue);\n    } else if (buttonName === \"uploadToXML\") {\n      // Create xml\n      let xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><InstructionsList xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><instructions>\";\n\n      for (let i = 0; i < filteredDocList.length; i++) {\n        xml += \"<instruction>\";\n\n        for (let prop in filteredDocList[i]) {\n          xml += \"<\" + prop + \">\";\n          xml += filteredDocList[i][prop];\n          xml += \"</\" + prop + \">\";\n        }\n\n        xml += \"</instruction>\";\n      }\n\n      xml += \"</instructions></InstructionsList>\";\n      let finalxml = xml.replace(/<\\/?[0-9]{1,}>/g, '').toString(); // Download xml\n\n      let pom = document.createElement('a');\n      let filename = \"UploadInstructions.xml\";\n      let bb = new Blob([finalxml], {\n        type: 'text/plain'\n      });\n      pom.setAttribute('href', window.URL.createObjectURL(bb));\n      pom.setAttribute('download', filename);\n      pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');\n      pom.draggable = true;\n      pom.classList.add('dragout');\n      pom.click();\n    } else if (buttonName === \"showInstructionReport\") {\n      let reportName = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (selectedDoc.type === enumData[k].data[d].id) {\n              let reportId = enumData[k].data[d].report;\n\n              for (let e = 0; e < enumData.length; e++) {\n                if (enumData[e].name === \"instructionReports\") {\n                  for (let t = 0; t < enumData[e].data.length; t++) {\n                    if (reportId === enumData[e].data[t].id) {\n                      reportName = enumData[e].data[t].reportName;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"showInstructionReport\"\n          },\n          docId: {\n            value: selectedDoc.id.toString()\n          },\n          instructionType: {\n            value: selectedDoc.type\n          },\n          reportName: {\n            value: reportName\n          },\n          reportVars: {\n            value: \"?id=\" + selectedDoc.id + \"&first_n=\" + userProfile.firstName.trim() + \"&last_n=\" + userProfile.lastName.trim() + \"&middle_n=\" + userProfile.middleName.trim()\n          }\n        }\n      };\n      console.log(\"button showInstructionReport: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"button: \", buttonName);\n    }\n  } // Returns Button component\n\n\n  function createButton(button, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      key: index,\n      onClick: () => buttonClick(button.name),\n      style: {\n        margin: 3,\n        color: button.fontColor,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      value: button.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1567,\n        columnNumber: 7\n      }\n    }, button.label);\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section, index) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      key: index + \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1589,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1609,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1610,\n        columnNumber: 9\n      }\n    }, section.contents.map((contentItem, index) => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1613,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1614,\n        columnNumber: 17\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1620,\n        columnNumber: 17\n      }\n    }, contentBuilder(contentItem))))));\n  } // Create component by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1636,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressDateTime,\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1649,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        value: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1665,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1699,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressInt,\n        name: contentItem.name,\n        onBlur: handleIntChange // defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: IntegerFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1712,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Float\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressFloat,\n        name: contentItem.name,\n        onBlur: handleFloatChange,\n        value: fieldValue[contentItem.name],\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: FloatFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1726,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1739,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"RadioGroup\") {\n      let radioGroupItems = [];\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === contentItem.name) {\n          radioGroupItems = enumData[i].data;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(RadioGroup, {\n        name: contentItem.name,\n        value: fieldValue[contentItem.name],\n        onChange: handleRadioGroupChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1756,\n          columnNumber: 9\n        }\n      }, radioGroupItems.map(groupItem => {\n        return /*#__PURE__*/React.createElement(FormControlLabel, {\n          value: groupItem.id,\n          label: groupItem.label,\n          control: /*#__PURE__*/React.createElement(Radio, {\n            style: {\n              height: \"5px\",\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1766,\n              columnNumber: 26\n            }\n          }),\n          disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1763,\n            columnNumber: 15\n          }\n        });\n      }));\n    }\n  } // Key press handlers for some fields\n\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressDateTime(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressInt(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let int = parseInt(stringNum);\n          fieldValue[event.target.name] = int;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressFloat(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let float = parseFloat(stringNum);\n          fieldValue[event.target.name] = float;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"SignInstructionSaveButton\", null);\n    }\n  }\n\n  function onKeyPressModalCancelInstruction(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"CancelInstructionSaveButton\", null);\n    }\n  } // custom allerts\n\n\n  function swAlert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  }\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function getGridFormEnumLabel(name, value) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (name === gridFormEnumData[i].name) {\n          for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n            if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n              return gridFormEnumData[i].data[l].label;\n            }\n          }\n        }\n      }\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(value, type, dataItem, name) {\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1877,\n            columnNumber: 16\n          }\n        }, \"-\");\n      } else {\n        // console.log(\"ENUM\", name, value, type)\n        return getGridFormEnumLabel(name, value);\n      }\n    } else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        } // name = {name}\n        ,\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1887,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1896,\n            columnNumber: 16\n          }\n        }, \"-\");\n      } else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"\";\n\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\";\n        }\n\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"На исполнении\";\n        }\n\n        if (dataItem[\"executed\"] === true) {\n          status = \"Исполнено\";\n        }\n\n        if (dataItem[\"canceled\"] === true) {\n          status = \"Отменено\";\n        }\n\n        return status;\n      } else {\n        if (value === null || value === \"\" || value === undefined) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            align: \"center\",\n            style: {\n              color: \"black\",\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1925,\n              columnNumber: 18\n            }\n          }, \"-\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1928,\n              columnNumber: 18\n            }\n          }, value);\n        }\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1934,\n            columnNumber: 16\n          }\n        }, \"-\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1937,\n            columnNumber: 16\n          }\n        }, value);\n      }\n    }\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  } // filter docList by filled parameters\n\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            // if(Data[i][key] !== null){\n            let contentType = getContentType(key);\n\n            if (contentType === \"Text\") {\n              if (Data[i][key] !== null) {\n                try {\n                  let searchField = fields[key].toLowerCase();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else {\n                match = false;\n                break;\n              }\n            } else if (contentType === \"Int\" || contentType === \"Float\") {\n              if (Data[i][key] !== null) {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else {\n                match = false;\n                break;\n              }\n            } else if (contentType === \"Enum\") {\n              if (key === \"depositor\") {\n                console.log(\"DEPOSITOR\", fields[key], Data[i][\"depositor2\"]);\n\n                if (fields[key] === Data[i][key] || fields[key] === Data[i][\"depositor2\"]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (key === \"account\") {\n                if (fields[key] === Data[i][\"accFrom\"] || fields[key] === Data[i][\"accTo\"]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } else if (contentType === \"DateTime\") {\n              if (Data[i][key] !== null) {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]);\n                console.log(\"DATES\", searchField, dataField, searchField.includes(dataField));\n\n                if (searchField === \"NaN-NaN-NaN\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else {\n                match = false;\n                break;\n              }\n            } else if (contentType === \"Bool\") {\n              if (key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\") {\n                let instrStatus = \"\";\n                let statusSelected = false;\n                let fieldStatus = \"\"; // Check fields\n\n                if (fields[\"filled\"] === true) {\n                  fieldStatus = \"filled\";\n                  statusSelected = true;\n                }\n\n                if (fields[\"onExecution\"] === true) {\n                  fieldStatus = \"onExecution\";\n                  statusSelected = true;\n                }\n\n                if (fields[\"executed\"] === true) {\n                  fieldStatus = \"executed\";\n                  statusSelected = true;\n                }\n\n                if (fields[\"canceled\"] === true) {\n                  fieldStatus = \"canceled\";\n                  statusSelected = true;\n                }\n\n                if (statusSelected === true) {\n                  // Check Instruction\n                  if (Data[i][\"filled\"] === true) {\n                    instrStatus = \"filled\";\n                  }\n\n                  if (Data[i][\"onExecution\"] === true) {\n                    instrStatus = \"onExecution\";\n                  }\n\n                  if (Data[i][\"executed\"] === true) {\n                    instrStatus = \"executed\";\n                  }\n\n                  if (Data[i][\"canceled\"] === true) {\n                    instrStatus = \"canceled\";\n                  } // Check whether statuses are equal\n\n\n                  if (fieldStatus === instrStatus) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else {\n                if (Data[i][key] === null || fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } // }\n            // else{\n            //   match = false\n            //   break\n            // }\n\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered docList by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList); // setUpdateState(getUUID())\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.round(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  }\n\n  function getBackgroundColor(signed, urgent) {\n    if (signed !== undefined) {\n      if (signed === true) {\n        return \"white\";\n      } else {\n        if (urgent === true) {\n          return \"#EFB2B2\";\n        } else {\n          return \"#FCEAD3\";\n        }\n      }\n    } else return \"white\";\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1; // console.log(\"IT\", i, gridForm.sections[nextS])\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2266,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: isSearchForm === true ? 12 : 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2267,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2268,\n        columnNumber: 11\n      }\n    }, isSearchForm === false && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2270,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2271,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2272,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2273,\n        columnNumber: 21\n      }\n    }, Form.label)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2278,\n        columnNumber: 13\n      }\n    }, Form.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        return sectionBuilder(section, index);\n      }\n    })))));\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === name) {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1;\n    } // console.log(\"SORT\", property, sortOrder, type)\n\n\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * -1 * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n        let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n        var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n        return result * sortOrder;\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type));\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function getSecType(id) {\n    let type = 1;\n\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"security\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === id) {\n              type = gridFormEnumData[i].data[d].type;\n            }\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i] !== null) {\n        if (gridFormEnumData[i].name === \"securityTypes\") {\n          for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n            if (gridFormEnumData[i].data[d].id === type) {\n              return gridFormEnumData[i].data[d].label;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function calculateColSpan(contents) {\n    let num = 0;\n\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1;\n      }\n    }\n\n    return num;\n  }\n\n  const handleContextMenu = event => {\n    event.preventDefault();\n    console.log(\"CONT MENU\");\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null); // console.log(\"CLOSE\", fieldValue)\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name];\n      }\n    }\n\n    console.log(\"nForm\", gridForm);\n    setGridForm(gridForm);\n    setUpdateState(getUUID());\n  };\n\n  function createMenuItems() {\n    let columns = [];\n    columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2413,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: 5,\n        cursor: \"pointer\"\n      },\n      name: \"selectAll\",\n      onClick: () => handleTableCheckboxChange(\"selectAll\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2414,\n        columnNumber: 9\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2421,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: \"selectAll\",\n      onChange: handleGridCheckboxChange,\n      checked: gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2422,\n        columnNumber: 11\n      }\n    }))));\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name;\n        columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2435,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            paddingLeft: 5,\n            cursor: \"pointer\",\n            background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\"\n          },\n          name: name,\n          onClick: () => handleTableCheckboxChange(name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2436,\n            columnNumber: 13\n          }\n        }, gridForm.sections[s].contents[c].label), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2443,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          style: {\n            maxWidth: 20,\n            height: 15,\n            color: \"green\"\n          },\n          name: name,\n          onChange: handleGridCheckboxChange,\n          checked: gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2444,\n            columnNumber: 13\n          }\n        }))));\n      }\n    }\n\n    return columns;\n  }\n\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId));\n  }\n\n  const handleGridCheckboxChange = event => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = {\n        [event.target.name]: event.target.checked\n      };\n\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name];\n      } // console.log(\"selectAll\", newFields)\n\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleTableCheckboxChange = name => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue\n      };\n\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name];\n      }\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [name]: !gridFieldValue[name]\n      });\n    }\n  };\n\n  try {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2489,\n        columnNumber: 7\n      }\n    }, isSearchForm !== null && isSearchForm === true ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2493,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2494,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      expanded: accordionExpanded,\n      onChange: () => handleExpandAccordion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2495,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AccordionSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2497,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2496,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2499,\n        columnNumber: 19\n      }\n    }, Form.label)), /*#__PURE__*/React.createElement(AccordionDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2501,\n        columnNumber: 17\n      }\n    }, getForm())))) : getForm(), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2510,\n        columnNumber: 9\n      }\n    }, buttons.map((button, index) => {\n      return createButton(button, index);\n    }), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      href: \"../\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D.docx\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      onClick: () => buttonClick(\"downloadES\"),\n      startIcon: /*#__PURE__*/React.createElement(DescriptionIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2527,\n          columnNumber: 24\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2514,\n        columnNumber: 11\n      }\n    }, \"\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F \\u042D\\u0426\\u041F\"), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://www.rutoken.ru/support/download/rutoken-plugin/\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2530,\n        columnNumber: 11\n      }\n    }, \"\\u041F\\u043B\\u0430\\u0433\\u0438\\u043D\"), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://www.rutoken.ru/support/download/windows/\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2546,\n        columnNumber: 11\n      }\n    }, \"\\u0414\\u0440\\u0430\\u0439\\u0432\\u0435\\u0440\")), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n      style: {\n        paddingTop: 3\n      },\n      onClick: () => buttonClick(\"updateDocList\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2564,\n        columnNumber: 11\n      }\n    }), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2568,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2569,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2570,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"500px\",\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2571,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      class: \"main-table-style\",\n      id: gridTableId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2572,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      style: {\n        position: \"sticky\",\n        top: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2573,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2575,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-first-child\",\n      colSpan: \"1\",\n      onContextMenu: ev => handleContextMenu(ev),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2576,\n        columnNumber: 25\n      }\n    }), gridForm.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        let lastSection = checkSectionOnLastChild(index);\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n          colSpan: calculateColSpan(section.contents),\n          onContextMenu: ev => handleContextMenu(ev),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2582,\n            columnNumber: 31\n          }\n        }, section.label);\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2594,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-style-2row\",\n      rowSpan: \"2\",\n      style: {\n        \"minWidth\": \"65px\"\n      },\n      onContextMenu: ev => handleContextMenu(ev),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2595,\n        columnNumber: 25\n      }\n    }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n      if (contentItem.show === true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: \"td-head-style-2row\",\n          rowSpan: \"2\",\n          onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n          onContextMenu: ev => handleContextMenu(ev),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2607,\n            columnNumber: 33\n          }\n        }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2613,\n            columnNumber: 117\n          }\n        }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2613,\n            columnNumber: 167\n          }\n        }) : \"\");\n      }\n    })))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2621,\n        columnNumber: 21\n      }\n    }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n      key: keyGen(5),\n      style: {\n        \"height\": 30,\n        \"backgroundColor\": getBackgroundColor(dataItem.opened, dataItem.urgent)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2624,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      key: keyGen(5),\n      style: {\n        \"width\": 34,\n        \"border-bottom\": \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2625,\n        columnNumber: 29\n      }\n    }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n      key: button.name,\n      name: button.name,\n      variant: \"outlined\",\n      value: button.name,\n      onClick: () => buttonClick(button.name, dataItem),\n      style: {\n        margin: 1,\n        height: 24,\n        fontSize: 10,\n        maxWidth: 32,\n        backgroundColor: button.backgroundColor,\n        borderColor: \"darkgreen\",\n        color: \"darkgreen\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2628,\n        columnNumber: 33\n      }\n    }, button.label))), gridForm.sections.map(section => {\n      return section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-body-style\",\n            style: {\n              color: selectedInstruction !== null ? selectedInstruction.id === dataItem.id ? \"blue\" : \"black\" : \"black\"\n            },\n            onClick: () => setSelectedInstruction(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2652,\n              columnNumber: 41\n            }\n          }, getGridFormItems(dataItem[contentItem.name], contentItem.type, dataItem, contentItem.name));\n        }\n      });\n    })))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2666,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2667,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2668,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        background: \"#047535\",\n        color: \"white\",\n        height: 28\n      },\n      onClick: () => downloadExcel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2669,\n        columnNumber: 23\n      }\n    }, \"\\u0412 EXCEL\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2676,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: 90,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2677,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2679,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        minWidth: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2680,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(GridSelect, {\n      onChange: handleChangeRowsPerPage,\n      style: {\n        height: 25,\n        color: \"black\"\n      },\n      value: size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2684,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2689,\n        columnNumber: 27\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2690,\n        columnNumber: 27\n      }\n    }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2691,\n        columnNumber: 27\n      }\n    }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2692,\n        columnNumber: 27\n      }\n    }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2693,\n        columnNumber: 27\n      }\n    }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2694,\n        columnNumber: 27\n      }\n    }, \"500\")))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2698,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2699,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowFirstClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2700,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2701,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2705,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2706,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLeftClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2707,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2708,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: \"black\",\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2712,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        maxWidth: 25\n      },\n      value: page,\n      onChange: handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2713,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2715,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2716,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => GoToPage(),\n      variant: \"outlined\",\n      style: {\n        height: 22,\n        backgroundColor: \"#D1D6D6\",\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2717,\n        columnNumber: 27\n      }\n    }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2729,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2730,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowRightClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2731,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2732,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"pagination-rows-amount-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2736,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount()), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2737,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: 90,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2738,\n        columnNumber: 23\n      }\n    }, \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList !== null ? filteredDocList.length : 0))))), selectedInstruction !== null && /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2744,\n        columnNumber: 17\n      }\n    }, selectedInstruction.depositor !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2746,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2747,\n        columnNumber: 23\n      }\n    }, \"\\u0414\\u0435\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442(\\u0421\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430):\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2748,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"depositor\", selectedInstruction.depositor))), selectedInstruction.depositor2 !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2752,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2753,\n        columnNumber: 23\n      }\n    }, \"\\u0414\\u0435\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442(\\u041D\\u0430 \\u0441\\u0447\\u0451\\u0442):\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2754,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"depositor2\", selectedInstruction.depositor2))), selectedInstruction.security !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2758,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2759,\n        columnNumber: 23\n      }\n    }, \"\\u0426\\u0435\\u043D\\u043D\\u0430\\u044F \\u0431\\u0443\\u043C\\u0430\\u0433\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2760,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"security\", selectedInstruction.security) + \" \" + getSecType(selectedInstruction.security))), selectedInstruction.currency !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2765,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2766,\n        columnNumber: 23\n      }\n    }, \"\\u0412\\u0430\\u043B\\u044E\\u0442\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2767,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"currency\", selectedInstruction.currency))), selectedInstruction.security !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2772,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2773,\n        columnNumber: 23\n      }\n    }, \"\\u042D\\u043C\\u0438\\u0442\\u0435\\u043D\\u0442:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2774,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"issuer\", selectedInstruction.issuer))), selectedInstruction.tradingSystem !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2778,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2779,\n        columnNumber: 23\n      }\n    }, \"\\u0422\\u043E\\u0440\\u0433\\u043E\\u0432\\u0430\\u044F \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2780,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"tradingSystem\", selectedInstruction.tradingSystem))), selectedInstruction.corrDepository !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2784,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2785,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u0440\\u0440. \\u0434\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u0430\\u0440\\u0438\\u0439:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2786,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"corrDepository\", selectedInstruction.corrDepository))), (selectedInstruction.ownerName !== null || selectedInstruction.ownerDocument !== null || selectedInstruction.ownerAddress !== null) && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2790,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2791,\n        columnNumber: 23\n      }\n    }, \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u0432\\u043B\\u0430\\u0434\\u0435\\u043B\\u044C\\u0446\\u0435:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2792,\n        columnNumber: 23\n      }\n    }, selectedInstruction.ownerName + \" \" + selectedInstruction.ownerDocument + \" \" + selectedInstruction.ownerAddress)), selectedInstruction.accFrom !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2796,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2797,\n        columnNumber: 23\n      }\n    }, \"\\u0421\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2798,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"accFrom\", selectedInstruction.accFrom))), selectedInstruction.accTo !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2802,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2803,\n        columnNumber: 23\n      }\n    }, \"\\u041D\\u0430 \\u0441\\u0447\\u0451\\u0442:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2804,\n        columnNumber: 23\n      }\n    }, getGridFormEnumLabel(\"accTo\", selectedInstruction.accTo))), selectedInstruction.quantity !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2808,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2809,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2810,\n        columnNumber: 23\n      }\n    }, selectedInstruction.quantity)), selectedInstruction.basis !== null && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2814,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2815,\n        columnNumber: 23\n      }\n    }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435:\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11,\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2816,\n        columnNumber: 23\n      }\n    }, selectedInstruction.basis))), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: anchorEl,\n      open: openMenu,\n      onClose: handleCloseMenu,\n      MenuListProps: {\n        'aria-labelledby': 'basic-button'\n      },\n      style: {\n        paddingLeft: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2821,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2830,\n        columnNumber: 17\n      }\n    }, createMenuItems())))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: showSnackBar,\n      onClose: () => handleCloseSnackBar(),\n      autoHideDuration: 1200,\n      message: snackBarMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2837,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalCancelInstruction,\n      onClose: handleCloseModalCancelInstruction,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2843,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2849,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2850,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0443 \\u043E\\u0442\\u043C\\u0435\\u043D\\u044B\"), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      multiline: true,\n      autoFocus: true,\n      name: \"\\u0441ancelationReason\",\n      defaultValue: fieldValue[\"сancelationReason\"] >= 0 ? fieldValue[\"сancelationReason\"] : \"\",\n      onChange: handleChange,\n      onKeyPress: onKeyPressModalCancelInstruction,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2851,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"CancelInstructionSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2861,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"CancelInstructionCancelButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2873,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalEnterPin,\n      onClose: handleCloseModalEnterPin,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2887,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2893,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2894,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"100%\"\n      },\n      error: wrongPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2895,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2896,\n        columnNumber: 15\n      }\n    }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n      type: showPin ? 'text' : 'password',\n      defaultValue: rutokenPin,\n      onChange: handlePinChange,\n      onKeyPress: onKeyPressModalEnterPin,\n      autoFocus: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2904,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPin,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2905,\n          columnNumber: 21\n        }\n      }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2910,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2910,\n          columnNumber: 51\n        }\n      }))),\n      labelWidth: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2897,\n        columnNumber: 15\n      }\n    })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2917,\n        columnNumber: 35\n      }\n    }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"SignInstructionSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2918,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleCloseModalEnterPin,\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2930,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2951,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2952,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2953,\n        columnNumber: 13\n      }\n    })));\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Select","NumberFormat","PropTypes","Grid","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Menu","Snackbar","LinearProgress","MenuItem","Paper","Radio","RadioGroup","Tooltip","IconButton","Modal","makeStyles","GridSelect","FormControl","FormControlLabel","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","ArrowForwardIosIcon","ArrowBackIosIcon","FirstPageIcon","DescriptionIcon","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","ArrowUpwardRoundedIcon","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","swal","hotkeys","rutoken","tableToExcel","plugin","rutokenHandle","certHandle","certData","cmsData","generator","require","FloatFormat","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","IntegerFormat","getModalStyle","top","left","transform","useStyles","theme","modal","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","classes","userProfile","process_id","userTask","session_id","taskID","taskType","enumData","gridFormEnumData","enumOptions","setEnumOptions","Form","setForm","gridForm","setGridForm","selectedDoc","setSelectedDoc","fieldValue","setFieldValue","docId","buttons","gridFormButtons","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","page","setPage","size","setSize","selectedOptions","setSelectedOptions","sectionColor","snackBarMessage","setSnackBarMessage","showSnackBar","setShowSnackBar","modalStyle","showModalCancelInstruction","setShowModalCancelInstruction","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","updateState","setUpdateState","isSearchForm","setIsSearchForm","accordionExpanded","setAccordionExpanded","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","selectedInstruction","setSelectedInstruction","anchorEl","setAnchorEl","openMenu","Boolean","gridTableId","getUUID","gridFieldValue","setGridFieldValue","console","log","parsedData","JSON","parse","s","parseInt","p","sortedDocList","sort","dynamicSort","filterDocList","fetchBySize","er","callErrorToast","undefined","parsedSelectedDoc","fields","userRole","newForm","sections","length","c","contents","name","show","edit","i","d","data","partner","depositorId","id","fieldName","Object","keys","eData","newEnumOptions","options","getInstructionTypeName","push","label","instructionTypeId","type","filteredRelations","getInstrAccRelations","checkResult","checkForPushing","enableToPush","getLostEnumName","newFields","enumI","event","handler","key","handleOpenModalCancelInstruction","handleCloseModalCancelInstruction","handleOpenModalEnterPin","handleCloseModalEnterPin","handleExpandAccordion","iType","accountShortName","splitedAccountName","split","splitedAccountLabel","shortLabel","accPartner","handlePinChange","handleClickShowPin","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","handleError","reason","isNaN","message","errorCodes","PIN_INCORRECT","alert","sign","commandJson","textToSign","enumerateDevices","devices","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","inn","fullName","subject","rdn","setEsInn","setEsUserFullName","setEsExpiredDate","validNotAfter","substring","instructionToSign","variables","document","filled","getCurrentFullDateTime","firstName","lastName","middleName","status","stringify","sendFieldValues","clearTabData","DATA_FORMAT_PLAIN","logout","swAllert","handleCheckboxChange","checked","handleRadioGroupChange","handleChange","handleIntChange","stringNum","toString","replace","int","handleFloatChange","float","parseFloat","handleDateTimeChange","fullDate","parseDate","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","convertedDate","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","newOptions","depositorPartner","getDepositorPartner","issuerId","issuer","j","h","issuerOption","noIssuerOption","y","depId","uuidv1","getFieldValuesCreateDocument","getFieldValuesSaveInstruction","onExecution","executed","canceled","opened","signed","getFieldValuesUpdateInstruction","docToUpdate","checkForRequieredFields","checkedSuccessfuly","required","text","icon","ok","buttonClick","buttonName","dataItem","operDayIsOpened","createDocument","commandType","userAction","searchDoc","userId","createFormDefId","report","k","create_form","reportName","copyFields","filledUser","filled_at","onExecutionUser","executedUser","onExecutionDate","executed_at","signed_at","signed_at_cd","signed_at_depositor","signed_user_full_name","signed_depositor_inn","signed_depositor_full_name","signed_cd_inn","signed_cd_full_name","canceledUser","canceledDate","instructionType","updateDocument","notBody","user_session_id","showTreansferOrder","transferOrder","instruction_id","registered_person","address","security","quantity_int","basis","t","dt","registrar","security_type","transfer_order","saveBody","notificationsBody","cancel","click","currentStatus","editFormDefId","edit_form","esInn","esUserFullName","docToDelete","yes","xml","prop","finalxml","pom","createElement","filename","bb","Blob","setAttribute","URL","createObjectURL","dataset","downloadurl","download","href","join","draggable","classList","add","reportId","e","reportVars","trim","createButton","button","index","margin","color","fontColor","height","fontSize","sectionBuilder","section","bodyBuilder","map","contentItem","contentBuilder","onKeyPressText","onKeyPressDateTime","shrink","parseFullDateTime","selectedOption","body","menuPortal","base","zIndex","onKeyPressInt","inputComponent","onKeyPressFloat","maxWidth","radioGroupItems","groupItem","code","charCode","onKeyPressModalEnterPin","onKeyPressModalCancelInstruction","swAlert","keyGen","password","generate","numbers","getGridFormEnumLabel","l","getGridFormItems","Time","handleCloseSnackBar","getContentType","fetchFrom","fetchTo","Data","newDocList","match","contentType","searchField","toLowerCase","dataField","includeSearch","includes","instrStatus","statusSelected","fieldStatus","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","getPageAmount","pagesFloat","mathRoundOfPages","Math","round","getBackgroundColor","urgent","checkToShowSection","showSection","checkSectionOnLastChild","lastSection","nextS","getForm","maxHeight","getEnumLabel","property","sortOrder","a","b","dateA","timeInSecA","getTime","dateB","timeInSecB","labelA","labelB","sortDataByColumn","getSecType","calculateColSpan","num","handleContextMenu","preventDefault","currentTarget","handleCloseMenu","createMenuItems","columns","paddingLeft","cursor","handleTableCheckboxChange","handleGridCheckboxChange","downloadExcel","convert","getElementById","paddingTop","overflow","ev","marginBottom","borderColor","minWidth","depositor","depositor2","currency","tradingSystem","corrDepository","ownerName","ownerDocument","ownerAddress","accFrom","accTo","quantity","error"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/Instructions/Instructions.jsx"],"sourcesContent":["// Import material and react components\nimport React, {useState, useEffect} from 'react';\nimport Select from 'react-select';\n// import MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Menu from '@mui/material/Menu';\n// import Input from '@material-ui/core/Input';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridSelect from '@material-ui/core/Select';\n// PIN components\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n// Icons\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// Accordion\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Import libraries\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\nimport hotkeys from 'hotkeys-js'; \nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\nvar generator = require('generate-password');\n\nfunction FloatFormat(props){\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n}))\nexport default(props) =>{\n  // This.state\n  const classes = useStyles()\n  const [userProfile] = useState(props.userProfile)\n  const [process_id] = useState(props.userTask.process_id)\n  const [session_id] = useState(props.userTask.session_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [taskType] = useState(props.userTask.taskType)\n  const [enumData] = useState(props.userTask.enumData)\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [fieldValue, setFieldValue] = useState({}) // opened: false\n  const [docId] = useState(props.userTask.docId)\n  const [buttons] = useState(props.userTask.buttons)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [modalStyle] = useState(getModalStyle)\n  const [showModalCancelInstruction, setShowModalCancelInstruction] = useState(false)\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n  const [updateState, setUpdateState] = useState(null)\n  const [isSearchForm, setIsSearchForm] = useState(null)\n  const [accordionExpanded, setAccordionExpanded] = useState(false)\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n  const [selectedInstruction, setSelectedInstruction] = useState(null)\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n  const [gridTableId] = useState(getUUID())\n  const [gridFieldValue, setGridFieldValue] = useState({})\n  \n  // Initializing\n  useEffect(()=>{\n    console.log(\"INSTR PROPS\", props)\n    if(props.userTask.docList !== \"null\" && props.userTask.docList !== null){\n      try{\n        let parsedData = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        setFilteredDocList(parsedData)\n        if(taskType !== \"showInstructionsTypeSelectingForm\"){\n          setIsSearchForm(true)\n        }\n        setInitialDocList(parsedData)\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"))\n\n        if(props.userTask.selectedDoc !== \"null\"){\n          filterDocList(0, s-1, sortedDocList, JSON.parse(props.userTask.selectedDoc))\n        }\n        else{fetchBySize(0, s-1, sortedDocList)}\n      }\n      catch(er){\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    else{setIsSearchForm(false)}\n    if(props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null){\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      let fields = {}\n      if(taskType === \"showInstructionsCreationForm\"){\n        if(userProfile.userRole === \"3\"){\n          let newForm = Form\n          for(let s=0; s<Form.sections.length; s++){\n            for(let c=0; c<Form.sections[s].contents.length; c++){\n              if(Form.sections[s].contents[c].name === \"depositor2\"){\n                // console.log(\"FFF\", Form.sections[s].contents[c])\n                if(Form.sections[s].contents[c].show === true){\n                  newForm.sections[s].contents[c].edit = false\n                  setForm(newForm)\n                  for(let i=0; i<props.userTask.enumData.length; i++){\n                    if(props.userTask.enumData[i].name === \"depositor2\"){\n                      for(let d=0; d<props.userTask.enumData[i].data.length; d++){\n                        if(parseInt(props.userProfile.partner) === props.userTask.enumData[i].data[d].partner){\n                          let depositorId = props.userTask.enumData[i].data[d].id\n                          console.log(\"DDD\", depositorId)\n                          fields[\"depositor2\"] = depositorId\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              else{\n                let fieldName = Form.sections[s].contents[c].name\n                fields[fieldName] = parsedSelectedDoc[fieldName]\n              }\n            }\n          }\n        }\n        else{\n          for(let s=0; s<Form.sections.length; s++){\n            for(let c=0; c<Form.sections[s].contents.length; c++){\n              let fieldName = Form.sections[s].contents[c].name\n              fields[fieldName] = parsedSelectedDoc[fieldName]\n            }\n          }\n        }\n      }\n      else{\n        if(Object.keys(parsedSelectedDoc).length > 0){\n          for(let s=0; s<Form.sections.length; s++){\n            for(let c=0; c<Form.sections[s].contents.length; c++){\n              let fieldName = Form.sections[s].contents[c].name\n              fields[fieldName] = parsedSelectedDoc[fieldName]\n            }\n          }\n        }\n      }\n      console.log(\"SDOC\", parsedSelectedDoc)\n      console.log(\"INITIAL FIELDVALUES\", fields)\n      setSelectedDoc(parsedSelectedDoc)\n      setFieldValue(fields)\n    }\n    if(props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\"){\n      let eData = props.userTask.enumData\n      let newEnumOptions = {}\n      for(let i=0; i<eData.length; i++){\n        if(eData[i] !== null){\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\" : eData[i].name\n          }]\n          if(eData[i].name === \"type\"){\n            if(props.userTask.taskType === \"showInstructionsTypeSelectingForm\"){\n              for(let d=0; d<eData[i].data.length; d++){\n                if(props.userProfile[getInstructionTypeName(eData[i].data[d].id)] === true){\n                  options.push({\n                    \"value\": eData[i].data[d].id,\n                    \"label\": eData[i].data[d].label,\n                    \"name\" : eData[i].name\n                  })\n                }\n              }\n            }\n            else{\n              for(let d=0; d<eData[i].data.length; d++){\n                  options.push({\n                  \"value\": eData[i].data[d].id,\n                  \"label\": eData[i].data[d].label,\n                  \"name\" : eData[i].name\n                })\n              }\n            }\n          }\n          else if(eData[i].name === \"accFrom\" || eData[i].name === \"accTo\"){\n            if(props.userTask.taskType === \"showInstructionsCreationForm\" || props.userTask.taskType === \"showInstructionsViewForm\"){\n              let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n              let instructionTypeId = parsedSelectedDoc.type\n              let filteredRelations = getInstrAccRelations(instructionTypeId, eData)\n              for(let d=0; d<eData[i].data.length; d++){\n                // console.log(\"PUSH ? \", eData[i].data[d].label)\n                if(filteredRelations.length > 0){\n                  let checkResult = checkForPushing(eData[i].data[d].label, instructionTypeId)\n                  if(checkResult.enableToPush === true){\n                    options.push({\n                      \"value\": eData[i].data[d].id,\n                      \"label\": eData[i].data[d].label,\n                      \"name\" : eData[i].name\n                    })\n                  }\n                }\n                else{\n                  options.push({\n                  \"value\": eData[i].data[d].id,\n                  \"label\": eData[i].data[d].label,\n                  \"name\" : eData[i].name\n                })}\n              }\n            }\n          }\n          else{\n            for(let d=0; d<eData[i].data.length; d++){\n                options.push({\n                \"value\": eData[i].data[d].id,\n                \"label\": eData[i].data[d].label,\n                \"name\" : eData[i].name\n              })\n            }\n          }\n          newEnumOptions[eData[i].name] = options\n        }\n        else{\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\" : getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n    }\n    if(gridForm !== null){\n      let newFields = {}\n      for(let s=0; s<gridForm.sections.length; s++){\n        for(let c=0; c<gridForm.sections[s].contents.length; c++){\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show\n        }\n      }\n      setGridFieldValue(newFields)\n    }\n    // setUpdateState(getUUID())\n  },[])\n  function getLostEnumName(i){\n    let enumI = 0\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        if(Form.sections[s].contents[c].type === \"Enum\"){\n          if(enumI === i){\n            return Form.sections[s].contents[c].name\n          }\n          else{enumI += 1}\n        }\n      }\n    }\n  }\n  hotkeys('ctrl+b, enter', function (event, handler){\n    if(handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded)\n    }\n  })\n\n  // CancelInstruction MODAL\n  const handleOpenModalCancelInstruction = () => {\n    setShowModalCancelInstruction(true)\n  }\n  const handleCloseModalCancelInstruction = () => {\n    setShowModalCancelInstruction(false)\n  }\n    \n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true)\n  }\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  function handleExpandAccordion(){\n    setAccordionExpanded(!accordionExpanded)\n  }\n\n  \n  function getInstructionTypeName(id){\n    for(let i=0; i<props.userTask.enumData.length; i++){\n      if(props.userTask.enumData[i].name === \"instructionTypesNames\"){\n        for(let d=0; d<props.userTask.enumData[i].data.length; d++){\n          if(props.userTask.enumData[i].data[d].id === id){\n            return props.userTask.enumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function getInstrAccRelations(iType, eData){\n    let filteredRelations = []\n    for(let i=0; i<eData.length; i++){\n      if(eData[i].name === \"instructionAccountRelations\"){\n        for(let d=0; d<eData[i].data.length; d++){\n          if(eData[i].data[d].id === iType){\n            filteredRelations.push(eData[i].data[d])\n          }\n        }\n      }\n    }\n    return filteredRelations\n  }\n  // filter accounts that can be selected by instruction type\n  function checkForPushing(label, instructionTypeId){\n    let checkResult = {\n      enableToPush: false,\n      accountShortName: null\n    }\n    for(let i=0; i<props.userTask.enumData.length; i++){\n      if(props.userTask.enumData[i].name === \"instructionAccountRelations\"){\n        for(let d=0; d<props.userTask.enumData[i].data.length; d++){\n          if(props.userTask.enumData[i].data[d].id === instructionTypeId){\n            let splitedAccountName = props.userTask.enumData[i].data[d].label.split(\"-\")\n            let accountShortName = splitedAccountName[1]\n            let splitedAccountLabel = label.split(\"-\")\n            let shortLabel = splitedAccountLabel[1]\n            if(shortLabel === accountShortName){\n              if(userProfile.userRole === \"3\" || userProfile.userRole === \"4\" || userProfile.userRole === \"8\"){\n                let accPartner = splitedAccountLabel[2]\n                if(accPartner === userProfile.partner){\n                  checkResult[\"enableToPush\"] = true\n                  checkResult[\"accountShortName\"] = accountShortName\n                  break\n                }\n              }\n              else{\n                checkResult[\"enableToPush\"] = true\n                checkResult[\"accountShortName\"] = accountShortName\n                break\n              }\n            }\n          }\n        }\n      }\n    }\n    return checkResult\n  }\n  // RuToken functions\n  function handlePinChange(event){\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin(){\n    setShowPin(!showPin)\n  }\n  rutoken.ready\n  // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled()\n    } else {\n      return Promise.resolve(true)\n    }\n  })\n  // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled()\n    } else {\n      // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n    }\n  })\n  // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin()\n    } else {\n      // alert(\"Не удаётся найти Плагин\");\n    }\n  })\n  //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return // alert(\"Не удаётся загрузить Плагин\")\n    } else {\n      plugin = result\n      return Promise.resolve()\n    }\n  })\n  \n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  // Sign transfer order with rutoken\n  function sign(data, commandJson) {\n    try{\n      // Получение текста для подписи\n      var textToSign = data;\n      if (textToSign.length == 0) {\n        console.log(\"Не хватает текста для подписи\");\n        return;\n      }\n      if(plugin !== undefined){\n      // Перебор подключенных Рутокенов\n        plugin.enumerateDevices()\n        .then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0]);\n          } else {\n            alert(\"Рутокен не обнаружен\");\n          }\n        })\n        // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice;\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n        })\n        // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve();\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin);\n          }\n        })\n        // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n        })\n        .then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0];\n            return plugin.parseCertificate(rutokenHandle, certs[0]);\n          }  else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        })\n        // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs\n          console.log(\"RUTDATA\", certData)\n          if (certHandle.length > 0) {\n            var options = {};\n            \n            let inn = \"\"\n            let fullName = \"\"\n            for(let i=0; i<certData.subject.length; i++){\n              if(certData.subject[i].rdn === \"serialNumber\"){\n                inn = certData.subject[i].value\n              }\n              if(certData.subject[i].rdn === \"commonName\"){\n                fullName = certData.subject[i].value\n              }\n            }\n            props.setEsInn(inn)\n            props.setEsUserFullName(fullName)\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length-1))\n            let instructionToSign = commandJson.variables.document.value\n            if(selectedDoc.filled === undefined || selectedDoc.filled === null || selectedDoc.filled === false){ // Depositor\n              instructionToSign[\"filled\"] = true\n              instructionToSign[\"filled_at\"] = props.getCurrentFullDateTime()\n              instructionToSign[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n              instructionToSign[\"signed_depositor_inn\"] = inn\n              instructionToSign[\"signed_depositor_full_name\"] = fullName\n              instructionToSign[\"signed_at_depositor\"] = props.getCurrentFullDateTime()\n              commandJson.variables.status.value = \"filled\"\n            }\n            else{ // Depository\n              instructionToSign[\"onExecution\"] = true\n              instructionToSign[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n              instructionToSign[\"signed_cd_inn\"] = inn\n              instructionToSign[\"signed_cd_full_name\"] = fullName\n              instructionToSign[\"signed_at_cd\"] = props.getCurrentFullDateTime()\n              commandJson.variables.status.value = \"onExecution\"\n            }\n            commandJson.variables.document.value = JSON.stringify(instructionToSign)\n            console.log(\"SIGN\", instructionToSign, commandJson.variables.document)\n            handleCloseModalEnterPin()\n            // swAllert(\"Поручение успешно подписано!\", \"success\")\n            props.sendFieldValues(commandJson)\n            props.clearTabData(commandJson.process_id)\n            return plugin.sign(rutokenHandle, certHandle, textToSign, plugin.DATA_FORMAT_PLAIN, options);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\")\n          }\n        })\n        // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle)\n        }, handleError)\n      }\n      else{swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\")}\n    }\n    catch(er){\n      console.log(\"Rutoken ERR\")\n    }\n  }\n  // Input handlers\n  const handleCheckboxChange=(event)=>{\n    setFieldValue({...fieldValue, [event.target.name]: event.target.checked})\n    // console.log(\"Check change\", event.target.checked)\n  }\n  // Radio group handler\n  const handleRadioGroupChange=(event)=>{\n    setFieldValue({...fieldValue, [event.target.name]: event.target.value})\n  }\n  function handleChange(event){\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  \n  // Integer input handler\n  const handleIntChange = (event) => {\n    console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g,'')\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int })\n    // setUpdateState(getUUID())\n  }\n  // Float input handler\n  const handleFloatChange = (event) => {\n    let stringNum = event.target.value.toString().replace(/ /g,'');\n    let float = parseFloat(stringNum)\n    setFieldValue({...fieldValue, [event.target.name]: float})\n    console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  }\n  function handleDateTimeChange(event){\n    let fullDate = props.parseDate(event.target.value)\n    var hours = new Date().getHours()\n    var minutes = new Date().getMinutes()\n    var seconds = new Date().getSeconds()\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\"\n    fieldValue[event.target.name] = convertedDate\n    setFieldValue(fieldValue)\n    // console.log(\"DATE CHANGE\", event.target.value)\n  }\n  // Handler of select copmponet changes\n  function handleSelectChange(option){\n    fieldValue[option.name] = option.value\n    console.log(\"OPT\", option.name, option.value)\n    var updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for(let i=0; i<updateSelectedOptions.length; i++){\n      if(option.name === updateSelectedOptions[i].name){\n        updateSelectedOptions[i] = option\n        noSuchOption = false\n        setSelectedOptions(updateSelectedOptions)\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if(noSuchOption === true){\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    if(option.name === \"depositor\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")){\n      // Первый депонент выбран нужно отфильтровать поле \"Со счета\" и отобразить счета только выбранного депонента\n      let newOptions = []\n      let depositorPartner = getDepositorPartner(option.value) // find depositor partner id\n      // console.log(\"PARTNER\", depositorPartner)\n      for(let i=0; i<enumData.length; i++){\n        if(enumData[i].name === \"accFrom\"){\n          for(let d=0; d<enumData[i].data.length; d++){\n            if(enumData[i].data[d].partner === depositorPartner){ // compare depositor partner and account partner\n              newOptions.push({\n                \"value\": enumData[i].data[d].id,\n                \"label\": enumData[i].data[d].label,\n                \"name\" : enumData[i].name\n              })\n            }\n          }\n        }\n      }\n      console.log(\"NEW ENUMS\", newOptions)\n      enumOptions[\"accFrom\"] = newOptions\n      setEnumOptions(enumOptions)\n    }\n    else if(option.name === \"depositor2\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")){\n      // Второй депонент выбран нужно отфильтровать поле \"На счет\" и отобразить счета только выбранного депонента\n      let newOptions = []\n      let depositorPartner = getDepositorPartner(option.value) // find depositor partner id\n      // console.log(\"PARTNER\", depositorPartner)\n      \n      for(let i=0; i<enumData.length; i++){\n        if(enumData[i].name === \"accTo\"){\n          for(let d=0; d<enumData[i].data.length; d++){\n            if(enumData[i].data[d].partner === depositorPartner){ // compare depositor partner and account partner\n              let checkResult = checkForPushing(enumData[i].data[d].label, fieldValue[\"type\"])\n              console.log(\"PUSH\", enumData[i].data[d].label)\n              if(checkResult.enableToPush === true){\n                newOptions.push({\n                  \"value\": enumData[i].data[d].id,\n                  \"label\": enumData[i].data[d].label,\n                  \"name\" : enumData[i].name\n                })\n              }\n            }\n          }\n        }\n      }\n      // console.log(\"NEW ENUMS\", newOptions)\n      enumOptions[\"accTo\"] = newOptions\n      setEnumOptions(enumOptions)\n    }\n    else if(option.name === \"security\" && (taskType === \"showInstructionsCreationForm\" || taskType === \"showInstructionsViewForm\")){\n      // выбрана ценная бумага нужно найти эмитента и отобразить\n      for(let i=0; i<enumData.length; i++){\n        if(enumData[i].name === \"security\"){\n          for(let d=0; d<enumData[i].data.length; d++){\n            if(enumData[i].data[d].id === option.value){\n              let issuerId = enumData[i].data[d].issuer\n              fieldValue[\"issuer\"] = issuerId\n              \n              for(let j=0; j<enumData.length; j++){\n                if(enumData[j].name === \"issuer\"){\n                  // console.log(\"issuerID\", issuerId)\n                  for(let h=0; h<enumData[j].data.length; h++){\n                    if(enumData[j].data[h].id === issuerId){\n                      let issuerOption = {\n                        value: issuerId,\n                        name: \"issuer\",\n                        label: enumData[j].data[h].label\n                      }\n                      console.log(\"issuerOption\", issuerOption)\n                      let noIssuerOption = true\n                      for(let y=0; y<updateSelectedOptions.length; y++){\n                        if(updateSelectedOptions[y].name === \"issuer\"){\n                          updateSelectedOptions[y] = issuerOption\n                          noIssuerOption = false\n                          setSelectedOptions(updateSelectedOptions)\n                          break\n                        }\n                        else {\n                          noIssuerOption = true\n                        }\n                      }\n                      if(noIssuerOption === true){\n                        updateSelectedOptions.push(issuerOption)\n                        setSelectedOptions(updateSelectedOptions)\n                        // console.log(\"NO Issuer\", updateSelectedOptions)\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      // console.log(\"NEW ENUMS\", newOptions)\n      // enumOptions[\"issuer\"] = newOptions\n      // setEnumOptions(enumOptions)\n    }\n    setFieldValue(fieldValue)      \n  }\n  function getDepositorPartner(depId){\n    for(let i=0; i<enumData.length; i++){\n      if(enumData[i].name === \"depositor\"){\n        for(let d=0; d<enumData[i].data.length; d++){\n          if(enumData[i].data[d].id === depId){\n            return enumData[i].data[d].partner\n          }\n        }\n      }\n    }\n  }\n  // Returns random id\n  function getUUID(){\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // Collecting all field values and return as attributes\n  function getFieldValuesCreateDocument(){\n    let fields = {}\n    for (let key in fieldValue){\n      if(fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\"){\n        fields[key] = fieldValue[key]\n      }\n    }\n    return(fields)\n  }\n  function getFieldValuesSaveInstruction(){\n    let fields = {\n      filled: false,\n      onExecution: false,\n      executed: false,\n      canceled: false,\n      opened: false,\n      // \"filledUser\" : userProfile.firstName + \" \" + userProfile.lastName,\n      signed: false\n    }\n    for (let key in fieldValue){\n      if(fieldValue[key] !== null && fieldValue[key] !== \"\" && fieldValue[key] !== \"NaN-NaN-NaN\"){\n        fields[key] = fieldValue[key]\n      }\n    }\n    return(fields)\n  }\n  // Collect data to update doc\n  function getFieldValuesUpdateInstruction(){\n    let docToUpdate = selectedDoc\n    // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        let fieldName = Form.sections[s].contents[c].name\n        if(Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)){\n          docToUpdate[fieldName] = false\n        }\n        else{\n          docToUpdate[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToUpdate\n  }\n  function checkForRequieredFields(){\n    let checkedSuccessfuly = null\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        let fieldName = Form.sections[s].contents[c].name\n        if(Form.sections[s].contents[c].required === true){\n          if(fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || \n            fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\"){\n            checkedSuccessfuly = false\n            swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n            return checkedSuccessfuly\n          }\n          else{\n            checkedSuccessfuly = true\n          }\n        }\n        else{\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  function swAllert(text, icon){\n    return(\n      swal({\n        text: text,\n        icon: icon,\n        buttons: {ok: \"Ок\"},\n      })\n    )\n  }\n  // Main button click handler\n  function buttonClick(buttonName, dataItem){\n    // console.log(\"Button\", buttonName)\n    if(buttonName === \"findDocument\"){\n      filterDocList(0, size-1, initialDocList, fieldValue)\n    }\n    else if(buttonName === \"createDocument\"){\n      if(props.operDayIsOpened === false){\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: {ok: \"Ок\"}\n        })\n      }\n      else{\n        const createDocument = getFieldValuesCreateDocument()\n        const commandJson = \n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {value: \"createDocument\"},\n            selectedDoc: {value: JSON.stringify(createDocument)},\n            searchDoc: {value: JSON.stringify(fieldValue)},\n            userId: {value: userProfile.userId},\n            userRole: {value: userProfile.userRole}\n          }\n        }\n        console.log(\"button createDocument: \", commandJson)\n        let checkResult = checkForRequieredFields()\n        if(checkResult === true){\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    // else if(buttonName === \"selectSample\"){\n    //   if(props.operDayIsOpened === false){\n    //     swal({\n    //       text: \"Операционный день закрыт вы не можете создавать поручения!\",\n    //       icon: \"warning\",\n    //       buttons: {ok: \"Ок\"}\n    //     })\n    //   }\n    //   else{\n    //     const commandJson = \n    //     {\n    //       commandType: \"completeTask\",\n    //       session_id: session_id,\n    //       process_id: process_id,\n    //       taskID: taskID,\n    //       variables: {\n    //         userAction: {value: \"selectSample\"},\n    //         searchDoc: {value: JSON.stringify(fieldValue)}\n    //       }\n    //     }\n    //     console.log(\"button selectSample: \", commandJson)\n    //     props.sendFieldValues(commandJson)\n    //     props.clearTabData(process_id)\n    //   }\n    // }\n    else if(buttonName === \"selectInstruction\"){\n      let createFormDefId = null\n      let report = null\n      for(let k=0; k < enumData.length; k++){\n        if(enumData[k].name === \"type\"){\n          for(let d=0; d<enumData[k].data.length; d++){\n            if(dataItem.type === enumData[k].data[d].id){\n              createFormDefId = enumData[k].data[d].create_form\n              report = enumData[k].data[d].reportName\n            }\n          }\n        }\n      }\n      let copyFields = dataItem\n      dataItem.filled = null\n      dataItem.filledUser = null\n      dataItem.filled_at = null\n      dataItem.onExecution = null\n      dataItem.onExecutionUser = null\n      dataItem.executed = null\n      dataItem.executedUser = null\n      dataItem.onExecutionDate = null\n      dataItem.executed_at = null\n      dataItem.signed = null\n      dataItem.signed_at = null\n      dataItem.signed_at_cd = null\n      dataItem.signed_at_depositor = null\n      dataItem.signed_user_full_name = null\n      dataItem.signed_depositor_inn = null\n      dataItem.signed_depositor_full_name = null\n      dataItem.signed_cd_inn = null\n      dataItem.signed_cd_full_name = null\n      dataItem.canceled = null\n      dataItem.canceledUser = null\n      dataItem.canceledDate = null\n      dataItem.filled = null\n      dataItem.filled = null\n      dataItem.filled = null\n\n      // for(let s=0; s<Form.sections.length; s++){\n      //   for(let c=0; c<Form.sections[s].contents.length; c++){\n      //     let fieldName = Form.sections[s].contents[c].name\n      //     if(Form.sections[s].contents[c].show === true){\n      //       copyFields[fieldName] = dataItem[fieldName]\n      //     }\n      //   }\n      // }\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"createInstruction\"},\n          selectedDoc: {value: JSON.stringify(copyFields)},\n          instructionType: {value: fieldValue[\"type\"]},\n          createFormDefId: {value: createFormDefId},\n          reportName: {value: report},\n          searchDoc: {value: JSON.stringify(fieldValue)}\n        }\n      }\n      console.log(\"button selectInstruction: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"editDocument\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"editDocument\"},\n          userId: {value: userProfile.userId},\n          userRole: {value: userProfile.userRole}\n        }\n      }\n      console.log(\"button editDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"updateDocument\"){\n      const updateDocument = getFieldValuesUpdateInstruction()\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"updateDocument\"},\n          document: {value: JSON.stringify(updateDocument)},\n          userId: {value: userProfile.userId},\n          userRole: {value: userProfile.userRole}\n        }\n      }\n      console.log(\"button updateDocument: \", commandJson)\n      let checkResult = checkForRequieredFields()\n      if(checkResult === true){\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if(buttonName === \"createInstruction\"){      \n      if(props.operDayIsOpened === false){\n        swal({\n          text: \"Операционный день закрыт вы не можете создавать поручения!\",\n          icon: \"warning\",\n          buttons: {ok: \"Ок\"}\n        })\n      }\n      else{\n        let createFormDefId = null\n        let report = null\n        for(let k=0; k < enumData.length; k++){\n          if(enumData[k].name === \"type\"){\n            for(let d=0; d<enumData[k].data.length; d++){\n              if(fieldValue[\"type\"] === enumData[k].data[d].id){\n                createFormDefId = enumData[k].data[d].create_form\n                report = enumData[k].data[d].reportName\n              }\n            }\n          }\n        }\n        const commandJson = \n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {value: \"createInstruction\"},\n            userId: {value: userProfile.userId},\n            userRole: {value: userProfile.userRole},\n            selectedDoc: {value: JSON.stringify({type: fieldValue[\"type\"]})},\n            instructionType: {value: fieldValue[\"type\"]},\n            createFormDefId: {value: createFormDefId},\n            reportName: {value: report}\n          }\n        }\n        console.log(\"button createInstruction: \", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if(buttonName === \"saveInstruction\"){\n      const createDocument = getFieldValuesSaveInstruction()\n      let notBody = {variables:\n        {\n          user_session_id: {value: session_id},\n          userAction: {value: \"getNotificationsCount\"}\n        }\n      }\n      let showTreansferOrder = true\n      let transferOrder = {\n        instruction_id: \"null\",\n        registered_person: fieldValue[\"ownerName\"],\n        address: fieldValue[\"ownerAddress\"],\n        security: fieldValue[\"security\"],\n        issuer: fieldValue[\"issuer\"],\n        quantity_int: fieldValue[\"quantity\"],\n        basis: fieldValue[\"basis\"]\n      }\n      for(let t=0; t<enumData.length; t++){\n        if(enumData[t].name === \"issuer\"){\n          for(let dt=0; dt<enumData[t].data.length; dt++){\n            if(fieldValue[\"issuer\"] === enumData[t].data[dt].id){\n              transferOrder[\"registrar\"] = enumData[t].data[dt].registrar\n            }\n          }\n        }\n        if(enumData[t].name === \"security\"){\n          for(let dt=0; dt<enumData[t].data.length; dt++){\n            if(fieldValue[\"security\"] === enumData[t].data[dt].id){\n              transferOrder[\"security_type\"] = enumData[t].data[dt].security_type\n            }\n          }\n        }\n        if(enumData[t].name === \"type\"){\n          for(let dt=0; dt<enumData[t].data.length; dt++){\n            if(fieldValue[\"type\"] === enumData[t].data[dt].id){\n              showTreansferOrder = enumData[t].data[dt].transfer_order\n            }\n          }\n        }\n      }\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"saveInstruction\"},\n          saveBody: {value: JSON.stringify(createDocument)},\n          selectedDoc: {value: JSON.stringify(createDocument)},\n          notificationsBody: {value: JSON.stringify(notBody)},\n          userId: {value: userProfile.userId},\n          userRole: {value: userProfile.userRole},\n          // reportName: {value: reportName},\n          showTreansferOrder: {value: showTreansferOrder},\n          transferOrder: {value: JSON.stringify(transferOrder)}\n        }\n      }\n      if(fieldValue[\"urgent\"] === true){\n        swal({\n          text: \"ВНИМАНИЕ поручения со статусом \\\"СРОЧНОЕ\\\" будет тарифицироваться в соответствии с тарифами ЦД на срочные поручения, хотите продолжить?\",\n          icon: \"warning\",\n          buttons: {ok: \"Ок\", cancel: \"Отмена\"},\n          // dangerMode: true,\n        })\n        .then((click) => {\n          if(click === \"ok\"){\n            let checkResult = checkForRequieredFields()\n            if(checkResult === true){\n              props.sendFieldValues(commandJson)\n              props.clearTabData(process_id)\n            }\n          }\n        })\n      }\n      else{\n        let checkResult = checkForRequieredFields()\n        console.log(\"PASSED\", checkResult)\n        if(checkResult === true){\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n      console.log(\"button saveInstruction: \", commandJson)   \n    }\n    else if(buttonName === \"viewInstruction\"){\n      let currentStatus = \"saved\"\n      let notBody = {variables: \n        {\n          user_session_id: {value: session_id},\n          userAction: {value: \"getNotificationsCount\"}\n        }\n      }\n      if(dataItem.filled === true){\n        currentStatus = \"filled\"\n        if(dataItem.onExecution === true){\n          currentStatus = \"onExecution\"\n          if(dataItem.executed === true){\n            currentStatus = \"executed\"\n          }\n          else{\n            if(dataItem.canceled === true){\n              currentStatus = \"canceled\"\n            }\n          }\n        }\n        else{\n          if(dataItem.canceled === true){\n            currentStatus = \"canceled\"\n          }\n        }\n      }\n      \n      let editFormDefId = null\n      let report = null\n      for(let k=0; k < enumData.length; k++){\n        if(enumData[k].name === \"type\"){\n          for(let d=0; d<enumData[k].data.length; d++){\n            if(dataItem.type === enumData[k].data[d].id){\n              editFormDefId = enumData[k].data[d].edit_form\n              report = enumData[k].data[d].reportName\n            }\n          }\n        }\n      }\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables:{\n          notificationsBody: {value: JSON.stringify(notBody)},\n          userAction: {value: \"viewInstruction\"},\n          userId: {value: userProfile.userId},\n          docId: {value: dataItem.id},\n          instructionType: {value: dataItem.type},\n          status: {value: currentStatus},\n          editFormDefId: {value: editFormDefId},\n          reportName: {value: report},\n          searchDoc: {value: JSON.stringify(fieldValue)},\n        }\n      }\n      console.log(\"button viewInstruction: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"sendToCD\"){\n      if(props.operDayIsOpened === false){\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {ok: \"Ок\"}\n        })\n      }\n      else{\n        if(props.esInn === null){\n          handleOpenModalEnterPin()\n        }\n        else{\n          let updateDocument = getFieldValuesUpdateInstruction()\n          updateDocument[\"filled\"] = true\n          updateDocument[\"filled_at\"] = props.getCurrentFullDateTime()\n          updateDocument[\"filledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n          updateDocument[\"signed_depositor_inn\"] = props.esInn\n          updateDocument[\"signed_depositor_full_name\"] = props.esUserFullName\n          updateDocument[\"signed_at_depositor\"] = props.getCurrentFullDateTime()\n          const commandJson = \n          {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {value: \"updateDocument\"},\n              userId: {value: userProfile.userId},\n              userRole: {value: userProfile.userRole},\n              document: {value: JSON.stringify(updateDocument)},\n              status: {value: \"filled\"}\n            }\n          }\n          // console.log(buttonName, commandJson)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    else if(buttonName === \"sendToCDWithoutES\"){\n      const updateDocument = getFieldValuesUpdateInstruction()\n      updateDocument.filled = true\n      updateDocument.filledUser = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"updateDocument\"},\n          userId: {value: userProfile.userId},\n          userRole: {value: userProfile.userRole},\n          document: {value: JSON.stringify(updateDocument)},\n          status: {value: \"filled\"}\n        }\n      }\n      console.log(\"button sendToCDWithoutES: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id) \n    }\n    else if(buttonName === \"SignInstructionSaveButton\"){\n      const updateDocument = getFieldValuesUpdateInstruction()\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"updateDocument\"},\n          userId: {value: userProfile.userId},\n          userRole: {value: userProfile.userRole},\n          document: {value: updateDocument},\n          status: {value: \"\"}\n        }\n      }\n      console.log(\"button signInstruction: \", commandJson)\n      sign(\"signInstruction\", commandJson)\n    }\n    else if(buttonName === \"deleteDocument\"){\n      let docToDelete = selectedDoc.id\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {value: \"deleteDocument\"},\n          document: {value: docToDelete.toString()}\n        }\n      }\n      console.log(\"deleteDocument:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно удалить это поручение?\",\n        icon: \"warning\",\n        buttons: {yes: \"Да\", cancel: \"Отмена\"},\n      })\n      .then((click) => {\n        if(click === \"yes\"){\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      })\n    }\n    else if(buttonName === \"onExecution\"){\n      if(props.operDayIsOpened === false){\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {ok: \"Ок\"}\n        })\n      }\n      else{\n        if(props.esInn === null){\n          handleOpenModalEnterPin()\n        }\n        else{\n          let updateDocument = getFieldValuesUpdateInstruction()\n          updateDocument[\"onExecution\"] = true\n          updateDocument[\"onExecutionUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n          updateDocument[\"onExecutionDate\"] = props.getCurrentFullDateTime()\n          updateDocument[\"signed_cd_inn\"] = props.esInn\n          updateDocument[\"signed_cd_full_name\"] = props.esUserFullName\n          updateDocument[\"signed_at_cd\"] = props.getCurrentFullDateTime()\n          const commandJson = \n          {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {value: \"updateDocument\"},\n              userId: {value: userProfile.userId},\n              userRole: {value: userProfile.userRole},\n              document: {value: JSON.stringify(updateDocument)},\n              status: {value: \"onExecution\"}\n            }\n          }\n          console.log(\"onExecution:\", commandJson, updateDocument)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    else if(buttonName === \"Execute\"){\n      if(props.operDayIsOpened === false){\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {ok: \"Ок\"}\n        })\n      }\n      else{\n        const updateDocument = getFieldValuesUpdateInstruction()\n        updateDocument[\"executed\"] = true\n        updateDocument[\"executedUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n        updateDocument[\"executedDate\"] = props.getCurrentFullDateTime()\n        const commandJson = \n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          variables: {\n            userAction: {value: \"updateDocument\"},\n            userId: {value: userProfile.userId},\n            userRole: {value: userProfile.userRole},\n            document: {value: JSON.stringify(updateDocument)},\n            status: {value: \"executed\"}\n          }\n        }\n        console.log(\"button Execute: \", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if(buttonName === \"CancelInstruction\"){\n      if(props.operDayIsOpened === false){\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {ok: \"Ок\"}\n        })\n      }\n      else{\n        handleOpenModalCancelInstruction()\n      }\n    }\n    else if(buttonName === \"CancelInstructionSaveButton\"){\n      handleCloseModalCancelInstruction()\n      const updateDocument = getFieldValuesUpdateInstruction()\n      updateDocument[\"canceled\"] = true\n      updateDocument[\"сanceledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"updateDocument\"},\n          userId: {value: userProfile.userId},\n          userRole: {value: userProfile.userRole},\n          document: {value: JSON.stringify(updateDocument)},\n          status: {value: \"canceled\"}\n        }\n      }\n      console.log(\"button CancelInstructionSaveButton: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"CancelInstructionCancelButton\"){ \n      handleCloseModalCancelInstruction()\n      fieldValue[\"cancelationReason\"] = null\n      setFieldValue(fieldValue)\n      console.log(\"FIELDS\", fieldValue)\n    }\n    else if(buttonName === \"uploadToXML\"){\n      // Create xml\n      let xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><InstructionsList xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><instructions>\"\n      for(let i=0; i<filteredDocList.length; i++){\n        xml += \"<instruction>\"\n        for (let prop in filteredDocList[i]){\n          xml += \"<\" + prop + \">\"\n          xml += filteredDocList[i][prop]\n          xml += \"</\" + prop + \">\"\n        }\n        xml += \"</instruction>\"\n      }\n      xml += \"</instructions></InstructionsList>\"\n      let finalxml = xml.replace(/<\\/?[0-9]{1,}>/g, '').toString()\n\n      // Download xml\n      let pom = document.createElement('a')\n      let filename = \"UploadInstructions.xml\"\n      let bb = new Blob([finalxml], {type: 'text/plain'})\n\n      pom.setAttribute('href', window.URL.createObjectURL(bb))\n      pom.setAttribute('download', filename)\n\n      pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':')\n      pom.draggable = true\n      pom.classList.add('dragout')\n      pom.click()\n    }\n    else if(buttonName === \"showInstructionReport\"){\n      let reportName = null\n      for(let k=0; k < enumData.length; k++){\n        if(enumData[k].name === \"type\"){\n          for(let d=0; d<enumData[k].data.length; d++){\n            if(selectedDoc.type === enumData[k].data[d].id){\n              let reportId = enumData[k].data[d].report\n              for(let e=0; e<enumData.length; e++){\n                if(enumData[e].name === \"instructionReports\"){\n                  for(let t=0; t<enumData[e].data.length; t++){\n                    if(reportId === enumData[e].data[t].id){\n                      reportName = enumData[e].data[t].reportName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"showInstructionReport\"},\n          docId: {value: selectedDoc.id.toString()},\n          instructionType: {value: selectedDoc.type},\n          reportName: {value: reportName},\n          reportVars: {value: \"?id=\" + selectedDoc.id +\"&first_n=\"+ userProfile.firstName.trim() +\"&last_n=\"+ userProfile.lastName.trim() +\"&middle_n=\"+ userProfile.middleName.trim()}\n        }\n      }\n      console.log(\"button showInstructionReport: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"updateDocList\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"updateDocList\"},\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"cancel\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"cancel\"},\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"back\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"back\"},\n        }\n      }\n      console.log(\"button back: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    \n    else{\n      console.log(\"button: \", buttonName)\n    }\n  }\n  // Returns Button component\n  function createButton(button, index){\n    return(\n      <Button variant=\"outlined\"\n        name = {button.name}\n        key = {index}\n        onClick = {()=> buttonClick(button.name)}\n        style={{\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        }}\n        value = {button.name}\n        >\n          {button.label}\n      </Button> \n    )\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section, index){\n    return (\n      <Table size=\"small\" key={index+\"table\"}>\n        <TableHead>\n          <TableRow style={{height: 30}}>\n            <TableCell \n              key={index=\"head\"} \n              style={{\n                color: \"black\", \n                fontSize: 14,\n                backgroundColor:  sectionColor,\n                width: \"100%\"\n              }}>\n                {section.label}\n            </TableCell> \n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section){\n    return(\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map((contentItem, index) => (\n            contentItem.show === true &&\n              <TableRow key = {index} style={{height: 30}}>\n                <TableCell\n                  key = {index+\"cell1\"}\n                  align=\"left\"\n                  style={{width: \"40%\"}}>\n                  {contentItem.label}\n                </TableCell>\n                <TableCell\n                  key = {index+\"cell2\"}\n                  align=\"left\"\n                  style={{width: \"60%\", height: 30}}\n                  >{contentBuilder(contentItem)}\n                </TableCell>\n              </TableRow>\n          ))} \n        </TableBody>\n      </Table>\n    )\n  }\n  // Create component by it's type\n  function contentBuilder(contentItem){\n    if(contentItem.type === \"Text\"){\n      return(\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur = {handleChange}\n          name = {contentItem.name}\n          style={{width: \"100%\"}}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\"){\n      return (\n        <TextField\n          onKeyPress={onKeyPressDateTime}\n          type=\"date\"\n          name = {contentItem.name}\n          onBlur = {handleDateTimeChange}\n          style={{width: \"100%\"}}\n          defaultValue = {(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]): \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\"){\n      return (\n        <TextField\n          name = {contentItem.name}\n          onBlur = {handleDateTimeChange}\n          style={{width: \"100%\"}}\n          value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseFullDateTime(fieldValue[contentItem.name]):\"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\"){\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\" : contentItem.name\n      }\n      if(fieldValue[contentItem.name] !== undefined){\n        for(let i=0; i<enumOptions[contentItem.name].length; i++){\n          if(fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value){\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if(selectedOptions.length !== 0){\n        for(let i=0; i<selectedOptions.length; i++){\n          if(contentItem.name === selectedOptions[i].name){\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name = {contentItem.name}\n          value = {selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled ={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    } \n    else if(contentItem.type === \"Int\"){\n      return (\n        <TextField\n          onKeyPress = {onKeyPressInt}\n          name = {contentItem.name}\n          onBlur = {handleIntChange}\n          // defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          style = {{width: \"100%\"}}\n          disabled = {(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps = {{inputComponent: IntegerFormat}}\n        />\n      )\n    }\n    else if(contentItem.type === \"Float\"){\n      return(\n        <TextField\n          onKeyPress={onKeyPressFloat}\n          name = {contentItem.name}\n          onBlur = {handleFloatChange}\n          value = {fieldValue[contentItem.name]}\n          style={{width: \"100%\"}}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{inputComponent: FloatFormat}}\n        />\n      )\n    }\n    else if(contentItem.type === \"Bool\"){\n      return(\n        <Checkbox\n          style={{maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\"}}\n          name = {contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked = {(fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true) ? true : false}    \n        />\n      )\n    } \n    else if(contentItem.type === \"RadioGroup\"){\n      let radioGroupItems = []\n      for(let i=0; i < enumData.length; i++){\n          if(enumData[i].name === contentItem.name){\n            radioGroupItems =  enumData[i].data\n        }\n      }\n      return(\n        <RadioGroup \n          name={contentItem.name} \n          value={fieldValue[contentItem.name]} \n          onChange={handleRadioGroupChange}\n        >\n          {radioGroupItems.map(groupItem => {\n            return(\n              <FormControlLabel                \n                value={groupItem.id} \n                label={groupItem.label} \n                control={<Radio style={{height: \"5px\", color: \"green\"}}/>}  \n                disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n              />\n            )\n          })}\n          \n        </RadioGroup>\n      )\n    }   \n  }\n  // Key press handlers for some fields\n  function onKeyPressText(event){\n    let code = event.charCode\n    if(code === 13){\n      for(let i=0; i<buttons.length; i++){\n        if(buttons[i].name === \"findDocument\"){\n          // console.log(\"CODE\", code)\n          handleChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressDateTime(event){\n    let code = event.charCode\n    if(code === 13){\n      for(let i=0; i<buttons.length; i++){\n        if(buttons[i].name === \"findDocument\"){\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressInt(event){\n    let code = event.charCode\n    if(code === 13){\n      for(let i=0; i<buttons.length; i++){\n        if(buttons[i].name === \"findDocument\"){\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g,'')\n          let int = parseInt(stringNum)\n          fieldValue[event.target.name] = int\n          setFieldValue(fieldValue)\n          filterDocList(0, size-1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressFloat(event){\n    let code = event.charCode\n    if(code === 13){\n      for(let i=0; i<buttons.length; i++){\n        if(buttons[i].name === \"findDocument\"){\n          let stringNum = event.target.value.toString().replace(/ /g,'')\n          let float = parseFloat(stringNum)\n          fieldValue[event.target.name] = float\n          setFieldValue(fieldValue)\n          filterDocList(0, size-1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressModalEnterPin(event){\n    let code = event.charCode\n    if(code === 13){\n      buttonClick(\"SignInstructionSaveButton\", null)\n    }\n  }\n  function onKeyPressModalCancelInstruction(event){\n    let code = event.charCode\n    if(code === 13){\n      buttonClick(\"CancelInstructionSaveButton\", null)\n    }\n  }\n  \n  // custom allerts\n  function swAlert(text, icon){\n    return(\n      swal({\n        text: text,\n        icon: icon,\n        buttons: {ok: \"Ок\"}\n      })\n    )\n  }\n  function keyGen(length){\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function getGridFormEnumLabel(name, value){\n    for(let i=0; i<gridFormEnumData.length; i++){\n      if(gridFormEnumData[i] !== null){\n        if(name === gridFormEnumData[i].name){\n          for(let l=0; l<gridFormEnumData[i].data.length; l++){\n            if(gridFormEnumData[i].data[l].id === parseInt(value)){\n              return gridFormEnumData[i].data[l].label\n            }\n          }\n        }\n      }\n    }\n  }\n  // Create grid form components\n  function getGridFormItems(value, type, dataItem, name){\n    if(type === \"Enum\"){\n      if(value === null || value === \"\" || value === undefined){\n        return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n      }\n      else{\n        // console.log(\"ENUM\", name, value, type)\n        return getGridFormEnumLabel(name, value)\n      }\n    }\n    else if(type === \"Bool\"){\n      // console.log(\"ITEM\", name, value, type)\n      return(\n        <Checkbox\n          style={{maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\"}}\n          // name = {name}\n          checked = {(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    } \n    else if(type === \"DateTime\"){\n      if(value === null || value === \"\" || value === undefined){\n        return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n      }\n      else{\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else if(type === \"Text\"){\n      // console.log(\"ITEM\", name, value, type)\n      if(name === \"instructionStatus\"){\n        let status = \"\"\n        if(dataItem[\"filled\"] === true){\n          status = \"Введено\"\n        }\n        if(dataItem[\"onExecution\"] === true){\n          status = \"На исполнении\"\n        }\n        if(dataItem[\"executed\"] === true){\n          status = \"Исполнено\"\n        }\n        if(dataItem[\"canceled\"] === true){\n          status = \"Отменено\"\n        }\n        return status\n      }\n      else{\n        if(value === null || value === \"\" || value === undefined){\n          return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n        }\n        else{\n          return(<td>{value}</td>)\n        }\n      }\n    }\n    else{\n      if(value === null || value === \"\" || value === undefined){\n        return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n      }\n      else{\n        return(<td>{value}</td>)\n      }\n    }\n    \n  }\n  function handleCloseSnackBar(){\n    setShowSnackBar(false)\n  }\n  function getContentType(key){\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        if(key === Form.sections[s].contents[c].name){\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  // filter docList by filled parameters\n  function filterDocList(fetchFrom, fetchTo, Data, fields){\n    var newDocList = []\n    if(Object.keys(fields).length === 0){\n      newDocList = Data\n    }\n    else{\n      for(let i=0; i<Data.length; i++){\n        let match = false\n        for(let key in fields){\n          if(fields[key] === null || fields[key] === \"\" || fields[key] === undefined){\n            match = true\n          }\n          else{\n            // if(Data[i][key] !== null){\n              let contentType = getContentType(key)\n              if(contentType === \"Text\"){\n                if(Data[i][key] !== null){\n                  try{\n                    let searchField = fields[key].toLowerCase()\n                    let dataField = Data[i][key].toLowerCase()\n                    let includeSearch = dataField.includes(searchField)\n                    if(includeSearch === true){\n                      match = true\n                    }\n                    else{\n                      match = false\n                      break\n                    }\n                  }\n                  catch(er){\n                    console.log(\"ERR\", er)\n                    match = true\n                  }\n                }\n                else{\n                  match = false\n                  break\n                }\n              }\n              else if(contentType === \"Int\" || contentType === \"Float\"){\n                if(Data[i][key] !== null){\n                  if(fields[key] >= 0 || fields[key] < 0){\n                    let searchField = fields[key].toString()\n                    let dataField = Data[i][key].toString()\n                    let includeSearch = dataField.includes(searchField)\n                    if(includeSearch === true){\n                      match = true\n                    }\n                    else{\n                      match = false\n                      break\n                    }\n                  }\n                  else{match = true}\n                }\n                else{\n                  match = false\n                  break\n                }\n              }\n              else if(contentType === \"Enum\"){\n                if(key === \"depositor\"){\n                  console.log(\"DEPOSITOR\", fields[key], Data[i][\"depositor2\"])\n                  if(fields[key] === Data[i][key] || fields[key] === Data[i][\"depositor2\"]){\n                    match = true\n                  }\n                  else{\n                    match = false\n                    break\n                  }\n                }\n                else if(key === \"account\"){\n                  if(fields[key] === Data[i][\"accFrom\"] || fields[key] === Data[i][\"accTo\"]){\n                    match = true\n                  }\n                  else{\n                    match = false\n                    break\n                  }\n                }\n                else{\n                  if(fields[key] === Data[i][key]){\n                    match = true\n                  }\n                  else{\n                    match = false\n                    break\n                  }\n                }\n                \n              }\n              else if(contentType === \"DateTime\"){\n                if(Data[i][key] !== null){\n                  let searchField = props.parseDate(fields[key])\n                  let dataField = props.parseDate(Data[i][key])\n                  console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                  if(searchField === \"NaN-NaN-NaN\"){\n                    match = true\n                  }\n                  else{\n                    if(searchField.includes(dataField) === true){\n                      match = true\n                    }\n                    else{\n                      match = false\n                      break\n                    }\n                  }\n                }\n                else{\n                  match = false\n                  break\n                }\n              }\n              else if(contentType === \"Bool\"){\n                if(key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\"){\n                  let instrStatus = \"\"\n                  let statusSelected = false\n                  let fieldStatus = \"\"\n                  // Check fields\n                  if(fields[\"filled\"] === true){\n                    fieldStatus = \"filled\"\n                    statusSelected = true\n                  }\n                  if(fields[\"onExecution\"] === true){\n                    fieldStatus = \"onExecution\"\n                    statusSelected = true\n                  }\n                  if(fields[\"executed\"] === true){\n                    fieldStatus = \"executed\"\n                    statusSelected = true\n                  }\n                  if(fields[\"canceled\"] === true){\n                    fieldStatus = \"canceled\"\n                    statusSelected = true\n                  }\n                  if(statusSelected === true){\n                    // Check Instruction\n                    if(Data[i][\"filled\"] === true){\n                      instrStatus = \"filled\"\n                    }\n                    if(Data[i][\"onExecution\"] === true){\n                      instrStatus = \"onExecution\"\n                    }\n                    if(Data[i][\"executed\"] === true){\n                      instrStatus = \"executed\"\n                    }\n                    if(Data[i][\"canceled\"] === true){\n                      instrStatus = \"canceled\"\n                    }\n                    // Check whether statuses are equal\n                    if(fieldStatus === instrStatus){\n                      match = true\n                    }\n                    else{\n                      match = false\n                      break\n                    }\n                  }\n                  else{\n                    match = true\n                  }\n                }\n                else{\n                  if(Data[i][key] === null || fields[key] === Data[i][key]){\n                    match = true\n                  }\n                  else{\n                    match = false\n                    break\n                  }\n                }\n              }\n            // }\n            // else{\n            //   match = false\n            //   break\n            // }\n          }\n        }\n        if(match === true){\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered docList by size\n  function fetchBySize(fetchFrom, fetchTo, Data){\n    let newDocList = []\n    for(let i=fetchFrom; i<=fetchTo; i++){\n      if(Data[i] !== undefined){\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n    // setUpdateState(getUUID())\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick(){\n    if(page !== 1){\n      setPage(1)\n      fetchBySize(0, size-1, filteredDocList)\n    }\n    else{\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page){\n    if(page !== 1){\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage -1) * size) //10\n      let fetchTo = (size * prevPage)-1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else{\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page){\n    if(docList.length < size-1){\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    } \n    else{\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size)-1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    \n  }\n  function handleChangeRowsPerPage(event){\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value-1, filteredDocList)\n  } \n  function GoToPage(){\n    let fetchFrom = (page*size-1)-size\n    let fetchTo = page*size-1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event){\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar(){\n    setShowSnackBar(false)\n  }\n  function getPageAmount(){\n    let pagesFloat = (filteredDocList.length)/size\n    let mathRoundOfPages = Math.round(pagesFloat)\n    if(pagesFloat > mathRoundOfPages){\n      return mathRoundOfPages + 1\n    }\n    else{\n      return mathRoundOfPages\n    }\n  }\n  function getBackgroundColor(signed, urgent){\n    if(signed !== undefined){\n      if(signed === true){\n        return \"white\"\n      }\n      else{\n        if(urgent === true){\n          return \"#EFB2B2\"\n        }\n        else{\n          return \"#FCEAD3\"\n        }\n      }\n    }\n    else return \"white\"\n  }\n  function checkToShowSection(section){\n    let showSection = false\n    for(let i=0; i<section.contents.length; i++){\n      if(section.contents[i].show === true){\n        showSection = true \n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i){\n    let lastSection = true\n    if(i === gridForm.sections.length-1){ // The last section\n      return true\n    }\n    else{\n      let nextS = i+1\n      // console.log(\"IT\", i, gridForm.sections[nextS])\n      for(let s=nextS; s<gridForm.sections.length; s++){\n        for(let c=0; c<gridForm.sections[s].contents.length; c++){ // Check next section\n          if(gridForm.sections[s].contents[c].show === true){\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n  \n  function getForm(){\n    return(\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n        <Grid item xs={isSearchForm === true ? 12 : 9}>\n          <Paper>\n            {isSearchForm === false &&\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <TableHead>\n                  <TableRow style={{maxHeight: 25}}>\n                    <TableCell style={{fontSize: 16, color: \"black\"}}>{Form.label}</TableCell>\n                  </TableRow>\n                </TableHead>\n              </Grid>\n            }\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              {Form.sections.map((section, index) => {\n                let showSection = checkToShowSection(section)\n                if(showSection === true){\n                  return sectionBuilder(section, index)\n                }\n              })}\n            </Grid>\n             \n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  function getEnumLabel(name, id){\n    for(let i=0; i<enumData.length; i++){\n      if(enumData[i].name === name){\n        for(let d=0; d<enumData[i].data.length; d++){\n          if(enumData[i].data[d].id === id){\n            return enumData[i].data[d].label\n          }\n        }\n      }\n    }\n   }\n  function dynamicSort(property, sortOrder, type) {\n    if(type === \"DateTime\" || type === \"Bool\"){\n      sortOrder = sortOrder * -1\n    }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if(type === \"DateTime\"){\n      return function(a, b){\n        if(a[property] !== null && b[property] !== null){\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA =  dateA.getTime()/1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB =  dateB.getTime()/1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else{\n          if(a[property] === null){\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if(type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\"){\n      return function(a, b){\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * -1 * sortOrder\n      }\n    }\n    else if(type === \"Enum\"){\n      return function(a, b){\n        let labelA = getEnumLabel(property, a[property])\n        // console.log(\"A\", property, a[property], labelA)\n        let labelB = getEnumLabel(property, b[property])\n        // console.log(\"labelB\", labelB, property, b)\n        var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n  }\n  function sortDataByColumn(name, type){\n    let sortOrder = 1\n    if(sortedColumn === name){\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size-1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function getSecType(id){\n    let type = 1\n    for(let i=0; i<gridFormEnumData.length; i++){\n      if(gridFormEnumData[i] !== null){\n        if(gridFormEnumData[i].name === \"security\"){\n          for(let d=0; d<gridFormEnumData[i].data.length; d++){\n            if(gridFormEnumData[i].data[d].id === id){\n              type = gridFormEnumData[i].data[d].type\n            }\n          }\n        }\n      }\n    }\n    for(let i=0; i<gridFormEnumData.length; i++){\n      if(gridFormEnumData[i] !== null){\n        if(gridFormEnumData[i].name === \"securityTypes\"){\n          for(let d=0; d<gridFormEnumData[i].data.length; d++){\n            if(gridFormEnumData[i].data[d].id === type){\n              return gridFormEnumData[i].data[d].label\n            }\n          }\n        }\n      }\n    }\n  }\n  function calculateColSpan(contents){\n    let num = 0\n    for(let i=0; i<contents.length; i++){\n      if(contents[i].show === true){\n        num += 1\n      }\n    }\n    return num\n  }\n  const handleContextMenu = (event) => {\n    event.preventDefault()\n    console.log(\"CONT MENU\")\n    setAnchorEl(event.currentTarget)\n  }\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n    // console.log(\"CLOSE\", fieldValue)\n    for(let s=0; s<gridForm.sections.length; s++){\n      for(let c=0; c<gridForm.sections[s].contents.length; c++){\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name]\n      }\n    }\n    console.log(\"nForm\", gridForm)\n    setGridForm(gridForm)\n    setUpdateState(getUUID())\n  }\n  function createMenuItems(){\n    let columns = []\n    columns.push(  \n      <tr>\n        <td\n          style={{paddingLeft: 5, cursor: \"pointer\"}}\n          name={\"selectAll\"}\n          onClick={()=>handleTableCheckboxChange(\"selectAll\")}\n        >\n          Выбрать все\n        </td>\n        <td>\n          <Checkbox\n            style={{maxWidth: 20, height: 15, color: \"green\"}}\n            name={\"selectAll\"}\n            onChange={handleGridCheckboxChange}\n            checked={(gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined) ? false : true}\n          />\n        </td>\n      </tr>\n    )\n    for(let s=0; s<gridForm.sections.length; s++){\n      for(let c=0; c<gridForm.sections[s].contents.length; c++){\n        let name = gridForm.sections[s].contents[c].name\n        columns.push(\n          <tr>\n            <td\n              style={{paddingLeft: 5, cursor: \"pointer\", background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\"}}\n              name={name}\n              onClick={()=>handleTableCheckboxChange(name)}\n            >\n              {gridForm.sections[s].contents[c].label}\n            </td>\n            <td>\n            <Checkbox\n              style={{maxWidth: 20, height: 15, color: \"green\"}}\n              name={name}\n              onChange={handleGridCheckboxChange}\n              checked={(gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined) ? false : true}\n            />\n            </td>\n          </tr>\n        )\n      }\n    }\n    return columns\n  }\n  function downloadExcel(){\n    tableToExcel.convert(document.getElementById(gridTableId))\n  }\n  const handleGridCheckboxChange = (event) => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if(event.target.name === \"selectAll\"){\n      let newFields = {[event.target.name]: event.target.checked}\n      for(let key in gridFieldValue){\n        newFields[key] = !gridFieldValue[event.target.name]\n      }\n      // console.log(\"selectAll\", newFields)\n      setGridFieldValue(newFields)\n    }\n    else{\n      setGridFieldValue({ ...gridFieldValue, [event.target.name]: event.target.checked })\n    }\n  }\n  const handleTableCheckboxChange = (name) => {\n    // console.log(\"TD CHBX\", name)\n    if(name === \"selectAll\"){\n      let newFields = {...gridFieldValue}\n      for(let key in newFields){\n        newFields[key] = !gridFieldValue[name]\n      }\n      setGridFieldValue(newFields)\n    }\n    else{\n      setGridFieldValue({ ...gridFieldValue, [name]: !gridFieldValue[name] })\n    }\n  }\n  try{\n    return (\n      <Grid>\n        {isSearchForm !== null &&\n          isSearchForm === true \n          ?\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={9}>\n              <Accordion expanded={accordionExpanded} onChange={() => handleExpandAccordion()}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon/>}\n                >\n                  <Typography>{Form.label}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {getForm()}\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n          </Grid>\n          :\n          getForm()\n        }\n        <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n          {buttons.map((button, index) => {\n            return createButton(button, index)\n          })}\n          <Button\n            component=\"a\"\n            href=\"../Инструкция Рутокен.docx\"\n            download\n            variant=\"outlined\" \n            style={{\n              margin: 3,\n              backgroundColor: \"#13611B\",\n              color: \"white\",\n              height: 32,\n              fontSize: 12\n            }}\n            onClick={()=> buttonClick(\"downloadES\")}\n            startIcon={<DescriptionIcon/>}\n          >Инструкция ЭЦП\n          </Button>\n          <Button\n            component=\"a\"\n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            href=\"https://www.rutoken.ru/support/download/rutoken-plugin/\"\n            download\n            variant=\"outlined\" \n            style={{\n              margin: 3,\n              backgroundColor: \"#13611B\",\n              color: \"white\",\n              height: 32,\n              fontSize: 12\n            }}\n          >Плагин\n          </Button>\n          <Button\n            component=\"a\"\n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            href=\"https://www.rutoken.ru/support/download/windows/\"\n            download\n            variant=\"outlined\" \n            style={{\n              margin: 3,\n              backgroundColor: \"#13611B\",\n              color: \"white\",\n              height: 32,\n              fontSize: 12\n            }}\n          >Драйвер\n          </Button>\n        </Grid>\n        {isSearchForm === true &&\n          <ReplayIcon style={{paddingTop: 3}} onClick={()=> buttonClick(\"updateDocList\")}/>\n        }\n        {/* Create grid table with data from doclist */}\n        {docList !== null &&\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <div style={{height: \"500px\", overflow: \"auto\"}}>\n                  <table size=\"small\" class=\"main-table-style\" id={gridTableId}>\n                    <thead class=\"thead-style\" style={{position: \"sticky\", top: 0}}>\n                      {/* 1st Row Sections Labels */}\n                      <tr>\n                        <td class=\"td-head-first-child\" colSpan=\"1\" onContextMenu={(ev)=> handleContextMenu(ev)}></td>\n                        {gridForm.sections.map((section, index) => {\n                          let showSection = checkToShowSection(section)\n                          if(showSection === true){\n                            let lastSection = checkSectionOnLastChild(index)\n                            return (\n                              <td\n                                class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                colSpan={calculateColSpan(section.contents)}\n                                onContextMenu={(ev)=> handleContextMenu(ev)}\n                              >\n                                {section.label}\n                              </td>\n                            )\n                          }\n                        })}\n                      </tr>\n                      {/* 2nd Row Sections Contents labels */}\n                      <tr>\n                        <td \n                          class=\"td-head-style-2row\"\n                          rowSpan=\"2\"\n                          style={{\"minWidth\": \"65px\"}}\n                          onContextMenu={(ev)=> handleContextMenu(ev)}\n                        >\n                          Действие\n                        </td>\n                        {gridForm.sections.map(section =>\n                          section.contents.map(contentItem => {\n                            if(contentItem.show === true){\n                              return(\n                                <td\n                                  class=\"td-head-style-2row\"\n                                  rowSpan=\"2\"\n                                  onClick={()=> sortDataByColumn(contentItem.name, contentItem.type)}\n                                  onContextMenu={(ev)=> handleContextMenu(ev)}\n                                >\n                                  {contentItem.label}{sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{marginBottom: -8}}/> : <ArrowDropUpIcon style={{marginBottom: -8}}/> : \"\"}\n                                </td>\n                              )\n                            }\n                          })\n                        )}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.keys(docList).length !== 0 &&\n                        docList.map(dataItem => (\n                          <tr key={keyGen(5)} style={{\"height\": 30, \"backgroundColor\": getBackgroundColor(dataItem.opened, dataItem.urgent)}}>\n                            <td key={keyGen(5)} style={{\"width\": 34, \"border-bottom\": \"1px solid grey\"}}>\n                              {gridFormButtons !== \"null\" &&\n                                gridFormButtons.map(button => \n                                <Button\n                                  key={button.name}\n                                  name={button.name}\n                                  variant=\"outlined\"\n                                  value={button.name}                              \n                                  onClick = {() => buttonClick(button.name, dataItem)}\n                                  style={{\n                                    margin: 1,\n                                    height: 24,\n                                    fontSize: 10,\n                                    maxWidth: 32,\n                                    backgroundColor: button.backgroundColor,\n                                    borderColor: \"darkgreen\",\n                                    color: \"darkgreen\"\n                                  }}\n                                >{button.label}\n                                </Button>\n                              )}\n                            </td>\n                              {gridForm.sections.map(section => {\n                                return(\n                                  section.contents.map(contentItem => {\n                                    if(contentItem.show === true){\n                                      return(\n                                        <td class=\"td-body-style\" style={{color: (selectedInstruction !== null ? (selectedInstruction.id === dataItem.id ? \"blue\" : \"black\") : \"black\")}} onClick={()=> setSelectedInstruction(dataItem)}>\n                                          {getGridFormItems(dataItem[contentItem.name], contentItem.type, dataItem, contentItem.name)}\n                                        </td>\n                                      )\n                                    }\n                                  }) \n                                )\n                              })}\n                          </tr>\n                        )\n                      )}                    \n                    </tbody>\n                  </table>\n                </div>\n                <tfoot>\n                  <tr>\n                    <td style={{paddingLeft: \"3px\"}}>\n                      <Button\n                        variant=\"outlined\"\n                        style={{background: \"#047535\", color: \"white\", height: 28}}\n                        onClick={()=> downloadExcel()}\n                        >В EXCEL\n                      </Button>\n                    </td>\n                    <td style={{paddingLeft: \"20px\"}}>\n                      <div style={{minWidth: 90, color: \"black\"}}>Кол-во записей</div>\n                    </td>                    \n                    <td style={{paddingLeft: \"3px\"}}>\n                      <FormControl\n                        variant=\"outlined\"\n                        style={{minWidth: 30}}\n                      >\n                        <GridSelect \n                          onChange={handleChangeRowsPerPage}\n                          style={{height: 25, color: \"black\"}}\n                          value = {size}\n                        >\n                          <MenuItem value = {10}>10</MenuItem>\n                          <MenuItem value = {20}>20</MenuItem>\n                          <MenuItem value = {50}>50</MenuItem>\n                          <MenuItem value = {100}>100</MenuItem>\n                          <MenuItem value = {200}>200</MenuItem>\n                          <MenuItem value = {500}>500</MenuItem>\n                        </GridSelect>\n                      </FormControl>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На первую страницу\">\n                        <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                          <FirstPageIcon style={{fontSize: \"large\", color: \"black\"}}/>\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На предыдущюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                          <ArrowBackIosIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td style={{color: \"black\", fontSize: 16}}>\n                      <input style={{maxWidth: 25}} value={page} onChange={handlePageChange}></input>\n                    </td>\n                    <td style={{paddingLeft: \"3px\"}}>\n                      <Tooltip title=\"Перейти на указанную страницу\">                              \n                          <Button\n                            onClick={()=> GoToPage()}\n                            variant=\"outlined\"\n                            style={{\n                              height: 22,\n                              backgroundColor: \"#D1D6D6\",\n                              fontSize: 12\n                            }}\n                          >перейти\n                          </Button>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На следующюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                          <ArrowForwardIosIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()}</td>\n                    <td style={{paddingLeft: \"30px\"}}>\n                      <div style={{minWidth: 90, color: \"black\"}}>Общее кол-во {filteredDocList !== null ? filteredDocList.length : 0}</div>\n                    </td>\n                  </tr>\n                </tfoot>\n              </Paper>\n              {selectedInstruction !== null && \n                <table size=\"small\" style={{width: \"100%\"}}>\n                  {selectedInstruction.depositor !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Депонент(Со счёта):</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{getGridFormEnumLabel(\"depositor\", selectedInstruction.depositor)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.depositor2 !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Депонент(На счёт):</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{getGridFormEnumLabel(\"depositor2\", selectedInstruction.depositor2)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.security !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Ценная бумага:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{getGridFormEnumLabel(\"security\", selectedInstruction.security) + \" \" + getSecType(selectedInstruction.security)}</td>\n                    </tr>\n                    \n                  }\n                    {selectedInstruction.currency !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Валюта:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{getGridFormEnumLabel(\"currency\", selectedInstruction.currency)}</td>\n                    </tr>\n                    \n                  }\n                  {selectedInstruction.security !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Эмитент:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{getGridFormEnumLabel(\"issuer\", selectedInstruction.issuer)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.tradingSystem !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Торговая система:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{getGridFormEnumLabel(\"tradingSystem\", selectedInstruction.tradingSystem)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.corrDepository !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Корр. депозитарий:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{getGridFormEnumLabel(\"corrDepository\", selectedInstruction.corrDepository)}</td>\n                    </tr>\n                  }\n                  {(selectedInstruction.ownerName !== null || selectedInstruction.ownerDocument !== null || selectedInstruction.ownerAddress !== null)  &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Данные о владельце:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{selectedInstruction.ownerName +\" \"+ selectedInstruction.ownerDocument +\" \"+selectedInstruction.ownerAddress}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.accFrom !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Со счёта:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{getGridFormEnumLabel(\"accFrom\", selectedInstruction.accFrom)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.accTo !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>На счёт:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{getGridFormEnumLabel(\"accTo\", selectedInstruction.accTo)}</td>\n                    </tr>\n                  }\n                  {selectedInstruction.quantity !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Количество:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{selectedInstruction.quantity}</td>\n                    </tr>\n                  }\n                    {selectedInstruction.basis !== null &&\n                    <tr>\n                      <td style={{fontSize: 11}}>Основание:</td>\n                      <td style={{fontSize: 11, border: \"1px solid black\"}}>{selectedInstruction.basis}</td>\n                    </tr>\n                  }\n                </table>  \n              }\n              <Menu\n                anchorEl={anchorEl}\n                open={openMenu}\n                onClose={handleCloseMenu}\n                MenuListProps={{\n                  'aria-labelledby': 'basic-button',\n                }}\n                style={{paddingLeft: \"100px\"}}\n              >\n                <table>\n                  {createMenuItems()}\n                </table>\n              </Menu>\n            </Grid>\n          </Grid>\n        }\n        <Snackbar\n          open={showSnackBar}\n          onClose={()=> handleCloseSnackBar()}\n          autoHideDuration={1200} \n          message={snackBarMessage}\n        />\n        <Modal\n          open={showModalCancelInstruction}\n          onClose={handleCloseModalCancelInstruction}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Ведите причину отмены</h3>\n            <TextField\n              variant=\"outlined\"\n              multiline\n              autoFocus\n              name = \"сancelationReason\"\n              defaultValue = {(fieldValue[\"сancelationReason\"] >=0) ? fieldValue[\"сancelationReason\"] : \"\" }\n              onChange = {handleChange}\n              onKeyPress={onKeyPressModalCancelInstruction}\n              style={{width: \"100%\"}}\n            />\n            <Button\n              variant=\"contained\"                      \n              onClick = {() => buttonClick(\"CancelInstructionSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n              variant=\"contained\"                         \n              onClick = {() => buttonClick(\"CancelInstructionCancelButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#E73639\"\n              }}\n            >Отмена\n            </Button>\n          </div>\n        </Modal>\n        <Modal\n          open={showModalEnterPin}\n          onClose={handleCloseModalEnterPin}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Ведите ПИН код Рутокена</h3>\n            <FormControl variant=\"outlined\" style={{width: \"100%\"}} error={wrongPin}>\n              <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n              <OutlinedInput\n                type={showPin ? 'text' : 'password'}\n                defaultValue={rutokenPin}\n                onChange={handlePinChange}\n                onKeyPress={onKeyPressModalEnterPin}\n                autoFocus\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPin}\n                      edge=\"end\"\n                    >\n                      {showPin ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={25}\n              />\n            </FormControl>\n            {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n            <Button\n              variant=\"contained\"                      \n              onClick = {() => buttonClick(\"SignInstructionSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n                variant=\"contained\"                         \n                onClick = {handleCloseModalEnterPin}\n                style={{\n                  margin: 3,\n                  height: 32,\n                  fontSize: 12,\n                  color: \"white\",\n                  backgroundColor: \"#E73639\"\n                }}\n              >Отмена\n            </Button>\n          </div>\n        </Modal>\n        \n      </Grid>  \n    )\n  }\n  catch(error){\n    console.log(\"ERROR\", error)\n    return(\n      <Grid container direction=\"row\" justify=\"center\" spacing={0}>\n        <Grid item xs={12}>\n            <LinearProgress/>\n        </Grid>\n      </Grid>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}