{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\Reports\\\\Reports.jsx\";\n// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from '@material-ui/core/Paper';\nimport Modal from \"@material-ui/core/Modal\";\nimport FormControl from '@material-ui/core/FormControl'; // import AdapterDateFns from '@mui/lab/AdapterDateFns';\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\n// import Stack from '@mui/material/Stack';\n// import TimePicker from '@mui/lab/TimePicker';\n// import dayjs, { Dayjs } from 'dayjs';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'; // Icons\n\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // PIN components\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fade, makeStyles } from '@material-ui/core/styles'; // Import libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport { Markup } from 'interweave';\nimport * as rutoken from \"rutoken\"; // import is from 'date-fns/esm/locale/is/index.js';\n\nvar moment = require('moment');\n\nconst axios = require('axios');\n\nvar request = require(\"request-promise\");\n\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \",\",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  },\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  paper: {\n    width: \"100%\",\n    height: 200,\n    overflow: 'auto'\n  },\n  button: {\n    // width: \"5%\",\n    margin: theme.spacing(0)\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [process_id] = useState(props.userTask.process_id);\n  const [session_id] = useState(props.userTask.session_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [taskType] = useState(props.userTask.taskType);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [enumData] = useState(props.userTask.enumData);\n  const [selectedOptions, setSelectedOptions] = useState([]); // const [multiSelectData] = useState(props.userTask.multiSelectData)\n  // const [multiSelectDataOptions, setMultiSelectDataOptions] = useState({})\n  // const [multiSelectedOptions, setMultiSelectedOptions] = useState({})\n  // const [gridForm] = useState(props.userTask.gridForm)\n\n  const [reportName] = useState(props.userTask.reportName);\n  const [fieldValue, setFieldValue] = useState({});\n  const [docId] = useState(props.userTask.docId);\n  const [buttons] = useState(props.userTask.buttons);\n  const [formType] = useState(props.userTask.formType);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [updateState, setUpdateState] = useState(false);\n  const [reportVars, setReportVars] = useState(props.userTask.reportVars); // modals\n\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false);\n  const [modalStyle] = useState(getModalStyle); // TRANSFER LIST\n\n  const [transferList, setTransferList] = useState({\n    reg_id: [],\n    sec_id: [],\n    acc_type_code: [],\n    dep_id: [],\n    corr_dep_id: [],\n    currency_id: [],\n    service_type_id: [],\n    issuer_id: []\n  });\n  const [checked, setChecked] = useState({\n    reg_id: [],\n    sec_id: [],\n    acc_type_code: [],\n    dep_id: [],\n    corr_dep_id: [],\n    currency_id: [],\n    service_type_id: [],\n    issuer_id: []\n  });\n  const [selectedTransferList, setSelectedTransferList] = useState({\n    reg_id: [],\n    sec_id: [],\n    acc_type_code: [],\n    dep_id: [],\n    corr_dep_id: [],\n    currency_id: [],\n    service_type_id: [],\n    issuer_id: []\n  });\n  const [transferListSearchFileds, setTransferListSearchFileds] = useState({});\n  const [selectedTransferListSearchFileds, setSelectedTransferListSearchFileds] = useState({});\n  const [autofocusFieldTrList, setAutofocusFieldTrList] = useState(null);\n  const [autofocusFieldSelTrList, setAutofocusFieldSelTrList] = useState(null); // const [value, setValue] = React.useState < Dayjs | null > (dayjs('2022-04-07'));\n\n  function leftChecked(name) {\n    return intersection(checked[name], transferList[name]);\n  }\n\n  function rightChecked(name) {\n    return intersection(checked[name], selectedTransferList[name]);\n  } // Initializing\n\n\n  useEffect(() => {\n    // repserverlogin()\n    console.log(\"REP PROPS\", props.userTask, props.userProfile);\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          if (props.userTask.enumData[i].name === \"report_name\") {\n            if (props.userTask.taskType === \"showReportsSelectingForm\") {\n              for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n                if (props.userProfile[props.userTask.enumData[i].data[d].report_name] === true) {\n                  options.push({\n                    \"value\": props.userTask.enumData[i].data[d].id,\n                    \"label\": props.userTask.enumData[i].data[d].label,\n                    \"name\": props.userTask.enumData[i].name\n                  });\n                }\n              }\n            }\n          } else {\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              options.push({\n                \"value\": props.userTask.enumData[i].data[d].id,\n                \"label\": props.userTask.enumData[i].data[d].label,\n                \"name\": props.userTask.enumData[i].name\n              });\n            }\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n      let newTrListOpts = createTransferListOptions(props.userTask.Form, props.userTask.enumData);\n\n      if (userProfile.userRole === \"3\") {\n        // Depositor\n        for (let s = 0; s < Form.sections.length; s++) {\n          // Block depositor field\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let n = Form.sections[s].contents[c].name;\n\n            if (n === \"dep_id\") {\n              Form.sections[s].contents[c].edit = false; // console.log(\"BLOCK\", Form.sections[s].contents[c])\n\n              let ed = props.userTask.enumData;\n\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"depositors\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                      // setSelectedTransferList({ ...selectedTransferList, \"dep_id\": [ed[e].data[d].id] })\n                      newTrListOpts.trList.dep_id = [ed[e].data[d].id];\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        setForm(Form); // for(let i=0; i<multiSelectData.length; i++){// find accounts of depositor\n        //   let options = [{\n        //     \"value\": \"all\",\n        //     \"label\": \"Все\"\n        //   }]\n        //   if(multiSelectData[i].name === \"acc_id\"){\n        //     for(let d=0; d<multiSelectData[i].data.length; d++){\n        //       if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n        //         options.push({\n        //           \"value\": multiSelectData[i].data[d].id,\n        //           \"label\": multiSelectData[i].data[d].label,\n        //         })\n        //       }\n        //     } \n        //   }\n        //   newMultiSelectDatamOptions[multiSelectData[i].name] = options\n        // }\n        // setMultiSelectDataOptions(newMultiSelectDatamOptions)\n      }\n\n      if (userProfile.userRole === \"4\") {\n        // Registrar\n        // console.log(\"REGS\", userProfile)\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let n = Form.sections[s].contents[c].name;\n\n            if (n === \"reg_id\") {\n              Form.sections[s].contents[c].edit = false; // Block registrar field\n              // console.log(\"BLOCK\", Form.sections[s].contents[c])\n\n              let ed = props.userTask.enumData;\n\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"registrars\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                      // newTrListOpts.selTrList.reg_id = [ed[e].data[d].id]\n                      newTrListOpts.trList.reg_id = [ed[e].data[d].id]; // setTransferList({ ...transferList, \"registrars\": [] })\n                      // setSelectedTransferList({ ...selectedTransferList, \"registrars\": [ed[e].data[d].id] })\n                    }\n                  }\n                }\n              }\n            } else if (n === \"sec_id\") {\n              let regId = null;\n              let filteredSecurities = [];\n              let ed = props.userTask.enumData;\n\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"registrars\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                      regId = ed[e].data[d].id;\n                    }\n                  }\n                }\n              }\n\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"sec_id\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].registrar === regId) {\n                      filteredSecurities.push(ed[e].data[d].id);\n                    }\n                  }\n                }\n              }\n\n              newTrListOpts.trList.sec_id = filteredSecurities;\n            }\n          }\n        }\n\n        setForm(Form);\n      }\n\n      if (userProfile.userRole === \"8\") {\n        // CorrDepository\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let n = Form.sections[s].contents[c].name;\n\n            if (n === \"corr_dep_id\") {\n              Form.sections[s].contents[c].edit = false; // Block corrDepositories field\n              // console.log(\"BLOCK\", Form.sections[s].contents[c])\n\n              let ed = props.userTask.enumData;\n\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"corrDepositories\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                      newTrListOpts.trList.corr_dep_id = [ed[e].data[d].id]; // setSelectedTransferList({ ...selectedTransferList, \"corrDepositories\": [ed[e].data[d].id] })\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        setForm(Form);\n      }\n\n      setTransferList(newTrListOpts.trList);\n      setSelectedTransferList(newTrListOpts.selTrList);\n    } // let newMultiSelectDatamOptions = {}\n    // if(props.userTask.multiSelectData !== null && props.userTask.multiSelectData !== undefined && props.userTask.multiSelectData !== \"null\"){\n    //   for(let i=0; i<multiSelectData.length; i++){\n    //     let options = [{\n    //       \"value\": \"all\",\n    //       \"label\": \"Все\"\n    //     }]\n    //     if(multiSelectData[i].name !== \"acc_id\"){\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         options.push({\n    //           \"value\": multiSelectData[i].data[d].id,\n    //           \"label\": multiSelectData[i].data[d].label,\n    //         })\n    //       }\n    //     }\n    //     else{\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n    //           options.push({\n    //             \"value\": multiSelectData[i].data[d].id,\n    //             \"label\": multiSelectData[i].data[d].label,\n    //           })\n    //         }\n    //       }\n    //     }\n    //     newMultiSelectDatamOptions[multiSelectData[i].name] = options\n    //   }\n    //   setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    //   console.log(\"MS DATA OPTS\", newMultiSelectDatamOptions)\n    // }\n\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined) {\n      // console.log(\"SDOC\", props.userTask.selectedDoc)\n      setSelectedDoc(props.userTask.selectedDoc);\n    }\n\n    let newFields = {};\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      // Set current date to DateTime fields\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"FullDateTime\") newFields[Form.sections[s].contents[c].name] = new Date();\n      }\n    }\n\n    console.log(\"NEW F\", newFields);\n    setFieldValue(newFields);\n    setUpdateState(getUUID());\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  function createTransferListOptions(form, enums) {\n    let newTransferList = {};\n    let newSelectedTransferList = {};\n\n    for (let s = 0; s < form.sections.length; s++) {\n      for (let c = 0; c < form.sections[s].contents.length; c++) {\n        if (form.sections[s].contents[c].type === \"TransferList\") {\n          let newTrItems = [];\n          let newSelTrItems = [];\n          let cName = form.sections[s].contents[c].name;\n\n          for (let e = 0; e < enums.length; e++) {\n            if (enums[e] !== null) {\n              if (enums[e].name === cName) {\n                for (let d = 0; d < enums[e].data.length; d++) {\n                  newTrItems.push(enums[e].data[d].id);\n                }\n              }\n            } else {\n              props.callErrorToast(\"Ошибка сбора справочной информации \" + cName);\n            }\n          }\n\n          newTransferList[cName] = newTrItems;\n          newSelectedTransferList[cName] = newSelTrItems;\n        }\n      }\n    }\n\n    return {\n      trList: newTransferList,\n      selTrList: newSelectedTransferList\n    }; // setTransferList(newTransferList)\n    // setSelectedTransferList(newSelectedTransferList)\n  } // RuToken functions\n\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\")\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\");\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  });\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Rutoken MODAL\n\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  } // Sign transfer order with rutoken\n\n\n  function sign() {\n    // Перебор подключенных Рутокенов\n    if (plugin !== undefined) {\n      plugin.enumerateDevices().then(function (devices) {\n        if (devices.length > 0) {\n          return Promise.resolve(devices[0]);\n        } else {\n          alert(\"Рутокен не обнаружен\");\n        }\n      }) // Проверка залогиненности\n      .then(function (firstDevice) {\n        rutokenHandle = firstDevice;\n        return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n      }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n      .then(function (isLoggedIn) {\n        if (isLoggedIn) {\n          return Promise.resolve();\n        } else {\n          return plugin.login(rutokenHandle, rutokenPin); // 240699\n        }\n      }) // Перебор пользовательских сертификатов на токене\n      .then(function () {\n        return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n      }).then(function (certs) {\n        if (certs.length > 0) {\n          certHandle = certs[0];\n          return plugin.parseCertificate(rutokenHandle, certs[0]);\n        } else {\n          alert(\"Сертификат на Рутокен не обнаружен\");\n        }\n      }) // Подписание данных из текстового поля на первом найденом сертификате\n      .then(function (certs) {\n        certData = certs;\n\n        if (certHandle.length > 0) {\n          var options = {};\n          let inn = \"\";\n          let fullName = \"\";\n\n          for (let i = 0; i < certData.subject.length; i++) {\n            if (certData.subject[i].rdn === \"serialNumber\") {\n              inn = certData.subject[i].value;\n            }\n\n            if (certData.subject[i].rdn === \"commonName\") {\n              fullName = certData.subject[i].value;\n            }\n          }\n\n          props.setEsInn(inn);\n          props.setEsUserFullName(fullName);\n          props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n          handleCloseModalEnterPin(); // swAllert(\"Отчет успешно подписан!\", \"success\")\n\n          reportToPDFES(fullName, inn, certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n          return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n        } else {\n          alert(\"Сертификат на Рутокен не обнаружен\");\n        }\n      }) // Закрытие сессии\n      .then(function () {\n        plugin.logout(rutokenHandle);\n      }, handleError);\n    } else {\n      props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n    }\n  } // catch errors while signing docs\n\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"SignReportSaveButton\", null);\n    }\n  } // Integer input handlers\n\n\n  function handleChange(event) {\n    console.log(\"EV\", event);\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleDateChange(event) {\n    // let fullDate = new Date(event.target.value)\n    // // console.log(\"DATE CHANGE\", fullDate)\n    // if (fieldValue[event.target.name] !== undefined && fieldValue[event.target.name] !== null) {\n    //   let fullDate = moment(fullDate).format(\"YYYY-MM-DDTHH:MM:SS\")\n    // }\n    // fieldValue[event.target.name] = fullDate\n    // setFieldValue(fieldValue)\n    // console.log(\"DATE CHANGE\", fullDate)\n    // console.log(\"FVAL\", fieldValue)\n    // // setUpdateState(getUUID())\n    // console.log(\"EV\", event)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleTimeChange(name, value) {\n    let fullDate = new Date(value);\n\n    if (fieldValue[name] !== undefined && fieldValue[name] !== null) {\n      // let nDate = props.parseDate(fieldValue[name])\n      // let hours = new Date(value).getHours()\n      // let minutes = new Date(value).getMinutes()\n      // let seconds = new Date(value).getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      let date = moment(fieldValue[name]).format(\"YYYY-MM-DD\");\n      let time = moment(value).format(\"HH:mm:ss\");\n      fullDate = date + \"T\" + time;\n    }\n\n    fieldValue[name] = fullDate;\n    setFieldValue(fieldValue);\n    console.log(\"FULL DATE CHANGE\", name, value, fieldValue);\n    console.log(\"FVAL\", fieldValue);\n    setUpdateState(getUUID());\n  }\n\n  function handleDateTimeChange(event) {\n    // console.log(\"FULL DATE TIME CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  const handleCheckboxChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Handler of select copmponet changes\n\n\n  function handleSelectChange(option) {\n    console.log(\"SEL CHANGE\", option.name, option.value);\n    fieldValue[option.name] = option.value;\n    let updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        setSelectedOptions(updateSelectedOptions); // console.log(\"SO\", selectedOptions)\n\n        noSuchOption = false;\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    setFieldValue(fieldValue);\n  } // function handleMultiSelectChange(value, {action, removedValue, name}) {\n  //   // console.log(\"MSOP\", multiSelectedOptions)\n  //   console.log(\"NAME\",name)\n  //   if(action === \"select-option\"){\n  //     let putAll = false\n  //     for(let i=0; i<value.length; i++){\n  //       if(value[i].value === \"all\"){\n  //         putAll = true\n  //       }\n  //     }\n  //     if(putAll === true){\n  //       multiSelectedOptions[name] = multiSelectDataOptions[name]\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"remove-value\"){\n  //     // console.log(\"RV\", removedValue, \"NAME\", name)\n  //     if(removedValue.value === \"all\"){\n  //       multiSelectedOptions[name] = null\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"clear\"){\n  //     multiSelectedOptions[name] = null\n  //   }\n  //   if(name === \"dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"depositors\"){\n  //           depositors = enumData[i].data // Find partner for each selected depositor\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<depositors.length; d++){\n  //           if(depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"corr_dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let corr_depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"corrDepositories\"){\n  //           corr_depositors = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<corr_depositors.length; d++){\n  //           if(corr_depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(corr_depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"reg_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let registrars = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"registrars\"){\n  //           registrars = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<registrars.length; d++){\n  //           if(registrars[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(registrars[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   setMultiSelectedOptions(multiSelectedOptions)\n  //   setUpdateState(getUUID())\n  // }\n\n\n  const handleIntChange = event => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    });\n  }; // function handleIntChange(event) {\n  //   console.log(\"EVENT\", event.target.name, event.target.value)\n  //   fieldValue[event.target.name] = parseInt(event.target.value)\n  //   setFieldValue(fieldValue)\n  // }\n  // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section, index) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 9\n      }\n    }, section.contents.map((contentItem, index) => contentItem.show === true && contentItem.type === \"TransferList\" ? /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      colSpan: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 19\n      }\n    }, contentItem.label)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 19\n      }\n    }, \"\\u043F\\u043E\\u0438\\u0441\\u043A \", /*#__PURE__*/React.createElement(\"input\", {\n      autoFocus: autofocusFieldTrList === contentItem.name ? true : false,\n      name: contentItem.name,\n      onChange: handleSearchTransferListChange,\n      value: transferListSearchFileds[contentItem.name] // disabled={!contentItem.edit}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"4%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 19\n      }\n    }, \"\\u043F\\u043E\\u0438\\u0441\\u043A \", /*#__PURE__*/React.createElement(\"input\", {\n      autoFocus: autofocusFieldSelTrList === contentItem.name ? true : false,\n      name: contentItem.name,\n      onChange: handleSearchSelectedTransferListChange,\n      value: selectedTransferListSearchFileds[contentItem.name] // disabled={!contentItem.edit}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 69\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 21\n      }\n    }, getTransferList(transferList[contentItem.name], contentItem.name, contentItem.edit))), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"4%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleAllRight(contentItem.name),\n      disabled: transferList[contentItem.name].length === 0 ? true : false // disabled={(transferList[contentItem.name].length === 0 || contentItem.edit === false) ? true : false}  \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 25\n      }\n    }, \"\\u226B\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleCheckedRight(contentItem.name),\n      disabled: leftChecked(contentItem.name).length === 0 ? true : false // disabled={(leftChecked(contentItem.name).length === 0 || contentItem.edit === false) ? true : false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 25\n      }\n    }, \">\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleCheckedLeft(contentItem.name),\n      disabled: rightChecked(contentItem.name).length === 0 ? true : false // disabled={(rightChecked(contentItem.name).length === 0 || contentItem.edit === false) ? true : false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 25\n      }\n    }, \"<\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleAllLeft(contentItem.name),\n      disabled: selectedTransferList[contentItem.name].length === 0 ? true : false // disabled={(selectedTransferList[contentItem.name].length === 0 || contentItem.edit === false) ? true : false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 25\n      }\n    }, \"\\u226A\")))), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 21\n      }\n    }, getTransferList(selectedTransferList[contentItem.name], contentItem.name, contentItem.edit))))) : /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 19\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 19\n      }\n    }, contentBuilder(contentItem)))))));\n  } // Create component by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        multiline: true,\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        } // defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        // onBlur={handleIntChange}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleIntChange,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\" || contentItem.type === \"JasperDate\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleDateChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\" // defaultValue = {fieldValue[contentItem.name]}\n        ,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return (\n        /*#__PURE__*/\n        // <table>\n        //   <tr>\n        //     <td style={{width: \"45%\"}}>\n        //       <TextField\n        //         key={fieldValue[contentItem.name]}\n        //         type=\"date\"\n        //         name={contentItem.name}\n        //         onChange={handleDateChange}\n        //         style={{width: \"100%\"}}\n        //         defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"NaN.NaN.NaN\" }\n        //         disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n        //         InputLabelProps={{\n        //           shrink: true,\n        //         }}\n        //       />\n        //     </td>\n        //     <td style={{width: \"45%\"}}>\n        //       <LocalizationProvider dateAdapter={AdapterDayjs}>\n        //         <Stack>\n        //           <TimePicker\n        //             // key={fieldValue[contentItem.name]}\n        //             ampm={false}\n        //             openTo=\"hours\"\n        //             views={['hours', 'minutes', 'seconds']}\n        //             inputFormat=\"HH:mm:ss\"\n        //             mask=\"__:__:__\"\n        //             // value={dVal}\n        //             value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\" }\n        //             onChange={(newValue) => {handleTimeChange(contentItem.name, newValue)}}\n        //             renderInput={(params) => <TextField {...params} />}\n        //           />\n        //         </Stack>\n        //     </LocalizationProvider>\n        //   </td>\n        //   </tr>\n        // </table>\n        React.createElement(TextField, {\n          name: contentItem.name,\n          onChange: handleDateTimeChange,\n          type: \"datetime-local\" // defaultValue=\"2017-05-24T10:30\"\n          ,\n          defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? moment(fieldValue[contentItem.name]).format(\"YYYY-MM-DDTHH:MM\") : moment(new Date()).format(\"YYYY-MM-DDTHH:MM\"),\n          InputLabelProps: {\n            shrink: true\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 9\n          }\n        }) //   <LocalizationProvider dateAdapter={AdapterDateFns}>\n        //     <TimePicker\n        //       ampm={false}\n        //       openTo=\"hours\"\n        //       views={['hours', 'minutes', 'seconds']}\n        //       inputFormat=\"HH:mm:ss\"\n        //       mask=\"__:__:__\"\n        //       value={value}\n        //       // onChange={(newValue) => {\n        //       //   setValue(newValue);\n        //       // }}\n        //       renderInput={(params) => <TextField {...params} />}\n        //     />\n        // </LocalizationProvider>\n\n      );\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 9\n        }\n      });\n    } // else if (contentItem.type === \"MultiSelect\"){\n    //   return (\n    //     // <div style={{height: \"40px\", overflow: \"auto\"}}>\n    //       <Select\n    //         name={contentItem.name}\n    //         className=\"basic-multi-select\"\n    //         classNamePrefix=\"select\"\n    //         value={multiSelectedOptions[contentItem.name]}\n    //         onChange={handleMultiSelectChange}\n    //         closeMenuOnSelect={false}\n    //         isMulti\n    //         options={multiSelectDataOptions[contentItem.name]}\n    //         isDisabled ={(formType === \"view\" || contentItem.edit === false) ? true : false}\n    //         style={{height: \"120px\"}}\n    //       />\n    //     // </div>\n    //   )\n    // }\n    else if (contentItem.type === \"Currency\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        value: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          minWidth: 300\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 9\n        }\n      });\n    }\n  } // Main button click handler\n\n\n  function buttonClick(buttonName) {\n    console.log(\"Button\", buttonName);\n\n    if (buttonName === \"selectReportType\") {\n      let reportFormDefId = null;\n      let reportName = null;\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          if (enumData[i].name === \"report_name\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].id === fieldValue[\"report_name\"]) {\n                reportFormDefId = enumData[i].data[d].form_def_id;\n                reportName = enumData[i].data[d].report_name;\n              }\n            }\n          }\n        } else {\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"selectReportType\"\n          },\n          reportName: {\n            value: reportName\n          },\n          reportFormDefId: {\n            value: reportFormDefId\n          }\n        }\n      };\n      console.log(\"button selectReportType:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"createReport\") {\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        // let reportVars = getFieldValuesCreateReport()\n        let reportVarsXML = getFieldValuesCreateReportXML();\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: {\n              value: reportVarsXML\n            },\n            userAction: {\n              value: \"createReport\"\n            }\n          }\n        };\n        console.log(\"button createReport:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createChargeForCDServiceReport\") {\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        let reportVars = getFieldValuesCreateReport();\n        let chargeBody = {\n          startDate: fieldValue.start_date,\n          endDate: fieldValue.end_date,\n          depositorId: selectedTransferList.dep_id,\n          serviceTypeId: selectedTransferList.service_type_id\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: {\n              value: reportVars\n            },\n            userAction: {\n              value: \"createReport\"\n            },\n            chargeBody: {\n              value: JSON.stringify(chargeBody)\n            }\n          }\n        };\n        console.log(\"button createChargeForCDServiceReport:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createCharge\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"createCharge\"\n          }\n        }\n      };\n      console.log(\"button createCharge:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"reportToExcel\") {\n      downloadReport(\".xlsx\");\n      console.log(\"button reportToExcel: \");\n    } else if (buttonName === \"reportToPDF\") {\n      downloadReport(\".pdf\");\n      console.log(\"button reportToPDF: \");\n    } else if (buttonName === \"reportToWord\") {\n      downloadReport(\".docx\");\n      console.log(\"button reportToWord: \");\n    } else if (buttonName === \"reportToPDFES\") {\n      if (props.esInn === null) {\n        setShowModalEnterPin(true);\n      } else {\n        reportToPDFES(props.esUserFullName, props.esInn, props.esExpiredDate);\n      }\n    } else if (buttonName === \"SignReportSaveButton\") {\n      sign();\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"finish\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"finish\"\n          }\n        }\n      };\n      console.log(\"button finish: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    }\n  } // Transfer List functions\n\n\n  const handleToggle = (value, name) => () => {\n    const currentIndex = checked[name].indexOf(value);\n    const newChecked = [...checked[name]];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked({ ...checked,\n      [name]: newChecked\n    });\n  };\n\n  const handleAllRight = name => {\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: selectedTransferList[name].concat(transferList[name])\n    });\n    setTransferList({ ...transferList,\n      [name]: []\n    });\n  };\n\n  function handleCheckedRight(name) {\n    // console.log(\"CHECKED RIGHT\", name)\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: selectedTransferList[name].concat(leftChecked(name))\n    });\n    setTransferList({ ...transferList,\n      [name]: not(transferList[name], leftChecked(name))\n    });\n    setChecked({ ...checked,\n      [name]: not(checked[name], leftChecked(name))\n    });\n  }\n\n  function handleCheckedLeft(name) {\n    setTransferList({ ...transferList,\n      [name]: transferList[name].concat(rightChecked(name))\n    });\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: not(selectedTransferList[name], rightChecked(name))\n    });\n    setChecked({ ...checked,\n      [name]: not(checked[name], rightChecked(name))\n    });\n  }\n\n  const handleAllLeft = name => {\n    setTransferList({ ...transferList,\n      [name]: transferList[name].concat(selectedTransferList[name])\n    });\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: []\n    });\n  };\n\n  function getTransferList(items, name, edit) {\n    // console.log(\"G TR L\", items, name)\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1363,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1364,\n        columnNumber: 9\n      }\n    }, items.map(value => {\n      const labelId = `transfer-list-item-${value}-label`;\n      return /*#__PURE__*/React.createElement(ListItem, {\n        size: \"small\",\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle(value, name),\n        style: {\n          height: 40\n        } // disabled={edit === false ? true : false}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        size: \"small\",\n        checked: checked[name].indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        style: {\n          height: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1376,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: getTranserListItemLabel(name, value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 17\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1389,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  function getTranserListItemLabel(name, value) {\n    // console.log(\"G TRL LABEL\", name, value)\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          if (enumData[e].data[d].id === value) {\n            return enumData[e].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function handleSearchTransferListChange(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n    setAutofocusFieldTrList(name);\n    setTransferListSearchFileds({ ...transferListSearchFileds,\n      [name]: value\n    });\n    let filteredTrListOpts = [];\n\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase();\n          let searchField = value.toLowerCase();\n          let includeSearch = label.includes(searchField);\n\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id);\n          }\n        }\n      }\n    } // console.log(\"N TR L\", newTrListOpts)\n\n\n    let newTrListOpts = [];\n\n    if (selectedTransferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true;\n\n        for (let s = 0; s < selectedTransferList[name].length; s++) {\n          if (filteredTrListOpts[i] === selectedTransferList[name][s]) {\n            include = false;\n            break;\n          }\n        }\n\n        if (include === true) {\n          newTrListOpts.push(filteredTrListOpts[i]);\n        }\n      }\n    } else {\n      newTrListOpts = filteredTrListOpts;\n    }\n\n    setTransferList({ ...transferList,\n      [name]: newTrListOpts\n    });\n  }\n\n  function handleSearchSelectedTransferListChange(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n    setAutofocusFieldSelTrList(name);\n    setSelectedTransferListSearchFileds({ ...selectedTransferListSearchFileds,\n      [name]: value\n    });\n    let filteredTrListOpts = [];\n\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase();\n          let searchField = value.toLowerCase();\n          let includeSearch = label.includes(searchField);\n\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id);\n          }\n        }\n      }\n    }\n\n    let newSelTrListOpts = [];\n\n    if (transferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true;\n\n        for (let s = 0; s < transferList[name].length; s++) {\n          if (filteredTrListOpts[i] === transferList[name][s]) {\n            include = false;\n            break;\n          }\n        }\n\n        if (include === true) {\n          newSelTrListOpts.push(filteredTrListOpts[i]);\n        }\n      }\n    } else {\n      newSelTrListOpts = filteredTrListOpts;\n    }\n\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: newSelTrListOpts\n    });\n  }\n\n  function getFieldValuesCreateReport() {\n    let reportVars = {};\n    let strReportVars = \"\";\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n        let type = Form.sections[s].contents[c].type;\n\n        if (type === \"DateTime\") {\n          reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"DD.MM.YYYY\");\n        } else if (type === \"FullDateTime\") {\n          let convertedDate = moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\");\n          reportVars[fieldName] = convertedDate;\n        } else if (type === \"JasperDate\") {\n          reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\");\n        } else if (type === \"TransferList\") {\n          // console.log(\"TTTTTT\", selectedTransferList[fieldName])\n          let strVals = \"\";\n\n          if (selectedTransferList[fieldName].length > 0) {\n            for (let i = 0; i < selectedTransferList[fieldName].length; i++) {\n              let value = selectedTransferList[fieldName][i];\n\n              if (i === selectedTransferList[fieldName].length - 1) {\n                strVals += value;\n              } else {\n                strVals += value + \",\";\n              }\n            }\n          }\n\n          reportVars[fieldName] = strVals; // console.log(\"TR LIST\", strVals)\n        } // else if(type === \"MultiSelect\"){\n        //   if(Object.keys(multiSelectedOptions).length > 0){\n        //     let strVals = \"\"\n        //     for(let i=0; i<multiSelectedOptions[fieldName].length; i++){\n        //       let value = multiSelectedOptions[fieldName][i].value\n        //       if(value !== \"all\"){\n        //         if(i === multiSelectedOptions[fieldName].length-1){\n        //           strVals += value\n        //         }\n        //         else{\n        //           strVals += value + \",\"\n        //         }\n        //       }\n        //     }\n        //     reportVars[fieldName] = strVals\n        //     console.log(\"MULTI\", strVals)\n        //   }\n        // }\n        else {\n          reportVars[fieldName] = fieldValue[fieldName];\n        }\n      }\n    } // console.log(\"REP VARS\", reportVars)\n\n\n    if (Object.keys(reportVars).length > 0) {\n      strReportVars = \"?\";\n\n      for (let key in reportVars) {\n        let newVar = key + \"=\" + reportVars[key] + \"&\";\n        strReportVars = strReportVars + newVar;\n      }\n\n      strReportVars = strReportVars.substring(0, strReportVars.length - 1);\n    }\n\n    return strReportVars;\n  }\n\n  function getFieldValuesCreateReportXML() {\n    let reportVars = [];\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n        let type = Form.sections[s].contents[c].type;\n\n        if (type === \"DateTime\") {\n          reportVars.push({\n            reportParameter: fieldName,\n            value: {\n              value: moment(fieldValue[fieldName]).format(\"DD.MM.YYYY\")\n            }\n          });\n        } else if (type === \"FullDateTime\") {\n          reportVars.push({\n            reportParameter: fieldName,\n            value: {\n              value: moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\")\n            }\n          });\n        } else if (type === \"JasperDate\") {\n          reportVars.push({\n            reportParameter: fieldName,\n            value: {\n              value: moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\")\n            }\n          });\n        } else if (type === \"TransferList\") {\n          // console.log(\"TTTTTT\", selectedTransferList[fieldName])\n          let strVals = \"\";\n\n          if (selectedTransferList[fieldName].length > 0) {\n            for (let i = 0; i < selectedTransferList[fieldName].length; i++) {\n              let value = selectedTransferList[fieldName][i];\n\n              if (i === selectedTransferList[fieldName].length - 1) {\n                strVals += value;\n              } else {\n                strVals += value + \",\";\n              }\n            }\n          }\n\n          reportVars.push({\n            reportParameter: fieldName,\n            value: {\n              value: strVals\n            }\n          }); // console.log(\"TR LIST\", strVals)\n        } else {\n          reportVars.push({\n            reportParameter: fieldName,\n            value: {\n              value: fieldValue[fieldName]\n            }\n          });\n        }\n      }\n    }\n\n    let obj = {\n      \"reportExecutionRequest\": {\n        \"reportUnitUri\": \"/reports/interactive/\" + props.userTask.reportName,\n        \"async\": \"true\",\n        \"freshData\": \"false\",\n        \"saveDataSnapshot\": \"false\",\n        \"outputFormat\": \"html\",\n        \"interactive\": \"true\",\n        \"parameters\": {\n          \"reportParameter\": reportVars\n        }\n      }\n    };\n    let xml = OBJtoXML(obj);\n    return xml;\n  }\n\n  function OBJtoXML(obj) {\n    var xml = '';\n\n    for (var prop in obj) {\n      xml += obj[prop] instanceof Array ? '' : \"<\" + prop + \">\";\n\n      if (obj[prop] instanceof Array) {\n        // for (var array in obj[prop]) {\n        for (let array = 0; array < obj[prop].length; array++) {\n          xml += \"<\" + prop + \" name=\\\"\" + obj[prop][array].reportParameter + \"\\\">\";\n          xml += OBJtoXML(new Object(obj[prop][array].value));\n          xml += \"</\" + prop + \">\";\n        }\n      } else if (typeof obj[prop] == \"object\") {\n        xml += OBJtoXML(new Object(obj[prop]));\n      } else {\n        xml += obj[prop];\n      }\n\n      xml += obj[prop] instanceof Array ? '' : \"</\" + prop + \">\";\n    }\n\n    var xml = xml.replace(/<\\/?[0-9]{1,}>/g, '');\n    return xml;\n  }\n\n  function checkForRequieredFields() {\n    // console.log(\"MOPTS\", multiSelectedOptions)\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          // if(Form.sections[s].contents[c].type === \"MultiSelect\"){\n          //   if(multiSelectedOptions[fieldName] === undefined || multiSelectedOptions[fieldName] === null ||\n          //     multiSelectedOptions[fieldName].length === 0){\n          //     checkedSuccessfuly = false\n          //     swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n          //     return checkedSuccessfuly\n          //   }\n          //   else{\n          //     checkedSuccessfuly = true\n          //   }\n          // }\n          if (Form.sections[s].contents[c].type === \"TransferList\") {\n            if (selectedTransferList[fieldName] === undefined || selectedTransferList[fieldName] === null || selectedTransferList[fieldName].length === 0) {\n              checkedSuccessfuly = false; // swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n\n              props.callErrorToast(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\");\n              return checkedSuccessfuly;\n            } else {\n              checkedSuccessfuly = true;\n            }\n          } else {\n            if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n              checkedSuccessfuly = false; // swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n\n              props.callErrorToast(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\");\n              return checkedSuccessfuly;\n            } else {\n              checkedSuccessfuly = true;\n            }\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  async function repserverlogin() {\n    await fetch(`/jasperserver/rest_v2/login?j_username=jasperadmin&j_password=jasperadmin`, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => {\n      // response.text().then(string => {\n      console.log(\"JASPERT AUTH\", response); // })\n    }).catch(error => console.error(error));\n  }\n\n  async function downloadReport(type) {\n    await repserverlogin(); // await fetch(\"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + type + reportVars,\n    //   {\n    //     method: 'GET',\n    //     // mode: 'no-cors',\n    //     // withCredentials: true,\n    //     credentials: 'include',\n    //     headers: {\n    //       'Content-Type': 'text/html; charset=utf-8',\n    //       'Authorization': 'Basic amFzcGVyYWRtaW46amFzcGVyYWRtaW4=' // + btoa(unescape(encodeURIComponent(\"jasperadmin:jasperadmin\")))\n    //     }\n    //   }\n    // )\n    //   .then(response => response.blob())\n    //   .then(blob => {\n    //     console.log(\"RESP\", blob)\n    //     var url = window.URL.createObjectURL(blob)\n    //     var a = document.createElement('a')\n    //     a.href = url\n    //     a.download = reportName + type\n    //     document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n    //     a.click()\n    //     a.remove()  //afterwards we remove the element again         \n    //   })\n    //   .catch(error => console.error(error));\n\n    let xml = props.userTask.reportVars; // await getFieldValuesCreateReportXML()\n\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(xml, \"text/xml\"); // console.log(\"XML\", xmlDoc)\n\n    let j = {\n      \"reportUnitUri\": \"/reports/interactive/Otchet_o_nalichii_DS_na_schetah_CD\",\n      \"async\": true,\n      \"interactive\": true,\n      \"freshData\": false,\n      \"saveDataSnapshot\": false,\n      \"outputFormat\": \"html\",\n      \"parameters\": {\n        \"reportParameter\": [{\n          \"name\": \"date\",\n          \"value\": [\"14.03.2023T10: 33: 51\"]\n        }, {\n          \"name\": \"acc_type_code\",\n          \"value\": [210, 100, 110, 130, 120, 220, 230, 300, 310, 320, 330, 340, 3001, 3101, 3301, 500, 360, 370, 380, 400, 410, 420, 430, 440, 450, 530, 600, 610, 620, 460, 405, 470, 350, 200]\n        }, {\n          \"name\": \"currency_id\",\n          \"value\": [1]\n        }]\n      }\n    }; // await fetch('/jasperserver/rest_v2/reportExecutions',\n    //   {\n    //     method: 'POST',\n    //     mode: 'no-cors',\n    //     withCredentials: true,\n    //     credentials: 'include',\n    //     headers: { \"content-type\": \"application/json\", \"Authorization\": \"Basic amFzcGVyYWRtaW46amFzcGVyYWRtaW4=\" },\n    //     // body: JSON.stringify(j),\n    //     body: xmlDoc,\n    //     redirect: \"follow\"\n    //   }\n    // )\n    //   .then(response => response.json())\n    //   .then(function (res) {\n    //     repserverlogin()\n    //     console.log(\"RESP\", res)\n    //   })\n    //   .catch(error => console.error(error));\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Cookie\", \"userLocale=en_US; JSESSIONID=31DC64F5F5CE86A083C9B99348D2FAAE\");\n    var raw = JSON.stringify({\n      \"reportUnitUri\": \"/reports/interactive/Otchet_o_nalichii_DS_na_schetah_CD\",\n      \"async\": true,\n      \"interactive\": true,\n      \"freshData\": false,\n      \"saveDataSnapshot\": false,\n      \"outputFormat\": \"html\",\n      \"auth\": {\n        \"name\": \"jasperadmin\",\n        \"password\": \"jasperadmin\"\n      },\n      \"parameters\": {\n        \"reportParameter\": [{\n          \"name\": \"date\",\n          \"value\": [\"14.03.2023T10: 33: 51\"]\n        }, {\n          \"name\": \"acc_type_code\",\n          \"value\": [210, 100, 110, 130, 120, 220, 230, 300, 310, 320, 330, 340, 3001, 3101, 3301, 500, 360, 370, 380, 400, 410, 420, 430, 440, 450, 530, 600, 610, 620, 460, 405, 470, 350, 200]\n        }, {\n          \"name\": \"currency_id\",\n          \"value\": [1]\n        }]\n      }\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"https://depo.cds.kg/jasperserver/rest_v2/reportExecutions\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  }\n\n  async function reportToPDFES(fullName, inn, expiredDate) {\n    // await repserverlogin()\n    await fetch(\"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".pdf\" + reportVars, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8',\n        // 'Authorization': 'Basic ' + btoa(unescape(encodeURIComponent(\"jasperadmin:jasperadmin\")))\n        'Authorization': 'Basic amFzcGVyYWRtaW46amFzcGVyYWRtaW4='\n      }\n    }).then(response => response.blob()).then(blob => {\n      // console.log(\"REPORT\", blob);\n      blob.name = reportName + \".pdf\";\n      let formData = new FormData();\n      formData.append(\"formFile\", blob, reportName + \".pdf\"); // for (var value of formData.values()) {\n      //   console.log(\"FVAL\", value)\n      // }\n\n      let url = props.api + \"/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate;\n      var requestOptions = {\n        method: 'POST',\n        body: formData,\n        redirect: 'follow'\n      };\n      fetch(url, requestOptions).then(response => response.blob()).then(bl => {\n        console.log(\"RES\", bl);\n        var pdf = new Blob([bl], {\n          type: \"application/pdf\"\n        });\n        var docUrl = window.URL.createObjectURL(pdf);\n        var a = document.createElement('a');\n        a.href = docUrl;\n        a.download = `${reportName}.pdf`;\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n      }).catch(error => console.log('error', error));\n    }).catch(error => console.error(error));\n  }\n\n  try {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1911,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      name: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1912,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1913,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1914,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1915,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1916,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1917,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1918,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1919,\n        columnNumber: 21\n      }\n    }, Form.label)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1923,\n        columnNumber: 15\n      }\n    }, Form.sections.map((section, index) => {\n      return sectionBuilder(section, index);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1928,\n        columnNumber: 15\n      }\n    }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      onClick: () => buttonClick(button.name),\n      style: {\n        margin: 3,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12,\n        color: button.fontColor\n      },\n      value: button.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1930,\n        columnNumber: 19\n      }\n    }, button.label)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1948,\n        columnNumber: 13\n      }\n    }), selectedDoc !== null && /*#__PURE__*/React.createElement(Markup, {\n      id: \"reportContainer\",\n      content: selectedDoc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1954,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalEnterPin,\n      onClose: handleCloseModalEnterPin,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1958,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1964,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1965,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"100%\"\n      },\n      error: wrongPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1966,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1967,\n        columnNumber: 15\n      }\n    }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n      type: showPin ? 'text' : 'password',\n      defaultValue: rutokenPin,\n      onChange: handlePinChange,\n      onKeyPress: onKeyPressModalEnterPin,\n      autoFocus: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1975,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPin,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1976,\n          columnNumber: 21\n        }\n      }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1981,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1981,\n          columnNumber: 51\n        }\n      }))),\n      labelWidth: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1968,\n        columnNumber: 15\n      }\n    })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1988,\n        columnNumber: 35\n      }\n    }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"SignReportSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1989,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleCloseModalEnterPin,\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2001,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2020,\n        columnNumber: 12\n      }\n    }, \"error\");\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Select","NumberFormat","PropTypes","Grid","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Paper","Modal","FormControl","List","ListItem","ListItemIcon","ListItemText","ArrowUpwardRoundedIcon","FormControlLabel","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","IconButton","fade","makeStyles","swal","Markup","rutoken","moment","require","axios","request","plugin","rutokenHandle","certHandle","certData","cmsData","NumberFormatCustom","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","useStyles","theme","importFile","margin","spacing","inputFile","display","modal","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","height","overflow","button","getModalStyle","top","left","transform","not","a","b","filter","indexOf","intersection","classes","userProfile","process_id","userTask","session_id","taskID","taskType","enumOptions","setEnumOptions","Form","setForm","enumData","selectedOptions","setSelectedOptions","reportName","fieldValue","setFieldValue","docId","buttons","formType","sectionColor","selectedDoc","setSelectedDoc","updateState","setUpdateState","reportVars","setReportVars","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","modalStyle","transferList","setTransferList","reg_id","sec_id","acc_type_code","dep_id","corr_dep_id","currency_id","service_type_id","issuer_id","checked","setChecked","selectedTransferList","setSelectedTransferList","transferListSearchFileds","setTransferListSearchFileds","selectedTransferListSearchFileds","setSelectedTransferListSearchFileds","autofocusFieldTrList","setAutofocusFieldTrList","autofocusFieldSelTrList","setAutofocusFieldSelTrList","leftChecked","name","rightChecked","console","log","undefined","newEnumOptions","i","length","options","d","data","report_name","push","id","label","getLostEnumName","callErrorToast","newTrListOpts","createTransferListOptions","userRole","s","sections","c","contents","n","edit","ed","e","partner","parseInt","trList","regId","filteredSecurities","registrar","selTrList","newFields","type","Date","getUUID","enumI","form","enums","newTransferList","newSelectedTransferList","newTrItems","newSelTrItems","cName","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","uuidv1","handleCloseModalEnterPin","handlePinChange","event","handleClickShowPin","sign","enumerateDevices","devices","alert","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","inn","fullName","subject","rdn","setEsInn","setEsUserFullName","setEsExpiredDate","validNotAfter","substring","reportToPDFES","DATA_FORMAT_PLAIN","logout","handleError","reason","isNaN","message","errorCodes","PIN_INCORRECT","onKeyPressModalEnterPin","code","charCode","buttonClick","handleChange","handleDateChange","handleTimeChange","fullDate","date","format","time","handleDateTimeChange","handleCheckboxChange","swAllert","text","icon","ok","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","handleIntChange","stringNum","toString","replace","int","sectionBuilder","section","index","color","fontSize","bodyBuilder","map","contentItem","show","handleSearchTransferListChange","handleSearchSelectedTransferListChange","getTransferList","handleAllRight","handleCheckedRight","handleCheckedLeft","handleAllLeft","contentBuilder","inputComponent","shrink","selectedOption","document","body","menuPortal","base","zIndex","minWidth","maxWidth","buttonName","reportFormDefId","form_def_id","commandJson","commandType","userId","variables","userAction","sendFieldValues","clearTabData","checkResult","checkForRequieredFields","reportVarsXML","getFieldValuesCreateReportXML","getFieldValuesCreateReport","chargeBody","startDate","start_date","endDate","end_date","depositorId","serviceTypeId","JSON","stringify","downloadReport","esInn","esUserFullName","esExpiredDate","handleToggle","currentIndex","newChecked","splice","concat","items","labelId","getTranserListItemLabel","filteredTrListOpts","toLowerCase","searchField","includeSearch","includes","include","newSelTrListOpts","strReportVars","fieldName","convertedDate","strVals","Object","keys","key","newVar","reportParameter","obj","xml","OBJtoXML","prop","Array","array","checkedSuccessfuly","required","repserverlogin","fetch","mode","method","withCredentials","credentials","headers","response","catch","error","parser","DOMParser","xmlDoc","parseFromString","j","myHeaders","Headers","append","raw","requestOptions","redirect","expiredDate","blob","formData","FormData","url","api","bl","pdf","Blob","docUrl","URL","createObjectURL","createElement","href","download","appendChild","click","remove","maxHeight","fontColor"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/Reports/Reports.jsx"],"sourcesContent":["// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from '@material-ui/core/Paper';\nimport Modal from \"@material-ui/core/Modal\";\nimport FormControl from '@material-ui/core/FormControl';\n\n// import AdapterDateFns from '@mui/lab/AdapterDateFns';\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\n// import Stack from '@mui/material/Stack';\n// import TimePicker from '@mui/lab/TimePicker';\n// import dayjs, { Dayjs } from 'dayjs';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// Icons\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// PIN components\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\n// Import libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport { Markup } from 'interweave';\nimport * as rutoken from \"rutoken\";\n// import is from 'date-fns/esm/locale/is/index.js';\nvar moment = require('moment');\nconst axios = require('axios');\nvar request = require(\"request-promise\")\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\",\"}\n      isNumericString\n    />\n  );\n}\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles((theme) => ({\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  },\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  paper: {\n    width: \"100%\",\n    height: 200,\n    overflow: 'auto',\n  },\n  button: {\n    // width: \"5%\",\n    margin: theme.spacing(0),\n  }\n}))\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\nexport default (props) => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile)\n  const [process_id] = useState(props.userTask.process_id)\n  const [session_id] = useState(props.userTask.session_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [taskType] = useState(props.userTask.taskType)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [enumData] = useState(props.userTask.enumData)\n  const [selectedOptions, setSelectedOptions] = useState([])\n\n  // const [multiSelectData] = useState(props.userTask.multiSelectData)\n  // const [multiSelectDataOptions, setMultiSelectDataOptions] = useState({})\n  // const [multiSelectedOptions, setMultiSelectedOptions] = useState({})\n  // const [gridForm] = useState(props.userTask.gridForm)\n  const [reportName] = useState(props.userTask.reportName)\n  const [fieldValue, setFieldValue] = useState({})\n  const [docId] = useState(props.userTask.docId)\n  const [buttons] = useState(props.userTask.buttons)\n  const [formType] = useState(props.userTask.formType)\n\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [updateState, setUpdateState] = useState(false)\n  const [reportVars, setReportVars] = useState(props.userTask.reportVars)\n\n  // modals\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n  const [modalStyle] = useState(getModalStyle)\n  // TRANSFER LIST\n  const [transferList, setTransferList] = useState({ reg_id: [], sec_id: [], acc_type_code: [], dep_id: [], corr_dep_id: [], currency_id: [], service_type_id: [], issuer_id: [] })\n  const [checked, setChecked] = useState({ reg_id: [], sec_id: [], acc_type_code: [], dep_id: [], corr_dep_id: [], currency_id: [], service_type_id: [], issuer_id: [] })\n  const [selectedTransferList, setSelectedTransferList] = useState({ reg_id: [], sec_id: [], acc_type_code: [], dep_id: [], corr_dep_id: [], currency_id: [], service_type_id: [], issuer_id: [] })\n  const [transferListSearchFileds, setTransferListSearchFileds] = useState({})\n  const [selectedTransferListSearchFileds, setSelectedTransferListSearchFileds] = useState({})\n  const [autofocusFieldTrList, setAutofocusFieldTrList] = useState(null)\n  const [autofocusFieldSelTrList, setAutofocusFieldSelTrList] = useState(null)\n\n  // const [value, setValue] = React.useState < Dayjs | null > (dayjs('2022-04-07'));\n\n  function leftChecked(name) {\n    return intersection(checked[name], transferList[name])\n  }\n  function rightChecked(name) {\n    return intersection(checked[name], selectedTransferList[name])\n  }\n\n  // Initializing\n  useEffect(() => {\n    // repserverlogin()\n    console.log(\"REP PROPS\", props.userTask, props.userProfile)\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {}\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }]\n          if (props.userTask.enumData[i].name === \"report_name\") {\n            if (props.userTask.taskType === \"showReportsSelectingForm\") {\n              for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n                if (props.userProfile[props.userTask.enumData[i].data[d].report_name] === true) {\n                  options.push({\n                    \"value\": props.userTask.enumData[i].data[d].id,\n                    \"label\": props.userTask.enumData[i].data[d].label,\n                    \"name\": props.userTask.enumData[i].name\n                  })\n                }\n              }\n            }\n          }\n          else {\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              options.push({\n                \"value\": props.userTask.enumData[i].data[d].id,\n                \"label\": props.userTask.enumData[i].data[d].label,\n                \"name\": props.userTask.enumData[i].name\n              })\n            }\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n      let newTrListOpts = createTransferListOptions(props.userTask.Form, props.userTask.enumData)\n\n      if (userProfile.userRole === \"3\") { // Depositor\n        for (let s = 0; s < Form.sections.length; s++) {  // Block depositor field\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let n = Form.sections[s].contents[c].name\n            if (n === \"dep_id\") {\n              Form.sections[s].contents[c].edit = false\n              // console.log(\"BLOCK\", Form.sections[s].contents[c])\n              let ed = props.userTask.enumData\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"depositors\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                      // setSelectedTransferList({ ...selectedTransferList, \"dep_id\": [ed[e].data[d].id] })\n                      newTrListOpts.trList.dep_id = [ed[e].data[d].id]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        setForm(Form)\n        // for(let i=0; i<multiSelectData.length; i++){// find accounts of depositor\n        //   let options = [{\n        //     \"value\": \"all\",\n        //     \"label\": \"Все\"\n        //   }]\n        //   if(multiSelectData[i].name === \"acc_id\"){\n        //     for(let d=0; d<multiSelectData[i].data.length; d++){\n        //       if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n        //         options.push({\n        //           \"value\": multiSelectData[i].data[d].id,\n        //           \"label\": multiSelectData[i].data[d].label,\n        //         })\n        //       }\n        //     } \n        //   }\n        //   newMultiSelectDatamOptions[multiSelectData[i].name] = options\n        // }\n        // setMultiSelectDataOptions(newMultiSelectDatamOptions)\n      }\n      if (userProfile.userRole === \"4\") { // Registrar\n        // console.log(\"REGS\", userProfile)\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let n = Form.sections[s].contents[c].name\n            if (n === \"reg_id\") {\n              Form.sections[s].contents[c].edit = false // Block registrar field\n              // console.log(\"BLOCK\", Form.sections[s].contents[c])\n              let ed = props.userTask.enumData\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"registrars\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                      // newTrListOpts.selTrList.reg_id = [ed[e].data[d].id]\n                      newTrListOpts.trList.reg_id = [ed[e].data[d].id]\n                      // setTransferList({ ...transferList, \"registrars\": [] })\n                      // setSelectedTransferList({ ...selectedTransferList, \"registrars\": [ed[e].data[d].id] })\n                    }\n                  }\n                }\n              }\n\n            }\n            else if (n === \"sec_id\") {\n              let regId = null\n              let filteredSecurities = []\n              let ed = props.userTask.enumData\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"registrars\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                      regId = ed[e].data[d].id\n                    }\n                  }\n                }\n              }\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"sec_id\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].registrar === regId) {\n                      filteredSecurities.push(ed[e].data[d].id)\n                    }\n                  }\n                }\n              }\n              newTrListOpts.trList.sec_id = filteredSecurities\n            }\n          }\n        }\n        setForm(Form)\n      }\n      if (userProfile.userRole === \"8\") { // CorrDepository\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let n = Form.sections[s].contents[c].name\n            if (n === \"corr_dep_id\") {\n              Form.sections[s].contents[c].edit = false // Block corrDepositories field\n              // console.log(\"BLOCK\", Form.sections[s].contents[c])\n              let ed = props.userTask.enumData\n              for (let e = 0; e < ed.length; e++) {\n                if (ed[e].name === \"corrDepositories\") {\n                  for (let d = 0; d < ed[e].data.length; d++) {\n                    if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                      newTrListOpts.trList.corr_dep_id = [ed[e].data[d].id]\n                      // setSelectedTransferList({ ...selectedTransferList, \"corrDepositories\": [ed[e].data[d].id] })\n                    }\n                  }\n                }\n              }\n\n            }\n          }\n        }\n        setForm(Form)\n      }\n      setTransferList(newTrListOpts.trList)\n      setSelectedTransferList(newTrListOpts.selTrList)\n    }\n    // let newMultiSelectDatamOptions = {}\n    // if(props.userTask.multiSelectData !== null && props.userTask.multiSelectData !== undefined && props.userTask.multiSelectData !== \"null\"){\n    //   for(let i=0; i<multiSelectData.length; i++){\n    //     let options = [{\n    //       \"value\": \"all\",\n    //       \"label\": \"Все\"\n    //     }]\n    //     if(multiSelectData[i].name !== \"acc_id\"){\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         options.push({\n    //           \"value\": multiSelectData[i].data[d].id,\n    //           \"label\": multiSelectData[i].data[d].label,\n    //         })\n    //       }\n    //     }\n    //     else{\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n    //           options.push({\n    //             \"value\": multiSelectData[i].data[d].id,\n    //             \"label\": multiSelectData[i].data[d].label,\n    //           })\n    //         }\n    //       }\n    //     }\n    //     newMultiSelectDatamOptions[multiSelectData[i].name] = options\n    //   }\n    //   setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    //   console.log(\"MS DATA OPTS\", newMultiSelectDatamOptions)\n    // }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined) {\n      // console.log(\"SDOC\", props.userTask.selectedDoc)\n      setSelectedDoc(props.userTask.selectedDoc)\n    }\n\n    let newFields = {}\n    for (let s = 0; s < Form.sections.length; s++) { // Set current date to DateTime fields\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"FullDateTime\")\n          newFields[Form.sections[s].contents[c].name] = new Date()\n      }\n    }\n    console.log(\"NEW F\", newFields)\n    setFieldValue(newFields)\n    setUpdateState(getUUID())\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n  function createTransferListOptions(form, enums) {\n    let newTransferList = {}\n    let newSelectedTransferList = {}\n    for (let s = 0; s < form.sections.length; s++) {\n      for (let c = 0; c < form.sections[s].contents.length; c++) {\n        if (form.sections[s].contents[c].type === \"TransferList\") {\n          let newTrItems = []\n          let newSelTrItems = []\n          let cName = form.sections[s].contents[c].name\n          for (let e = 0; e < enums.length; e++) {\n            if (enums[e] !== null) {\n              if (enums[e].name === cName) {\n                for (let d = 0; d < enums[e].data.length; d++) {\n                  newTrItems.push(enums[e].data[d].id)\n                }\n              }\n            }\n            else {\n              props.callErrorToast(\"Ошибка сбора справочной информации \" + cName)\n            }\n          }\n          newTransferList[cName] = newTrItems\n          newSelectedTransferList[cName] = newSelTrItems\n        }\n      }\n    }\n    return (\n      {\n        trList: newTransferList,\n        selTrList: newSelectedTransferList\n      }\n    )\n    // setTransferList(newTransferList)\n    // setSelectedTransferList(newSelectedTransferList)\n  }\n  // RuToken functions\n  rutoken.ready\n    // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n    .then(function () {\n      if (window.chrome || typeof InstallTrigger !== 'undefined') {\n        return rutoken.isExtensionInstalled()\n      } else {\n        return Promise.resolve(true)\n      }\n    })\n    // Проверка установки Рутокен Плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.isPluginInstalled()\n      } else {\n        // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\")\n      }\n    })\n    // Загрузка плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.loadPlugin();\n      } else {\n        // alert(\"Не удаётся найти Плагин\");\n      }\n    })\n    //Можно начинать работать с плагином\n    .then(function (result) {\n      if (!result) {\n        return // alert(\"Не удаётся загрузить Плагин\");\n      } else {\n        plugin = result;\n        return Promise.resolve();\n      }\n    })\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n\n  // Rutoken MODAL\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin() {\n    setShowPin(!showPin)\n  }\n\n  // Sign transfer order with rutoken\n  function sign() {\n    // Перебор подключенных Рутокенов\n    if (plugin !== undefined) {\n      plugin.enumerateDevices()\n        .then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0])\n          } else {\n            alert(\"Рутокен не обнаружен\")\n          }\n        })\n        // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN)\n        })\n        // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve()\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin) // 240699\n          }\n        })\n        // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC)\n        })\n        .then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0]\n            return plugin.parseCertificate(rutokenHandle, certs[0])\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        })\n        // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs\n          if (certHandle.length > 0) {\n            var options = {}\n            let inn = \"\"\n            let fullName = \"\"\n            for (let i = 0; i < certData.subject.length; i++) {\n              if (certData.subject[i].rdn === \"serialNumber\") {\n                inn = certData.subject[i].value\n              }\n              if (certData.subject[i].rdn === \"commonName\") {\n                fullName = certData.subject[i].value\n              }\n            }\n            props.setEsInn(inn)\n            props.setEsUserFullName(fullName)\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n            handleCloseModalEnterPin()\n            // swAllert(\"Отчет успешно подписан!\", \"success\")\n            reportToPDFES(fullName, inn, certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n            return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options)\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\")\n          }\n        })\n        // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle)\n        }, handleError)\n    }\n    else { props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\") }\n  }\n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"SignReportSaveButton\", null)\n    }\n  }\n  // Integer input handlers\n  function handleChange(event) {\n    console.log(\"EV\", event)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleDateChange(event) {\n    // let fullDate = new Date(event.target.value)\n    // // console.log(\"DATE CHANGE\", fullDate)\n    // if (fieldValue[event.target.name] !== undefined && fieldValue[event.target.name] !== null) {\n    //   let fullDate = moment(fullDate).format(\"YYYY-MM-DDTHH:MM:SS\")\n    // }\n    // fieldValue[event.target.name] = fullDate\n    // setFieldValue(fieldValue)\n    // console.log(\"DATE CHANGE\", fullDate)\n    // console.log(\"FVAL\", fieldValue)\n    // // setUpdateState(getUUID())\n\n    // console.log(\"EV\", event)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleTimeChange(name, value) {\n    let fullDate = new Date(value)\n    if (fieldValue[name] !== undefined && fieldValue[name] !== null) {\n      // let nDate = props.parseDate(fieldValue[name])\n      // let hours = new Date(value).getHours()\n      // let minutes = new Date(value).getMinutes()\n      // let seconds = new Date(value).getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      let date = moment(fieldValue[name]).format(\"YYYY-MM-DD\")\n      let time = moment(value).format(\"HH:mm:ss\")\n      fullDate = date + \"T\" + time\n    }\n    fieldValue[name] = fullDate\n    setFieldValue(fieldValue)\n    console.log(\"FULL DATE CHANGE\", name, value, fieldValue)\n    console.log(\"FVAL\", fieldValue)\n    setUpdateState(getUUID())\n  }\n  function handleDateTimeChange(event) {\n    // console.log(\"FULL DATE TIME CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  const handleCheckboxChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  // Handler of select copmponet changes\n  function handleSelectChange(option) {\n    console.log(\"SEL CHANGE\", option.name, option.value)\n    fieldValue[option.name] = option.value\n    let updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option\n        setSelectedOptions(updateSelectedOptions)\n        // console.log(\"SO\", selectedOptions)\n        noSuchOption = false\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    setFieldValue(fieldValue)\n  }\n  // function handleMultiSelectChange(value, {action, removedValue, name}) {\n  //   // console.log(\"MSOP\", multiSelectedOptions)\n  //   console.log(\"NAME\",name)\n  //   if(action === \"select-option\"){\n  //     let putAll = false\n  //     for(let i=0; i<value.length; i++){\n  //       if(value[i].value === \"all\"){\n  //         putAll = true\n  //       }\n  //     }\n  //     if(putAll === true){\n  //       multiSelectedOptions[name] = multiSelectDataOptions[name]\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"remove-value\"){\n  //     // console.log(\"RV\", removedValue, \"NAME\", name)\n  //     if(removedValue.value === \"all\"){\n  //       multiSelectedOptions[name] = null\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"clear\"){\n  //     multiSelectedOptions[name] = null\n  //   }\n  //   if(name === \"dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"depositors\"){\n  //           depositors = enumData[i].data // Find partner for each selected depositor\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<depositors.length; d++){\n  //           if(depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"corr_dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let corr_depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"corrDepositories\"){\n  //           corr_depositors = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<corr_depositors.length; d++){\n  //           if(corr_depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(corr_depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"reg_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let registrars = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"registrars\"){\n  //           registrars = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<registrars.length; d++){\n  //           if(registrars[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(registrars[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   setMultiSelectedOptions(multiSelectedOptions)\n  //   setUpdateState(getUUID())\n  // }\n\n\n  const handleIntChange = (event) => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '')\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int })\n  }\n  // function handleIntChange(event) {\n  //   console.log(\"EVENT\", event.target.name, event.target.value)\n  //   fieldValue[event.target.name] = parseInt(event.target.value)\n  //   setFieldValue(fieldValue)\n  // }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section, index) {\n    return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map((contentItem, index) => (\n            contentItem.show === true &&\n              contentItem.type === \"TransferList\" ?\n              <table size=\"small\" align=\"center\">\n                <tr>\n                  <th colSpan=\"3\">{contentItem.label}</th>\n                </tr>\n                <tr>\n                  <td width=\"43%\" style={{ padding: \"10px\" }}>поиск <input\n                    autoFocus={autofocusFieldTrList === contentItem.name ? true : false}\n                    name={contentItem.name}\n                    onChange={handleSearchTransferListChange}\n                    value={transferListSearchFileds[contentItem.name]}\n                  // disabled={!contentItem.edit}\n                  />\n                  </td>\n                  <td width=\"4%\"></td>\n                  <td width=\"43%\" style={{ padding: \"10px\" }}>поиск <input\n                    autoFocus={autofocusFieldSelTrList === contentItem.name ? true : false}\n                    name={contentItem.name}\n                    onChange={handleSearchSelectedTransferListChange}\n                    value={selectedTransferListSearchFileds[contentItem.name]}\n                  // disabled={!contentItem.edit}\n                  /></td>\n                </tr>\n                <tr>\n                  <td width=\"43%\">\n                    <Grid item>{getTransferList(transferList[contentItem.name], contentItem.name, contentItem.edit)}</Grid>\n                  </td>\n                  <td width=\"4%\">\n                    <Grid item>\n                      <Grid container direction=\"column\">\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={() => handleAllRight(contentItem.name)}\n                          disabled={transferList[contentItem.name].length === 0 ? true : false}\n                        // disabled={(transferList[contentItem.name].length === 0 || contentItem.edit === false) ? true : false}  \n                        >\n                          ≫\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={() => handleCheckedRight(contentItem.name)}\n                          disabled={leftChecked(contentItem.name).length === 0 ? true : false}\n                        // disabled={(leftChecked(contentItem.name).length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          &gt;\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={() => handleCheckedLeft(contentItem.name)}\n                          disabled={rightChecked(contentItem.name).length === 0 ? true : false}\n                        // disabled={(rightChecked(contentItem.name).length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          &lt;\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={() => handleAllLeft(contentItem.name)}\n                          disabled={selectedTransferList[contentItem.name].length === 0 ? true : false}\n                        // disabled={(selectedTransferList[contentItem.name].length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          ≪\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </td>\n                  <td width=\"43%\">\n                    <Grid item>{getTransferList(selectedTransferList[contentItem.name], contentItem.name, contentItem.edit)}</Grid>\n                  </td>\n                </tr>\n              </table>\n              :\n              <Table size=\"small\">\n                <TableRow style={{ height: 30 }}>\n                  <TableCell\n                    align=\"left\"\n                    style={{ width: \"40%\" }}>\n                    {contentItem.label}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{ width: \"60%\", height: 30 }}\n                  >{contentBuilder(contentItem)}\n                  </TableCell>\n                </TableRow>\n              </Table>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n  // Create component by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          multiline\n          onBlur={handleChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"Int\") {\n      return (\n        <TextField\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          style={{ width: \"100%\" }}\n          // defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          // onBlur={handleIntChange}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleIntChange}\n          name={contentItem.name}\n          InputProps={{ inputComponent: NumberFormatCustom }}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\" || contentItem.type === \"JasperDate\") {\n      return (\n        <TextField\n          type=\"date\"\n          name={contentItem.name}\n          onBlur={handleDateChange}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\"}\n          // defaultValue = {fieldValue[contentItem.name]}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\") {\n      return (\n        // <table>\n        //   <tr>\n        //     <td style={{width: \"45%\"}}>\n        //       <TextField\n        //         key={fieldValue[contentItem.name]}\n        //         type=\"date\"\n        //         name={contentItem.name}\n        //         onChange={handleDateChange}\n        //         style={{width: \"100%\"}}\n        //         defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"NaN.NaN.NaN\" }\n        //         disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n        //         InputLabelProps={{\n        //           shrink: true,\n        //         }}\n        //       />\n        //     </td>\n        //     <td style={{width: \"45%\"}}>\n        //       <LocalizationProvider dateAdapter={AdapterDayjs}>\n        //         <Stack>\n        //           <TimePicker\n        //             // key={fieldValue[contentItem.name]}\n        //             ampm={false}\n        //             openTo=\"hours\"\n        //             views={['hours', 'minutes', 'seconds']}\n        //             inputFormat=\"HH:mm:ss\"\n        //             mask=\"__:__:__\"\n        //             // value={dVal}\n        //             value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\" }\n        //             onChange={(newValue) => {handleTimeChange(contentItem.name, newValue)}}\n        //             renderInput={(params) => <TextField {...params} />}\n        //           />\n        //         </Stack>\n        //     </LocalizationProvider>\n        //   </td>\n        //   </tr>\n        // </table>\n\n\n        <TextField\n          name={contentItem.name}\n          onChange={handleDateTimeChange}\n          type=\"datetime-local\"\n          // defaultValue=\"2017-05-24T10:30\"\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? moment(fieldValue[contentItem.name]).format(\"YYYY-MM-DDTHH:MM\") : moment(new Date()).format(\"YYYY-MM-DDTHH:MM\")}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        //   <LocalizationProvider dateAdapter={AdapterDateFns}>\n\n        //     <TimePicker\n        //       ampm={false}\n        //       openTo=\"hours\"\n        //       views={['hours', 'minutes', 'seconds']}\n        //       inputFormat=\"HH:mm:ss\"\n        //       mask=\"__:__:__\"\n        //       value={value}\n        //       // onChange={(newValue) => {\n        //       //   setValue(newValue);\n        //       // }}\n        //       renderInput={(params) => <TextField {...params} />}\n        //     />\n        // </LocalizationProvider>\n\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    // else if (contentItem.type === \"MultiSelect\"){\n    //   return (\n    //     // <div style={{height: \"40px\", overflow: \"auto\"}}>\n    //       <Select\n    //         name={contentItem.name}\n    //         className=\"basic-multi-select\"\n    //         classNamePrefix=\"select\"\n    //         value={multiSelectedOptions[contentItem.name]}\n    //         onChange={handleMultiSelectChange}\n    //         closeMenuOnSelect={false}\n    //         isMulti\n    //         options={multiSelectDataOptions[contentItem.name]}\n    //         isDisabled ={(formType === \"view\" || contentItem.edit === false) ? true : false}\n    //         style={{height: \"120px\"}}\n    //       />\n    //     // </div>\n    //   )\n    // }\n    else if (contentItem.type === \"Currency\") {\n      return (\n        <TextField\n          value={fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\"}\n          onBlur={handleChange}\n          name={contentItem.name}\n          style={{ minWidth: 300 }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: NumberFormatCustom }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true) ? true : false}\n        />\n      )\n    }\n  }\n  // Main button click handler\n  function buttonClick(buttonName) {\n    console.log(\"Button\", buttonName)\n    if (buttonName === \"selectReportType\") {\n      let reportFormDefId = null\n      let reportName = null\n      for (let i = 0; i < enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          if (enumData[i].name === \"report_name\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].id === fieldValue[\"report_name\"]) {\n                reportFormDefId = enumData[i].data[d].form_def_id\n                reportName = enumData[i].data[d].report_name\n              }\n            }\n          }\n        }\n        else {\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"selectReportType\" },\n          reportName: { value: reportName },\n          reportFormDefId: { value: reportFormDefId }\n        }\n      }\n      console.log(\"button selectReportType:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"createReport\") {\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        // let reportVars = getFieldValuesCreateReport()\n        let reportVarsXML = getFieldValuesCreateReportXML()\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: { value: reportVarsXML },\n            userAction: { value: \"createReport\" }\n          }\n        }\n        console.log(\"button createReport:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createChargeForCDServiceReport\") {\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        let reportVars = getFieldValuesCreateReport()\n        let chargeBody = {\n          startDate: fieldValue.start_date,\n          endDate: fieldValue.end_date,\n          depositorId: selectedTransferList.dep_id,\n          serviceTypeId: selectedTransferList.service_type_id\n        }\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: { value: reportVars },\n            userAction: { value: \"createReport\" },\n            chargeBody: { value: JSON.stringify(chargeBody) }\n          }\n        }\n        console.log(\"button createChargeForCDServiceReport:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createCharge\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"createCharge\" },\n        }\n      }\n      console.log(\"button createCharge:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n\n\n    else if (buttonName === \"reportToExcel\") {\n      downloadReport(\".xlsx\")\n      console.log(\"button reportToExcel: \")\n    }\n    else if (buttonName === \"reportToPDF\") {\n      downloadReport(\".pdf\")\n      console.log(\"button reportToPDF: \")\n    }\n    else if (buttonName === \"reportToWord\") {\n      downloadReport(\".docx\")\n      console.log(\"button reportToWord: \")\n    }\n    else if (buttonName === \"reportToPDFES\") {\n      if (props.esInn === null) {\n        setShowModalEnterPin(true)\n      }\n      else {\n        reportToPDFES(props.esUserFullName, props.esInn, props.esExpiredDate)\n      }\n    }\n    else if (buttonName === \"SignReportSaveButton\") {\n      sign()\n    }\n\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"finish\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"finish\" },\n        }\n      }\n      console.log(\"button finish: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n  }\n  // Transfer List functions\n  const handleToggle = (value, name) => () => {\n    const currentIndex = checked[name].indexOf(value)\n    const newChecked = [...checked[name]]\n\n    if (currentIndex === -1) {\n      newChecked.push(value)\n    }\n    else {\n      newChecked.splice(currentIndex, 1)\n    }\n    setChecked({ ...checked, [name]: newChecked })\n  }\n  const handleAllRight = (name) => {\n    setSelectedTransferList({ ...selectedTransferList, [name]: selectedTransferList[name].concat(transferList[name]) })\n    setTransferList({ ...transferList, [name]: [] })\n  }\n  function handleCheckedRight(name) {\n    // console.log(\"CHECKED RIGHT\", name)\n    setSelectedTransferList({ ...selectedTransferList, [name]: selectedTransferList[name].concat(leftChecked(name)) })\n    setTransferList({ ...transferList, [name]: not(transferList[name], leftChecked(name)) })\n    setChecked({ ...checked, [name]: not(checked[name], leftChecked(name)) })\n  }\n  function handleCheckedLeft(name) {\n    setTransferList({ ...transferList, [name]: transferList[name].concat(rightChecked(name)) })\n    setSelectedTransferList({ ...selectedTransferList, [name]: not(selectedTransferList[name], rightChecked(name)) })\n    setChecked({ ...checked, [name]: not(checked[name], rightChecked(name)) })\n  }\n  const handleAllLeft = (name) => {\n    setTransferList({ ...transferList, [name]: transferList[name].concat(selectedTransferList[name]) })\n    setSelectedTransferList({ ...selectedTransferList, [name]: [] })\n  }\n  function getTransferList(items, name, edit) {\n    // console.log(\"G TR L\", items, name)\n    return (\n      <Paper className={classes.paper}>\n        <List dense component=\"div\" role=\"list\">\n          {items.map((value) => {\n            const labelId = `transfer-list-item-${value}-label`;\n            return (\n              <ListItem\n                size=\"small\"\n                key={value}\n                role=\"listitem\"\n                button onClick={handleToggle(value, name)}\n                style={{ height: 40 }}\n              // disabled={edit === false ? true : false}\n              >\n                <Checkbox\n                  size=\"small\"\n                  checked={checked[name].indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                  style={{ height: 40 }}\n                />\n                {/* <ListItemText id={labelId} primary={value} /> */}\n                <ListItemText id={labelId} primary={getTranserListItemLabel(name, value)} />\n              </ListItem>\n            )\n          })}\n          <ListItem />\n        </List>\n      </Paper>\n    )\n  }\n  function getTranserListItemLabel(name, value) {\n    // console.log(\"G TRL LABEL\", name, value)\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          if (enumData[e].data[d].id === value) {\n            return enumData[e].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function handleSearchTransferListChange(event) {\n    let name = event.target.name\n    let value = event.target.value\n    setAutofocusFieldTrList(name)\n    setTransferListSearchFileds({ ...transferListSearchFileds, [name]: value })\n    let filteredTrListOpts = []\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase()\n          let searchField = value.toLowerCase()\n          let includeSearch = label.includes(searchField)\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id)\n          }\n        }\n      }\n    }\n    // console.log(\"N TR L\", newTrListOpts)\n    let newTrListOpts = []\n    if (selectedTransferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true\n        for (let s = 0; s < selectedTransferList[name].length; s++) {\n          if (filteredTrListOpts[i] === selectedTransferList[name][s]) {\n            include = false\n            break\n          }\n        }\n        if (include === true) {\n          newTrListOpts.push(filteredTrListOpts[i])\n        }\n      }\n    }\n    else {\n      newTrListOpts = filteredTrListOpts\n    }\n    setTransferList({ ...transferList, [name]: newTrListOpts })\n  }\n  function handleSearchSelectedTransferListChange(event) {\n    let name = event.target.name\n    let value = event.target.value\n    setAutofocusFieldSelTrList(name)\n    setSelectedTransferListSearchFileds({ ...selectedTransferListSearchFileds, [name]: value })\n    let filteredTrListOpts = []\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase()\n          let searchField = value.toLowerCase()\n          let includeSearch = label.includes(searchField)\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id)\n          }\n        }\n      }\n    }\n    let newSelTrListOpts = []\n    if (transferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true\n        for (let s = 0; s < transferList[name].length; s++) {\n          if (filteredTrListOpts[i] === transferList[name][s]) {\n            include = false\n            break\n          }\n        }\n        if (include === true) {\n          newSelTrListOpts.push(filteredTrListOpts[i])\n        }\n      }\n    }\n    else {\n      newSelTrListOpts = filteredTrListOpts\n    }\n    setSelectedTransferList({ ...selectedTransferList, [name]: newSelTrListOpts })\n  }\n  function getFieldValuesCreateReport() {\n    let reportVars = {}\n    let strReportVars = \"\"\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        let type = Form.sections[s].contents[c].type\n        if (type === \"DateTime\") {\n          reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"DD.MM.YYYY\")\n        }\n        else if (type === \"FullDateTime\") {\n          let convertedDate = moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\")\n          reportVars[fieldName] = convertedDate\n        }\n        else if (type === \"JasperDate\") {\n          reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\")\n        }\n        else if (type === \"TransferList\") {\n          // console.log(\"TTTTTT\", selectedTransferList[fieldName])\n          let strVals = \"\"\n          if (selectedTransferList[fieldName].length > 0) {\n            for (let i = 0; i < selectedTransferList[fieldName].length; i++) {\n              let value = selectedTransferList[fieldName][i]\n              if (i === selectedTransferList[fieldName].length - 1) {\n                strVals += value\n              }\n              else {\n                strVals += value + \",\"\n              }\n            }\n          }\n          reportVars[fieldName] = strVals\n          // console.log(\"TR LIST\", strVals)\n        }\n        // else if(type === \"MultiSelect\"){\n        //   if(Object.keys(multiSelectedOptions).length > 0){\n        //     let strVals = \"\"\n        //     for(let i=0; i<multiSelectedOptions[fieldName].length; i++){\n        //       let value = multiSelectedOptions[fieldName][i].value\n        //       if(value !== \"all\"){\n        //         if(i === multiSelectedOptions[fieldName].length-1){\n        //           strVals += value\n        //         }\n        //         else{\n        //           strVals += value + \",\"\n        //         }\n        //       }\n        //     }\n        //     reportVars[fieldName] = strVals\n        //     console.log(\"MULTI\", strVals)\n        //   }\n        // }\n        else {\n          reportVars[fieldName] = fieldValue[fieldName]\n        }\n\n\n      }\n    }\n    // console.log(\"REP VARS\", reportVars)\n    if (Object.keys(reportVars).length > 0) {\n      strReportVars = \"?\"\n      for (let key in reportVars) {\n        let newVar = key + \"=\" + reportVars[key] + \"&\"\n        strReportVars = strReportVars + newVar\n      }\n      strReportVars = strReportVars.substring(0, strReportVars.length - 1)\n    }\n    return strReportVars\n  }\n  function getFieldValuesCreateReportXML() {\n    let reportVars = []\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        let type = Form.sections[s].contents[c].type\n        if (type === \"DateTime\") {\n          reportVars.push({ reportParameter: fieldName, value: { value: moment(fieldValue[fieldName]).format(\"DD.MM.YYYY\") } })\n        }\n        else if (type === \"FullDateTime\") {\n          reportVars.push({ reportParameter: fieldName, value: { value: moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\") } })\n        }\n        else if (type === \"JasperDate\") {\n          reportVars.push({ reportParameter: fieldName, value: { value: moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\") } })\n        }\n        else if (type === \"TransferList\") {\n          // console.log(\"TTTTTT\", selectedTransferList[fieldName])\n          let strVals = \"\"\n          if (selectedTransferList[fieldName].length > 0) {\n            for (let i = 0; i < selectedTransferList[fieldName].length; i++) {\n              let value = selectedTransferList[fieldName][i]\n              if (i === selectedTransferList[fieldName].length - 1) {\n                strVals += value\n              }\n              else {\n                strVals += value + \",\"\n              }\n            }\n          }\n          reportVars.push({ reportParameter: fieldName, value: { value: strVals } })\n          // console.log(\"TR LIST\", strVals)\n        }\n        else {\n          reportVars.push({ reportParameter: fieldName, value: { value: fieldValue[fieldName] } })\n        }\n      }\n    }\n    let obj = {\n      \"reportExecutionRequest\": {\n        \"reportUnitUri\": \"/reports/interactive/\" + props.userTask.reportName,\n        \"async\": \"true\",\n        \"freshData\": \"false\",\n        \"saveDataSnapshot\": \"false\",\n        \"outputFormat\": \"html\",\n        \"interactive\": \"true\",\n        \"parameters\": { \"reportParameter\": reportVars }\n      }\n    }\n    let xml = OBJtoXML(obj)\n    return xml\n  }\n  function OBJtoXML(obj) {\n    var xml = '';\n    for (var prop in obj) {\n      xml += obj[prop] instanceof Array ? '' : \"<\" + prop + \">\";\n      if (obj[prop] instanceof Array) {\n        // for (var array in obj[prop]) {\n        for (let array = 0; array < obj[prop].length; array++) {\n          xml += \"<\" + prop + \" name=\\\"\" + obj[prop][array].reportParameter + \"\\\">\";\n          xml += OBJtoXML(new Object(obj[prop][array].value));\n          xml += \"</\" + prop + \">\";\n        }\n      } else if (typeof obj[prop] == \"object\") {\n        xml += OBJtoXML(new Object(obj[prop]));\n      } else {\n        xml += obj[prop];\n      }\n      xml += obj[prop] instanceof Array ? '' : \"</\" + prop + \">\";\n    }\n    var xml = xml.replace(/<\\/?[0-9]{1,}>/g, '');\n    return xml\n  }\n  function checkForRequieredFields() {\n    // console.log(\"MOPTS\", multiSelectedOptions)\n    let checkedSuccessfuly = null\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].required === true) {\n          // if(Form.sections[s].contents[c].type === \"MultiSelect\"){\n          //   if(multiSelectedOptions[fieldName] === undefined || multiSelectedOptions[fieldName] === null ||\n          //     multiSelectedOptions[fieldName].length === 0){\n          //     checkedSuccessfuly = false\n          //     swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n          //     return checkedSuccessfuly\n          //   }\n          //   else{\n          //     checkedSuccessfuly = true\n          //   }\n          // }\n          if (Form.sections[s].contents[c].type === \"TransferList\") {\n            if (selectedTransferList[fieldName] === undefined || selectedTransferList[fieldName] === null ||\n              selectedTransferList[fieldName].length === 0) {\n              checkedSuccessfuly = false\n              // swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n              props.callErrorToast(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\")\n              return checkedSuccessfuly\n            }\n            else {\n              checkedSuccessfuly = true\n            }\n          }\n          else {\n            if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null ||\n              fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n              checkedSuccessfuly = false\n              // swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n              props.callErrorToast(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\")\n              return checkedSuccessfuly\n            }\n            else {\n              checkedSuccessfuly = true\n            }\n          }\n        }\n        else {\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n\n  async function repserverlogin() {\n    await fetch(\n      `/jasperserver/rest_v2/login?j_username=jasperadmin&j_password=jasperadmin`,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n      .then(response => {\n        // response.text().then(string => {\n        console.log(\"JASPERT AUTH\", response)\n        // })\n      })\n      .catch(error => console.error(error));\n  }\n  async function downloadReport(type) {\n    await repserverlogin()\n\n    // await fetch(\"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + type + reportVars,\n    //   {\n    //     method: 'GET',\n    //     // mode: 'no-cors',\n    //     // withCredentials: true,\n    //     credentials: 'include',\n    //     headers: {\n    //       'Content-Type': 'text/html; charset=utf-8',\n    //       'Authorization': 'Basic amFzcGVyYWRtaW46amFzcGVyYWRtaW4=' // + btoa(unescape(encodeURIComponent(\"jasperadmin:jasperadmin\")))\n    //     }\n    //   }\n    // )\n    //   .then(response => response.blob())\n    //   .then(blob => {\n    //     console.log(\"RESP\", blob)\n    //     var url = window.URL.createObjectURL(blob)\n    //     var a = document.createElement('a')\n    //     a.href = url\n    //     a.download = reportName + type\n    //     document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n    //     a.click()\n    //     a.remove()  //afterwards we remove the element again         \n    //   })\n    //   .catch(error => console.error(error));\n\n    let xml = props.userTask.reportVars // await getFieldValuesCreateReportXML()\n\n    let parser = new DOMParser()\n    let xmlDoc = parser.parseFromString(xml, \"text/xml\")\n    // console.log(\"XML\", xmlDoc)\n    let j = {\n      \"reportUnitUri\": \"/reports/interactive/Otchet_o_nalichii_DS_na_schetah_CD\",\n      \"async\": true,\n      \"interactive\": true,\n      \"freshData\": false,\n      \"saveDataSnapshot\": false,\n      \"outputFormat\": \"html\",\n      \"parameters\": {\n        \"reportParameter\": [\n          {\n            \"name\": \"date\",\n            \"value\": [\n              \"14.03.2023T10: 33: 51\"\n            ]\n          },\n          {\n            \"name\": \"acc_type_code\",\n            \"value\": [210, 100, 110, 130, 120, 220, 230, 300, 310, 320, 330, 340, 3001, 3101, 3301, 500, 360, 370, 380, 400, 410, 420, 430, 440, 450, 530, 600, 610, 620, 460, 405, 470, 350, 200]\n          },\n          {\n            \"name\": \"currency_id\",\n            \"value\": [1]\n          }\n        ]\n      }\n    }\n\n    // await fetch('/jasperserver/rest_v2/reportExecutions',\n    //   {\n    //     method: 'POST',\n    //     mode: 'no-cors',\n    //     withCredentials: true,\n    //     credentials: 'include',\n    //     headers: { \"content-type\": \"application/json\", \"Authorization\": \"Basic amFzcGVyYWRtaW46amFzcGVyYWRtaW4=\" },\n    //     // body: JSON.stringify(j),\n    //     body: xmlDoc,\n    //     redirect: \"follow\"\n    //   }\n    // )\n    //   .then(response => response.json())\n    //   .then(function (res) {\n    //     repserverlogin()\n    //     console.log(\"RESP\", res)\n    //   })\n    //   .catch(error => console.error(error));\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Cookie\", \"userLocale=en_US; JSESSIONID=31DC64F5F5CE86A083C9B99348D2FAAE\");\n\n    var raw = JSON.stringify({\n      \"reportUnitUri\": \"/reports/interactive/Otchet_o_nalichii_DS_na_schetah_CD\",\n      \"async\": true,\n      \"interactive\": true,\n      \"freshData\": false,\n      \"saveDataSnapshot\": false,\n      \"outputFormat\": \"html\",\n      \"auth\": {\n        \"name\": \"jasperadmin\",\n        \"password\": \"jasperadmin\"\n      },\n      \"parameters\": {\n        \"reportParameter\": [\n          {\n            \"name\": \"date\",\n            \"value\": [\n              \"14.03.2023T10: 33: 51\"\n            ]\n          },\n          {\n            \"name\": \"acc_type_code\",\n            \"value\": [\n              210,\n              100,\n              110,\n              130,\n              120,\n              220,\n              230,\n              300,\n              310,\n              320,\n              330,\n              340,\n              3001,\n              3101,\n              3301,\n              500,\n              360,\n              370,\n              380,\n              400,\n              410,\n              420,\n              430,\n              440,\n              450,\n              530,\n              600,\n              610,\n              620,\n              460,\n              405,\n              470,\n              350,\n              200\n            ]\n          },\n          {\n            \"name\": \"currency_id\",\n            \"value\": [\n              1\n            ]\n          }\n        ]\n      }\n    });\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://depo.cds.kg/jasperserver/rest_v2/reportExecutions\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n  }\n\n  async function reportToPDFES(fullName, inn, expiredDate) {\n    // await repserverlogin()\n    await fetch(\"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".pdf\" + reportVars,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8',\n          // 'Authorization': 'Basic ' + btoa(unescape(encodeURIComponent(\"jasperadmin:jasperadmin\")))\n          'Authorization': 'Basic amFzcGVyYWRtaW46amFzcGVyYWRtaW4='\n        }\n      }\n    )\n      .then(response => response.blob())\n      .then(blob => {\n        // console.log(\"REPORT\", blob);\n        blob.name = reportName + \".pdf\"\n        let formData = new FormData()\n        formData.append(\"formFile\", blob, reportName + \".pdf\")\n\n        // for (var value of formData.values()) {\n        //   console.log(\"FVAL\", value)\n        // }\n        let url = props.api + \"/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate\n        var requestOptions = {\n          method: 'POST',\n          body: formData,\n          redirect: 'follow'\n        }\n\n        fetch(url, requestOptions)\n          .then(response => response.blob())\n          .then(bl => {\n            console.log(\"RES\", bl)\n            var pdf = new Blob([bl], { type: \"application/pdf\" })\n            var docUrl = window.URL.createObjectURL(pdf)\n            var a = document.createElement('a')\n            a.href = docUrl\n            a.download = `${reportName}.pdf`\n            document.body.appendChild(a)\n            a.click()\n            a.remove()\n          })\n          .catch(error => console.log('error', error))\n      })\n      .catch(error => console.error(error));\n  }\n\n  try {\n    return (\n      <Grid>\n        <a name=\"top\" />\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n          <Grid item xs={11}>\n            <Paper>\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <TableHead>\n                  <TableRow style={{ maxHeight: 25 }}>\n                    <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                  </TableRow>\n                </TableHead>\n              </Grid>\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {Form.sections.map((section, index) => {\n                  return sectionBuilder(section, index)\n                })}\n              </Grid>\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                {buttons.map((button, index) => (\n                  <Button\n                    variant=\"outlined\"\n                    name={button.name}\n                    onClick={() => buttonClick(button.name)}\n                    style={{\n                      margin: 3,\n                      backgroundColor: button.backgroundColor,\n                      height: 32,\n                      fontSize: 12,\n                      color: button.fontColor\n                    }}\n                    value={button.name}\n                  >\n                    {button.label}\n                  </Button>\n                ))}\n              </Grid>\n            </Paper>\n            <br></br>\n            {/* {selectedDoc !== null &&\n              <div>{getReport()}</div>\n            } */}\n\n            {selectedDoc !== null &&\n              <Markup id=\"reportContainer\" content={selectedDoc} />\n            }\n          </Grid>\n        </Grid>\n        <Modal\n          open={showModalEnterPin}\n          onClose={handleCloseModalEnterPin}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Введите ПИН код Рутокена</h3>\n            <FormControl variant=\"outlined\" style={{ width: \"100%\" }} error={wrongPin}>\n              <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n              <OutlinedInput\n                type={showPin ? 'text' : 'password'}\n                defaultValue={rutokenPin}\n                onChange={handlePinChange}\n                onKeyPress={onKeyPressModalEnterPin}\n                autoFocus\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPin}\n                      edge=\"end\"\n                    >\n                      {showPin ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={25}\n              />\n            </FormControl>\n            {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"SignReportSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={handleCloseModalEnterPin}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#E73639\"\n              }}\n            >Отмена\n            </Button>\n          </div>\n        </Modal>\n      </Grid>\n    )\n  }\n  catch (error) {\n    console.log(\"ERROR\", error)\n    return <div>error</div>\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}