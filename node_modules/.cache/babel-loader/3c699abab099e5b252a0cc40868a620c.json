{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\InstructionsRegistrars\\\\InstructionsRegistrars.jsx\";\n// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport MaterialSelect from '@material-ui/core/Select'; // import MaskedInput from 'react-text-mask';\n\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\"; // import Input from '@material-ui/core/Input';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@mui/material/Menu'; // PIN components\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'; // Icons\n\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // Accordion\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Import libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport hotkeys from 'hotkeys-js';\nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nvar moment = require('moment');\n\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [process_id] = useState(props.userTask.process_id);\n  const [session_id] = useState(props.userTask.session_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [taskType] = useState(props.userTask.taskType);\n  const [enumData] = useState(props.userTask.enumData);\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [Form] = useState(props.userTask.Form);\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [fieldValue, setFieldValue] = useState({});\n  const [docId] = useState(props.userTask.docId);\n  const [buttons] = useState(props.userTask.buttons);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(false);\n  const [selectedInstructions, setSelectedInstructions] = useState({});\n  const [signedInstructions, setSignedInstructions] = useState({});\n  const [allInstructionsChecked, setAllInstructionsChecked] = useState(false);\n  const [showModalCancelInstr, setShowModalCancelInstr] = useState(false);\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [accordionExpanded, setAccordionExpanded] = useState(false);\n  const [updateState, setUpdateState] = useState(false);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1);\n  const [modalStyle] = useState(getModalStyle);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  const [gridTableId] = useState(getUUID());\n  const [gridFieldValue, setGridFieldValue] = useState({}); // Initializing\n\n  useEffect(() => {\n    console.log(\"REG_INST PROPS\", props.userTask);\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null && props.userTask.docList !== undefined) {\n      try {\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        let sigInstructions = {};\n        let selInstructions = {};\n\n        for (let i = 0; i < parsedData.length; i++) {\n          sigInstructions[parsedData[i].id] = parsedData[i].signed;\n          selInstructions[parsedData[i].id] = false;\n        }\n\n        setSignedInstructions(sigInstructions);\n        setSelectedInstructions(selInstructions);\n        setFilteredDocList(parsedData);\n        setInitialDocList(parsedData);\n        setIsSearchForm(true);\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"));\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, parsedData, JSON.parse(props.userTask.selectedDoc));\n        } else {\n          fetchBySize(0, s - 1, sortedDocList);\n        } // console.log(\"DOCLIST\", parsedData)\n\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    } else {\n      setIsSearchForm(false);\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      let fields = {\n        \"signed\": false\n      };\n\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name;\n          fields[fieldName] = parsedSelectedDoc[fieldName];\n        }\n      }\n\n      console.log(\"SDOC\", parsedSelectedDoc);\n      console.log(\"INITIAL FIELDVALUES\", fields);\n      setSelectedDoc(parsedSelectedDoc);\n      setFieldValue(fields);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            });\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n    }\n\n    if (gridForm !== null) {\n      let newFields = {};\n\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show;\n        }\n      }\n\n      setGridFieldValue(newFields);\n    }\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded);\n    }\n  });\n\n  const handleOpenModalCancelInstr = () => {\n    setShowModalCancelInstr(true);\n  };\n\n  const handleCloseModalCancelInstr = () => {\n    setShowModalCancelInstr(false);\n  };\n\n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true);\n  };\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded);\n  } // RuToken functions\n\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\")\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  }); // Sign instruction with rutoken\n\n  function sign(commandJson) {\n    try {\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices().then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0]);\n          } else {\n            alert(\"Рутокен не обнаружен\");\n          }\n        }) // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice;\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n        }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve();\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin); // 240699\n          }\n        }) // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n        }).then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0];\n            return plugin.parseCertificate(rutokenHandle, certs[0]);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs;\n          let tokenRemainingTime = new Date(certData.validNotAfter).getTime() - Date.now();\n\n          if (tokenRemainingTime > 0) {\n            if (certHandle.length > 0) {\n              var options = {};\n              let inn = \"\";\n              let fullName = \"\";\n\n              for (let i = 0; i < certData.subject.length; i++) {\n                if (certData.subject[i].rdn === \"serialNumber\") {\n                  inn = certData.subject[i].value;\n                }\n\n                if (certData.subject[i].rdn === \"commonName\") {\n                  fullName = certData.subject[i].value;\n                }\n              }\n\n              props.setEsInn(inn);\n              props.setEsUserFullName(fullName);\n              props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n              let bodyToSign = {\n                instructionList: commandJson.documentsToSign,\n                inn: inn,\n                signed_user_full_name: fullName\n              };\n              commandJson.variables.bodyToSign.value = JSON.stringify(bodyToSign);\n              console.log(\"SIGN\", commandJson);\n              handleCloseModalEnterPin();\n              props.sendFieldValues(commandJson);\n              props.clearTabData(commandJson.process_id);\n              return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\");\n            }\n          } else {\n            plugin.logout(rutokenHandle);\n            props.callErrorToast(\"Рутокен просрочен\", \"warning\");\n          }\n        }) // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle);\n        }, handleError);\n      } else {\n        props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n      }\n    } catch (er) {\n      console.log(\"Rutoken ERR\", er);\n    }\n  } // catch errors while signing docs\n\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  } // Input handlers\n\n\n  const handleCheckboxChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    }); // console.log(\"Check change\", event.target.checked)\n  };\n\n  const handleSelectInstructionChange = event => {\n    // console.log(\"Check INSTR change\", event.target)\n    setSelectedInstructions({ ...selectedInstructions,\n      [event.target.id]: event.target.checked\n    });\n  };\n\n  const checkAllInstructions = event => {\n    setAllInstructionsChecked(event.target.checked);\n\n    for (let i = 0; i < filteredDocList.length; i++) {\n      if (filteredDocList[i].signed !== true && filteredDocList[i].canceled !== true && filteredDocList[i].executed !== true && filteredDocList[i].filled === true) {\n        selectedInstructions[filteredDocList[i].id] = event.target.checked;\n      }\n    }\n\n    setSelectedInstructions(selectedInstructions); // console.log(\"Check change\", event.target.checked)\n  }; // Radio group handler\n\n\n  const handleRadioGroupChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  function checkForDisabled(dataItem) {\n    if (dataItem.filled === true & (dataItem.signed === true || dataItem.canceled === true || dataItem.executed === true)) {\n      console.log(\"DIS\", dataItem.id);\n      return true;\n    } else return false;\n  }\n\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value); // console.log(\"PIN\", event.target.value)\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  } // Integer input handler\n\n\n  const handleIntChange = event => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    });\n  }; // Float input handler\n\n\n  const handleFloatChange = event => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  }; // const handleIntChange = (event) => {\n  //   console.log(\"EVENT\", event.target.name, event.target.value)\n  //   let stringNum = event.target.value.toString().replace(/ /g, '')\n  //   let int = parseInt(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: int })\n  //   // setUpdateState(getUUID())\n  // }\n  // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n\n\n  function handleDateTimeChange(event) {\n    // // console.log(\"EVENT\", event.target.name, event.target.value)\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    let fullDateTime = moment(event.target.value).format('YYYY-MM-DDTHH:mm:ss');\n    fieldValue[event.target.name] = fullDateTime;\n    setFieldValue(fieldValue); // console.log(\"DATE CHANGE\", event.target.value)\n  } // Handler of select copmponet changes\n\n\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value;\n    console.log(\"OPT\", option.name, option.value);\n    let updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        setSelectedOptions(updateSelectedOptions);\n        noSuchOption = false;\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    setFieldValue(fieldValue);\n  } // Returns random id\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Main button click handler\n\n\n  function buttonClick(buttonName, dataItem) {\n    // console.log(\"Button\", buttonName)\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true);\n      } else {\n        filterDocList(0, size - 1, initialDocList, fieldValue);\n      }\n    } else if (buttonName === \"signInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin();\n        } else {\n          let documentsToSign = [];\n\n          if (taskType === \"showInstructionsRegistrarsSearchForm\") {\n            for (let i = 0; i < docList.length; i++) {\n              if (selectedInstructions[docList[i].id] === true) {\n                documentsToSign.push(docList[i]);\n              }\n            }\n          } else if (taskType === \"showInstructionsRegistrarsViewForm\") {\n            documentsToSign.push(selectedDoc);\n          }\n\n          let bodyToSign = {\n            instructionList: documentsToSign,\n            inn: props.esInn,\n            signed_user_full_name: props.esUserFullName\n          };\n          let commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"signInstruction\"\n              },\n              userId: {\n                value: userProfile.userId\n              },\n              userRole: {\n                value: userProfile.userRole\n              },\n              bodyToSign: {\n                value: JSON.stringify(bodyToSign)\n              }\n            }\n          };\n          console.log(\"button signInstruction: \", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } else if (buttonName === \"SignInstructionSaveButton\") {\n      let documentsToSign = [];\n\n      if (taskType === \"showInstructionsRegistrarsSearchForm\") {\n        for (let i = 0; i < docList.length; i++) {\n          if (selectedInstructions[docList[i].id] === true) {\n            documentsToSign.push(docList[i]);\n          }\n        }\n      } else if (taskType === \"showInstructionsRegistrarsViewForm\") {\n        documentsToSign.push(selectedDoc);\n      }\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        documentsToSign: documentsToSign,\n        variables: {\n          userAction: {\n            value: \"signInstruction\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          bodyToSign: {\n            value: {}\n          }\n        }\n      };\n      console.log(\"button signInstruction: \", commandJson);\n      sign(commandJson);\n    } else if (buttonName === \"CancelInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        handleOpenModalCancelInstr();\n      }\n    } else if (buttonName === \"CancelInstructionSaveButton\") {\n      handleCloseModalCancelInstr(); // const updateDocument = {} // getFieldValuesUpdateInstruction()\n      // updateDocument[\"canceled\"] = true\n      // updateDocument[\"сanceledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n\n      let documentsToCancel = [];\n\n      if (taskType === \"showInstructionsRegistrarsSearchForm\") {\n        for (let i = 0; i < docList.length; i++) {\n          if (selectedInstructions[docList[i].id] === true) {\n            documentsToCancel.push({\n              id: docList[i].id\n            });\n          }\n        }\n      } else if (taskType === \"showInstructionsRegistrarsViewForm\") {\n        documentsToCancel.push({\n          id: selectedDoc.id\n        });\n      }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancelInstruction\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          },\n          documentsToCancel: {\n            value: JSON.stringify(documentsToCancel)\n          },\n          cancelationReason: {\n            value: fieldValue.cancelationReason\n          },\n          // сanceledUser: { value: userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName },\n          status: {\n            value: \"canceled\"\n          }\n        }\n      };\n      console.log(\"button CancelInstructionSaveButton: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"CancelInstructionCancelButton\") {\n      handleCloseModalCancelInstr();\n      fieldValue[\"cancelationReason\"] = null;\n      setFieldValue(fieldValue);\n      console.log(\"FIELDS\", fieldValue);\n    } else if (buttonName === \"downloadES\") {\n      swAlert(\"Внимание откройте скачанный файл и следуйте пошаговой иструкции!\", \"success\");\n    } else if (buttonName === \"viewInstruction\") {\n      let signed = \"true\";\n\n      if (dataItem.signed !== true && dataItem.canceled !== true) {\n        signed = \"false\";\n      }\n\n      let editFormDefId = null;\n      let report = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              editFormDefId = enumData[k].data[d].edit_form;\n              report = enumData[k].data[d].reportName;\n            }\n          }\n        }\n      }\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"viewInstruction\"\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          docId: {\n            value: dataItem.id\n          },\n          instructionType: {\n            value: dataItem.type\n          },\n          signed: {\n            value: signed\n          },\n          editFormDefId: {\n            value: editFormDefId\n          },\n          reportName: {\n            value: report\n          },\n          securities: {\n            value: dataItem.currency === null ? \"true\" : \"false\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button viewInstruction: \", commandJson, dataItem);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"showInstructionReport\") {\n      let reportName = null;\n\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (selectedDoc.type === enumData[k].data[d].id) {\n              let reportId = enumData[k].data[d].report; // for(let e=0; e<enumData.length; e++){\n              //   if(enumData[e].name === \"instructionReports\"){\n              //     for(let t=0; t<enumData[e].data.length; t++){\n              //       if(reportId === enumData[e].data[t].id){\n              //         reportName = enumData[e].data[t].reportName\n              //       }\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n      }\n\n      let t = selectedDoc.type;\n\n      if (t === 4 || t === 6 || t === 7 || t === 38) {\n        reportName = \"Svodnoe_peredatochnoe_rasporyajenie_na_zachislenie\";\n      } else {\n        reportName = \"Svodnoe_peredatochnoe_rasporyajenie_na_spisanie\";\n      } // let reportExecutions = getFieldValuesReportExecutions(\"html\", reportName)\n\n\n      let reportExecutions = {\n        \"reportUnitUri\": \"/reports/interactive/\" + reportName,\n        \"async\": true,\n        \"interactive\": true,\n        \"freshData\": false,\n        \"saveDataSnapshot\": false,\n        \"outputFormat\": \"pdf\",\n        // html xlsx pdf docx\n        \"parameters\": {\n          \"reportParameter\": [{\n            name: \"id\",\n            value: [selectedDoc.id.toString()]\n          }]\n        }\n      };\n      const commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"showInstructionReport\"\n          },\n          docId: {\n            value: selectedDoc.id.toString()\n          },\n          reportName: {\n            value: reportName\n          },\n          reportVars: {\n            value: \"?id=\" + selectedDoc.id\n          },\n          reportExecutions: {\n            value: JSON.stringify(reportExecutions)\n          }\n        }\n      };\n      console.log(\"button showInstructionReport: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"button: \", buttonName);\n    }\n  }\n\n  function getFieldValuesReportExecutions(format, reportName) {\n    let reportParams = [];\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n        let type = Form.sections[s].contents[c].type;\n\n        if (type === \"DateTime\") {\n          reportParams.push({\n            name: fieldName,\n            value: [moment(fieldValue[fieldName]).format(\"DD.MM.YYYY\")]\n          });\n        } else if (type === \"FullDateTime\") {\n          reportParams.push({\n            name: fieldName,\n            value: [moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\")]\n          });\n        } else if (type === \"JasperDate\") {\n          reportParams.push({\n            name: fieldName,\n            value: [moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\")]\n          });\n        } else {\n          reportParams.push({\n            name: fieldName,\n            value: [fieldValue[fieldName]]\n          });\n        }\n      }\n    }\n\n    let obj = {\n      \"reportUnitUri\": \"/reports/interactive/\" + reportName,\n      \"async\": true,\n      \"interactive\": true,\n      \"freshData\": false,\n      \"saveDataSnapshot\": false,\n      \"outputFormat\": format,\n      // html xlsx pdf docx\n      \"parameters\": {\n        \"reportParameter\": reportParams\n      }\n    }; // let xml = OBJtoXML(obj)\n\n    return obj;\n  } // // Returns Button component\n  // function createButton(button, index) {\n  //   return (\n  //     <Button variant=\"outlined\"\n  //       // id = {()=> getUUID()}\n  //       name={button.name}\n  //       key={index}\n  //       onClick={() => buttonClick(button.name)}\n  //       style={{\n  //         margin: 3,\n  //         color: button.fontColor,\n  //         backgroundColor: button.backgroundColor,\n  //         height: 32,\n  //         fontSize: 12\n  //       }}\n  //       value={button.name}\n  //     >\n  //       {button.label}\n  //     </Button>\n  //   )\n  // }\n  // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section, index) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      key: index + \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 9\n      }\n    }, section.contents.map((contentItem, index) => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 15\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 15\n      }\n    }, contentBuilder(contentItem))))));\n  } // Create component by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressDateTime,\n        type: \"date\",\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        value: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseFullDateTime(fieldValue[contentItem.name], \"T\") : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressInt,\n        name: contentItem.name // onBlur={handleIntChange}\n        // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleIntChange,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: IntegerFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Float\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressFloat,\n        name: contentItem.name // onBlur={handleFloatChange}\n        // value={fieldValue[contentItem.name]}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleFloatChange,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: FloatFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"RadioGroup\") {\n      let radioGroupItems = [];\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === contentItem.name) {\n          radioGroupItems = enumData[i].data;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(RadioGroup, {\n        name: contentItem.name,\n        value: fieldValue[contentItem.name],\n        onChange: handleRadioGroupChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 9\n        }\n      }, radioGroupItems.map(groupItem => {\n        return /*#__PURE__*/React.createElement(FormControlLabel, {\n          value: groupItem.id,\n          label: groupItem.label,\n          control: /*#__PURE__*/React.createElement(Radio, {\n            style: {\n              height: \"5px\",\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 26\n            }\n          }),\n          disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 15\n          }\n        });\n      }));\n    }\n  } // Key press handlers for some fields\n\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressDateTime(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressInt(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let int = parseInt(stringNum);\n          fieldValue[event.target.name] = int;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressFloat(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let float = parseFloat(stringNum);\n          fieldValue[event.target.name] = float;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressModalCancelInstruction(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"CancelInstructionSaveButton\", null);\n    }\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    handlePinChange(event);\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"SignInstructionSaveButton\", null);\n    }\n  } // custom allerts\n\n\n  function swAlert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      } // dangerMode: true,\n\n    }).then(click => {\n      if (click === \"ok\") {\n        console.log(\"CLICK OK\", click);\n      }\n    });\n  } // Create grid form components\n\n\n  function getGridFormItems(value, type, dataItem, name) {\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        // console.log(\"ENUM\", name, value, type)\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label;\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        } // name = {name}\n        ,\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"\";\n\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\";\n        }\n\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"На исполнении\";\n        }\n\n        if (dataItem[\"executed\"] === true) {\n          status = \"Исполнено\";\n        }\n\n        if (dataItem[\"canceled\"] === true) {\n          status = \"Отменено\";\n        }\n\n        return status;\n      } else {\n        if (value === null || value === \"\" || value === undefined) {\n          return \"-\";\n        } else {\n          return value;\n        }\n      }\n    } else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newCur = props.currencyBeautifier(value);\n        return newCur;\n      }\n    } else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newInt = props.intBeautifier(value);\n        return newInt;\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        return value;\n      }\n    }\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  } // filter docList by filled parameters\n\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key);\n\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase().trim();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else if (contentType === \"Enum\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else if (contentType === \"Bool\") {\n                if (key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\") {\n                  let instrStatus = \"\";\n                  let statusSelected = false;\n                  let fieldStatus = \"\"; // Check fields\n\n                  if (fields[\"filled\"] === true) {\n                    fieldStatus = \"filled\";\n                    statusSelected = true;\n                  }\n\n                  if (fields[\"onExecution\"] === true) {\n                    fieldStatus = \"onExecution\";\n                    statusSelected = true;\n                  }\n\n                  if (fields[\"executed\"] === true) {\n                    fieldStatus = \"executed\";\n                    statusSelected = true;\n                  }\n\n                  if (fields[\"canceled\"] === true) {\n                    fieldStatus = \"canceled\";\n                    statusSelected = true;\n                  }\n\n                  if (statusSelected === true) {\n                    // Check Instruction\n                    if (Data[i][\"filled\"] === true) {\n                      instrStatus = \"filled\";\n                    }\n\n                    if (Data[i][\"onExecution\"] === true) {\n                      instrStatus = \"onExecution\";\n                    }\n\n                    if (Data[i][\"executed\"] === true) {\n                      instrStatus = \"executed\";\n                    }\n\n                    if (Data[i][\"canceled\"] === true) {\n                      instrStatus = \"canceled\";\n                    } // Check whether statuses are equal\n\n\n                    if (fieldStatus === instrStatus) {\n                      match = true;\n                    } else {\n                      match = false;\n                      break;\n                    }\n                  } else {\n                    match = true;\n                  }\n                } else {\n                  if (Data[i][key] === null || fields[key] === Data[i][key]) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              }\n            } else {\n              match = false;\n              break;\n            }\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered docList by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList); // setUpdateState(getUUID())\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLastClick() {\n    if (page !== getPageAmount()) {\n      setPage(getPageAmount());\n      fetchBySize((getPageAmount() - 1) * size, filteredDocList.length, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на последней странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.floor(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  }\n\n  function getBackgroundColor(dataItem) {\n    let color = \"#FCEAD3\";\n\n    if (dataItem.urgent === true && dataItem.signed === false && dataItem.executed === false) {\n      color = \"#EFB2B2\";\n    }\n\n    if (dataItem.filled === false) {\n      color = \"#EFEFEF\";\n    }\n\n    if (dataItem.canceled === true) {\n      color = \"#FFDED5\";\n    }\n\n    if (dataItem.signed === true || dataItem.executed === true) {\n      color = \"#F4FFEE\";\n    }\n\n    return color;\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1; // console.log(\"IT\", i, gridForm.sections[nextS])\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1583,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: isSearchForm === true ? 12 : 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1584,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1585,\n        columnNumber: 11\n      }\n    }, isSearchForm === false && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1589,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 21\n      }\n    }, Form.label)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1595,\n        columnNumber: 13\n      }\n    }, Form.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        return sectionBuilder(section, index);\n      }\n    })))));\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1;\n    } // console.log(\"SORT\", property, sortOrder, type)\n\n\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * -1 * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n        let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n        var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n        return result * sortOrder;\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type)); // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function calculateColSpan(contents) {\n    let num = 0;\n\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1;\n      }\n    }\n\n    return num;\n  }\n\n  const handleContextMenu = event => {\n    if (userProfile.userRole === \"1\") {\n      event.preventDefault();\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null); // console.log(\"CLOSE\", fieldValue)\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name];\n      }\n    }\n\n    console.log(\"nForm\", gridForm);\n    setGridForm(gridForm);\n    setUpdateState(getUUID());\n  };\n\n  function createMenuItems() {\n    let columns = [];\n    columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1760,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: 5,\n        cursor: \"pointer\"\n      },\n      name: \"selectAll\",\n      onClick: () => handleTableCheckboxChange(\"selectAll\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1761,\n        columnNumber: 9\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1768,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: \"selectAll\",\n      onChange: handleGridCheckboxChange,\n      checked: gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1769,\n        columnNumber: 11\n      }\n    }))));\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name;\n        columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1782,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            paddingLeft: 5,\n            cursor: \"pointer\",\n            background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\"\n          },\n          name: name,\n          onClick: () => handleTableCheckboxChange(name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1783,\n            columnNumber: 13\n          }\n        }, gridForm.sections[s].contents[c].label), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1790,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          style: {\n            maxWidth: 20,\n            height: 15,\n            color: \"green\"\n          },\n          name: name,\n          onChange: handleGridCheckboxChange,\n          checked: gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1791,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n\n    return columns;\n  }\n\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId));\n  }\n\n  const handleGridCheckboxChange = event => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = {\n        [event.target.name]: event.target.checked\n      };\n\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name];\n      } // console.log(\"selectAll\", newFields)\n\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleTableCheckboxChange = name => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue\n      };\n\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name];\n      }\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [name]: !gridFieldValue[name]\n      });\n    }\n  };\n\n  try {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1836,\n        columnNumber: 7\n      }\n    }, isSearchForm !== null && isSearchForm === true ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1838,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1839,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      expanded: accordionExpanded,\n      onChange: () => handleExpandAccordion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1840,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AccordionSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1842,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1841,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1844,\n        columnNumber: 19\n      }\n    }, Form.label)), /*#__PURE__*/React.createElement(AccordionDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1846,\n        columnNumber: 17\n      }\n    }, getForm())))) : getForm(), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1855,\n        columnNumber: 9\n      }\n    }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n      name: button.name,\n      variant: \"outlined\",\n      onClick: () => buttonClick(button.name, null),\n      style: {\n        margin: 3,\n        color: button.fontColor,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1857,\n        columnNumber: 13\n      }\n    }, button.label)), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      href: \"../\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D.docx\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      onClick: () => buttonClick(\"downloadES\"),\n      startIcon: /*#__PURE__*/React.createElement(DescriptionIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1884,\n          columnNumber: 24\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1871,\n        columnNumber: 11\n      }\n    }, \"\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F \\u042D\\u0426\\u041F\"), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://www.rutoken.ru/support/download/rutoken-plugin/\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1887,\n        columnNumber: 11\n      }\n    }, \"\\u041F\\u043B\\u0430\\u0433\\u0438\\u043D\"), /*#__PURE__*/React.createElement(Button, {\n      component: \"a\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://www.rutoken.ru/support/download/windows/\",\n      download: true,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1903,\n        columnNumber: 11\n      }\n    }, \"\\u0414\\u0440\\u0430\\u0439\\u0432\\u0435\\u0440\")), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n      style: {\n        paddingTop: 3,\n        cursor: \"pointer\"\n      },\n      onClick: () => buttonClick(\"updateDocList\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1921,\n        columnNumber: 11\n      }\n    }), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1924,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1925,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1926,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"500px\",\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1927,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      class: \"main-table-style\",\n      id: gridTableId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1928,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      style: {\n        position: \"sticky\",\n        top: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1933,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1935,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-first-child\",\n      onContextMenu: ev => handleContextMenu(ev),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1936,\n        columnNumber: 25\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\"), gridForm.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        let lastSection = checkSectionOnLastChild(index);\n        return /*#__PURE__*/React.createElement(\"td\", {\n          colSpan: calculateColSpan(section.contents),\n          class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n          onContextMenu: ev => handleContextMenu(ev),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1942,\n            columnNumber: 31\n          }\n        }, section.label);\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1954,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-style-2row\",\n      rowSpan: \"2\",\n      style: {\n        minWidth: 90\n      },\n      onContextMenu: ev => handleContextMenu(ev),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1955,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"white\"\n      },\n      onChange: checkAllInstructions,\n      checked: allInstructionsChecked === true ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1961,\n        columnNumber: 27\n      }\n    })), gridForm.sections.map(section => section.contents.map(contentItem => {\n      if (contentItem.show === true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: \"td-head-style-2row\",\n          rowSpan: \"2\",\n          onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n          onContextMenu: ev => handleContextMenu(ev),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1971,\n            columnNumber: 33\n          }\n        }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1977,\n            columnNumber: 117\n          }\n        }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1977,\n            columnNumber: 170\n          }\n        }) : \"\");\n      }\n    })))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1985,\n        columnNumber: 21\n      }\n    }, docList !== null && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: 30,\n        backgroundColor: getBackgroundColor(dataItem)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1988,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        \"text-align\": \"center\",\n        \"border-bottom\": \"1px solid grey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1989,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: () => buttonClick(\"viewInstruction\", dataItem),\n      style: {\n        margin: 1,\n        height: 24,\n        fontSize: 10,\n        maxWidth: 32,\n        backgroundColor: \"#E8FEE6\",\n        borderColor: \"darkgreen\",\n        color: \"darkgreen\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1990,\n        columnNumber: 31\n      }\n    }, \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: checkForDisabled(dataItem) === true ? \"grey\" : \"green\"\n      },\n      id: dataItem.id,\n      onChange: handleSelectInstructionChange,\n      disabled: checkForDisabled(dataItem),\n      checked: selectedInstructions[dataItem.id] === true ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2005,\n        columnNumber: 31\n      }\n    })), gridForm.sections.map(section => section.contents.map(contentItem => {\n      if (contentItem.show === true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            color: \"black\",\n            fontSize: 12,\n            \"text-align\": \"center\",\n            \"border-bottom\": \"1px solid grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2017,\n            columnNumber: 37\n          }\n        }, getGridFormItems(dataItem[contentItem.name], contentItem.type, dataItem, contentItem.name));\n      }\n    })))))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2031,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2032,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2033,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2034,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2035,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2036,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2037,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        background: \"#047535\",\n        color: \"white\",\n        height: 28\n      },\n      onClick: () => downloadExcel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2038,\n        columnNumber: 29\n      }\n    }, \"\\u0412 EXCEL\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2045,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"signInstruction\", null),\n      style: {\n        margin: 3,\n        backgroundColor: \"#13611B\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2046,\n        columnNumber: 29\n      }\n    }, \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"CancelInstruction\", null),\n      style: {\n        margin: 3,\n        backgroundColor: \"#B41111\",\n        color: \"white\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2059,\n        columnNumber: 29\n      }\n    }, \"\\u041E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0438\\u0442\\u044C\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2073,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: 90,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2074,\n        columnNumber: 29\n      }\n    }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2076,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        minWidth: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2077,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MaterialSelect, {\n      onChange: handleChangeRowsPerPage,\n      style: {\n        height: 25,\n        color: \"black\"\n      },\n      value: size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2081,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2086,\n        columnNumber: 33\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2087,\n        columnNumber: 33\n      }\n    }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2088,\n        columnNumber: 33\n      }\n    }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2089,\n        columnNumber: 33\n      }\n    }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2090,\n        columnNumber: 33\n      }\n    }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2091,\n        columnNumber: 33\n      }\n    }, \"500\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2092,\n        columnNumber: 33\n      }\n    }, \"1000\")))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2097,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2098,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowFirstClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2099,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2100,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2104,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLeftClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2106,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2107,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: \"black\",\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2111,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        maxWidth: 25\n      },\n      value: page,\n      onChange: handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2112,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2114,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => GoToPage(),\n      variant: \"outlined\",\n      style: {\n        height: 22,\n        backgroundColor: \"#D1D6D6\",\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2116,\n        columnNumber: 31\n      }\n    }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2128,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2129,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowRightClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2130,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2131,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2135,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLastClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2137,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(LastPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2138,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"pagination-rows-amount-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2142,\n        columnNumber: 27\n      }\n    }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount())))), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: anchorEl,\n      open: openMenu,\n      onClose: handleCloseMenu,\n      MenuListProps: {\n        'aria-labelledby': 'basic-button'\n      },\n      style: {\n        paddingLeft: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2146,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2155,\n        columnNumber: 23\n      }\n    }, createMenuItems()))))))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: showSnackBar,\n      onClose: () => handleCloseSnackBar(),\n      autoHideDuration: 1200,\n      message: snackBarMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2165,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalCancelInstr,\n      onClose: handleCloseModalCancelInstr,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2178,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0443 \\u043E\\u0442\\u043C\\u0435\\u043D\\u044B\"), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      multiline: true,\n      autoFocus: true,\n      name: \"cancelationReason\",\n      defaultValue: fieldValue[\"cancelationReason\"] >= 0 ? fieldValue[\"cancelationReason\"] : \"\",\n      onChange: handleChange,\n      onKeyPress: onKeyPressModalCancelInstruction,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2179,\n        columnNumber: 13\n      }\n    }), props.esInn === null && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2190,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2191,\n        columnNumber: 17\n      }\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"100%\"\n      },\n      error: wrongPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2192,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2193,\n        columnNumber: 19\n      }\n    }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n      type: showPin ? 'text' : 'password',\n      defaultValue: rutokenPin,\n      onChange: handlePinChange,\n      onKeyPress: onKeyPressModalEnterPin,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2200,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPin,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2201,\n          columnNumber: 25\n        }\n      }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2206,\n          columnNumber: 38\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2206,\n          columnNumber: 55\n        }\n      }))),\n      labelWidth: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2194,\n        columnNumber: 19\n      }\n    })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2213,\n        columnNumber: 39\n      }\n    }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"CancelInstructionSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2216,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"CancelInstructionCancelButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2228,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalEnterPin,\n      onClose: handleCloseModalEnterPin,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2242,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2248,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2249,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"100%\"\n      },\n      error: wrongPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2251,\n        columnNumber: 15\n      }\n    }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n      type: showPin ? 'text' : 'password',\n      defaultValue: rutokenPin,\n      onChange: handlePinChange,\n      onKeyPress: onKeyPressModalEnterPin,\n      autoFocus: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2259,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPin,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2260,\n          columnNumber: 21\n        }\n      }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2265,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2265,\n          columnNumber: 51\n        }\n      }))),\n      labelWidth: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2252,\n        columnNumber: 15\n      }\n    })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2272,\n        columnNumber: 35\n      }\n    }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"SignInstructionSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2273,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleCloseModalEnterPin,\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2285,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2305,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2306,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2307,\n        columnNumber: 11\n      }\n    })));\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Select","MaterialSelect","NumberFormat","PropTypes","Grid","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Snackbar","LinearProgress","MenuItem","Paper","Radio","RadioGroup","Tooltip","IconButton","Modal","makeStyles","Menu","FormControl","FormControlLabel","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","ArrowForwardIosIcon","ArrowBackIosIcon","FirstPageIcon","LastPageIcon","DescriptionIcon","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","ArrowUpwardRoundedIcon","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","swal","hotkeys","rutoken","tableToExcel","moment","require","plugin","rutokenHandle","certHandle","certData","cmsData","FloatFormat","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","IntegerFormat","getModalStyle","top","left","transform","useStyles","theme","modal","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","classes","userProfile","process_id","userTask","session_id","taskID","taskType","enumData","gridFormEnumData","enumOptions","setEnumOptions","Form","gridForm","setGridForm","selectedDoc","setSelectedDoc","fieldValue","setFieldValue","docId","buttons","gridFormButtons","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","page","setPage","size","setSize","selectedOptions","setSelectedOptions","sectionColor","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","selectedInstructions","setSelectedInstructions","signedInstructions","setSignedInstructions","allInstructionsChecked","setAllInstructionsChecked","showModalCancelInstr","setShowModalCancelInstr","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","isSearchForm","setIsSearchForm","accordionExpanded","setAccordionExpanded","updateState","setUpdateState","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","modalStyle","anchorEl","setAnchorEl","openMenu","Boolean","gridTableId","getUUID","gridFieldValue","setGridFieldValue","console","log","undefined","s","parseInt","p","parsedData","JSON","parse","sigInstructions","selInstructions","i","length","id","signed","sortedDocList","sort","dynamicSort","filterDocList","fetchBySize","er","callErrorToast","parsedSelectedDoc","fields","sections","c","contents","fieldName","newEnumOptions","options","d","data","push","label","getLostEnumName","newFields","show","enumI","type","event","handler","key","handleOpenModalCancelInstr","handleCloseModalCancelInstr","handleOpenModalEnterPin","handleCloseModalEnterPin","handleExpandAccordion","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","sign","commandJson","enumerateDevices","devices","alert","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","tokenRemainingTime","Date","validNotAfter","getTime","now","inn","fullName","subject","rdn","setEsInn","setEsUserFullName","setEsExpiredDate","substring","bodyToSign","instructionList","documentsToSign","signed_user_full_name","variables","stringify","sendFieldValues","clearTabData","DATA_FORMAT_PLAIN","logout","handleError","reason","isNaN","message","errorCodes","PIN_INCORRECT","handleCheckboxChange","checked","handleSelectInstructionChange","checkAllInstructions","canceled","executed","filled","handleRadioGroupChange","checkForDisabled","dataItem","handleChange","handlePinChange","handleClickShowPin","handleIntChange","stringNum","toString","replace","int","handleFloatChange","handleDateTimeChange","fullDateTime","format","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","uuidv1","swAllert","text","icon","ok","buttonClick","buttonName","operDayIsOpened","esInn","esUserFullName","commandType","userAction","userId","userRole","documentsToCancel","cancelationReason","status","swAlert","editFormDefId","report","k","edit_form","reportName","instructionType","securities","currency","searchDoc","reportId","t","reportExecutions","reportVars","getFieldValuesReportExecutions","reportParams","obj","sectionBuilder","section","index","height","color","fontSize","bodyBuilder","map","contentItem","contentBuilder","onKeyPressText","edit","onKeyPressDateTime","parseDate","shrink","parseFullDateTime","selectedOption","document","body","menuPortal","base","zIndex","onKeyPressInt","inputComponent","onKeyPressFloat","maxWidth","radioGroupItems","groupItem","code","charCode","float","parseFloat","onKeyPressModalCancelInstruction","onKeyPressModalEnterPin","click","getGridFormItems","l","Time","newCur","currencyBeautifier","newInt","intBeautifier","handleCloseSnackBar","getContentType","fetchFrom","fetchTo","Data","newDocList","Object","keys","match","contentType","searchField","toLowerCase","trim","dataField","includeSearch","includes","instrStatus","statusSelected","fieldStatus","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","KeyboardArrowLastClick","getPageAmount","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","pagesFloat","mathRoundOfPages","Math","floor","getBackgroundColor","urgent","checkToShowSection","showSection","checkSectionOnLastChild","lastSection","nextS","getForm","maxHeight","getEnumLabel","property","sortOrder","a","b","dateA","timeInSecA","dateB","timeInSecB","labelA","labelB","sortDataByColumn","calculateColSpan","num","handleContextMenu","preventDefault","currentTarget","handleCloseMenu","createMenuItems","columns","paddingLeft","cursor","handleTableCheckboxChange","handleGridCheckboxChange","downloadExcel","convert","getElementById","button","margin","fontColor","paddingTop","overflow","ev","minWidth","marginBottom","borderColor","error"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/InstructionsRegistrars/InstructionsRegistrars.jsx"],"sourcesContent":["// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport MaterialSelect from '@material-ui/core/Select';\n// import MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// import Input from '@material-ui/core/Input';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@mui/material/Menu';\n// PIN components\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n// Icons\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// Accordion\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Import libraries\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\nimport hotkeys from 'hotkeys-js';\nimport * as rutoken from \"rutoken\";\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\nvar moment = require('moment');\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction FloatFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n}))\nexport default (props) => {\n  // This.state\n  const classes = useStyles()\n  const [userProfile] = useState(props.userProfile)\n  const [process_id] = useState(props.userTask.process_id)\n  const [session_id] = useState(props.userTask.session_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [taskType] = useState(props.userTask.taskType)\n  const [enumData] = useState(props.userTask.enumData)\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [Form] = useState(props.userTask.Form)\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [fieldValue, setFieldValue] = useState({})\n  const [docId] = useState(props.userTask.docId)\n  const [buttons] = useState(props.userTask.buttons)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(false)\n  const [selectedInstructions, setSelectedInstructions] = useState({})\n  const [signedInstructions, setSignedInstructions] = useState({})\n  const [allInstructionsChecked, setAllInstructionsChecked] = useState(false)\n  const [showModalCancelInstr, setShowModalCancelInstr] = useState(false)\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n  const [isSearchForm, setIsSearchForm] = useState(null)\n  const [accordionExpanded, setAccordionExpanded] = useState(false)\n  const [updateState, setUpdateState] = useState(false)\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n  const [modalStyle] = useState(getModalStyle)\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n  const [gridTableId] = useState(getUUID())\n  const [gridFieldValue, setGridFieldValue] = useState({})\n\n  // Initializing\n  useEffect(() => {\n    console.log(\"REG_INST PROPS\", props.userTask)\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null && props.userTask.docList !== undefined) {\n      try {\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        let parsedData = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        let sigInstructions = {}\n        let selInstructions = {}\n        for (let i = 0; i < parsedData.length; i++) {\n          sigInstructions[parsedData[i].id] = parsedData[i].signed\n          selInstructions[parsedData[i].id] = false\n        }\n        setSignedInstructions(sigInstructions)\n        setSelectedInstructions(selInstructions)\n        setFilteredDocList(parsedData)\n        setInitialDocList(parsedData)\n        setIsSearchForm(true)\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"))\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, parsedData, JSON.parse(props.userTask.selectedDoc))\n        }\n        else { fetchBySize(0, s - 1, sortedDocList) }\n        // console.log(\"DOCLIST\", parsedData)\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    else { setIsSearchForm(false) }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      let fields = { \"signed\": false }\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name\n          fields[fieldName] = parsedSelectedDoc[fieldName]\n        }\n      }\n      console.log(\"SDOC\", parsedSelectedDoc)\n      console.log(\"INITIAL FIELDVALUES\", fields)\n      setSelectedDoc(parsedSelectedDoc)\n      setFieldValue(fields)\n    }\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {}\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }]\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            })\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n    }\n    if (gridForm !== null) {\n      let newFields = {}\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show\n        }\n      }\n      setGridFieldValue(newFields)\n    }\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded)\n    }\n  })\n\n  const handleOpenModalCancelInstr = () => {\n    setShowModalCancelInstr(true)\n  }\n  const handleCloseModalCancelInstr = () => {\n    setShowModalCancelInstr(false)\n  }\n  const handleOpenModalEnterPin = () => {\n    setShowModalEnterPin(true)\n  }\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded)\n  }\n\n  // RuToken functions\n  rutoken.ready\n    // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n    .then(function () {\n      if (window.chrome || typeof InstallTrigger !== 'undefined') {\n        return rutoken.isExtensionInstalled()\n      } else {\n        return Promise.resolve(true)\n      }\n    })\n    // Проверка установки Рутокен Плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.isPluginInstalled()\n      } else {\n        // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n      }\n    })\n    // Загрузка плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.loadPlugin()\n      } else {\n        // alert(\"Не удаётся найти Плагин\");\n      }\n    })\n    //Можно начинать работать с плагином\n    .then(function (result) {\n      if (!result) {\n        return  // alert(\"Не удаётся загрузить Плагин\")\n      } else {\n        plugin = result\n        return Promise.resolve()\n      }\n    })\n  // Sign instruction with rutoken\n  function sign(commandJson) {\n    try {\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices()\n          .then(function (devices) {\n            if (devices.length > 0) {\n              return Promise.resolve(devices[0]);\n            } else {\n              alert(\"Рутокен не обнаружен\");\n            }\n          })\n          // Проверка залогиненности\n          .then(function (firstDevice) {\n            rutokenHandle = firstDevice;\n            return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n          })\n          // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n          .then(function (isLoggedIn) {\n            if (isLoggedIn) {\n              return Promise.resolve();\n            } else {\n              return plugin.login(rutokenHandle, rutokenPin); // 240699\n            }\n          })\n          // Перебор пользовательских сертификатов на токене\n          .then(function () {\n            return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n          })\n          .then(function (certs) {\n            if (certs.length > 0) {\n              certHandle = certs[0];\n              return plugin.parseCertificate(rutokenHandle, certs[0]);\n            } else {\n              alert(\"Сертификат на Рутокен не обнаружен\");\n            }\n          })\n          // Подписание данных из текстового поля на первом найденом сертификате\n          .then(function (certs) {\n            certData = certs\n            let tokenRemainingTime = new Date(certData.validNotAfter).getTime() - Date.now()\n            if (tokenRemainingTime > 0) {\n              if (certHandle.length > 0) {\n                var options = {}\n                let inn = \"\"\n                let fullName = \"\"\n                for (let i = 0; i < certData.subject.length; i++) {\n                  if (certData.subject[i].rdn === \"serialNumber\") {\n                    inn = certData.subject[i].value\n                  }\n                  if (certData.subject[i].rdn === \"commonName\") {\n                    fullName = certData.subject[i].value\n                  }\n                }\n                props.setEsInn(inn)\n                props.setEsUserFullName(fullName)\n                props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n                let bodyToSign = {\n                  instructionList: commandJson.documentsToSign,\n                  inn: inn,\n                  signed_user_full_name: fullName\n                }\n                commandJson.variables.bodyToSign.value = JSON.stringify(bodyToSign)\n                console.log(\"SIGN\", commandJson)\n                handleCloseModalEnterPin()\n                props.sendFieldValues(commandJson)\n                props.clearTabData(commandJson.process_id)\n                return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n              }\n              else {\n                alert(\"Сертификат на Рутокен не обнаружен\")\n              }\n            }\n            else {\n              plugin.logout(rutokenHandle)\n              props.callErrorToast(\"Рутокен просрочен\", \"warning\")\n            }\n          })\n          // Закрытие сессии\n          .then(function () {\n            plugin.logout(rutokenHandle)\n          }, handleError)\n      }\n      else { props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\") }\n    }\n    catch (er) {\n      console.log(\"Rutoken ERR\", er)\n    }\n  }\n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  // Input handlers\n  const handleCheckboxChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n    // console.log(\"Check change\", event.target.checked)\n  }\n  const handleSelectInstructionChange = (event) => {\n    // console.log(\"Check INSTR change\", event.target)\n    setSelectedInstructions({ ...selectedInstructions, [event.target.id]: event.target.checked })\n  }\n  const checkAllInstructions = (event) => {\n    setAllInstructionsChecked(event.target.checked)\n    for (let i = 0; i < filteredDocList.length; i++) {\n      if (filteredDocList[i].signed !== true && filteredDocList[i].canceled !== true && filteredDocList[i].executed !== true && filteredDocList[i].filled === true) {\n        selectedInstructions[filteredDocList[i].id] = event.target.checked\n      }\n    }\n    setSelectedInstructions(selectedInstructions)\n    // console.log(\"Check change\", event.target.checked)\n  }\n  // Radio group handler\n  const handleRadioGroupChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  function checkForDisabled(dataItem) {\n    if (dataItem.filled === true & (dataItem.signed === true || dataItem.canceled === true || dataItem.executed === true)) {\n      console.log(\"DIS\", dataItem.id)\n      return true\n    }\n    else return false\n  }\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    // console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin() {\n    setShowPin(!showPin)\n  }\n  // Integer input handler\n  const handleIntChange = (event) => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '')\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int })\n  }\n  // Float input handler\n  const handleFloatChange = (event) => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  // const handleIntChange = (event) => {\n  //   console.log(\"EVENT\", event.target.name, event.target.value)\n  //   let stringNum = event.target.value.toString().replace(/ /g, '')\n  //   let int = parseInt(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: int })\n  //   // setUpdateState(getUUID())\n  // }\n  // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n  function handleDateTimeChange(event) {\n    // // console.log(\"EVENT\", event.target.name, event.target.value)\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    let fullDateTime = moment(event.target.value).format('YYYY-MM-DDTHH:mm:ss')\n    fieldValue[event.target.name] = fullDateTime\n    setFieldValue(fieldValue)\n    // console.log(\"DATE CHANGE\", event.target.value)\n  }\n  // Handler of select copmponet changes\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value\n    console.log(\"OPT\", option.name, option.value)\n    let updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option\n        setSelectedOptions(updateSelectedOptions)\n\n        noSuchOption = false\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    setFieldValue(fieldValue)\n  }\n\n  // Returns random id\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  // Main button click handler\n  function buttonClick(buttonName, dataItem) {\n    // console.log(\"Button\", buttonName)\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true)\n      }\n      else {\n        filterDocList(0, size - 1, initialDocList, fieldValue)\n      }\n    }\n    else if (buttonName === \"signInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        if (props.esInn === null) {\n          handleOpenModalEnterPin()\n        }\n        else {\n          let documentsToSign = []\n          if (taskType === \"showInstructionsRegistrarsSearchForm\") {\n            for (let i = 0; i < docList.length; i++) {\n              if (selectedInstructions[docList[i].id] === true) {\n                documentsToSign.push(docList[i])\n              }\n            }\n          }\n          else if (taskType === \"showInstructionsRegistrarsViewForm\") {\n            documentsToSign.push(selectedDoc)\n          }\n          let bodyToSign = {\n            instructionList: documentsToSign,\n            inn: props.esInn,\n            signed_user_full_name: props.esUserFullName\n          }\n          let commandJson =\n          {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: { value: \"signInstruction\" },\n              userId: { value: userProfile.userId },\n              userRole: { value: userProfile.userRole },\n              bodyToSign: { value: JSON.stringify(bodyToSign) }\n            }\n          }\n          console.log(\"button signInstruction: \", commandJson)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    else if (buttonName === \"SignInstructionSaveButton\") {\n      let documentsToSign = []\n\n      if (taskType === \"showInstructionsRegistrarsSearchForm\") {\n        for (let i = 0; i < docList.length; i++) {\n          if (selectedInstructions[docList[i].id] === true) {\n            documentsToSign.push(docList[i])\n          }\n        }\n      }\n      else if (taskType === \"showInstructionsRegistrarsViewForm\") {\n        documentsToSign.push(selectedDoc)\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        documentsToSign: documentsToSign,\n        variables: {\n          userAction: { value: \"signInstruction\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          bodyToSign: { value: {} }\n        }\n      }\n      console.log(\"button signInstruction: \", commandJson)\n      sign(commandJson)\n    }\n    else if (buttonName === \"CancelInstruction\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        handleOpenModalCancelInstr()\n      }\n    }\n    else if (buttonName === \"CancelInstructionSaveButton\") {\n      handleCloseModalCancelInstr()\n      // const updateDocument = {} // getFieldValuesUpdateInstruction()\n      // updateDocument[\"canceled\"] = true\n      // updateDocument[\"сanceledUser\"] = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n      let documentsToCancel = []\n\n      if (taskType === \"showInstructionsRegistrarsSearchForm\") {\n        for (let i = 0; i < docList.length; i++) {\n          if (selectedInstructions[docList[i].id] === true) {\n            documentsToCancel.push({ id: docList[i].id })\n          }\n        }\n      }\n      else if (taskType === \"showInstructionsRegistrarsViewForm\") {\n        documentsToCancel.push({ id: selectedDoc.id })\n      }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"cancelInstruction\" },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole },\n          documentsToCancel: { value: JSON.stringify(documentsToCancel) },\n          cancelationReason: { value: fieldValue.cancelationReason },\n          // сanceledUser: { value: userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName },\n          status: { value: \"canceled\" }\n        }\n      }\n      console.log(\"button CancelInstructionSaveButton: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"CancelInstructionCancelButton\") {\n      handleCloseModalCancelInstr()\n      fieldValue[\"cancelationReason\"] = null\n      setFieldValue(fieldValue)\n      console.log(\"FIELDS\", fieldValue)\n    }\n    else if (buttonName === \"downloadES\") {\n      swAlert(\"Внимание откройте скачанный файл и следуйте пошаговой иструкции!\", \"success\")\n    }\n    else if (buttonName === \"viewInstruction\") {\n      let signed = \"true\"\n      if (dataItem.signed !== true && dataItem.canceled !== true) {\n        signed = \"false\"\n      }\n      let editFormDefId = null\n      let report = null\n      for (let k = 0; k < enumData.length; k++) {\n        if (enumData[k].name === \"type\") {\n          for (let d = 0; d < enumData[k].data.length; d++) {\n            if (dataItem.type === enumData[k].data[d].id) {\n              editFormDefId = enumData[k].data[d].edit_form\n              report = enumData[k].data[d].reportName\n            }\n          }\n        }\n      }\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"viewInstruction\" },\n          userId: { value: userProfile.userId },\n          docId: { value: dataItem.id },\n          instructionType: { value: dataItem.type },\n          signed: { value: signed },\n          editFormDefId: { value: editFormDefId },\n          reportName: { value: report },\n          securities: { value: dataItem.currency === null ? \"true\" : \"false\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button viewInstruction: \", commandJson, dataItem)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"showInstructionReport\") {\n      let reportName = null\n      for(let k=0; k < enumData.length; k++){\n        if(enumData[k].name === \"type\"){\n          for(let d=0; d<enumData[k].data.length; d++){\n            if(selectedDoc.type === enumData[k].data[d].id){\n              let reportId = enumData[k].data[d].report\n              // for(let e=0; e<enumData.length; e++){\n              //   if(enumData[e].name === \"instructionReports\"){\n              //     for(let t=0; t<enumData[e].data.length; t++){\n              //       if(reportId === enumData[e].data[t].id){\n              //         reportName = enumData[e].data[t].reportName\n              //       }\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n      }\n      let t = selectedDoc.type\n      if (t === 4 || t === 6 || t === 7 || t === 38) {\n        reportName = \"Svodnoe_peredatochnoe_rasporyajenie_na_zachislenie\"\n      }\n      else {\n        reportName = \"Svodnoe_peredatochnoe_rasporyajenie_na_spisanie\"\n      }\n      // let reportExecutions = getFieldValuesReportExecutions(\"html\", reportName)\n      let reportExecutions = {\n        \"reportUnitUri\": \"/reports/interactive/\" + reportName,\n        \"async\": true,\n        \"interactive\": true,\n        \"freshData\": false,\n        \"saveDataSnapshot\": false,\n        \"outputFormat\": \"pdf\", // html xlsx pdf docx\n        \"parameters\": {\n          \"reportParameter\": [{ name: \"id\", value: [selectedDoc.id.toString()] }]\n        }\n      }\n\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"showInstructionReport\" },\n          docId: { value: selectedDoc.id.toString() },\n          reportName: { value: reportName },\n          reportVars: { value: \"?id=\" + selectedDoc.id },\n          reportExecutions: { value: JSON.stringify(reportExecutions) },\n        }\n      }\n      console.log(\"button showInstructionReport: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocList\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocList\" },\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else {\n      console.log(\"button: \", buttonName)\n    }\n  }\n  function getFieldValuesReportExecutions(format, reportName) {\n    let reportParams = []\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        let type = Form.sections[s].contents[c].type\n        if (type === \"DateTime\") {\n          reportParams.push({ name: fieldName, value: [moment(fieldValue[fieldName]).format(\"DD.MM.YYYY\")] })\n        }\n        else if (type === \"FullDateTime\") {\n          reportParams.push({ name: fieldName, value: [moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\")] })\n        }\n        else if (type === \"JasperDate\") {\n          reportParams.push({ name: fieldName, value: [moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\")] })\n        }\n        else {\n          reportParams.push({ name: fieldName, value: [fieldValue[fieldName]] })\n        }\n      }\n    }\n    let obj = {\n      \"reportUnitUri\": \"/reports/interactive/\" + reportName,\n      \"async\": true,\n      \"interactive\": true,\n      \"freshData\": false,\n      \"saveDataSnapshot\": false,\n      \"outputFormat\": format, // html xlsx pdf docx\n      \"parameters\": {\n        \"reportParameter\": reportParams\n      }\n    }\n    // let xml = OBJtoXML(obj)\n    return obj\n  }\n  // // Returns Button component\n  // function createButton(button, index) {\n  //   return (\n  //     <Button variant=\"outlined\"\n  //       // id = {()=> getUUID()}\n  //       name={button.name}\n  //       key={index}\n  //       onClick={() => buttonClick(button.name)}\n  //       style={{\n  //         margin: 3,\n  //         color: button.fontColor,\n  //         backgroundColor: button.backgroundColor,\n  //         height: 32,\n  //         fontSize: 12\n  //       }}\n  //       value={button.name}\n  //     >\n  //       {button.label}\n  //     </Button>\n  //   )\n  // }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section, index) {\n    return (\n      <Table size=\"small\" key={index + \"table\"}>\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              key={index = \"head\"}\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map((contentItem, index) => (\n            contentItem.show === true &&\n            <TableRow key={index} style={{ height: 30 }}>\n              <TableCell\n                key={index + \"cell1\"}\n                align=\"left\"\n                style={{ width: \"40%\" }}>\n                {contentItem.label}\n              </TableCell>\n              <TableCell\n                key={index + \"cell2\"}\n                align=\"left\"\n                style={{ width: \"60%\", height: 30 }}\n              >{contentBuilder(contentItem)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n  // Create component by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur={handleChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressDateTime}\n          type=\"date\"\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\") {\n      return (\n        <TextField\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseFullDateTime(fieldValue[contentItem.name], \"T\") : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Int\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressInt}\n          name={contentItem.name}\n          // onBlur={handleIntChange}\n          // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleIntChange}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: IntegerFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Float\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressFloat}\n          name={contentItem.name}\n          // onBlur={handleFloatChange}\n          // value={fieldValue[contentItem.name]}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleFloatChange}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: FloatFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true) ? true : false}\n        />\n      )\n    }\n    else if (contentItem.type === \"RadioGroup\") {\n      let radioGroupItems = []\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === contentItem.name) {\n          radioGroupItems = enumData[i].data\n        }\n      }\n      return (\n        <RadioGroup\n          name={contentItem.name}\n          value={fieldValue[contentItem.name]}\n          onChange={handleRadioGroupChange}\n        >\n          {radioGroupItems.map(groupItem => {\n            return (\n              <FormControlLabel\n                value={groupItem.id}\n                label={groupItem.label}\n                control={<Radio style={{ height: \"5px\", color: \"green\" }} />}\n                disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n              />\n            )\n          })}\n\n        </RadioGroup>\n      )\n    }\n  }\n  // Key press handlers for some fields\n  function onKeyPressText(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressDateTime(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressInt(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let int = parseInt(stringNum)\n          fieldValue[event.target.name] = int\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressFloat(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let float = parseFloat(stringNum)\n          fieldValue[event.target.name] = float\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressModalCancelInstruction(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"CancelInstructionSaveButton\", null)\n    }\n  }\n  function onKeyPressModalEnterPin(event) {\n    handlePinChange(event)\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"SignInstructionSaveButton\", null)\n    }\n  }\n  // custom allerts\n  function swAlert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n        // dangerMode: true,\n      })\n        .then((click) => {\n          if (click === \"ok\") {\n            console.log(\"CLICK OK\", click)\n          }\n        })\n    )\n  }\n  // Create grid form components\n  function getGridFormItems(value, type, dataItem, name) {\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        // console.log(\"ENUM\", name, value, type)\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\" }}\n          // name = {name}\n          checked={(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"\"\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\"\n        }\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"На исполнении\"\n        }\n        if (dataItem[\"executed\"] === true) {\n          status = \"Исполнено\"\n        }\n        if (dataItem[\"canceled\"] === true) {\n          status = \"Отменено\"\n        }\n        return status\n      }\n      else {\n        if (value === null || value === \"\" || value === undefined) {\n          return \"-\"\n        }\n        else {\n          return (value)\n        }\n      }\n    }\n    else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newCur = props.currencyBeautifier(value)\n        return newCur\n      }\n    }\n    else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newInt = props.intBeautifier(value)\n        return newInt\n      }\n    }\n    else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        return (value)\n      }\n    }\n\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  // filter docList by filled parameters\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = []\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data\n    }\n    else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true\n          }\n          else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key)\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase().trim()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                catch (er) {\n                  console.log(\"ERR\", er)\n                  match = true\n                }\n              }\n              else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else { match = true }\n              }\n              else if (contentType === \"Enum\") {\n\n                if (fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true\n                }\n                else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n              else if (contentType === \"Bool\") {\n                if (key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\") {\n                  let instrStatus = \"\"\n                  let statusSelected = false\n                  let fieldStatus = \"\"\n                  // Check fields\n                  if (fields[\"filled\"] === true) {\n                    fieldStatus = \"filled\"\n                    statusSelected = true\n                  }\n                  if (fields[\"onExecution\"] === true) {\n                    fieldStatus = \"onExecution\"\n                    statusSelected = true\n                  }\n                  if (fields[\"executed\"] === true) {\n                    fieldStatus = \"executed\"\n                    statusSelected = true\n                  }\n                  if (fields[\"canceled\"] === true) {\n                    fieldStatus = \"canceled\"\n                    statusSelected = true\n                  }\n                  if (statusSelected === true) {\n                    // Check Instruction\n                    if (Data[i][\"filled\"] === true) {\n                      instrStatus = \"filled\"\n                    }\n                    if (Data[i][\"onExecution\"] === true) {\n                      instrStatus = \"onExecution\"\n                    }\n                    if (Data[i][\"executed\"] === true) {\n                      instrStatus = \"executed\"\n                    }\n                    if (Data[i][\"canceled\"] === true) {\n                      instrStatus = \"canceled\"\n                    }\n                    // Check whether statuses are equal\n                    if (fieldStatus === instrStatus) {\n                      match = true\n                    }\n                    else {\n                      match = false\n                      break\n                    }\n                  }\n                  else {\n                    match = true\n                  }\n                }\n                else {\n                  if (Data[i][key] === null || fields[key] === Data[i][key]) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n            }\n            else {\n              match = false\n              break\n            }\n          }\n        }\n        if (match === true) {\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered docList by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n    // setUpdateState(getUUID())\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLastClick() {\n    if (page !== getPageAmount()) {\n      setPage(getPageAmount())\n      fetchBySize((getPageAmount() - 1) * size, filteredDocList.length, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на последней странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.floor(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  function getBackgroundColor(dataItem) {\n    let color = \"#FCEAD3\"\n    if (dataItem.urgent === true && dataItem.signed === false && dataItem.executed === false) {\n      color = \"#EFB2B2\"\n    }\n    if(dataItem.filled === false){\n      color = \"#EFEFEF\"\n    }\n    if(dataItem.canceled === true){\n      color = \"#FFDED5\"\n    }\n    if (dataItem.signed === true || dataItem.executed === true) {\n      color = \"#F4FFEE\"\n    }\n    return color\n  }\n  function checkToShowSection(section) {\n    let showSection = false\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true\n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i) {\n    let lastSection = true\n    if (i === gridForm.sections.length - 1) { // The last section\n      return true\n    }\n    else {\n      let nextS = i + 1\n      // console.log(\"IT\", i, gridForm.sections[nextS])\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) { // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n  function getForm() {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n        <Grid item xs={isSearchForm === true ? 12 : 8}>\n          <Paper>\n            {isSearchForm === false &&\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <TableHead>\n                  <TableRow style={{ maxHeight: 25 }}>\n                    <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                  </TableRow>\n                </TableHead>\n              </Grid>\n            }\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              {Form.sections.map((section, index) => {\n                let showSection = checkToShowSection(section)\n                if (showSection === true) {\n                  return sectionBuilder(section, index)\n                }\n              })}\n            </Grid>\n            {/* <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n              {buttons.map((button, index) => {\n                return createButton(button, index)\n              })}\n              <Button\n                component=\"a\"\n                href=\"../Инструкция Рутокен.docx\"\n                download\n                variant=\"outlined\" \n                style={{\n                  margin: 3,\n                  backgroundColor: \"#13611B\",\n                  color: \"white\",\n                  height: 32,\n                  fontSize: 12\n                }}\n                onClick={()=> buttonClick(\"downloadES\")}\n                startIcon={<DescriptionIcon/>}\n              >Инструкция ЭЦП\n              </Button>\n              <Button\n                component=\"a\"\n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                href=\"https://www.rutoken.ru/support/download/rutoken-plugin/\"\n                download\n                variant=\"outlined\" \n                style={{\n                  margin: 3,\n                  backgroundColor: \"#13611B\",\n                  color: \"white\",\n                  height: 32,\n                  fontSize: 12\n                }}\n              >Плагин\n              </Button>\n              <Button\n                component=\"a\"\n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                href=\"https://www.rutoken.ru/support/download/windows/\"\n                download\n                variant=\"outlined\" \n                style={{\n                  margin: 3,\n                  backgroundColor: \"#13611B\",\n                  color: \"white\",\n                  height: 32,\n                  fontSize: 12\n                }}\n              >Драйвер\n              </Button>\n            </Grid>  */}\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1\n    }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA = dateA.getTime() / 1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB = dateB.getTime() / 1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else {\n          if (a[property] === null) {\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * -1 * sortOrder\n      }\n    }\n    else if (type === \"Enum\") {\n      return function (a, b) {\n        let labelA = getEnumLabel(property, a[property])\n        // console.log(\"A\", property, a[property], labelA)\n        let labelB = getEnumLabel(property, b[property])\n        // console.log(\"labelB\", labelB, property, b)\n        var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n  }\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size - 1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function calculateColSpan(contents) {\n    let num = 0\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1\n      }\n    }\n    return num\n  }\n  const handleContextMenu = (event) => {\n    if (userProfile.userRole === \"1\") {\n      event.preventDefault()\n      setAnchorEl(event.currentTarget)\n    }\n  }\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n    // console.log(\"CLOSE\", fieldValue)\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name]\n      }\n    }\n    console.log(\"nForm\", gridForm)\n    setGridForm(gridForm)\n    setUpdateState(getUUID())\n  }\n  function createMenuItems() {\n    let columns = []\n    columns.push(\n      <tr>\n        <td\n          style={{ paddingLeft: 5, cursor: \"pointer\" }}\n          name={\"selectAll\"}\n          onClick={() => handleTableCheckboxChange(\"selectAll\")}\n        >\n          Выбрать все\n        </td>\n        <td>\n          <Checkbox\n            style={{ maxWidth: 20, height: 15, color: \"green\" }}\n            name={\"selectAll\"}\n            onChange={handleGridCheckboxChange}\n            checked={(gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined) ? false : true}\n          />\n        </td>\n      </tr>\n    )\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name\n        columns.push(\n          <tr>\n            <td\n              style={{ paddingLeft: 5, cursor: \"pointer\", background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\" }}\n              name={name}\n              onClick={() => handleTableCheckboxChange(name)}\n            >\n              {gridForm.sections[s].contents[c].label}\n            </td>\n            <td>\n              <Checkbox\n                style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                name={name}\n                onChange={handleGridCheckboxChange}\n                checked={(gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined) ? false : true}\n              />\n            </td>\n          </tr>\n        )\n      }\n    }\n    return columns\n  }\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId))\n  }\n  const handleGridCheckboxChange = (event) => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = { [event.target.name]: event.target.checked }\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name]\n      }\n      // console.log(\"selectAll\", newFields)\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [event.target.name]: event.target.checked })\n    }\n  }\n  const handleTableCheckboxChange = (name) => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue }\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name]\n      }\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [name]: !gridFieldValue[name] })\n    }\n  }\n  try {\n    return (\n      <Grid>\n        {isSearchForm !== null && isSearchForm === true ?\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={9}>\n              <Accordion expanded={accordionExpanded} onChange={() => handleExpandAccordion()}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                >\n                  <Typography>{Form.label}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {getForm()}\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n          </Grid>\n          :\n          getForm()\n        }\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n          {buttons.map((button, index) => (\n            <Button\n              name={button.name}\n              variant=\"outlined\"\n              onClick={() => buttonClick(button.name, null)}\n              style={{\n                margin: 3,\n                color: button.fontColor,\n                backgroundColor: button.backgroundColor,\n                height: 32,\n                fontSize: 12\n              }}\n            >{button.label}\n            </Button>\n          ))}\n          <Button\n            component=\"a\"\n            href=\"../Инструкция Рутокен.docx\"\n            download\n            variant=\"outlined\"\n            style={{\n              margin: 3,\n              backgroundColor: \"#13611B\",\n              color: \"white\",\n              height: 32,\n              fontSize: 12\n            }}\n            onClick={() => buttonClick(\"downloadES\")}\n            startIcon={<DescriptionIcon />}\n          >Инструкция ЭЦП\n          </Button>\n          <Button\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.rutoken.ru/support/download/rutoken-plugin/\"\n            download\n            variant=\"outlined\"\n            style={{\n              margin: 3,\n              backgroundColor: \"#13611B\",\n              color: \"white\",\n              height: 32,\n              fontSize: 12\n            }}\n          >Плагин\n          </Button>\n          <Button\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.rutoken.ru/support/download/windows/\"\n            download\n            variant=\"outlined\"\n            style={{\n              margin: 3,\n              backgroundColor: \"#13611B\",\n              color: \"white\",\n              height: 32,\n              fontSize: 12\n            }}\n          >Драйвер\n          </Button>\n        </Grid>\n        {isSearchForm === true &&\n          <ReplayIcon style={{ paddingTop: 3, cursor: \"pointer\" }} onClick={() => buttonClick(\"updateDocList\")} />\n        }\n        {docList !== null &&\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <div style={{ height: \"500px\", overflow: \"auto\" }}>\n                  <table\n                    size=\"small\"\n                    class=\"main-table-style\"\n                    id={gridTableId}\n                  >\n                    <thead class=\"thead-style\" style={{ position: \"sticky\", top: 0 }}>\n                      {/* 1st Row Sections Labels */}\n                      <tr>\n                        <td class=\"td-head-first-child\" onContextMenu={(ev) => handleContextMenu(ev)}>Выбрать</td>\n                        {gridForm.sections.map((section, index) => {\n                          let showSection = checkToShowSection(section)\n                          if (showSection === true) {\n                            let lastSection = checkSectionOnLastChild(index)\n                            return (\n                              <td\n                                colSpan={calculateColSpan(section.contents)}\n                                class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                onContextMenu={(ev) => handleContextMenu(ev)}\n                              >\n                                {section.label}\n                              </td>\n                            )\n                          }\n                        })}\n                      </tr>\n                      {/* 2nd Row Sections Contents labels */}\n                      <tr>\n                        <td\n                          class=\"td-head-style-2row\"\n                          rowSpan=\"2\"\n                          style={{ minWidth: 90 }}\n                          onContextMenu={(ev) => handleContextMenu(ev)}\n                        >\n                          <Checkbox\n                            style={{ maxWidth: 20, height: 15, color: \"white\" }}\n                            onChange={checkAllInstructions}\n                            checked={allInstructionsChecked === true ? true : false}\n                          />\n                        </td>\n                        {gridForm.sections.map(section =>\n                          section.contents.map(contentItem => {\n                            if (contentItem.show === true) {\n                              return (\n                                <td\n                                  class=\"td-head-style-2row\"\n                                  rowSpan=\"2\"\n                                  onClick={() => sortDataByColumn(contentItem.name, contentItem.type)}\n                                  onContextMenu={(ev) => handleContextMenu(ev)}\n                                >\n                                  {contentItem.label}{sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{ marginBottom: -8 }} /> : <ArrowDropUpIcon style={{ marginBottom: -8 }} /> : \"\"}\n                                </td>\n                              )\n                            }\n                          })\n                        )}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {docList !== null &&\n                        docList.map(dataItem => (\n                          <tr style={{ height: 30, backgroundColor: getBackgroundColor(dataItem) }}>\n                            <td style={{ \"text-align\": \"center\", \"border-bottom\": \"1px solid grey\" }}>\n                              <Button\n                                variant=\"outlined\"\n                                onClick={() => buttonClick(\"viewInstruction\", dataItem)}\n                                style={{\n                                  margin: 1,\n                                  height: 24,\n                                  fontSize: 10,\n                                  maxWidth: 32,\n                                  backgroundColor: \"#E8FEE6\",\n                                  borderColor: \"darkgreen\",\n                                  color: \"darkgreen\"\n                                }}\n                              >\n                                Открыть\n                              </Button>\n                              <Checkbox\n                                style={{ maxWidth: 20, height: 15, color: checkForDisabled(dataItem) === true ? \"grey\" : \"green\" }}\n                                id={dataItem.id}\n                                onChange={handleSelectInstructionChange}\n                                disabled={checkForDisabled(dataItem)}\n                                checked={selectedInstructions[dataItem.id] === true ? true : false}\n                              />\n                            </td>\n                            {gridForm.sections.map(section => (\n                              section.contents.map(contentItem => {\n                                if (contentItem.show === true) {\n                                  return (\n                                    <td style={{ color: \"black\", fontSize: 12, \"text-align\": \"center\", \"border-bottom\": \"1px solid grey\" }}>\n                                      {getGridFormItems(dataItem[contentItem.name], contentItem.type, dataItem, contentItem.name)}\n                                    </td>\n                                  )\n                                }\n                              })\n                            ))}\n                          </tr>\n                        ))}\n                    </tbody>\n                  </table>\n                </div>\n              </Paper>\n              {/*Pagination*/}\n              <Grid container direction=\"row\" justify=\"flex-start\">\n                <Grid item sm={12}>\n                  <Paper>\n                    <table>\n                      <tfoot>\n                        <tr>\n                          <td style={{ paddingLeft: \"3px\" }}>\n                            <Button\n                              variant=\"outlined\"\n                              style={{ background: \"#047535\", color: \"white\", height: 28 }}\n                              onClick={() => downloadExcel()}\n                            >В EXCEL\n                            </Button>\n                          </td>\n                          <td>\n                            <Button\n                              variant=\"contained\"\n                              onClick={() => buttonClick(\"signInstruction\", null)}\n                              style={{\n                                margin: 3,\n                                backgroundColor: \"#13611B\",\n                                color: \"white\",\n                                height: 32,\n                                fontSize: 12\n                              }}\n                            >\n                              Подписать\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              onClick={() => buttonClick(\"CancelInstruction\", null)}\n                              style={{\n                                margin: 3,\n                                backgroundColor: \"#B41111\",\n                                color: \"white\",\n                                height: 32,\n                                fontSize: 12\n                              }}\n                            >\n                              Отклонить\n                            </Button>\n                          </td>\n                          <td style={{ paddingLeft: \"20px\" }}>\n                            <div style={{ minWidth: 90, color: \"black\" }}>Кол-во записей</div>\n                          </td>\n                          <td>\n                            <FormControl\n                              variant=\"outlined\"\n                              style={{ minWidth: 30 }}\n                            >\n                              <MaterialSelect\n                                onChange={handleChangeRowsPerPage}\n                                style={{ height: 25, color: \"black\" }}\n                                value={size}\n                              >\n                                <MenuItem value={10}>10</MenuItem>\n                                <MenuItem value={20}>20</MenuItem>\n                                <MenuItem value={50}>50</MenuItem>\n                                <MenuItem value={100}>100</MenuItem>\n                                <MenuItem value={200}>200</MenuItem>\n                                <MenuItem value={500}>500</MenuItem>\n                                <MenuItem value={1000}>1000</MenuItem>\n                              </MaterialSelect>\n                            </FormControl>\n                          </td>\n\n                          <td>\n                            <Tooltip title=\"На первую страницу\">\n                              <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                                <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                              </IconButton>\n                            </Tooltip>\n                          </td>\n                          <td>\n                            <Tooltip title=\"На предыдущюю страницу\">\n                              <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                                <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                              </IconButton>\n                            </Tooltip>\n                          </td>\n                          <td style={{ color: \"black\", fontSize: 16 }}>\n                            <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                          </td>\n                          <td style={{ paddingLeft: \"3px\" }}>\n                            <Tooltip title=\"Перейти на указанную страницу\">\n                              <Button\n                                onClick={() => GoToPage()}\n                                variant=\"outlined\"\n                                style={{\n                                  height: 22,\n                                  backgroundColor: \"#D1D6D6\",\n                                  fontSize: 12\n                                }}\n                              >перейти\n                              </Button>\n                            </Tooltip>\n                          </td>\n                          <td>\n                            <Tooltip title=\"На следующюю страницу\">\n                              <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                                <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                              </IconButton>\n                            </Tooltip>\n                          </td>\n                          <td>\n                            <Tooltip title=\"На последнюю страницу\">\n                              <IconButton onClick={() => KeyboardArrowLastClick()}>\n                                <LastPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                              </IconButton>\n                            </Tooltip>\n                          </td>\n                          <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()}</td>\n                        </tr>\n                      </tfoot>\n                    </table>\n                    <Menu\n                      anchorEl={anchorEl}\n                      open={openMenu}\n                      onClose={handleCloseMenu}\n                      MenuListProps={{\n                        'aria-labelledby': 'basic-button',\n                      }}\n                      style={{ paddingLeft: \"100px\" }}\n                    >\n                      <table>\n                        {createMenuItems()}\n                      </table>\n                    </Menu>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        }\n        <Snackbar\n          open={showSnackBar}\n          onClose={() => handleCloseSnackBar()}\n          autoHideDuration={1200}\n          message={snackBarMessage}\n        />\n        <Modal\n          open={showModalCancelInstr}\n          onClose={handleCloseModalCancelInstr}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Введите причину отмены</h3>\n            <TextField\n              variant=\"outlined\"\n              multiline\n              autoFocus\n              name=\"cancelationReason\"\n              defaultValue={(fieldValue[\"cancelationReason\"] >= 0) ? fieldValue[\"cancelationReason\"] : \"\"}\n              onChange={handleChange}\n              onKeyPress={onKeyPressModalCancelInstruction}\n              style={{ width: \"100%\" }}\n            />\n            {props.esInn === null &&\n              <div>\n                <h3 id=\"simple-modal-title\">Введите ПИН код Рутокена</h3>\n                <FormControl variant=\"outlined\" style={{ width: \"100%\" }} error={wrongPin}>\n                  <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n                  <OutlinedInput\n                    type={showPin ? 'text' : 'password'}\n                    defaultValue={rutokenPin}\n                    onChange={handlePinChange}\n                    onKeyPress={onKeyPressModalEnterPin}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowPin}\n                          edge=\"end\"\n                        >\n                          {showPin ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                    labelWidth={25}\n                  />\n                </FormControl>\n                {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n              </div>\n            }\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"CancelInstructionSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"CancelInstructionCancelButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#E73639\"\n              }}\n            >Отмена\n            </Button>\n          </div>\n        </Modal>\n        <Modal\n          open={showModalEnterPin}\n          onClose={handleCloseModalEnterPin}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Введите ПИН код Рутокена</h3>\n            <FormControl variant=\"outlined\" style={{ width: \"100%\" }} error={wrongPin}>\n              <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n              <OutlinedInput\n                type={showPin ? 'text' : 'password'}\n                defaultValue={rutokenPin}\n                onChange={handlePinChange}\n                onKeyPress={onKeyPressModalEnterPin}\n                autoFocus\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPin}\n                      edge=\"end\"\n                    >\n                      {showPin ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={25}\n              />\n            </FormControl>\n            {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"SignInstructionSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={handleCloseModalEnterPin}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#E73639\"\n              }}\n            >Отмена\n            </Button>\n          </div>\n        </Modal>\n      </Grid>\n    )\n  }\n  catch (error) {\n    console.log(\"ERROR\", error)\n    return (\n      <Grid container direction=\"row\" justify=\"center\" spacing={0}>\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      </Grid>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}