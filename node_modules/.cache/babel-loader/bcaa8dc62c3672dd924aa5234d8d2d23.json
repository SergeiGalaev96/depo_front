{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\TradingSystems\\\\TradingSystems.jsx\";\n// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper'; // Table\n\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from '@material-ui/core/TextField'; // Import libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n// var convert = require('xml-js');\n\nconst useStyles = makeStyles(theme => ({\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  }\n}));\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [process_id] = useState(props.userTask.process_id);\n  const [session_id] = useState(props.userTask.session_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [enumData] = useState(props.userTask.enumData);\n  const [taskType] = useState(props.userTask.taskType);\n  const [gridForm] = useState(props.userTask.gridForm);\n  const [buttons] = useState(props.userTask.buttons);\n  const [docList, setDocList] = useState([]);\n  const [docListTrades, setDocListTrades] = useState([]);\n  const [docListOrders, setDocListOrders] = useState([]);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [stocks, setStocks] = useState(null);\n  const [file, setFile] = useState([]);\n  const [fieldValue, setFieldValue] = useState({});\n  const [UploadDataToTSSecuritiesId, setUploadDataToTSSecuritiesId] = useState(null);\n  const [UploadDataToTSCurrenciesId, setUploadDataToTSCurrenciesId] = useState(null);\n  const [LoadDataFromTSSecuritiesOrdersId, setLoadDataFromTSSecuritiesOrdersId] = useState(null);\n  const [LoadDataFromTSSecuritiesTradesId, setLoadDataFromTSSecuritiesTradesId] = useState(null);\n  const [LoadDataFromTSCurrenciesId, setLoadDataFromTSCurrenciesId] = useState(null);\n  const [updateState, setUpdateState] = useState(false);\n  useEffect(() => {\n    console.log(\"TS PROPS\", props.userTask);\n    setUploadDataToTSSecuritiesId(getUUID());\n    setUploadDataToTSCurrenciesId(getUUID());\n    setLoadDataFromTSSecuritiesOrdersId(getUUID());\n    setLoadDataFromTSSecuritiesTradesId(getUUID());\n    setLoadDataFromTSCurrenciesId(getUUID());\n\n    if (taskType === \"showUploadDataToTSSecuritiesForm\") {\n      setDocList(JSON.parse(props.userTask.docList));\n    } else if (taskType === \"showUploadDataToTSCurrenciesForm\") {\n      setDocList(JSON.parse(props.userTask.docList));\n    } // setStocks(JSON.parse(props.userTask.docList))\n\n  }, []);\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Main button click handler\n\n\n  function buttonClick(buttonName) {\n    console.log(\"Button\", buttonName);\n\n    if (buttonName === \"exportDataInTS\") {\n      if (docList !== null) {\n        if (docList.length > 0) {\n          let newFiles = [{\n            name: (taskType === \"showUploadDataToTSSecuritiesForm\" ? \"Pos\" : \"Ds_Pos\") + getCurDate(new Date()) + \".txt\",\n            blob: Buffer.from(getPosTxt()).toString('base64')\n          }];\n          const commandJson = {\n            commandType: \"saveTSFiles\",\n            session_id: session_id,\n            userId: userProfile.userId,\n            process_id: process_id,\n            taskID: taskID,\n            newFiles: newFiles,\n            directory: getCurDate(new Date()),\n            variables: {\n              userAction: {\n                value: \"exportDataInTS\"\n              }\n            }\n          };\n          console.log(\"button exportDataInTS: \", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        } else {\n          swAlert(\"Данные для выгрузки не обнаружены!\", \"warning\");\n        }\n      } else {\n        swAlert(\"Данные для выгрузки не обнаружены!\", \"warning\");\n      }\n    } else if (buttonName === \"uploadToTXT\") {\n      let txt = getPosTxt();\n      let posBlob = new Blob([txt], {\n        type: 'text/plain',\n        endings: \"native\"\n      }); // Download txt\n\n      let pom = document.createElement('a');\n      let filename = (taskType === \"showUploadDataToTSSecuritiesForm\" ? \"Pos\" : \"Ds_Pos\") + getCurDate(new Date()) + \".txt\";\n      pom.setAttribute('href', window.URL.createObjectURL(posBlob));\n      pom.setAttribute('download', filename);\n      pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');\n      pom.draggable = true;\n      pom.classList.add('dragout');\n      pom.click();\n    } else if (buttonName === \"uploadOrdTrdToTXT\") {\n      let ord = getOrdTxt(); // Download ord\n\n      let pomOrd = document.createElement('a');\n      let filenameOrd = \"Ord\" + getCurDate(new Date()) + \".txt\";\n      let bbOrd = new Blob([ord], {\n        type: 'text/plain'\n      });\n      pomOrd.setAttribute('href', window.URL.createObjectURL(bbOrd));\n      pomOrd.setAttribute('download', filenameOrd);\n      pomOrd.dataset.downloadurl = ['text/plain', pomOrd.download, pomOrd.href].join(':');\n      pomOrd.draggable = true;\n      pomOrd.classList.add('dragout');\n      pomOrd.click();\n      let trd = getTrdTxt(); // Download trd\n\n      let pomTrd = document.createElement('a');\n      let filenameTrd = \"Trd\" + getCurDate(new Date()) + \".txt\";\n      let bbTrd = new Blob([trd], {\n        type: 'text/plain'\n      });\n      pomTrd.setAttribute('href', window.URL.createObjectURL(bbTrd));\n      pomTrd.setAttribute('download', filenameTrd);\n      pomTrd.dataset.downloadurl = ['text/plain', pomTrd.download, pomTrd.href].join(':');\n      pomTrd.draggable = true;\n      pomTrd.classList.add('dragout');\n      pomTrd.click();\n    } else if (buttonName === \"processDataFromTSSecurities\") {\n      if (docListTrades !== null && docListOrders !== null) {\n        if (fieldValue[\"date\"] !== undefined && fieldValue[\"date\"] !== \"NaN.NaN.NaN\") {\n          var newDate = new Date(fieldValue[\"date\"]); // \"01.31.2021\"\n\n          console.log(\"ND\", newDate);\n          var dd = String(newDate.getDate()).padStart(2, '0');\n          var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n          var yyyy = newDate.getFullYear();\n          var convertedDate = mm + '.' + dd + '.' + yyyy; // let newFiles = [\n          //   {\n          //     name: \"Ord\" + getCurDate(fieldValue[\"date\"]) + \".txt\",\n          //     buf: Buffer.from(getOrdTxt()).toString('base64')\n          //   },\n          //   {\n          //     name: \"Trd\" + getCurDate(fieldValue[\"date\"]) + \".txt\",\n          //     buf: Buffer.from(getTrdTxt()).toString('base64')\n          //   }            \n          // ]\n\n          const commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            userId: userProfile.userId,\n            process_id: process_id,\n            taskID: taskID,\n            // directory: getCurDate(fieldValue[\"date\"]),\n            // newFiles: newFiles,\n            variables: {\n              userAction: {\n                value: \"processDataFromTS\"\n              },\n              orders: {\n                value: JSON.stringify(docListOrders)\n              },\n              trades: {\n                value: JSON.stringify(docListTrades)\n              },\n              date: {\n                value: convertedDate\n              },\n              date2: {\n                value: \"\\'\" + convertedDate + \"\\'\"\n              }\n            }\n          };\n          console.log(\"processDataFromTS\", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        } else {\n          swAlert(\"Укажите дату!\", \"warning\");\n        }\n      } else {\n        swAlert(\"Для импорта данных нужны 2 файла!\", \"warning\");\n      }\n    } else if (buttonName === \"processDataFromTSCurrencies\") {\n      if (docListOrders !== null) {\n        if (fieldValue[\"date\"] !== undefined && fieldValue[\"date\"] !== \"NaN.NaN.NaN\") {\n          var newDate = new Date(fieldValue[\"date\"]); // \"2020-01-26\"\n\n          var dd = String(newDate.getDate()).padStart(2, '0');\n          var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n          var yyyy = newDate.getFullYear();\n          var convertedDate = mm + '.' + dd + '.' + yyyy;\n          const commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"processDataFromTS\"\n              },\n              orders: {\n                value: JSON.stringify(docListOrders)\n              },\n              date: {\n                value: convertedDate\n              },\n              date2: {\n                value: \"\\'\" + convertedDate + \"\\'\"\n              } // document: {value: userProfile.userId}\n\n            }\n          };\n          console.log(\"processDataFromTSCurrencies\", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        } else {\n          swAlert(\"Укажите дату!\", \"warning\");\n        }\n      } else {\n        swAlert(\"Данные для импорта не обнаружены!\", \"warning\");\n      }\n    } else if (buttonName === \"loadDataFromTS\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"loadDataFromTS\"\n          }\n        }\n      };\n      console.log(\"loadDataFromTS\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"button: \", buttonName);\n    }\n  }\n\n  function getCurDate(date) {\n    var newDate = new Date(date);\n    var dd = String(newDate.getDate()).padStart(2, '0');\n    var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = newDate.getFullYear();\n    var today = dd + mm + yyyy;\n    return today;\n  }\n\n  function getPosTxt() {\n    let txt = \"\";\n\n    if (taskType === \"showUploadDataToTSSecuritiesForm\") {\n      for (let i = 0; i < docList.length; i++) {\n        txt += docList[i][\"depositor_id_from_trades\"] + \"\\t\";\n        txt += docList[i][\"security_code\"] + \"\\t\";\n        txt += docList[i][\"quantity\"] + \"\\t\";\n        txt += docList[i][\"account_number\"];\n\n        if (i < docList.length - 1) {\n          txt += \"\\n\";\n        }\n      }\n    } else if (taskType === \"showUploadDataToTSCurrenciesForm\") {\n      for (let i = 0; i < docList.length; i++) {\n        txt += docList[i][\"depositor_id_from_trades\"] + \"\\t\";\n        txt += docList[i][\"quantity\"] + \"\\t\";\n        txt += docList[i][\"currency_code\"] + \"\\t\";\n        txt += docList[i][\"account_number\"];\n\n        if (i < docList.length - 1) {\n          txt += \"\\n\";\n        }\n      }\n    }\n\n    return txt;\n  }\n\n  function getOrdTxt() {\n    let ord = \"\";\n\n    for (let i = 0; i < docListOrders.length; i++) {\n      ord += docListOrders[i][\"depositor_id_from_trades\"] + \"\\t\";\n      ord += docListOrders[i][\"security_code\"] + \"\\t\";\n      ord += docListOrders[i][\"quantity\"] + \"\\t\";\n      ord += docListOrders[i][\"account_number\"];\n\n      if (i < docListOrders.length - 1) {\n        ord += \"\\n\";\n      }\n    }\n\n    return ord;\n  }\n\n  function getTrdTxt() {\n    let trd = \"\";\n\n    for (let i = 0; i < docListTrades.length; i++) {\n      trd += docListTrades[i][\"trade_id\"] + \"\\t\";\n      trd += docListTrades[i][\"security_code\"] + \"\\t\";\n      trd += docListTrades[i][\"seller_id\"] + \"\\t\";\n      trd += docListTrades[i][\"seller_account\"] + \"\\t\";\n      trd += docListTrades[i][\"buyer_id\"] + \"\\t\";\n      trd += docListTrades[i][\"buyer_account\"] + \"\\t\";\n      trd += docListTrades[i][\"quantity\"] + \"\\t\";\n      trd += docListTrades[i][\"amount\"] + \"\\t\";\n      trd += docListTrades[i][\"cliring\"];\n\n      if (i < docListTrades.length - 1) {\n        trd += \"\\n\";\n      }\n    }\n\n    return trd;\n  } // Returns Button component\n\n\n  function createButton(button, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      onClick: () => buttonClick(button.name),\n      style: {\n        margin: 3,\n        color: button.fontColor,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      value: button.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 7\n      }\n    }, button.label);\n  } // custom allerts\n\n\n  function swAlert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  }\n\n  function getGridFormItems(value, type) {\n    if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newCur = props.currencyBeautifier(value);\n        return newCur;\n      }\n    } else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newInt = props.intBeautifier(value);\n        return newInt;\n      }\n    } else {\n      return value;\n    }\n  }\n\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files;\n\n    if (selectedFiles && selectedFiles[0]) {\n      setFile(selectedFiles[0]);\n      let reader = new FileReader();\n\n      reader.onload = async function (e) {\n        const file = e.target.result;\n        const rows = file.split(/\\r\\n|\\n/);\n        console.log(\"rows\", rows);\n        let arr = [];\n\n        for (let i = 0; i < rows.length; i++) {\n          if (rows[i] !== \"\") {\n            let items = rows[i].split('\\t');\n\n            if (taskType === \"showUploadDataToTSSecuritiesForm\") {\n              let newItem = {\n                depositor_id_from_trades: items[0],\n                security_code: items[1],\n                quantity: items[2],\n                account_number: items[3]\n              };\n              arr.push(newItem);\n            } else if (taskType === \"showUploadDataToTSCurrenciesForm\") {\n              let newItem = {\n                depositor_id_from_trades: items[0],\n                quantity: items[1],\n                currency_code: items[2],\n                account_number: items[3]\n              };\n              arr.push(newItem);\n            } // console.log(\"ITMS\", items)\n\n          }\n        }\n\n        setDocList(arr);\n      };\n\n      reader.readAsText(selectedFiles[0]);\n    }\n  }\n\n  function handleAttachFileTrades(e) {\n    // TRADES\n    console.log(\"TRD FILE\", e.target.files);\n    let selectedFiles = e.target.files;\n\n    if (selectedFiles && selectedFiles[0]) {\n      let reader = new FileReader();\n\n      reader.onload = async function (e) {\n        const file = e.target.result;\n        const rows = file.split(/\\r\\n|\\n/); // console.log(\"rows\", rows)\n\n        let arr = [];\n\n        for (let i = 0; i < rows.length; i++) {\n          if (rows[i] !== \"\") {\n            let items = rows[i].split('\\t');\n            let newItem = {\n              trade_id: items[0],\n              security_code: items[1],\n              seller_id: items[2],\n              seller_account: items[3],\n              buyer_id: items[4],\n              buyer_account: items[5],\n              quantity: items[6],\n              amount: items[7],\n              cliring: items[8]\n            };\n            arr.push(newItem); // console.log(\"ITMS\", items)\n          }\n        }\n\n        setDocListTrades(arr);\n      };\n\n      reader.readAsText(selectedFiles[0]);\n    }\n\n    setUpdateState(getUUID());\n  }\n\n  function handleAttachFileOrders(e) {\n    // ORDERS\n    console.log(\"ORD FILE\", e.target.files);\n    let selectedFiles = e.target.files;\n\n    if (selectedFiles && selectedFiles[0]) {\n      let reader = new FileReader();\n\n      reader.onload = async function (e) {\n        const file = e.target.result;\n        const rows = file.split(/\\r\\n|\\n/); // console.log(\"rows\", rows)\n\n        let arr = [];\n\n        for (let i = 0; i < rows.length; i++) {\n          if (rows[i] !== \"\") {\n            let items = rows[i].split('\\t');\n\n            if (taskType === \"showLoadDataFromTSSecuritiesForm\") {\n              let newItem = {\n                depositor_id_from_trades: items[0],\n                security_code: items[1],\n                quantity: items[2],\n                account_number: items[3]\n              };\n              arr.push(newItem);\n            } else if (taskType === \"showLoadDataFromTSCurrenciesForm\") {\n              let newItem = {\n                depositor_id_from_trades: items[0],\n                quantity: items[1],\n                currency_code: items[2],\n                account_number: items[3]\n              };\n              arr.push(newItem);\n            } // console.log(\"ITMS\", items)\n\n          }\n        }\n\n        setDocListOrders(arr);\n      };\n\n      reader.readAsText(selectedFiles[0]);\n    }\n\n    setUpdateState(getUUID());\n  }\n\n  function handleDateTimeChange(event) {\n    // // console.log(\"EVENT\", event.target.name, event.target.value)\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    let fullDateTime = moment(event.target.value).format('YYYY-MM-DDTHH:MM:SS');\n    fieldValue[event.target.name] = fullDateTime;\n    setFieldValue(fieldValue);\n    console.log(\"DATE CHANGE\", fieldValue);\n  }\n\n  try {\n    if (buttons === undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 38\n        }\n      }, \"No Buttons\");\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: updateState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 7\n      }\n    }, taskType === \"showUploadDataToTSSecuritiesForm\" && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 25\n      }\n    }, \"\\u0424\\u043E\\u0440\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u041A\\u0424\\u0411\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 17\n      }\n    }, buttons.map((button, index) => {\n      return createButton(button, index);\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.importFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"text/plain\",\n      className: classes.inputFile,\n      id: UploadDataToTSSecuritiesId,\n      multiple: true,\n      type: \"file\",\n      onChange: handleAttachFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: UploadDataToTSSecuritiesId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      component: \"span\",\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        color: \"white\",\n        backgroundColor: \"#BB7100\",\n        borderColor: \"#161C87\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 23\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\")))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\" // style={{width:\"100%\", \"border-collapse\": \"collapse\"}}\n      ,\n      class: \"main-table-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 21\n      }\n    }, gridForm.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: section.contents.length,\n        class: \"td-head-style\" // style={{\"color\": \"black\", \"fontSize\": 13, \"border\": \"1px solid grey\", \"text-align\": \"center\", \"font-weight\":\"bold\"}}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 27\n        }\n      }, section.label);\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 21\n      }\n    }, gridForm.sections.map(section => section.contents.map(contentItem => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        rowSpan: \"2\",\n        class: \"td-head-style-2row\" // style={{\"color\": \"black\", \"fontSize\": 12, \"border\": \"1px solid grey\", \"text-align\": \"center\", \"font-weight\":\"bold\"}}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 29\n        }\n      }, contentItem.label);\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 19\n      }\n    }, docList !== null && docList.map(dataItem => gridForm.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          height: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 29\n        }\n      }, section.contents.map(contentItem => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            \"fontSize\": 12,\n            \"border\": \"1px solid grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 40\n          }\n        }, getGridFormItems(dataItem[contentItem.name], contentItem.type));\n      }));\n    }))))))), taskType === \"showUploadDataToTSCurrenciesForm\" && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 25\n      }\n    }, \"\\u0424\\u043E\\u0440\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u041A\\u0424\\u0411\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 17\n      }\n    }, buttons.map((button, index) => {\n      return createButton(button, index);\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.importFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"text/plain\",\n      className: classes.inputFile,\n      id: UploadDataToTSCurrenciesId,\n      multiple: true,\n      type: \"file\",\n      onChange: handleAttachFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: UploadDataToTSCurrenciesId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      component: \"span\",\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        color: \"white\",\n        backgroundColor: \"#BB7100\",\n        borderColor: \"#161C87\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 23\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\")))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\" // style={{width:\"100%\", \"border-collapse\": \"collapse\"}}\n      ,\n      class: \"main-table-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 21\n      }\n    }, gridForm.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: section.contents.length,\n        class: \"td-head-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 27\n        }\n      }, section.label);\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 21\n      }\n    }, gridForm.sections.map(section => section.contents.map(contentItem => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        rowSpan: \"2\",\n        class: \"td-head-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 29\n        }\n      }, contentItem.label);\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 19\n      }\n    }, docList !== null && docList.map(dataItem => gridForm.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          height: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 29\n        }\n      }, section.contents.map(contentItem => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            \"fontSize\": 12,\n            \"border\": \"1px solid grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 40\n          }\n        }, getGridFormItems(dataItem[contentItem.name], contentItem.type));\n      }));\n    }))))))), taskType === \"showLoadDataFromTSSecuritiesForm\" && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 25\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438\\u0437 \\u041A\\u0424\\u0411\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 25\n      }\n    }, \"\\u0414\\u0430\\u0442\\u0430\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"date\",\n      name: \"date\",\n      onBlur: handleDateTimeChange,\n      style: {\n        width: \"100%\"\n      },\n      defaultValue: fieldValue[\"date\"] !== undefined ? props.parseDate(fieldValue[\"date\"]) : \"\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 28\n      }\n    }))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 17\n      }\n    }, buttons.map((button, index) => {\n      return createButton(button, index);\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.importFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"text/plain\",\n      className: classes.inputFile,\n      id: LoadDataFromTSSecuritiesOrdersId,\n      type: \"file\",\n      onChange: handleAttachFileOrders,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: LoadDataFromTSSecuritiesOrdersId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      component: \"span\",\n      variant: \"outlined\",\n      onClick: () => setDocListOrders(null),\n      style: {\n        margin: 3,\n        color: \"white\",\n        backgroundColor: \"#BB7100\",\n        borderColor: \"#161C87\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 23\n      }\n    }, \"\\u0424\\u0430\\u0439\\u043B \\u043E\\u0441\\u0442\\u0430\\u0442\\u043A\\u043E\\u0432\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.importFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"text/plain\",\n      className: classes.inputFile,\n      id: LoadDataFromTSSecuritiesTradesId,\n      multiple: true,\n      type: \"file\",\n      onChange: handleAttachFileTrades,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: LoadDataFromTSSecuritiesTradesId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      component: \"span\",\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        color: \"white\",\n        backgroundColor: \"#BB7100\",\n        borderColor: \"#161C87\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 23\n      }\n    }, \"\\u0424\\u0430\\u0439\\u043B \\u0441\\u0434\\u0435\\u043B\\u043E\\u043A\")))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      class: \"main-table-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 21\n      }\n    }, gridForm.gridFormOrd.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: section.contents.length,\n        class: \"td-head-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 27\n        }\n      }, section.label);\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 21\n      }\n    }, gridForm.gridFormOrd.sections.map(section => section.contents.map(contentItem => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        rowSpan: \"2\",\n        class: \"td-head-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 29\n        }\n      }, contentItem.label);\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 19\n      }\n    }, docListOrders !== null && docListOrders.map((dataItem, index) => gridForm.gridFormOrd.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          height: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 29\n        }\n      }, section.contents.map(contentItem => /*#__PURE__*/React.createElement(\"td\", {\n        align: \"left\",\n        style: {\n          \"color\": \"black\",\n          \"fontSize\": 12,\n          \"border\": \"1px solid grey\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 32\n        }\n      }, dataItem[contentItem.name])));\n    })))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      class: \"main-table-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 21\n      }\n    }, gridForm.gridFormTrd.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: section.contents.length,\n        class: \"td-head-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 27\n        }\n      }, section.label);\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 21\n      }\n    }, gridForm.gridFormTrd.sections.map(section => section.contents.map(contentItem => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        rowSpan: \"2\",\n        class: \"td-head-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 29\n        }\n      }, contentItem.label);\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 19\n      }\n    }, docListTrades !== null && docListTrades.map((dataItem, index) => gridForm.gridFormTrd.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          height: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 29\n        }\n      }, section.contents.map(contentItem => /*#__PURE__*/React.createElement(\"td\", {\n        align: \"left\",\n        style: {\n          \"color\": \"black\",\n          \"fontSize\": 12,\n          \"border\": \"1px solid grey\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 33\n        }\n      }, dataItem[contentItem.name])));\n    }))))))), taskType === \"showLoadDataFromTSCurrenciesForm\" && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 25\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438\\u0437 \\u041A\\u0424\\u0411\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 25\n      }\n    }, \"\\u0414\\u0430\\u0442\\u0430\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"date\",\n      name: \"date\",\n      onBlur: handleDateTimeChange,\n      style: {\n        width: \"100%\"\n      },\n      defaultValue: fieldValue[\"date\"] !== undefined ? props.parseDate(fieldValue[\"date\"]) : \"\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 28\n      }\n    }))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 17\n      }\n    }, buttons.map((button, index) => {\n      return createButton(button, index);\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.importFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"text/plain\",\n      className: classes.inputFile,\n      id: LoadDataFromTSCurrenciesId,\n      type: \"file\",\n      onChange: handleAttachFileOrders,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: LoadDataFromTSCurrenciesId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      component: \"span\",\n      variant: \"outlined\",\n      onClick: () => setDocListOrders(null),\n      style: {\n        margin: 3,\n        color: \"white\",\n        backgroundColor: \"#BB7100\",\n        borderColor: \"#161C87\",\n        height: 32,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 23\n      }\n    }, \"\\u0424\\u0430\\u0439\\u043B \\u043E\\u0441\\u0442\\u0430\\u0442\\u043A\\u043E\\u0432\")))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      class: \"main-table-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 21\n      }\n    }, gridForm.gridFormOrd.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: section.contents.length,\n        class: \"td-head-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 27\n        }\n      }, section.label);\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 21\n      }\n    }, gridForm.gridFormOrd.sections.map(section => section.contents.map(contentItem => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        rowSpan: \"2\",\n        class: \"td-head-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 29\n        }\n      }, contentItem.label);\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 19\n      }\n    }, docListOrders !== null && docListOrders.map((dataItem, index) => gridForm.gridFormOrd.sections.map(section => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          height: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 29\n        }\n      }, section.contents.map(contentItem => /*#__PURE__*/React.createElement(\"td\", {\n        align: \"left\",\n        style: {\n          \"color\": \"black\",\n          \"fontSize\": 12,\n          \"border\": \"1px solid grey\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 32\n        }\n      }, dataItem[contentItem.name])));\n    })))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 13\n      }\n    })));\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 12\n      }\n    }, \"Error \", props.userTask.docList);\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Grid","Button","Paper","Table","TableHead","TableRow","TableBody","TableCell","TextField","swal","useStyles","theme","importFile","margin","spacing","inputFile","display","props","classes","userProfile","process_id","userTask","session_id","taskID","enumData","taskType","gridForm","buttons","docList","setDocList","docListTrades","setDocListTrades","docListOrders","setDocListOrders","sectionColor","stocks","setStocks","file","setFile","fieldValue","setFieldValue","UploadDataToTSSecuritiesId","setUploadDataToTSSecuritiesId","UploadDataToTSCurrenciesId","setUploadDataToTSCurrenciesId","LoadDataFromTSSecuritiesOrdersId","setLoadDataFromTSSecuritiesOrdersId","LoadDataFromTSSecuritiesTradesId","setLoadDataFromTSSecuritiesTradesId","LoadDataFromTSCurrenciesId","setLoadDataFromTSCurrenciesId","updateState","setUpdateState","console","log","getUUID","JSON","parse","uuidv1","require","buttonClick","buttonName","length","newFiles","name","getCurDate","Date","blob","Buffer","from","getPosTxt","toString","commandJson","commandType","userId","directory","variables","userAction","value","sendFieldValues","clearTabData","swAlert","txt","posBlob","Blob","type","endings","pom","document","createElement","filename","setAttribute","window","URL","createObjectURL","dataset","downloadurl","download","href","join","draggable","classList","add","click","ord","getOrdTxt","pomOrd","filenameOrd","bbOrd","trd","getTrdTxt","pomTrd","filenameTrd","bbTrd","undefined","newDate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","convertedDate","orders","stringify","trades","date","date2","today","i","createButton","button","index","color","fontColor","backgroundColor","height","fontSize","label","text","icon","ok","getGridFormItems","newCur","currencyBeautifier","newInt","intBeautifier","handleAttachFile","e","selectedFiles","target","files","reader","FileReader","onload","result","rows","split","arr","items","newItem","depositor_id_from_trades","security_code","quantity","account_number","push","currency_code","readAsText","handleAttachFileTrades","trade_id","seller_id","seller_account","buyer_id","buyer_account","amount","cliring","handleAttachFileOrders","handleDateTimeChange","event","fullDateTime","moment","format","width","map","borderColor","sections","section","contents","contentItem","dataItem","parseDate","shrink","gridFormOrd","gridFormTrd","error"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/TradingSystems/TradingSystems.jsx"],"sourcesContent":["// Import material and react components\nimport React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n// Table\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from '@material-ui/core/TextField';\n\n// Import libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\n// var convert = require('xml-js');\n\nconst useStyles = makeStyles((theme) => ({\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  }\n}));\nexport default(props) =>{\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile)\n  const [process_id] = useState(props.userTask.process_id)\n  const [session_id] = useState(props.userTask.session_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [enumData] = useState(props.userTask.enumData)\n  const [taskType] = useState(props.userTask.taskType)\n  const [gridForm] = useState(props.userTask.gridForm)\n  const [buttons] = useState(props.userTask.buttons)\n  const [docList, setDocList] = useState([])\n  const [docListTrades, setDocListTrades] = useState([])\n  const [docListOrders, setDocListOrders] = useState([])\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [stocks, setStocks] = useState(null)\n  const [file, setFile] = useState([])\n  const [fieldValue, setFieldValue] = useState({})\n  const [UploadDataToTSSecuritiesId, setUploadDataToTSSecuritiesId] = useState(null)\n  const [UploadDataToTSCurrenciesId, setUploadDataToTSCurrenciesId] = useState(null)\n  const [LoadDataFromTSSecuritiesOrdersId, setLoadDataFromTSSecuritiesOrdersId] = useState(null)\n  const [LoadDataFromTSSecuritiesTradesId, setLoadDataFromTSSecuritiesTradesId] = useState(null)\n  const [LoadDataFromTSCurrenciesId, setLoadDataFromTSCurrenciesId] = useState(null)\n  const [updateState, setUpdateState] = useState(false)\n\n  useEffect(()=>{\n    console.log(\"TS PROPS\", props.userTask)\n    setUploadDataToTSSecuritiesId(getUUID())\n    setUploadDataToTSCurrenciesId(getUUID())\n    setLoadDataFromTSSecuritiesOrdersId(getUUID())\n    setLoadDataFromTSSecuritiesTradesId(getUUID())\n    setLoadDataFromTSCurrenciesId(getUUID())\n    if(taskType === \"showUploadDataToTSSecuritiesForm\"){\n      setDocList(JSON.parse(props.userTask.docList))\n    }\n    else if(taskType === \"showUploadDataToTSCurrenciesForm\"){\n      setDocList(JSON.parse(props.userTask.docList))\n    }\n    // setStocks(JSON.parse(props.userTask.docList))\n  },[])\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n\n  // Main button click handler\n  function buttonClick(buttonName){\n    console.log(\"Button\", buttonName)\n    if(buttonName === \"exportDataInTS\"){\n      if(docList !== null){\n        if(docList.length > 0){\n          let newFiles = [{\n            name: (taskType === \"showUploadDataToTSSecuritiesForm\" ? \"Pos\" : \"Ds_Pos\") + getCurDate(new Date) + \".txt\",\n            blob: Buffer.from(getPosTxt()).toString('base64')\n          }]\n          const commandJson = \n          {\n            commandType: \"saveTSFiles\",\n            session_id: session_id,\n            userId: userProfile.userId,\n            process_id: process_id,\n            taskID: taskID,\n            newFiles: newFiles,\n            directory: getCurDate(new Date),\n            variables: {\n              userAction: {value: \"exportDataInTS\"}\n            }\n          }\n          console.log(\"button exportDataInTS: \", commandJson)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n        else{\n          swAlert(\"Данные для выгрузки не обнаружены!\", \"warning\")\n        }\n      }\n      else{\n        swAlert(\"Данные для выгрузки не обнаружены!\", \"warning\")\n      }\n    }\n    else if(buttonName === \"uploadToTXT\"){\n      let txt = getPosTxt()\n      let posBlob = new Blob([txt], {type: 'text/plain', endings: \"native\"})\n      // Download txt\n      let pom = document.createElement('a')\n      let filename = (taskType === \"showUploadDataToTSSecuritiesForm\" ? \"Pos\" : \"Ds_Pos\") + getCurDate(new Date) + \".txt\"\n      pom.setAttribute('href', window.URL.createObjectURL(posBlob))\n      pom.setAttribute('download', filename)\n      \n      pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':')\n      pom.draggable = true\n      pom.classList.add('dragout')\n      pom.click()\n    }\n    else if(buttonName === \"uploadOrdTrdToTXT\"){\n      let ord = getOrdTxt()\n      // Download ord\n      let pomOrd = document.createElement('a')\n      let filenameOrd = \"Ord\" + getCurDate(new Date) + \".txt\"\n      let bbOrd = new Blob([ord], {type: 'text/plain'})\n      pomOrd.setAttribute('href', window.URL.createObjectURL(bbOrd))\n      pomOrd.setAttribute('download', filenameOrd)\n      pomOrd.dataset.downloadurl = ['text/plain', pomOrd.download, pomOrd.href].join(':')\n      pomOrd.draggable = true\n      pomOrd.classList.add('dragout')\n      pomOrd.click()\n\n      let trd = getTrdTxt()\n      // Download trd\n      let pomTrd = document.createElement('a')\n      let filenameTrd = \"Trd\" + getCurDate(new Date) + \".txt\"\n      let bbTrd = new Blob([trd], {type: 'text/plain'})\n      pomTrd.setAttribute('href', window.URL.createObjectURL(bbTrd))\n      pomTrd.setAttribute('download', filenameTrd)\n      pomTrd.dataset.downloadurl = ['text/plain', pomTrd.download, pomTrd.href].join(':')\n      pomTrd.draggable = true\n      pomTrd.classList.add('dragout')\n      pomTrd.click()\n    }\n    else if(buttonName === \"processDataFromTSSecurities\"){\n      if(docListTrades !== null && docListOrders !== null){\n        if(fieldValue[\"date\"] !== undefined && fieldValue[\"date\"] !== \"NaN.NaN.NaN\"){\n          var newDate = new Date(fieldValue[\"date\"]) // \"01.31.2021\"\n          console.log(\"ND\", newDate)\n          var dd = String(newDate.getDate()).padStart(2, '0')\n          var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n          var yyyy = newDate.getFullYear()\n          var convertedDate = mm + '.' + dd + '.' + yyyy\n          // let newFiles = [\n          //   {\n          //     name: \"Ord\" + getCurDate(fieldValue[\"date\"]) + \".txt\",\n          //     buf: Buffer.from(getOrdTxt()).toString('base64')\n          //   },\n          //   {\n          //     name: \"Trd\" + getCurDate(fieldValue[\"date\"]) + \".txt\",\n          //     buf: Buffer.from(getTrdTxt()).toString('base64')\n          //   }            \n          // ]\n          const commandJson = \n          {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            userId: userProfile.userId,\n            process_id: process_id,\n            taskID: taskID,\n            // directory: getCurDate(fieldValue[\"date\"]),\n            // newFiles: newFiles,\n            variables: {\n              userAction: {value: \"processDataFromTS\"},\n              orders: {value: JSON.stringify(docListOrders)},\n              trades: {value: JSON.stringify(docListTrades)},\n              date: {value: convertedDate},\n              date2: {value: \"\\'\" + convertedDate + \"\\'\"}\n            }\n          }\n          console.log(\"processDataFromTS\", commandJson)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n        else{\n          swAlert(\"Укажите дату!\", \"warning\")\n        }\n      }\n      else{\n        swAlert(\"Для импорта данных нужны 2 файла!\", \"warning\")\n      }\n    }\n    else if(buttonName === \"processDataFromTSCurrencies\"){\n      if(docListOrders !== null){\n        if(fieldValue[\"date\"] !== undefined && fieldValue[\"date\"] !== \"NaN.NaN.NaN\"){\n          var newDate = new Date(fieldValue[\"date\"]) // \"2020-01-26\"\n          var dd = String(newDate.getDate()).padStart(2, '0')\n          var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n          var yyyy = newDate.getFullYear()\n          var convertedDate = mm + '.' + dd + '.' + yyyy\n          const commandJson = \n          {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            variables: {\n              userAction: {value: \"processDataFromTS\"},\n              orders: {value: JSON.stringify(docListOrders)},\n              date: {value: convertedDate},\n              date2: {value: \"\\'\" + convertedDate + \"\\'\"}\n              // document: {value: userProfile.userId}\n            }\n          }\n          console.log(\"processDataFromTSCurrencies\", commandJson)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n        else{\n          swAlert(\"Укажите дату!\", \"warning\")\n        }\n      }\n      else{\n        swAlert(\"Данные для импорта не обнаружены!\", \"warning\")\n      }\n    }\n    else if(buttonName === \"loadDataFromTS\"){\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"loadDataFromTS\"},\n        }\n      }\n      console.log(\"loadDataFromTS\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    \n    else if(buttonName === \"cancel\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"cancel\"},\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else{\n      console.log(\"button: \", buttonName)\n    }\n  }\n  function getCurDate(date){\n    var newDate = new Date(date)\n    var dd = String(newDate.getDate()).padStart(2, '0')\n    var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n    var yyyy = newDate.getFullYear()\n    var today = dd + mm + yyyy  \n    return today\n  }\n  function getPosTxt(){\n    let txt = \"\"\n    if(taskType === \"showUploadDataToTSSecuritiesForm\"){\n      for(let i=0; i<docList.length; i++){\n        txt += docList[i][\"depositor_id_from_trades\"] + \"\\t\"\n        txt += docList[i][\"security_code\"] + \"\\t\"\n        txt += docList[i][\"quantity\"] + \"\\t\"\n        txt += docList[i][\"account_number\"] \n        if(i < docList.length-1){txt += \"\\n\"}\n      }\n    }\n    else if(taskType === \"showUploadDataToTSCurrenciesForm\"){\n      for(let i=0; i<docList.length; i++){\n        txt += docList[i][\"depositor_id_from_trades\"] + \"\\t\"\n        txt += docList[i][\"quantity\"] + \"\\t\"\n        txt += docList[i][\"currency_code\"] + \"\\t\"\n        txt += docList[i][\"account_number\"]\n        if(i < docList.length-1){txt += \"\\n\"}\n      }\n    }\n    return txt\n  }\n  function getOrdTxt(){\n    let ord = \"\"\n    for(let i=0; i<docListOrders.length; i++){\n      ord += docListOrders[i][\"depositor_id_from_trades\"] + \"\\t\"\n      ord += docListOrders[i][\"security_code\"] + \"\\t\"\n      ord += docListOrders[i][\"quantity\"] + \"\\t\"\n      ord += docListOrders[i][\"account_number\"]\n      if(i < docListOrders.length-1){ord += \"\\n\"}\n    }\n    return ord\n  }\n  function getTrdTxt(){\n    let trd = \"\"\n    for(let i=0; i<docListTrades.length; i++){\n      trd += docListTrades[i][\"trade_id\"] + \"\\t\"\n      trd += docListTrades[i][\"security_code\"] + \"\\t\"\n      trd += docListTrades[i][\"seller_id\"] + \"\\t\"\n      trd += docListTrades[i][\"seller_account\"] + \"\\t\"\n      trd += docListTrades[i][\"buyer_id\"] + \"\\t\"\n      trd += docListTrades[i][\"buyer_account\"] + \"\\t\"\n      trd += docListTrades[i][\"quantity\"] + \"\\t\"\n      trd += docListTrades[i][\"amount\"] + \"\\t\"\n      trd += docListTrades[i][\"cliring\"]\n      if(i < docListTrades.length-1){trd += \"\\n\"}\n    }\n    return trd\n  }\n  // Returns Button component\n  function createButton(button, index){\n    return(\n      <Button variant=\"outlined\"\n        name = {button.name}\n        onClick = {()=> buttonClick(button.name)}\n        style={{\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        }}\n        value = {button.name}\n        >\n          {button.label}\n      </Button> \n    )\n  }\n  // custom allerts\n  function swAlert(text, icon){\n    return(\n      swal({\n        text: text,\n        icon: icon,\n        buttons: {ok: \"Ок\"}\n      })\n    )\n  }\n  function getGridFormItems(value, type){\n    if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newCur = props.currencyBeautifier(value)\n        return newCur\n      }\n    }\n    else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newInt = props.intBeautifier(value)\n        return newInt\n      }\n    }\n    else{\n      return value\n    }\n    \n  }\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files\n    if (selectedFiles && selectedFiles[0]){\n      setFile(selectedFiles[0])\n      let reader = new FileReader()\n      reader.onload = async function(e){\n        const file = e.target.result\n        const rows = file.split(/\\r\\n|\\n/)\n        console.log(\"rows\", rows)\n        let arr = []\n        for(let i=0; i<rows.length; i++){\n          if(rows[i] !== \"\"){\n            let items = rows[i].split('\\t')\n            if(taskType === \"showUploadDataToTSSecuritiesForm\"){\n              let newItem = {\n                depositor_id_from_trades: items[0],\n                security_code: items[1],\n                quantity: items[2],\n                account_number: items[3]\n              }\n              arr.push(newItem)\n            }\n            else if(taskType === \"showUploadDataToTSCurrenciesForm\"){\n              let newItem = {\n                depositor_id_from_trades: items[0],\n                quantity: items[1],\n                currency_code: items[2],\n                account_number: items[3]\n              }\n              arr.push(newItem)\n            }\n            // console.log(\"ITMS\", items)\n          }\n        }\n        setDocList(arr)\n      }\n      reader.readAsText(selectedFiles[0])\n    }\n  }\n  function handleAttachFileTrades(e){\n    // TRADES\n    console.log(\"TRD FILE\", e.target.files)\n    let selectedFiles = e.target.files\n    if (selectedFiles && selectedFiles[0]){\n      let reader = new FileReader()\n      reader.onload = async function(e){\n        const file = e.target.result\n        const rows = file.split(/\\r\\n|\\n/)\n        // console.log(\"rows\", rows)\n        let arr = []\n        for(let i=0; i<rows.length; i++){\n          if(rows[i] !== \"\"){\n            let items = rows[i].split('\\t')\n            let newItem = {\n              trade_id: items[0],\n              security_code: items[1],\n              seller_id: items[2],\n              seller_account: items[3],\n              buyer_id: items[4],\n              buyer_account: items[5],\n              quantity: items[6],\n              amount: items[7],\n              cliring: items[8]\n            }\n            arr.push(newItem)\n            // console.log(\"ITMS\", items)\n          }\n        }\n        setDocListTrades(arr)\n      }\n      reader.readAsText(selectedFiles[0])\n    }\n    setUpdateState(getUUID())\n  }\n  function handleAttachFileOrders(e){\n    // ORDERS\n    console.log(\"ORD FILE\", e.target.files)\n    let selectedFiles = e.target.files\n    if (selectedFiles && selectedFiles[0]){\n      let reader = new FileReader()\n      reader.onload = async function(e){\n        const file = e.target.result\n        const rows = file.split(/\\r\\n|\\n/)\n        // console.log(\"rows\", rows)\n        let arr = []\n        for(let i=0; i<rows.length; i++){\n          if(rows[i] !== \"\"){\n            let items = rows[i].split('\\t')\n            if(taskType === \"showLoadDataFromTSSecuritiesForm\"){\n              let newItem = {\n                depositor_id_from_trades: items[0],\n                security_code: items[1],\n                quantity: items[2],\n                account_number: items[3]\n              }\n              arr.push(newItem)\n            }\n            else if(taskType === \"showLoadDataFromTSCurrenciesForm\"){\n              let newItem = {\n                depositor_id_from_trades: items[0],\n                quantity: items[1],\n                currency_code: items[2],\n                account_number: items[3]\n              }\n              arr.push(newItem)\n            }\n            // console.log(\"ITMS\", items)\n          }\n        }\n        setDocListOrders(arr)\n      }\n      reader.readAsText(selectedFiles[0])\n    }\n    setUpdateState(getUUID())\n  }\n  function handleDateTimeChange(event){\n    // // console.log(\"EVENT\", event.target.name, event.target.value)\n    // let fullDate = props.parseDate(event.target.value)\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // fieldValue[event.target.name] = convertedDate\n    let fullDateTime = moment(event.target.value).format('YYYY-MM-DDTHH:MM:SS')\n    fieldValue[event.target.name] = fullDateTime\n    setFieldValue(fieldValue)\n    console.log(\"DATE CHANGE\", fieldValue)\n  }\n  try{\n    if(buttons === undefined){return <div>No Buttons</div>}\n    return (\n      <Grid key={updateState}>\n        {taskType === \"showUploadDataToTSSecuritiesForm\" &&\n          <Grid container direction=\"column\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={8}>\n              <Paper>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow style={{height: 30}}>\n                        <TableCell \n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            backgroundColor:  sectionColor,\n                            width: \"100%\"\n                          }}>\n                          Формирование данных для КФБ\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                  </Table>\n                  <br/>\n                </Grid>\n                <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                  {buttons.map((button, index) => {\n                    return createButton(button, index)\n                  })}\n                  <div className={classes.importFile}>\n                    <input\n                      accept=\"text/plain\"\n                      className={classes.inputFile} \n                      id={UploadDataToTSSecuritiesId}\n                      multiple\n                      type=\"file\"\n                      onChange={handleAttachFile}\n                    />\n                    <label htmlFor={UploadDataToTSSecuritiesId}>\n                      <Button\n                        component=\"span\"\n                        variant=\"outlined\"\n                        style={{\n                          margin: 3,\n                          color: \"white\",\n                          backgroundColor: \"#BB7100\",\n                          borderColor: \"#161C87\",\n                          height: 32,\n                          fontSize: 12\n                        }}\n                      >Выбрать файл\n                      </Button>\n                    </label>\n                  </div>\n                </Grid> \n              </Paper>\n            </Grid>\n            <br/>\n            {/* Create grid table with data from doclist */}\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <table \n                  size=\"small\"\n                  // style={{width:\"100%\", \"border-collapse\": \"collapse\"}}\n                  class=\"main-table-style\"\n                >\n                  <thead class=\"thead-style\">\n                    <tr>\n                      {gridForm.sections.map(section => {\n                        return (\n                          <td \n                            colSpan={section.contents.length} \n                            class=\"td-head-style\"\n                            // style={{\"color\": \"black\", \"fontSize\": 13, \"border\": \"1px solid grey\", \"text-align\": \"center\", \"font-weight\":\"bold\"}}\n                          >\n                            {section.label}\n                          </td>\n                        )\n                      })}\n                    </tr>\n                    <tr>\n                      {gridForm.sections.map(section =>\n                        section.contents.map(contentItem => {\n                          return (\n                            <td \n                              rowSpan=\"2\" \n                              class=\"td-head-style-2row\"\n                              // style={{\"color\": \"black\", \"fontSize\": 12, \"border\": \"1px solid grey\", \"text-align\": \"center\", \"font-weight\":\"bold\"}}\n                            >\n                              {contentItem.label}\n                            </td>\n                          )\n                        })\n                      )}\n                    </tr>\n                  </thead>\n                  <TableBody>\n                    {docList !== null &&\n                      docList.map((dataItem) => (\n                        gridForm.sections.map(section => {\n                          return(\n                            <tr style={{height: 30}}>\n                              {section.contents.map(contentItem => {\n                                return(<td style={{\"fontSize\": 12, \"border\": \"1px solid grey\"}}>{getGridFormItems(dataItem[contentItem.name], contentItem.type)}</td>)\n                              })}\n                            </tr>\n                          )\n                        })\n                      )\n                    )} \n                                        \n                  </TableBody>\n                </table>              \n              </Paper>\n            </Grid>\n          </Grid>\n        }\n        {taskType === \"showUploadDataToTSCurrenciesForm\" &&\n          <Grid container direction=\"column\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={8}>\n              <Paper>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow style={{height: 30}}>\n                        <TableCell\n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            backgroundColor:  sectionColor,\n                            width: \"100%\"\n                          }}>\n                          Формирование данных для КФБ\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                  </Table>\n                  <br/>\n                </Grid>\n                <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                  {buttons.map((button, index) => {\n                    return createButton(button, index)\n                  })}\n                  <div className={classes.importFile}>\n                    <input\n                      accept=\"text/plain\"\n                      className={classes.inputFile} \n                      id={UploadDataToTSCurrenciesId}\n                      multiple\n                      type=\"file\"\n                      onChange={handleAttachFile}\n                    />\n                    <label htmlFor={UploadDataToTSCurrenciesId}>\n                      <Button\n                        component=\"span\"\n                        variant=\"outlined\"\n                        style={{\n                          margin: 3,\n                          color: \"white\",\n                          backgroundColor: \"#BB7100\",\n                          borderColor: \"#161C87\",\n                          height: 32,\n                          fontSize: 12\n                        }}\n                      >Выбрать файл\n                      </Button>\n                    </label>\n                  </div>\n                </Grid> \n              </Paper>\n            </Grid>\n            <br/>\n            {/* Create grid table with data from doclist */}\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <table \n                  size=\"small\"\n                  // style={{width:\"100%\", \"border-collapse\": \"collapse\"}}\n                  class=\"main-table-style\"\n                >\n                  <thead class=\"thead-style\">\n                    <tr>\n                      {gridForm.sections.map(section => {\n                        return (\n                          <td \n                            colSpan={section.contents.length} \n                            class=\"td-head-style\"\n                          >\n                          {section.label}</td>\n                        )\n                      })}\n                    </tr>\n                    <tr>\n                      {gridForm.sections.map(section =>\n                        section.contents.map(contentItem => {\n                          return (\n                            <td \n                              rowSpan=\"2\"\n                              class=\"td-head-style\"\n                            >\n                              {contentItem.label}\n                            </td>\n                          )\n                        })\n                      )}\n                    </tr>\n                  </thead>\n                  <TableBody>\n                    {docList !== null &&\n                      docList.map((dataItem) => (\n                        gridForm.sections.map(section => {\n                          return(\n                            <tr style={{height: 30}}>\n                              {section.contents.map(contentItem => {\n                                return(<td style={{\"fontSize\": 12, \"border\": \"1px solid grey\"}}>{getGridFormItems(dataItem[contentItem.name], contentItem.type)}</td>)\n                              })}\n                            </tr>\n                          )\n                        })\n                      )\n                    )} \n                                        \n                  </TableBody>\n                </table>              \n              </Paper>\n            </Grid>\n          </Grid>\n        }\n        {taskType === \"showLoadDataFromTSSecuritiesForm\" &&\n          <Grid container direction=\"column\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={8}>\n              <Paper>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow style={{height: 30}}>\n                        <TableCell\n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            backgroundColor:  sectionColor\n                          }}>\n                          Загрузка данных из КФБ\n                        </TableCell>\n                        <TableCell\n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            backgroundColor:  sectionColor\n                          }}>\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow style={{height: 30}}>\n                        <TableCell\n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            width: \"40%\"\n                          }}>Дата\n                        </TableCell>\n                        <TableCell\n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            width: \"60%\"\n                          }}>\n                           <TextField\n                              type=\"date\"\n                              name = \"date\"\n                              onBlur = {handleDateTimeChange}\n                              style={{width: \"100%\"}}\n                              defaultValue = {(fieldValue[\"date\"] !== undefined) ? props.parseDate(fieldValue[\"date\"]): \"\"}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                            />\n                        </TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                  <br/>\n                </Grid>\n                <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                  {buttons.map((button, index) => {\n                    return createButton(button, index)\n                  })}\n                  <div className={classes.importFile}>\n                    <input\n                      accept=\"text/plain\"\n                      className={classes.inputFile}\n                      id={LoadDataFromTSSecuritiesOrdersId}\n                      type=\"file\"\n                      onChange={handleAttachFileOrders}\n                    />\n                    <label htmlFor={LoadDataFromTSSecuritiesOrdersId}>\n                      <Button\n                        component=\"span\"\n                        variant=\"outlined\"\n                        onClick={()=> setDocListOrders(null)}\n                        style={{\n                          margin: 3,\n                          color: \"white\",\n                          backgroundColor: \"#BB7100\",\n                          borderColor: \"#161C87\",\n                          height: 32,\n                          fontSize: 12\n                        }}\n                      >Файл остатков\n                      </Button>\n                    </label>\n                  </div>\n                  <div className={classes.importFile}>\n                    <input\n                      accept=\"text/plain\"\n                      className={classes.inputFile} \n                      id={LoadDataFromTSSecuritiesTradesId}\n                      multiple\n                      type=\"file\"\n                      onChange={handleAttachFileTrades}\n                    />\n                    <label htmlFor={LoadDataFromTSSecuritiesTradesId}>\n                      <Button\n                        component=\"span\"\n                        variant=\"outlined\"\n                        style={{\n                          margin: 3,\n                          color: \"white\",\n                          backgroundColor: \"#BB7100\",\n                          borderColor: \"#161C87\",\n                          height: 32,\n                          fontSize: 12\n                        }}\n                      >Файл сделок\n                      </Button>\n                    </label>\n                  </div>\n                </Grid> \n              </Paper>\n            </Grid>\n            <br/>\n            {/* Create ORD grid table with data from doclist */}\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <table size=\"small\" class=\"main-table-style\">\n                  <thead class=\"thead-style\">\n                    <tr>\n                      {gridForm.gridFormOrd.sections.map(section => {\n                        return (\n                          <td \n                            colSpan={section.contents.length} \n                            class=\"td-head-style\"\n                          >\n                            {section.label}\n                          </td>\n                        )\n                      })}\n                    </tr>\n                    <tr>\n                      {gridForm.gridFormOrd.sections.map(section =>\n                        section.contents.map(contentItem => {\n                          return (\n                            <td \n                              rowSpan=\"2\"\n                              class=\"td-head-style\"\n                            >\n                              {contentItem.label}\n                            </td>\n                          )\n                        })\n                      )}\n                    </tr>\n                  </thead>\n                  <TableBody>\n                    {docListOrders !== null &&\n                      docListOrders.map((dataItem, index) => (\n                        gridForm.gridFormOrd.sections.map(section => {\n                          return(\n                            <tr style={{height: 30}}>\n                              {section.contents.map(contentItem => (\n                               <td align=\"left\" style={{\"color\": \"black\", \"fontSize\": 12, \"border\": \"1px solid grey\"}}>{dataItem[contentItem.name]}</td>\n                              ))}\n                            </tr>\n                          )\n                        })\n                      )\n                    )}                 \n                  </TableBody>\n                </table>              \n              </Paper>\n            </Grid>\n            <br/>\n            {/* Create TRD grid table with data from doclist */}\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <table \n                  size=\"small\"\n                  class=\"main-table-style\"\n                >\n                  <thead class=\"thead-style\">\n                    <tr>\n                      {gridForm.gridFormTrd.sections.map(section => {\n                        return (\n                          <td \n                            colSpan={section.contents.length}\n                            class=\"td-head-style\"\n                          >\n                            {section.label}\n                          </td>\n                        )\n                      })}\n                    </tr>\n                    <tr>\n                      {gridForm.gridFormTrd.sections.map(section =>\n                        section.contents.map(contentItem => {\n                          return (\n                            <td \n                              rowSpan=\"2\" \n                              class=\"td-head-style\"\n                            >\n                              {contentItem.label}\n                            </td>\n                          )\n                        })\n                      )}\n                    </tr>\n                  </thead>\n                  <TableBody>\n                    {docListTrades !== null &&\n                      docListTrades.map((dataItem, index) => (\n                        gridForm.gridFormTrd.sections.map(section => {\n                          return(\n                            <tr style={{height: 30}}>\n                              {section.contents.map(contentItem => (\n                                <td align=\"left\" style={{\"color\": \"black\", \"fontSize\": 12, \"border\": \"1px solid grey\"}}>{dataItem[contentItem.name]}</td>\n                              ))}\n                            </tr>\n                          )\n                        })\n                      )\n                    )}               \n                  </TableBody>\n                </table>              \n              </Paper>\n            </Grid>\n          </Grid>\n        }\n        {taskType === \"showLoadDataFromTSCurrenciesForm\" &&\n          <Grid container direction=\"column\" justify=\"flex-start\" spacing={1}>\n            <Grid item xs={8}>\n              <Paper>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow style={{height: 30}}>\n                        <TableCell\n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            backgroundColor:  sectionColor,\n                          }}>\n                          Загрузка данных из КФБ\n                        </TableCell>\n                        <TableCell\n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            backgroundColor:  sectionColor,\n                          }}>\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow style={{height: 30}}>\n                        <TableCell\n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            width: \"40%\"\n                          }}>Дата\n                        </TableCell>\n                        <TableCell\n                          style={{\n                            color: \"black\", \n                            fontSize: 14,\n                            width: \"60%\"\n                          }}>\n                           <TextField\n                              type=\"date\"\n                              name = \"date\"\n                              onBlur = {handleDateTimeChange}\n                              style={{width: \"100%\"}}\n                              defaultValue = {(fieldValue[\"date\"] !== undefined) ? props.parseDate(fieldValue[\"date\"]): \"\"}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                            />\n                        </TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                  <br/>\n                </Grid>\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                  {buttons.map((button, index) => {\n                    return createButton(button, index)\n                  })}\n                  <div className={classes.importFile}>\n                    <input\n                      accept=\"text/plain\"\n                      className={classes.inputFile}\n                      id={LoadDataFromTSCurrenciesId}\n                      type=\"file\"\n                      onChange={handleAttachFileOrders}\n                    />\n                    <label htmlFor={LoadDataFromTSCurrenciesId}>\n                      <Button\n                        component=\"span\"\n                        variant=\"outlined\"\n                        onClick={()=> setDocListOrders(null)}\n                        style={{\n                          margin: 3,\n                          color: \"white\",\n                          backgroundColor: \"#BB7100\",\n                          borderColor: \"#161C87\",\n                          height: 32,\n                          fontSize: 12\n                        }}\n                      >Файл остатков\n                      </Button>\n                    </label>\n                  </div>\n                </Grid> \n              </Paper>\n            </Grid>\n            <br/>\n            {/* Create ORD grid table with data from doclist */}\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <table size=\"small\" class=\"main-table-style\">\n                  <thead class=\"thead-style\">\n                    <tr>\n                      {gridForm.gridFormOrd.sections.map(section => {\n                        return (\n                          <td colSpan={section.contents.length} class=\"td-head-style\">{section.label}</td>\n                        )\n                      })}\n                    </tr>\n                    <tr>\n                      {gridForm.gridFormOrd.sections.map(section =>\n                        section.contents.map(contentItem => {\n                          return (\n                            <td rowSpan=\"2\" class=\"td-head-style\">{contentItem.label}</td>\n                          )\n                        })\n                      )}\n                    </tr>\n                  </thead>\n                  <TableBody>\n                    {docListOrders !== null &&\n                      docListOrders.map((dataItem, index) => (\n                        gridForm.gridFormOrd.sections.map(section => {\n                          return(\n                            <tr style={{height: 30}}>\n                              {section.contents.map(contentItem => (\n                               <td align=\"left\" style={{\"color\": \"black\", \"fontSize\": 12, \"border\": \"1px solid grey\"}}>{dataItem[contentItem.name]}</td>\n                              ))}\n                            </tr>\n                          )\n                        })\n                      )\n                    )}                 \n                  </TableBody>\n                </table>              \n              </Paper>\n            </Grid>\n            <br></br>\n          </Grid>\n        }\n      </Grid>  \n    )\n  }\n  catch(error){\n    console.log(\"ERROR\", error)\n    return <div>Error {props.userTask.docList}</div>\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}