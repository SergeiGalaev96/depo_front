{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\TreansferOrders\\\\TreansferOrders.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport Modal from \"@material-ui/core/Modal\";\nimport Menu from '@mui/material/Menu'; // Accordion\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Icons\n\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // Form components\n\nimport GridSelect from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox'; // PIN components\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport * as rutoken from \"rutoken\";\nimport numberToWordsRu from 'number-to-words-ru'; // https://www.npmjs.com/package/number-to-words-ru\n\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nvar generator = require('generate-password');\n\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto'\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto'\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  },\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [formType] = useState(props.userTask.formType);\n  const [buttons] = useState(props.userTask.buttons);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [status, setStatus] = useState(2);\n  const [docId, setDocId] = useState(props.userTask.docId);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [enumData] = useState(props.userTask.enumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [fieldValue, setFieldValue] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [taskType] = useState(props.userTask.taskType);\n  const [showSavedDocuments, setShowSavedDocuments] = useState(false);\n  const [showAttachedDocuments, setShowAttachedDocuments] = useState(false);\n  const [openModal, setOpenModal] = useState(false); // files\n\n  const [attachedImgs, setAttachedImgs] = useState([]);\n  const [attachedImgsFiles, setAttachedImgsFiles] = useState([]);\n  const [attachedDocs, setAttachedDocs] = useState([]);\n  const [Blobs, setBlobs] = useState([]);\n  const [selectedImg, setSelectedImg] = useState({});\n  const [savedImgs, setSavedImgs] = useState([]);\n  const [savedImagesFiles, setSavedImagesFiles] = useState([]);\n  const [savedDocs, setSavedDocs] = useState([]);\n  const [buttonFilesWordPdfImgId, setButtonFilesWordPdfImgId] = useState(getUUID());\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1); // modals\n\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [accordionExpanded, setAccordionExpanded] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  const [gridTableId] = useState(getUUID());\n  const [gridFieldValue, setGridFieldValue] = useState({}); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"TreansferOrders PROPS\", props); // setButtonFilesWordPdfImgId(getUUID())\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        setIsSearchForm(true);\n        setFilteredDocList(parsedData);\n        setInitialDocList(parsedData);\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", -1, \"Int\"));\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc));\n        } else {\n          fetchBySize(0, s - 1, sortedDocList);\n        }\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    } else {\n      setIsSearchForm(false);\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      let fields = {}; // let Form = props.userTask.Form\n\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name;\n          fields[fieldName] = parsedSelectedDoc[fieldName];\n        }\n      }\n\n      if (props.userTask.taskType !== \"showTransferOrdersSearchForm\") {\n        fields[\"quantity_text\"] = convertNumberToText(parsedSelectedDoc[\"quantity_int\"]);\n      }\n\n      if (props.userTask.taskType === \"showTransferOrdersEditForm\" && parsedSelectedDoc.registrar_authorized_person_name === null && formType === \"edit\") {\n        if (userProfile.userRole === \"4\") {\n          fields.registrar_authorized_person_name = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName;\n          console.log(\"US NAME\", fields);\n        }\n      }\n\n      console.log(\"SDOC\", parsedSelectedDoc);\n      setSelectedDoc(parsedSelectedDoc);\n      setFieldValue(fields);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            });\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n    }\n\n    if (props.userTask.taskType === \"showTransferOrdersCreatingForm\") {\n      setShowAttachedDocuments(true);\n    }\n\n    if (props.userTask.taskType === \"showTransferOrdersEditForm\") {\n      setShowAttachedDocuments(true);\n      setShowSavedDocuments(true);\n    }\n\n    if (props.userTask.savedDocs.length > 0) {\n      for (let d = 0; d < props.userTask.savedDocs.length; d++) {\n        let extension = props.userTask.savedDocs[d].extension;\n\n        if (extension === \".png\") {\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".jpeg\" || extension === \".jpg\") {\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".doc\") {\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".docx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".xlsx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".pdf\" || extension === \".PDF\") {\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        }\n      }\n    }\n\n    if (gridForm !== null) {\n      let newFields = {};\n\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show;\n        }\n      }\n\n      setGridFieldValue(newFields);\n    }\n\n    setUpdateState(getUUID());\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  } // RuToken functions\n\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\")\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\");\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  });\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded);\n  } // Images MODAL\n\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  }; // Rutoken MODAL\n\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  } // Sign transfer order with rutoken\n\n\n  async function sign(commandJson) {\n    // Перебор подключенных Рутокенов\n    if (plugin !== undefined) {\n      plugin.enumerateDevices().then(function (devices) {\n        if (devices.length > 0) {\n          return Promise.resolve(devices[0]);\n        } else {\n          alert(\"Рутокен не обнаружен\");\n        }\n      }) // Проверка залогиненности\n      .then(function (firstDevice) {\n        rutokenHandle = firstDevice;\n        return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n      }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n      .then(function (isLoggedIn) {\n        if (isLoggedIn) {\n          return Promise.resolve();\n        } else {\n          return plugin.login(rutokenHandle, rutokenPin); // 240699\n        }\n      }) // Перебор пользовательских сертификатов на токене\n      .then(function () {\n        return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n      }).then(function (certs) {\n        if (certs.length > 0) {\n          certHandle = certs[0];\n          return plugin.parseCertificate(rutokenHandle, certs[0]);\n        } else {\n          alert(\"Сертификат на Рутокен не обнаружен\");\n        }\n      }) // Подписание данных из текстового поля на первом найденом сертификате\n      .then(async function (certs) {\n        certData = certs;\n\n        if (certHandle.length > 0) {\n          var options = {};\n          let inn = \"\";\n          let fullName = \"\";\n\n          for (let i = 0; i < certData.subject.length; i++) {\n            if (certData.subject[i].rdn === \"serialNumber\") {\n              inn = certData.subject[i].value;\n            }\n\n            if (certData.subject[i].rdn === \"commonName\") {\n              fullName = certData.subject[i].value;\n            }\n          }\n\n          props.setEsInn(inn);\n          props.setEsUserFullName(fullName);\n          props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n          let orderToSign = commandJson.variables.document.value;\n\n          if (taskType === \"showTransferOrdersCreatingForm\") {\n            orderToSign[\"signed_by_depositor\"] = true;\n            orderToSign[\"signed_depositor_inn\"] = inn;\n            orderToSign[\"signed_depositor_full_name\"] = fullName;\n            orderToSign[\"signed_at_depositor\"] = props.getCurrentFullDateTime();\n            orderToSign[\"status\"] = status;\n            commandJson.variables.status.value = 2; // Sent to CD\n          } else {\n            orderToSign[\"signed_by_registrar\"] = true;\n            orderToSign[\"signed_registrar_inn\"] = inn;\n            orderToSign[\"signed_registrar_full_name\"] = fullName;\n            orderToSign[\"signed_at_registrar\"] = props.getCurrentFullDateTime();\n            orderToSign[\"status\"] = status;\n            commandJson.variables.status.value = status; // Approved || Canceled\n          }\n\n          let signedBlobs = await signBlobs(fullName, inn, certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n          console.log(\"S BLOBS\", signedBlobs);\n          commandJson.blobs = signedBlobs;\n          commandJson.variables.document.value = JSON.stringify(orderToSign);\n          commandJson.variables.selectedDoc.value = JSON.stringify(orderToSign);\n          handleCloseModalEnterPin();\n          swAllert(\"Передаточное распоряжение успешно подписано!\", \"success\");\n          props.sendFieldValues(commandJson);\n          props.clearTabData(commandJson.process_id);\n          return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n        } else {\n          alert(\"Сертификат на Рутокен не обнаружен\");\n        }\n      }) // Закрытие сессии\n      .then(function () {\n        plugin.logout(rutokenHandle);\n      }, handleError);\n    } else {\n      props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n    }\n  } // catch errors while signing docs\n\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  } // INPUT HANDLERS\n\n\n  const handleCheckboxChange = event => {\n    let leUnblockList = [\"individual\", \"legal_entity\", \"quantity_int\", \"security\", \"registered_person\", \"address\", \"person_registered_authority\", \"registration_number_date\", \"quantity_text\", \"encumbrances_on_securities\", \"basis\"]; // Юр\n\n    let inUnblockList = [\"individual\", \"legal_entity\", \"quantity_int\", \"security\", \"registered_person\", \"address\", \"document_type\", \"document_series\", \"document_number\", \"document_issue_date\", \"document_issue_authority\", //  \"document_issue_place\", \n    \"quantity_text\", \"encumbrances_on_securities\", \"basis\"]; // Физ\n\n    if (event.target.name === \"legal_entity\") {\n      fieldValue[\"individual\"] = false;\n\n      if (formType === \"edit\") {\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let fName = Form.sections[s].contents[c].name;\n            let unblock = false;\n\n            for (let ul = 0; ul < leUnblockList.length; ul++) {\n              if (fName === leUnblockList[ul]) {\n                unblock = true;\n                break;\n              }\n            }\n\n            if (unblock === true) {\n              // unblock fields for legal entity\n              Form.sections[s].contents[c].edit = true;\n              Form.sections[s].contents[c].required = true;\n            } else {\n              Form.sections[s].contents[c].edit = false; // block fields for individual\n\n              Form.sections[s].contents[c].required = false;\n            } // if(unblock === true){\n            //   // console.log(\"Name\", fName)\n            //   Form.sections[s].contents[c].edit = true\n            //   Form.sections[s].contents[c].required = true\n            //   // Form.sections[s].contents[c].show = true\n            // }\n            // else{\n            //   if(fName !== \"individual\" && fName !== \"legal_entity\"){\n            //     Form.sections[s].contents[c].edit = false\n            //     Form.sections[s].contents[c].required = false\n            //     // Form.sections[s].contents[c].show = false\n            //   }\n            // }\n\n          }\n        }\n\n        setForm(Form);\n      } // let newFieldValue = fieldValue\n      // for(let ul=0; ul<leUnblockList.length; ul++){\n      //   newFieldValue[leUnblockList[ul]] = null\n      // }\n      // setFieldValue(newFieldValue)\n\n    }\n\n    if (event.target.name === \"individual\") {\n      fieldValue[\"legal_entity\"] = false;\n\n      if (formType === \"edit\") {\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let fName = Form.sections[s].contents[c].name;\n            let unblock = false;\n\n            for (let ul = 0; ul < inUnblockList.length; ul++) {\n              if (fName === inUnblockList[ul]) {\n                unblock = true;\n                break;\n              }\n            }\n\n            if (unblock === true) {\n              // unblock fields for legal entity\n              Form.sections[s].contents[c].edit = true;\n              Form.sections[s].contents[c].required = true;\n            } else {\n              Form.sections[s].contents[c].edit = false; // block fields for individual\n\n              Form.sections[s].contents[c].required = false;\n            } // if(unblock === true){\n            //   Form.sections[s].contents[c].edit = true\n            //   Form.sections[s].contents[c].required = true\n            //   // Form.sections[s].contents[c].show = true\n            // }\n            // else{\n            //   if(fName !== \"individual\" && fName !== \"legal_entity\"){\n            //     Form.sections[s].contents[c].edit = false\n            //     Form.sections[s].contents[c].required = false\n            //     // Form.sections[s].contents[c].show = false\n            //   }\n            // }\n\n          }\n        }\n\n        setForm(Form);\n      } // let newFieldValue = fieldValue\n      // for(let ul=0; ul<leUnblockList.length; ul++){\n      //   newFieldValue[leUnblockList[ul]] = null\n      // }\n      // setFieldValue(newFieldValue)\n\n    }\n\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  function convertNumberToText(num) {\n    let converted = numberToWordsRu.convert(num, {\n      currency: {\n        currencyNameCases: ['ценная бумага', 'ценных бумаги', 'ценных бумаг'],\n        fractionalPartNameCases: ['', '', ''],\n        declension: 'nominative',\n        currencyNounGender: {\n          integer: 1 // 1 => Женский род ('одна', 'две'...)\n\n        }\n      },\n      showNumberParts: {\n        integer: true,\n        fractional: false\n      }\n    }); // console.log(\"WORD\", converted)\n\n    return converted;\n  } // Integer input handler\n\n\n  const handleIntChange = event => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    });\n\n    if (event.target.name === \"quantity_int\") {\n      let converted = convertNumberToText(stringNum);\n      setFieldValue({ ...fieldValue,\n        [\"quantity_text\"]: converted,\n        [event.target.name]: int\n      });\n    }\n  }; // Float input handler\n\n\n  const handleFloatChange = event => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.value\n    });\n  }; // const handleIntChange = (event) => {\n  //   console.log(\"EVENT\", event.target.name, event.target.value)\n  //   let stringNum = event.target.value.toString().replace(/ /g, '')\n  //   let int = parseInt(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: int })\n  //   if (event.target.name === \"quantity_int\") {\n  //     let converted = convertNumberToText(stringNum)\n  //     setFieldValue({ ...fieldValue, [\"quantity_text\"]: converted, [event.target.name]: int })\n  //   }\n  // }\n  // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n\n\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value;\n    console.log(\"OPT\", option.name, option.value);\n    var updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        noSuchOption = false;\n        setSelectedOptions(updateSelectedOptions);\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    if (option.name === \"security\") {\n      // выбрана ценная бумага нужно найти эмитента и отобразить\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"security\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].id === option.value) {\n              let issuerId = enumData[i].data[d].issuer;\n              fieldValue[\"issuer\"] = issuerId;\n              fieldValue[\"security_type\"] = enumData[i].data[d].security_type;\n              fieldValue[\"registrar\"] = enumData[i].data[d].registrar; // let registrarId\n\n              for (let j = 0; j < enumData.length; j++) {\n                if (enumData[j].name === \"issuer\") {\n                  // Set isuuer of security\n                  for (let h = 0; h < enumData[j].data.length; h++) {\n                    if (enumData[j].data[h].id === issuerId) {\n                      // Set registrar of issuer\n                      // registrarId = enumData[j].data[h].registrar\n                      let issuerOption = {\n                        value: issuerId,\n                        name: \"issuer\",\n                        label: enumData[j].data[h].label\n                      };\n                      let noIssuerOption = true;\n\n                      for (let y = 0; y < updateSelectedOptions.length; y++) {\n                        if (updateSelectedOptions[y].name === \"issuer\") {\n                          updateSelectedOptions[y] = issuerOption;\n                          noIssuerOption = false;\n                          setSelectedOptions(updateSelectedOptions);\n                          break;\n                        } else {\n                          noIssuerOption = true;\n                        }\n                      }\n\n                      if (noIssuerOption === true) {\n                        updateSelectedOptions.push(issuerOption);\n                        setSelectedOptions(updateSelectedOptions);\n                      }\n                    }\n                  }\n                }\n              } // for (let r = 0; r < enumData.length; r++) {\n              //   if (enumData[r].name === \"registrar\") {\n              //     // Set registrar of isuuer\n              //     for (let p = 0; p < enumData[r].data.length; p++) {\n              //       if (enumData[r].data[p].id === registrarId) {\n              //         fieldValue[\"registrar\"] = registrarId\n              //         let registrarOption = {\n              //           value: registrarId,\n              //           name: \"registrar\",\n              //           label: enumData[r].data[p].label\n              //         }\n              //         let noRegistrarOption = true\n              //         for (let y = 0; y < updateSelectedOptions.length; y++) {\n              //           if (updateSelectedOptions[y].name === \"registrar\") {\n              //             updateSelectedOptions[y] = registrarOption\n              //             noRegistrarOption = false\n              //             setSelectedOptions(updateSelectedOptions)\n              //             break\n              //           }\n              //           else {\n              //             noRegistrarOption = true\n              //           }\n              //         }\n              //         if (noRegistrarOption === true) {\n              //           updateSelectedOptions.push(registrarOption)\n              //           setSelectedOptions(updateSelectedOptions)\n              //         }\n              //       }\n              //     }\n              //   }\n              // }\n\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function handleDateTimeChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let fullDate = props.parseDate(event.target.value);\n    var hours = new Date().getHours();\n    var minutes = new Date().getMinutes();\n    var seconds = new Date().getSeconds();\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\";\n    fieldValue[event.target.name] = convertedDate;\n    setFieldValue(fieldValue); // console.log(\"DATE CHANGE\", event.target.value)\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  } // filter docList by filled parameters\n\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key);\n\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else if (contentType === \"Enum\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else if (contentType === \"Bool\") {\n                if (key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\") {\n                  let instrStatus = \"\";\n                  let statusSelected = false;\n                  let fieldStatus = \"\"; // Check fields\n\n                  if (fields[\"filled\"] === true) {\n                    fieldStatus = \"filled\";\n                    statusSelected = true;\n                  }\n\n                  if (fields[\"onExecution\"] === true) {\n                    fieldStatus = \"onExecution\";\n                    statusSelected = true;\n                  }\n\n                  if (fields[\"executed\"] === true) {\n                    fieldStatus = \"executed\";\n                    statusSelected = true;\n                  }\n\n                  if (fields[\"canceled\"] === true) {\n                    fieldStatus = \"canceled\";\n                    statusSelected = true;\n                  }\n\n                  if (statusSelected === true) {\n                    // Check Instruction\n                    if (Data[i][\"filled\"] === true) {\n                      instrStatus = \"filled\";\n                    }\n\n                    if (Data[i][\"onExecution\"] === true) {\n                      instrStatus = \"onExecution\";\n                    }\n\n                    if (Data[i][\"executed\"] === true) {\n                      instrStatus = \"executed\";\n                    }\n\n                    if (Data[i][\"canceled\"] === true) {\n                      instrStatus = \"canceled\";\n                    } // Check whether statuses are equal\n\n\n                    if (fieldStatus === instrStatus) {\n                      match = true;\n                    } else {\n                      match = false;\n                      break;\n                    }\n                  } else {\n                    match = true;\n                  }\n                } else {\n                  if (Data[i][key] === null || fields[key] === Data[i][key]) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              }\n            } else {\n              match = false;\n              break;\n            }\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered docList by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList);\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.round(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  } // random UUID generator\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // random numbers generator\n\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Collect data to save doc\n\n\n  function getFieldValuesSaveDocument() {\n    let docToSave = {};\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined) {\n          docToSave[fieldName] = false;\n        } else {\n          docToSave[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToSave;\n  }\n\n  function getFieldValuesUpdateDocument() {\n    let docToUpdate = selectedDoc; // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n    // docToUpdate[\"user_id\"] = selectedDoc.user_id\n    // docToUpdate[\"files_directory\"] = selectedDoc.files_directory\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false;\n        } else {\n          docToUpdate[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToUpdate;\n  }\n\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          console.log(\"REQ\", Form.sections[s].contents[c].name);\n\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false;\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n            return checkedSuccessfuly;\n          } else {\n            checkedSuccessfuly = true;\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  async function buttonClick(buttonName, item) {\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true);\n      } else {\n        filterDocList(0, size - 1, initialDocList, fieldValue);\n      }\n    } else if (buttonName === \"saveTransferOrder\") {\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        let dir = getUUID();\n        let doc = getFieldValuesSaveDocument();\n        doc.files_directory = dir;\n        doc.user_id = userProfile.userId;\n        doc[\"status\"] = 1;\n        let commandJson = {\n          commandType: \"saveDocumentsWithFiles\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          blobs: Blobs,\n          directory: dir,\n          variables: {\n            userAction: {\n              value: \"saveDocument\"\n            },\n            document: {\n              value: JSON.stringify(doc)\n            },\n            selectedDoc: {\n              value: JSON.stringify(doc)\n            },\n            status: {\n              value: 1\n            }\n          }\n        };\n        console.log(\"saveTransferOrder:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"openDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: {\n            value: JSON.stringify(item)\n          },\n          userAction: {\n            value: \"openDocument\"\n          },\n          docId: {\n            value: item.id\n          },\n          status: {\n            value: item.status\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button openDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"editDocument\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"editDocument\"\n          }\n        }\n      };\n      console.log(\"updateDocument:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocument\") {\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        let updateBody = getFieldValuesUpdateDocument();\n        updateBody.status = selectedDoc.status;\n        let commandJson = {\n          commandType: \"saveDocumentsWithFiles\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          blobs: Blobs,\n          directory: selectedDoc.files_directory,\n          variables: {\n            userAction: {\n              value: \"updateDocument\"\n            },\n            document: {\n              value: JSON.stringify(updateBody)\n            },\n            selectedDoc: {\n              value: JSON.stringify(updateBody)\n            }\n          }\n        };\n        console.log(\"updateDocument:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"sendToRegistrar\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody.status = 3;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          },\n          selectedDoc: {\n            value: JSON.stringify(updateBody)\n          },\n          status: {\n            value: 3\n          }\n        }\n      };\n      console.log(\"updateDocument:\", updateBody);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"approveOrder\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        let checkResult = checkForRequieredFields();\n\n        if (checkResult === true) {\n          setStatus(4);\n          setShowModalEnterPin(true);\n\n          if (props.esInn === null) {\n            setShowModalEnterPin(true);\n          } else {\n            let doc = null;\n            let dir = selectedDoc.files_directory;\n            doc = getFieldValuesUpdateDocument();\n            doc.user_id = selectedDoc.user_id;\n            doc.status = status;\n            doc[\"signed_by_registrar\"] = true;\n            doc[\"signed_registrar_inn\"] = props.esInn;\n            doc[\"signed_registrar_full_name\"] = props.esUserFullName;\n            doc[\"signed_at_registrar\"] = props.getCurrentFullDateTime();\n            doc[\"status\"] = 4;\n            doc[\"files_directory\"] = dir;\n            let commandJson = {\n              commandType: \"saveDocumentsWithFiles\",\n              session_id: session_id,\n              process_id: process_id,\n              taskID: taskID,\n              userId: userProfile.userId,\n              userRole: userProfile.userRole,\n              blobs: Blobs,\n              directory: dir,\n              variables: {\n                userAction: {\n                  value: \"updateDocument\"\n                },\n                document: {\n                  value: JSON.stringify(doc)\n                },\n                selectedDoc: {\n                  value: JSON.stringify(doc)\n                },\n                status: {\n                  value: 4\n                }\n              }\n            };\n            console.log(\"signTransfetOrder:\", commandJson);\n            props.sendFieldValues(commandJson);\n            props.clearTabData(process_id);\n          }\n        }\n      }\n    } else if (buttonName === \"cancelOrder\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        let checkResult = checkForRequieredFields();\n\n        if (checkResult === true) {\n          setStatus(5);\n          setShowModalEnterPin(true);\n        }\n      }\n    } else if (buttonName === \"createDocument\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"createDocument\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"createDocument:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"signTransferOrder\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: {\n            ok: \"Ок\"\n          }\n        });\n      } else {\n        let checkResult = checkForRequieredFields();\n\n        if (checkResult === true) {\n          if (props.esInn === null) {\n            setShowModalEnterPin(true);\n          } else {\n            let doc = null;\n            let dir = getUUID();\n            let action = \"\";\n            let curSt = 2;\n            let signedBlobs = await signBlobs(props.esUserFullName, props.esInn, props.esExpiredDate);\n\n            if (taskType === \"showTransferOrdersCreatingForm\") {\n              // Create new doc\n              doc = getFieldValuesSaveDocument();\n              doc.files_directory = dir;\n              doc.user_id = userProfile.userId;\n              action = \"saveDocument\";\n              doc.signed_by_depositor = true;\n              doc.signed_depositor_inn = props.esInn;\n              doc.signed_depositor_full_name = props.esUserFullName;\n              doc.signed_at_depositor = props.getCurrentFullDateTime();\n              doc.status = 2;\n            } else {\n              // Update old doc\n              dir = selectedDoc.files_directory;\n              doc = getFieldValuesUpdateDocument();\n              doc.user_id = selectedDoc.user_id;\n              doc.status = status;\n              action = \"updateDocument\";\n              doc.signed_by_registrar = true;\n              doc.signed_registrar_inn = props.esInn;\n              doc.signed_registrar_full_name = props.esUserFullName;\n              doc.signed_at_registrar = props.getCurrentFullDateTime();\n              doc.status = status;\n              doc.files_directory = selectedDoc.files_directory;\n              curSt = status; // Approved || Canceled\n            }\n\n            let commandJson = {\n              commandType: \"saveDocumentsWithFiles\",\n              session_id: session_id,\n              process_id: process_id,\n              taskID: taskID,\n              userId: userProfile.userId,\n              userRole: userProfile.userRole,\n              blobs: signedBlobs,\n              directory: dir,\n              variables: {\n                userAction: {\n                  value: action\n                },\n                document: {\n                  value: JSON.stringify(doc)\n                },\n                selectedDoc: {\n                  value: JSON.stringify(doc)\n                },\n                status: {\n                  value: curSt\n                }\n              }\n            };\n            console.log(\"signTransferOrder:\", commandJson);\n            props.sendFieldValues(commandJson);\n            props.clearTabData(process_id);\n          }\n        }\n      }\n    } else if (buttonName === \"SignTransferOrderSaveButton\") {\n      let doc = null;\n      let dir = getUUID();\n      let action = \"\";\n\n      if (taskType === \"showTransferOrdersCreatingForm\") {\n        doc = getFieldValuesSaveDocument();\n        doc.files_directory = dir;\n        doc.user_id = userProfile.userId;\n        action = \"saveDocument\";\n      } else {\n        dir = selectedDoc.files_directory;\n        doc = getFieldValuesUpdateDocument();\n        doc.files_directory = selectedDoc.files_directory;\n        doc.user_id = selectedDoc.user_id;\n        doc.status = 2;\n        action = \"updateDocument\";\n      }\n\n      let commandJson = {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        directory: dir,\n        variables: {\n          userAction: {\n            value: action\n          },\n          document: {\n            value: doc\n          },\n          selectedDoc: {\n            value: \"\"\n          },\n          status: {\n            value: 2\n          }\n        }\n      };\n      console.log(\"SignTransferOrderSaveButton:\", commandJson);\n      sign(commandJson);\n    } else if (buttonName === \"showTransferOrderReport\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"showTransferOrderReport\"\n          },\n          reportName: {\n            value: selectedDoc.individual === true ? \"Peredatochnoe_Rasporyajenie_FL\" : \"Peredatochnoe_Rasporyajenie_YUL\"\n          },\n          reportVars: {\n            value: \"?id=\" + selectedDoc.id\n          }\n        }\n      };\n      console.log(\"showTransferOrderReport:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"UNKNOWN Button \", buttonName);\n    }\n  }\n\n  async function signBlobs(fullName, inn, expiredDate) {\n    let signedBlobs = [];\n\n    for (let i = 0; i < Blobs.length; i++) {\n      if (Blobs[i].type === \"application/pdf\") {\n        for (let a = 0; a < attachedDocs.length; a++) {\n          if (Blobs[i].name === attachedDocs[a].name) {\n            let formData = new FormData();\n            formData.append(\"formFile\", attachedDocs[a], attachedDocs[a].name); // let url = \"/back/api/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate\n\n            let url = props.api + \"/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate;\n            var requestOptions = {\n              method: 'POST',\n              body: formData,\n              redirect: 'follow'\n            };\n            let signedBlob = await fetch(url, requestOptions).then(response => response.blob()).then(bl => {\n              let pdf = new Blob([bl], {\n                type: \"application/pdf\"\n              });\n\n              async function blobToBase64(blob) {\n                return new Promise((resolve, _) => {\n                  const reader = new FileReader();\n\n                  reader.onloadend = () => resolve(reader.result.split(\",\")[1]);\n\n                  reader.readAsDataURL(blob);\n                });\n              } // let newBlob = {}\n\n\n              let newBlob = blobToBase64(pdf).then(base64 => {\n                return newBlob = {\n                  \"name\": Blobs[i].name,\n                  \"blob\": base64,\n                  \"size\": bl.size,\n                  type: Blobs[i].type\n                };\n              });\n              return newBlob;\n            }).catch(error => console.log('error', error));\n            signedBlobs.push(signedBlob);\n          }\n        }\n      } else {\n        signedBlobs.push(Blobs[i]);\n      }\n    }\n\n    for (let s = 0; s < savedDocs.length; s++) {\n      if (savedDocs[s].type === \"application/pdf\") {\n        // console.log(\"BLOB TO SIGN\", savedDocs[s])\n        let formData = new FormData();\n        formData.append(\"formFile\", savedDocs[s], savedDocs[s].name);\n        let url = props.api + \"/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate;\n        var requestOptions = {\n          method: 'POST',\n          body: formData,\n          redirect: 'follow'\n        };\n        let signedBlob = await fetch(url, requestOptions).then(response => response.blob()).then(bl => {\n          // var url = window.URL.createObjectURL(bl)\n          // var a = document.createElement('a')\n          // a.href = url\n          // a.download = savedDocs[s].name\n          // document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n          // a.click()\n          // a.remove()  //afterwards we remove the element again   \n          let pdf = new Blob([bl], {\n            type: \"application/pdf\"\n          });\n\n          async function blobToBase64(blob) {\n            return new Promise((resolve, _) => {\n              const reader = new FileReader();\n\n              reader.onloadend = () => resolve(reader.result.split(\",\")[1]);\n\n              reader.readAsDataURL(blob);\n            });\n          }\n\n          let newBlob = blobToBase64(pdf).then(base64 => {\n            // console.log(\"BLOB SIGNED\", base64)\n            return newBlob = {\n              \"name\": savedDocs[s].name,\n              \"blob\": base64,\n              \"size\": bl.size,\n              type: savedDocs[s].type\n            };\n          });\n          return newBlob;\n        }).catch(error => console.log('error', error));\n        signedBlobs.push(signedBlob);\n      }\n    } //console.log(\"signedBlobs\", signedBlobs)\n\n\n    return signedBlobs;\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"SignTransferOrderSaveButton\", null);\n    }\n  } // attached documents\n\n\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files;\n    console.log(\"A DOCS\", selectedFiles);\n\n    if (selectedFiles && selectedFiles[0]) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        if (selectedFiles[i].type === \"application/pdf\" || selectedFiles[i].type === \"application/msword\" || selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n          attachedDocs.push(selectedFiles[i]);\n          setAttachedDocs(attachedDocs);\n          setUpdateState(getUUID()); // console.log(\"A DOCS\", attachedDocs)\n        } else {\n          let reader = new FileReader();\n\n          reader.onload = async function (e) {\n            // push new images to list and show in UI\n            let image = {\n              item: /*#__PURE__*/React.createElement(\"img\", {\n                name: selectedFiles[i].name,\n                height: \"150\",\n                width: \"auto\",\n                src: e.target.result,\n                onClick: () => attachedImgClick(selectedFiles[i].name),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1606,\n                  columnNumber: 33\n                }\n              })\n            };\n            attachedImgs.push(image);\n            setAttachedImgs(attachedImgs);\n            setUpdateState(getUUID()); // console.log(\"IMGLIST\", attachedImgs)\n          };\n\n          reader.readAsDataURL(selectedFiles[i]);\n          attachedImgsFiles.push(selectedFiles[i]); // pushAttachedImage(selectedFiles[i])\n\n          setAttachedImgsFiles(attachedImgsFiles); // console.log(\"A IMGS\", attachedImgsFiles)\n        }\n\n        pushNewBlob(selectedFiles[i]);\n      }\n    }\n  }\n\n  async function pushNewBlob(f) {\n    var blobToBase64 = function (f, cb) {\n      let reader = new FileReader();\n\n      reader.onload = function () {\n        // converts blob to base64\n        var dataUrl = reader.result;\n        var base64 = dataUrl.split(\",\")[1];\n        cb(base64);\n      };\n\n      reader.readAsDataURL(f);\n    };\n\n    blobToBase64(f, async function (base64) {\n      // encode blobs to send to socket\n      let newBlob = {\n        \"name\": f.name,\n        \"blob\": base64,\n        \"size\": f.size,\n        type: f.type\n      };\n      Blobs.push(newBlob);\n      setBlobs(Blobs);\n      console.log(\"BLOBS\", Blobs);\n    });\n  }\n\n  async function attachedImgClick(name) {\n    for (let l = 0; l < attachedImgs.length; l++) {\n      if (attachedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", attachedImgs[l]);\n        setSelectedImg({\n          name: attachedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: attachedImgs[l].item.props.src\n        });\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function attachedDocsList() {\n    // console.log(\"A DOCS\", attachedDocs)\n    let selDocsList = [];\n\n    for (let i = 0; i < attachedDocs.length; i++) {\n      selDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1662,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1663,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1664,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1665,\n          columnNumber: 15\n        }\n      }, attachedDocs[i].name + \" \", \"(\" + Math.round(attachedDocs[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1668,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1669,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        onClick: () => deleteAttachedDoc(attachedDocs[i].name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1670,\n          columnNumber: 19\n        }\n      })))))));\n    }\n\n    return selDocsList;\n  }\n\n  function attachedImgsList() {\n    var imgs = [];\n\n    for (let l = 0; l < attachedImgs.length; l++) {\n      imgs.push( /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1684,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1685,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1686,\n          columnNumber: 13\n        }\n      }, attachedImgs[l].item)), /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1696,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => deleteAttachedImage(attachedImgs[l].item.props.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1697,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DeleteForeverIcon, {\n        fontSize: \"Large\",\n        style: {\n          color: \"black\",\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1698,\n          columnNumber: 17\n        }\n      }))))));\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1707,\n          columnNumber: 9\n        }\n      }, imgs);\n    }\n  }\n\n  function deleteAttachedDoc(name) {\n    let newDocList = [];\n\n    for (let i = 0; i < attachedDocs.length; i++) {\n      if (name !== attachedDocs[i].name) {\n        newDocList.push(attachedDocs[i]);\n      } else {\n        deleteBlob(attachedDocs[i].name);\n      }\n    } // attachedDocs = newDocList\n\n\n    setAttachedDocs(newDocList); // setUpdateState(getUUID())\n    // console.log(\"FILES\", newDocList)\n  }\n\n  function deleteAttachedImage(name) {\n    let newImgList = [];\n    let newImgFilesList = [];\n\n    for (let i = 0; i < attachedImgs.length; i++) {\n      if (name !== attachedImgs[i].item.props.name) {\n        newImgList.push(attachedImgs[i]);\n        newImgFilesList.push(attachedImgsFiles[i]);\n      } else {\n        deleteBlob(attachedImgs[i].item.props.name);\n      }\n    } // deleteBlob(name)\n    // attachedImgs = newImgList\n\n\n    setAttachedImgs(newImgList); // attachedImgsFiles = newImgFilesList\n\n    setAttachedImgsFiles(newImgFilesList); // setUpdateState(getUUID())\n    // console.log(\"IMGS\", newImgFilesList)\n  }\n\n  function deleteBlob(name) {\n    console.log(\"NAME\", name);\n    let newBlobs = [];\n\n    for (let b = 0; b < Blobs.length; b++) {\n      if (Blobs[b].name !== undefined) {\n        if (name !== Blobs[b].name) {\n          newBlobs.push(Blobs[b]);\n        } else {\n          console.log(\"DEL\", Blobs[b].name);\n        }\n      }\n    }\n\n    console.log(\"BLOBS\", newBlobs); // Blobs = newBlobs\n\n    setBlobs(newBlobs); // setUpdateState(getUUID())\n  } // Previosly saved documents\n\n\n  function convertBase64ToFile(dataurl, fileName) {\n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    let convFile = new File([u8arr], fileName, {\n      type: mime\n    });\n    handleAttachSavedFile(convFile);\n  }\n\n  function handleAttachSavedFile(file) {\n    if (file.type === \"application/pdf\" || file.type === \"application/msword\" || file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n      savedDocs.push(file);\n      setSavedDocs(savedDocs);\n    } else {\n      savedImagesFiles.push(file);\n      setSavedImagesFiles(savedImagesFiles);\n      pushSavedImage(file);\n    }\n  }\n\n  async function pushSavedImage(f) {\n    let reader = new FileReader();\n\n    reader.onload = async function (e) {\n      // push new images to list and show in UI\n      let image = {\n        item: /*#__PURE__*/React.createElement(\"img\", {\n          name: f.name,\n          height: \"150\",\n          width: \"auto\",\n          src: e.target.result,\n          onClick: () => savedImgClick(f.name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1798,\n            columnNumber: 27\n          }\n        })\n      };\n      savedImgs.push(image); // console.log(\"IMGLIST\", savedImgs)\n\n      setSavedImgs(savedImgs);\n      setUpdateState(getUUID());\n    };\n\n    reader.readAsDataURL(f);\n  }\n\n  async function savedImgClick(name) {\n    for (let l = 0; l < savedImgs.length; l++) {\n      if (savedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", savedImgs[l]);\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        });\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function savedDocsList() {\n    // console.log(\"SAVEDOCS\", savedDocs)\n    let savedDocsList = [];\n\n    for (let i = 0; i < savedDocs.length; i++) {\n      savedDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1827,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1828,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1829,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1830,\n          columnNumber: 15\n        }\n      }, savedDocs[i].name + \" \", \"(\" + Math.round(savedDocs[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1833,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1834,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        onClick: () => deleteSavedDoc(savedDocs[i].name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1835,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1838,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(savedDocs[i]),\n        download: savedDocs[i].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1839,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1844,\n          columnNumber: 19\n        }\n      })))))));\n    }\n\n    return savedDocsList;\n  }\n\n  function savedImgsList() {\n    // console.log(\"SAVEDIMGS\", savedImgs)\n    var imgs = [];\n\n    for (let l = 0; l < savedImgs.length; l++) {\n      imgs.push( /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1858,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1859,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1860,\n          columnNumber: 13\n        }\n      }, savedImgs[l].item)), /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1864,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => deleteSavedImage(savedImgs[l].item.props.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1866,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DeleteForeverIcon, {\n        fontSize: \"Large\",\n        style: {\n          color: \"black\",\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1867,\n          columnNumber: 17\n        }\n      }))))));\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1883,\n          columnNumber: 9\n        }\n      }, imgs);\n    }\n  }\n\n  function deleteSavedDoc(name) {\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: {\n        ok: \"Да\",\n        cancel: \"Отмена\"\n      }\n    }).then(click => {\n      if (click === \"ok\") {\n        let newDocList = [];\n\n        for (let i = 0; i < savedDocs.length; i++) {\n          if (name !== savedDocs[i].name) {\n            newDocList.push(savedDocs[i]);\n          }\n        }\n\n        setSavedDocs(newDocList);\n        let commandJson = {\n          commandType: \"deleteSavedDoc\",\n          userId: userProfile.userId,\n          directory: selectedDoc.files_directory,\n          fileName: name\n        };\n        props.sendFieldValues(commandJson);\n      }\n    });\n  }\n\n  function deleteSavedImage(name) {\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: {\n        ok: \"Да\",\n        cancel: \"Отмена\"\n      }\n    }).then(click => {\n      if (click === \"ok\") {\n        let newImgList = [];\n\n        for (let i = 0; i < savedImgs.length; i++) {\n          if (name !== savedImgs[i].item.props.name) {\n            newImgList.push(savedImgs[i]);\n          }\n        }\n\n        setSavedImgs(newImgList); // setUpdateState(getUUID())\n\n        let commandJson = {\n          commandType: \"deleteSavedDoc\",\n          userId: userProfile.userId,\n          directory: selectedDoc.files_directory,\n          fileName: name\n        };\n        props.sendFieldValues(commandJson);\n      }\n    });\n  } // Create grid form components\n\n\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name];\n    let name = contentItem.name;\n    let type = contentItem.type;\n\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1948,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label;\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1967,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1975,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1986,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1989,\n            columnNumber: 17\n          }\n        }, value);\n      }\n    }\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1;\n    }\n\n    console.log(\"SORT\", property, sortOrder, type);\n\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder;\n        } else {\n          let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n          let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n          var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n          return result * sortOrder;\n        }\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type)); // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1;\n      console.log(\"IT\", i, gridForm.sections[nextS]);\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2099,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: isSearchForm === true ? 12 : 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      style: {\n        width: \"100%\",\n        \"border-collapse\": \"collapse\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2102,\n        columnNumber: 13\n      }\n    }, isSearchForm === false && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2105,\n        columnNumber: 19\n      }\n    }, Form.label)), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2108,\n        columnNumber: 15\n      }\n    }, Form.sections.map(section => {\n      return sectionBuilder(section);\n    }))))));\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2142,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2160,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2161,\n        columnNumber: 9\n      }\n    }, section.contents.map(contentItem => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2165,\n        columnNumber: 15\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2170,\n        columnNumber: 15\n      }\n    }, contentBuilder(contentItem))))));\n  } // Creating components by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleTextChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2185,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2218,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2231,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        name: contentItem.name,\n        onKeyPress: onKeyPressInt,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        } // defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        // onBlur={handleIntChange}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleIntChange,\n        InputProps: {\n          inputComponent: IntegerFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2242,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Float\") {\n      console.log(\"FLOAT VAL\", fieldValue[contentItem.name]);\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressFloat,\n        name: contentItem.name // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n        // onBlur={handleFloatChange}\n        // value={fieldValue[contentItem.name]}\n        ,\n        value: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onChange: handleFloatChange,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: FloatFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2259,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressDateTime,\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2275,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        value: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2291,\n          columnNumber: 9\n        }\n      });\n    }\n  } // Key press handlers for some fields\n\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressDateTime(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressInt(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let int = parseInt(stringNum);\n          fieldValue[event.target.name] = int;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressFloat(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let float = parseFloat(stringNum);\n          fieldValue[event.target.name] = float;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function calculateColSpan(contents) {\n    let num = 0;\n\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1;\n      }\n    }\n\n    return num;\n  }\n\n  const handleContextMenu = event => {\n    event.preventDefault();\n    console.log(\"CONT MENU\");\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null); // console.log(\"CLOSE\", fieldValue)\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name];\n      }\n    }\n\n    console.log(\"nForm\", gridForm);\n    setGridForm(gridForm);\n    setUpdateState(getUUID());\n  };\n\n  function createMenuItems() {\n    let columns = [];\n    columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2387,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: 5,\n        cursor: \"pointer\"\n      },\n      name: \"selectAll\",\n      onClick: () => handleTableCheckboxChange(\"selectAll\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2388,\n        columnNumber: 9\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2395,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: \"selectAll\",\n      onChange: handleGridCheckboxChange,\n      checked: gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2396,\n        columnNumber: 11\n      }\n    }))));\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name;\n        columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2409,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            paddingLeft: 5,\n            cursor: \"pointer\",\n            background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\"\n          },\n          name: name,\n          onClick: () => handleTableCheckboxChange(name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2410,\n            columnNumber: 13\n          }\n        }, gridForm.sections[s].contents[c].label), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2417,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          style: {\n            maxWidth: 20,\n            height: 15,\n            color: \"green\"\n          },\n          name: name,\n          onChange: handleGridCheckboxChange,\n          checked: gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2418,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n\n    return columns;\n  }\n\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId));\n  }\n\n  const handleGridCheckboxChange = event => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = {\n        [event.target.name]: event.target.checked\n      };\n\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name];\n      } // console.log(\"selectAll\", newFields)\n\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleTableCheckboxChange = name => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue\n      };\n\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name];\n      }\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [name]: !gridFieldValue[name]\n      });\n    }\n  };\n\n  if (updateState !== null) {\n    try {\n      return /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2464,\n          columnNumber: 9\n        }\n      }, isSearchForm !== null && isSearchForm === true ? /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2469,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2470,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        expanded: accordionExpanded,\n        onChange: () => handleExpandAccordion(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2471,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AccordionSummary, {\n        expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2473,\n            columnNumber: 33\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2472,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2475,\n          columnNumber: 21\n        }\n      }, Form.label)), /*#__PURE__*/React.createElement(AccordionDetails, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2477,\n          columnNumber: 19\n        }\n      }, getForm())))) : getForm(), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2486,\n          columnNumber: 11\n        }\n      }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n        name: button.name,\n        variant: \"outlined\",\n        onClick: () => buttonClick(button.name, null),\n        style: {\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2488,\n          columnNumber: 15\n        }\n      }, button.label))), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n        style: {\n          paddingTop: 3,\n          cursor: \"pointer\"\n        },\n        onClick: () => buttonClick(\"updateDocList\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2504,\n          columnNumber: 13\n        }\n      }), showAttachedDocuments === true && /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2507,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2508,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2509,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.importFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2510,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        accept: \"image/*, application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        className: classes.inputFile,\n        id: buttonFilesWordPdfImgId,\n        multiple: true,\n        type: \"file\",\n        onChange: handleAttachFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2511,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: buttonFilesWordPdfImgId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2519,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        component: \"span\",\n        variant: \"outlined\",\n        style: {\n          margin: 3,\n          color: \"white\",\n          backgroundColor: \"#BB7100\",\n          borderColor: \"#161C87\",\n          height: 32,\n          fontSize: 12\n        },\n        endIcon: /*#__PURE__*/React.createElement(AttachFileIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2531,\n            columnNumber: 34\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2520,\n          columnNumber: 23\n        }\n      }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B\"))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2538,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2539,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2540,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2541,\n          columnNumber: 21\n        }\n      }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"), attachedDocsList(), attachedImgsList()))), showSavedDocuments === true && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2548,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2549,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2550,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2551,\n          columnNumber: 23\n        }\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"), savedDocsList(), savedImgsList())))), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2561,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2562,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2563,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"500px\",\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2564,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        size: \"small\",\n        class: \"main-table-style\",\n        id: gridTableId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2565,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-style\",\n        style: {\n          position: \"sticky\",\n          top: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2570,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2572,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-first-child\",\n        onContextMenu: ev => handleContextMenu(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2573,\n          columnNumber: 27\n        }\n      }), gridForm.sections.map((section, index) => {\n        let showSection = checkToShowSection(section);\n\n        if (showSection === true) {\n          let lastSection = checkSectionOnLastChild(index);\n          return /*#__PURE__*/React.createElement(\"td\", {\n            colSpan: calculateColSpan(section.contents),\n            class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n            onContextMenu: ev => handleContextMenu(ev),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2579,\n              columnNumber: 33\n            }\n          }, section.label);\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2591,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-style-2row\",\n        rowSpan: \"2\",\n        style: {\n          \"minWidth\": \"65px\"\n        },\n        onContextMenu: ev => handleContextMenu(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2592,\n          columnNumber: 27\n        }\n      }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            rowSpan: \"2\",\n            onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n            onContextMenu: ev => handleContextMenu(ev),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2604,\n              columnNumber: 35\n            }\n          }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2610,\n              columnNumber: 119\n            }\n          }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2610,\n              columnNumber: 172\n            }\n          }) : \"\");\n        }\n      })))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2618,\n          columnNumber: 23\n        }\n      }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          \"height\": 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2621,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          \"maxWidth\": 34,\n          \"border-bottom\": \"1px solid grey\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2622,\n          columnNumber: 31\n        }\n      }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n        key: button.name,\n        name: button.name,\n        variant: \"outlined\" // id={dataItem.id}\n        ,\n        value: button.name,\n        onClick: () => buttonClick(button.name, dataItem),\n        style: {\n          margin: 1,\n          height: 24,\n          fontSize: 10,\n          maxWidth: 32,\n          backgroundColor: button.backgroundColor,\n          borderColor: \"darkgreen\",\n          color: \"darkgreen\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2625,\n          columnNumber: 37\n        }\n      }, button.label))), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: keyGen(4),\n            align: \"left\",\n            style: {\n              color: \"black\",\n              fontSize: 12,\n              \"text-align\": \"center\",\n              \"border-bottom\": \"1px solid grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2649,\n              columnNumber: 39\n            }\n          }, getGridFormItems(dataItem, contentItem));\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2662,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2663,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2664,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        style: {\n          background: \"#047535\",\n          color: \"white\",\n          height: 28\n        },\n        onClick: () => downloadExcel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2665,\n          columnNumber: 25\n        }\n      }, \"\\u0412 EXCEL\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2672,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          minWidth: 90,\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2673,\n          columnNumber: 25\n        }\n      }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2675,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        style: {\n          minWidth: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2676,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(GridSelect, {\n        onChange: handleChangeRowsPerPage,\n        style: {\n          height: 25,\n          color: \"black\"\n        },\n        value: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2680,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2685,\n          columnNumber: 29\n        }\n      }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2686,\n          columnNumber: 29\n        }\n      }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2687,\n          columnNumber: 29\n        }\n      }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2688,\n          columnNumber: 29\n        }\n      }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2689,\n          columnNumber: 29\n        }\n      }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2690,\n          columnNumber: 29\n        }\n      }, \"500\")))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2695,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2696,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowFirstClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2697,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n        style: {\n          fontSize: \"large\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2698,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2702,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2703,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowLeftClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2704,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2705,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"black\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2709,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          maxWidth: 25\n        },\n        value: page,\n        onChange: handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2710,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2712,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2713,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => GoToPage(),\n        variant: \"outlined\",\n        style: {\n          height: 22,\n          backgroundColor: \"#D1D6D6\",\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2714,\n          columnNumber: 27\n        }\n      }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2726,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2727,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowRightClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2728,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2729,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"black\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2733,\n          columnNumber: 23\n        }\n      }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount(), \" \\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList.length))), /*#__PURE__*/React.createElement(Menu, {\n        anchorEl: anchorEl,\n        open: openMenu,\n        onClose: handleCloseMenu,\n        MenuListProps: {\n          'aria-labelledby': 'basic-button'\n        },\n        style: {\n          paddingLeft: \"100px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2737,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2746,\n          columnNumber: 21\n        }\n      }, createMenuItems()))))), /*#__PURE__*/React.createElement(Modal, {\n        style: {\n          paddingLeft: \"500px\",\n          paddingTop: \"50px\",\n          height: 700,\n          width: 500\n        },\n        open: openModal,\n        onClose: handleCloseModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2754,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.imagePaper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2759,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        name: selectedImg.name,\n        height: selectedImg.height,\n        width: \"auto\",\n        src: selectedImg.src,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2760,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Modal, {\n        open: showModalEnterPin,\n        onClose: handleCloseModalEnterPin,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2763,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: modalStyle,\n        className: classes.modal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2769,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        id: \"simple-modal-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2770,\n          columnNumber: 15\n        }\n      }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        style: {\n          width: \"100%\"\n        },\n        error: wrongPin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2771,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"outlined-adornment-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2772,\n          columnNumber: 17\n        }\n      }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n        type: showPin ? 'text' : 'password',\n        defaultValue: rutokenPin,\n        onChange: handlePinChange,\n        onKeyPress: onKeyPressModalEnterPin,\n        autoFocus: true,\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2780,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPin,\n          edge: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2781,\n            columnNumber: 23\n          }\n        }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2786,\n            columnNumber: 36\n          }\n        }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2786,\n            columnNumber: 53\n          }\n        }))),\n        labelWidth: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2773,\n          columnNumber: 17\n        }\n      })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2793,\n          columnNumber: 37\n        }\n      }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        onClick: () => buttonClick(\"SignTransferOrderSaveButton\"),\n        style: {\n          margin: 3,\n          height: 32,\n          fontSize: 12,\n          color: \"white\",\n          backgroundColor: \"#2862F4\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2794,\n          columnNumber: 15\n        }\n      }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        onClick: handleCloseModalEnterPin,\n        style: {\n          margin: 3,\n          height: 32,\n          fontSize: 12,\n          color: \"white\",\n          backgroundColor: \"#E73639\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2806,\n          columnNumber: 15\n        }\n      }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))), /*#__PURE__*/React.createElement(Snackbar, {\n        open: showSnackBar,\n        onClose: () => handleCloseSnackBar(),\n        autoHideDuration: 1200,\n        message: snackBarMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2820,\n          columnNumber: 11\n        }\n      }));\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2831,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","FormControl","Snackbar","NumberFormat","PropTypes","Card","Modal","Menu","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","AttachFileIcon","MenuItem","FirstPageIcon","ArrowForwardIosIcon","ArrowBackIosIcon","LinearProgress","IconButton","CloseIcon","DeleteForeverIcon","GetAppIcon","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","ArrowUpwardRoundedIcon","GridSelect","TextField","Select","Checkbox","FormControlLabel","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","swal","Tooltip","rutoken","numberToWordsRu","tableToExcel","generator","require","plugin","rutokenHandle","certHandle","certData","cmsData","FloatFormat","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","IntegerFormat","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","importFile","inputFile","display","modal","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","getModalStyle","top","left","transform","classes","userProfile","session_id","userTask","process_id","taskID","Form","setForm","formType","buttons","selectedDoc","setSelectedDoc","status","setStatus","docId","setDocId","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","gridForm","setGridForm","gridFormButtons","enumData","enumOptions","setEnumOptions","gridFormEnumData","fieldValue","setFieldValue","selectedOptions","setSelectedOptions","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","sectionColor","updateState","setUpdateState","taskType","showSavedDocuments","setShowSavedDocuments","showAttachedDocuments","setShowAttachedDocuments","openModal","setOpenModal","attachedImgs","setAttachedImgs","attachedImgsFiles","setAttachedImgsFiles","attachedDocs","setAttachedDocs","Blobs","setBlobs","selectedImg","setSelectedImg","savedImgs","setSavedImgs","savedImagesFiles","setSavedImagesFiles","savedDocs","setSavedDocs","buttonFilesWordPdfImgId","setButtonFilesWordPdfImgId","getUUID","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","modalStyle","isSearchForm","setIsSearchForm","accordionExpanded","setAccordionExpanded","anchorEl","setAnchorEl","openMenu","Boolean","gridTableId","gridFieldValue","setGridFieldValue","console","log","parsedData","JSON","parse","s","parseInt","p","sortedDocList","sort","dynamicSort","filterDocList","fetchBySize","er","callErrorToast","undefined","parsedSelectedDoc","fields","sections","length","c","contents","fieldName","convertNumberToText","registrar_authorized_person_name","userRole","firstName","lastName","middleName","newEnumOptions","i","options","d","data","push","id","label","getLostEnumName","extension","convertBase64ToFile","content","fileName","newFields","show","enumI","type","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","handleExpandAccordion","handleOpenModal","handleCloseModal","handleCloseModalEnterPin","handlePinChange","event","handleClickShowPin","sign","commandJson","enumerateDevices","devices","alert","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","inn","fullName","subject","rdn","setEsInn","setEsUserFullName","setEsExpiredDate","validNotAfter","substring","orderToSign","variables","document","getCurrentFullDateTime","signedBlobs","signBlobs","blobs","stringify","swAllert","sendFieldValues","clearTabData","DATA_FORMAT_PLAIN","logout","handleError","reason","isNaN","message","errorCodes","PIN_INCORRECT","handleCheckboxChange","leUnblockList","inUnblockList","fName","unblock","ul","edit","required","checked","num","converted","convert","currency","currencyNameCases","fractionalPartNameCases","declension","currencyNounGender","integer","showNumberParts","fractional","handleIntChange","stringNum","toString","replace","int","handleFloatChange","handleTextChange","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","issuerId","issuer","security_type","registrar","j","h","issuerOption","noIssuerOption","y","handleDateTimeChange","fullDate","parseDate","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","convertedDate","getContentType","key","fetchFrom","fetchTo","Data","newDocList","Object","keys","match","contentType","searchField","toLowerCase","dataField","includeSearch","includes","instrStatus","statusSelected","fieldStatus","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","handleCloseSnackBar","getPageAmount","pagesFloat","mathRoundOfPages","Math","round","uuidv1","keyGen","password","generate","numbers","text","icon","ok","getFieldValuesSaveDocument","docToSave","getFieldValuesUpdateDocument","docToUpdate","checkForRequieredFields","checkedSuccessfuly","buttonClick","buttonName","item","checkResult","dir","doc","files_directory","user_id","userId","commandType","directory","userAction","searchDoc","updateBody","operDayIsOpened","esInn","esUserFullName","action","curSt","esExpiredDate","signed_by_depositor","signed_depositor_inn","signed_depositor_full_name","signed_at_depositor","signed_by_registrar","signed_registrar_inn","signed_registrar_full_name","signed_at_registrar","reportName","individual","reportVars","authorization","expiredDate","a","formData","FormData","append","url","api","requestOptions","method","body","redirect","signedBlob","fetch","response","blob","bl","pdf","Blob","blobToBase64","_","reader","FileReader","onloadend","split","readAsDataURL","newBlob","base64","catch","error","onKeyPressModalEnterPin","code","charCode","handleAttachFile","e","selectedFiles","files","onload","image","attachedImgClick","pushNewBlob","f","cb","dataUrl","l","src","newId","attachedDocsList","selDocsList","paddingLeft","minWidth","color","fontWeight","fontSize","deleteAttachedDoc","attachedImgsList","imgs","deleteAttachedImage","deleteBlob","newImgList","newImgFilesList","newBlobs","b","dataurl","arr","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","convFile","File","handleAttachSavedFile","file","pushSavedImage","savedImgClick","savedDocsList","deleteSavedDoc","URL","createObjectURL","savedImgsList","deleteSavedImage","cancel","click","getGridFormItems","dataItem","contentItem","maxWidth","Time","getEnumLabel","property","sortOrder","dateA","timeInSecA","getTime","dateB","timeInSecB","labelA","labelB","sortDataByColumn","checkToShowSection","section","showSection","checkSectionOnLastChild","lastSection","nextS","getForm","maxHeight","map","sectionBuilder","bodyBuilder","contentBuilder","onKeyPressText","selectedOption","menuPortal","base","zIndex","onKeyPressInt","inputComponent","onKeyPressFloat","onKeyPressDateTime","shrink","parseFullDateTime","float","parseFloat","calculateColSpan","handleContextMenu","preventDefault","currentTarget","handleCloseMenu","createMenuItems","columns","cursor","handleTableCheckboxChange","handleGridCheckboxChange","downloadExcel","getElementById","index","fontColor","paddingTop","borderColor","ev","marginBottom","imagePaper"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/TreansferOrders/TreansferOrders.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport Modal from \"@material-ui/core/Modal\";\nimport Menu from '@mui/material/Menu';\n// Accordion\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Icons\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// Form components\nimport GridSelect from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n// PIN components\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n// Libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport Tooltip from '@material-ui/core/Tooltip';\nimport * as rutoken from \"rutoken\";\nimport numberToWordsRu from 'number-to-words-ru'; // https://www.npmjs.com/package/number-to-words-ru\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\nvar generator = require('generate-password');\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction FloatFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  },\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n}))\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nexport default (props) => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [formType] = useState(props.userTask.formType)\n  const [buttons] = useState(props.userTask.buttons)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [status, setStatus] = useState(2)\n  const [docId, setDocId] = useState(props.userTask.docId)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [enumData] = useState(props.userTask.enumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [fieldValue, setFieldValue] = useState({})\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [taskType] = useState(props.userTask.taskType)\n  const [showSavedDocuments, setShowSavedDocuments] = useState(false)\n  const [showAttachedDocuments, setShowAttachedDocuments] = useState(false)\n  const [openModal, setOpenModal] = useState(false)\n  // files\n  const [attachedImgs, setAttachedImgs] = useState([])\n  const [attachedImgsFiles, setAttachedImgsFiles] = useState([])\n  const [attachedDocs, setAttachedDocs] = useState([])\n  const [Blobs, setBlobs] = useState([])\n  const [selectedImg, setSelectedImg] = useState({})\n  const [savedImgs, setSavedImgs] = useState([])\n  const [savedImagesFiles, setSavedImagesFiles] = useState([])\n  const [savedDocs, setSavedDocs] = useState([])\n  const [buttonFilesWordPdfImgId, setButtonFilesWordPdfImgId] = useState(getUUID())\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n  // modals\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n  const [modalStyle] = useState(getModalStyle)\n\n  const [isSearchForm, setIsSearchForm] = useState(null)\n  const [accordionExpanded, setAccordionExpanded] = useState(false)\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n  const [gridTableId] = useState(getUUID())\n  const [gridFieldValue, setGridFieldValue] = useState({})\n\n  // Set data from props to state of component\n  useEffect(() => {\n    console.log(\"TreansferOrders PROPS\", props)\n    // setButtonFilesWordPdfImgId(getUUID())\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        setIsSearchForm(true)\n        setFilteredDocList(parsedData)\n        setInitialDocList(parsedData)\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", -1, \"Int\"))\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc))\n        }\n        else { fetchBySize(0, s - 1, sortedDocList) }\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    else { setIsSearchForm(false) }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      let fields = {}\n      // let Form = props.userTask.Form\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name\n          fields[fieldName] = parsedSelectedDoc[fieldName]\n        }\n      }\n      if (props.userTask.taskType !== \"showTransferOrdersSearchForm\") {\n        fields[\"quantity_text\"] = convertNumberToText(parsedSelectedDoc[\"quantity_int\"])\n      }\n      if (props.userTask.taskType === \"showTransferOrdersEditForm\" &&\n        parsedSelectedDoc.registrar_authorized_person_name === null && formType === \"edit\") {\n        if (userProfile.userRole === \"4\") {\n          fields.registrar_authorized_person_name = userProfile.firstName + \" \" + userProfile.lastName + \" \" + userProfile.middleName\n          console.log(\"US NAME\", fields)\n        }\n      }\n      console.log(\"SDOC\", parsedSelectedDoc)\n      setSelectedDoc(parsedSelectedDoc)\n      setFieldValue(fields)\n    }\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {}\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }]\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            })\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n    }\n    if (props.userTask.taskType === \"showTransferOrdersCreatingForm\") {\n      setShowAttachedDocuments(true)\n    }\n    if (props.userTask.taskType === \"showTransferOrdersEditForm\") {\n      setShowAttachedDocuments(true)\n      setShowSavedDocuments(true)\n    }\n    if (props.userTask.savedDocs.length > 0) {\n      for (let d = 0; d < props.userTask.savedDocs.length; d++) {\n        let extension = props.userTask.savedDocs[d].extension\n        if (extension === \".png\") {\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".jpeg\" || extension === \".jpg\") {\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".doc\") {\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".docx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".xlsx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if (extension === \".pdf\" || extension === \".PDF\") {\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n      }\n    }\n    if (gridForm !== null) {\n      let newFields = {}\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show\n        }\n      }\n      setGridFieldValue(newFields)\n    }\n    setUpdateState(getUUID())\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n  // RuToken functions\n  rutoken.ready\n    // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n    .then(function () {\n      if (window.chrome || typeof InstallTrigger !== 'undefined') {\n        return rutoken.isExtensionInstalled()\n      } else {\n        return Promise.resolve(true)\n      }\n    })\n    // Проверка установки Рутокен Плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.isPluginInstalled()\n      } else {\n        // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\")\n      }\n    })\n    // Загрузка плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.loadPlugin();\n      } else {\n        // alert(\"Не удаётся найти Плагин\");\n      }\n    })\n    //Можно начинать работать с плагином\n    .then(function (result) {\n      if (!result) {\n        return // alert(\"Не удаётся загрузить Плагин\");\n      } else {\n        plugin = result;\n        return Promise.resolve();\n      }\n    })\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded)\n  }\n  // Images MODAL\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n  const handleCloseModal = () => {\n    setOpenModal(false)\n  }\n  // Rutoken MODAL\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin() {\n    setShowPin(!showPin)\n  }\n  // Sign transfer order with rutoken\n  async function sign(commandJson) {\n    // Перебор подключенных Рутокенов\n    if (plugin !== undefined) {\n      plugin.enumerateDevices()\n        .then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0])\n          } else {\n            alert(\"Рутокен не обнаружен\")\n          }\n        })\n        // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN)\n        })\n        // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve()\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin) // 240699\n          }\n        })\n        // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC)\n        })\n        .then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0]\n            return plugin.parseCertificate(rutokenHandle, certs[0])\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        })\n        // Подписание данных из текстового поля на первом найденом сертификате\n        .then(async function (certs) {\n          certData = certs\n          if (certHandle.length > 0) {\n            var options = {}\n            let inn = \"\"\n            let fullName = \"\"\n            for (let i = 0; i < certData.subject.length; i++) {\n              if (certData.subject[i].rdn === \"serialNumber\") {\n                inn = certData.subject[i].value\n              }\n              if (certData.subject[i].rdn === \"commonName\") {\n                fullName = certData.subject[i].value\n              }\n            }\n            props.setEsInn(inn)\n            props.setEsUserFullName(fullName)\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n            let orderToSign = commandJson.variables.document.value\n            if (taskType === \"showTransferOrdersCreatingForm\") {\n              orderToSign[\"signed_by_depositor\"] = true\n              orderToSign[\"signed_depositor_inn\"] = inn\n              orderToSign[\"signed_depositor_full_name\"] = fullName\n              orderToSign[\"signed_at_depositor\"] = props.getCurrentFullDateTime()\n              orderToSign[\"status\"] = status\n              commandJson.variables.status.value = 2 // Sent to CD\n            }\n            else {\n              orderToSign[\"signed_by_registrar\"] = true\n              orderToSign[\"signed_registrar_inn\"] = inn\n              orderToSign[\"signed_registrar_full_name\"] = fullName\n              orderToSign[\"signed_at_registrar\"] = props.getCurrentFullDateTime()\n              orderToSign[\"status\"] = status\n              commandJson.variables.status.value = status // Approved || Canceled\n            }\n            let signedBlobs = await signBlobs(fullName, inn, certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n            console.log(\"S BLOBS\", signedBlobs)\n            commandJson.blobs = signedBlobs\n            commandJson.variables.document.value = JSON.stringify(orderToSign)\n            commandJson.variables.selectedDoc.value = JSON.stringify(orderToSign)\n\n            handleCloseModalEnterPin()\n            swAllert(\"Передаточное распоряжение успешно подписано!\", \"success\")\n            props.sendFieldValues(commandJson)\n            props.clearTabData(commandJson.process_id)\n\n            return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options)\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\")\n          }\n        })\n        // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle)\n        }, handleError)\n    }\n    else { props.callErrorToast(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\") }\n  }\n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          console.log(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  // INPUT HANDLERS\n  const handleCheckboxChange = (event) => {\n    let leUnblockList = [\"individual\", \"legal_entity\", \"quantity_int\", \"security\",\n      \"registered_person\", \"address\", \"person_registered_authority\",\n      \"registration_number_date\", \"quantity_text\", \"encumbrances_on_securities\", \"basis\"] // Юр\n\n    let inUnblockList = [\"individual\", \"legal_entity\", \"quantity_int\", \"security\",\n      \"registered_person\", \"address\", \"document_type\", \"document_series\", \"document_number\",\n      \"document_issue_date\", \"document_issue_authority\", //  \"document_issue_place\", \n      \"quantity_text\", \"encumbrances_on_securities\", \"basis\"] // Физ\n\n    if (event.target.name === \"legal_entity\") {\n      fieldValue[\"individual\"] = false\n      if (formType === \"edit\") {\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let fName = Form.sections[s].contents[c].name\n            let unblock = false\n\n            for (let ul = 0; ul < leUnblockList.length; ul++) {\n              if (fName === leUnblockList[ul]) {\n                unblock = true\n                break\n              }\n            }\n            if (unblock === true) { // unblock fields for legal entity\n              Form.sections[s].contents[c].edit = true\n              Form.sections[s].contents[c].required = true\n            }\n            else {\n              Form.sections[s].contents[c].edit = false // block fields for individual\n              Form.sections[s].contents[c].required = false\n            }\n            // if(unblock === true){\n            //   // console.log(\"Name\", fName)\n            //   Form.sections[s].contents[c].edit = true\n            //   Form.sections[s].contents[c].required = true\n            //   // Form.sections[s].contents[c].show = true\n            // }\n            // else{\n            //   if(fName !== \"individual\" && fName !== \"legal_entity\"){\n            //     Form.sections[s].contents[c].edit = false\n            //     Form.sections[s].contents[c].required = false\n            //     // Form.sections[s].contents[c].show = false\n            //   }\n            // }\n          }\n        }\n        setForm(Form)\n      }\n      // let newFieldValue = fieldValue\n      // for(let ul=0; ul<leUnblockList.length; ul++){\n      //   newFieldValue[leUnblockList[ul]] = null\n      // }\n      // setFieldValue(newFieldValue)\n    }\n    if (event.target.name === \"individual\") {\n      fieldValue[\"legal_entity\"] = false\n      if (formType === \"edit\") {\n        for (let s = 0; s < Form.sections.length; s++) {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            let fName = Form.sections[s].contents[c].name\n            let unblock = false\n\n            for (let ul = 0; ul < inUnblockList.length; ul++) {\n              if (fName === inUnblockList[ul]) {\n                unblock = true\n                break\n              }\n            }\n            if (unblock === true) { // unblock fields for legal entity\n              Form.sections[s].contents[c].edit = true\n              Form.sections[s].contents[c].required = true\n            }\n            else {\n              Form.sections[s].contents[c].edit = false // block fields for individual\n              Form.sections[s].contents[c].required = false\n            }\n            // if(unblock === true){\n            //   Form.sections[s].contents[c].edit = true\n            //   Form.sections[s].contents[c].required = true\n            //   // Form.sections[s].contents[c].show = true\n            // }\n            // else{\n            //   if(fName !== \"individual\" && fName !== \"legal_entity\"){\n            //     Form.sections[s].contents[c].edit = false\n            //     Form.sections[s].contents[c].required = false\n            //     // Form.sections[s].contents[c].show = false\n            //   }\n            // }\n          }\n        }\n        setForm(Form)\n      }\n      // let newFieldValue = fieldValue\n      // for(let ul=0; ul<leUnblockList.length; ul++){\n      //   newFieldValue[leUnblockList[ul]] = null\n      // }\n      // setFieldValue(newFieldValue)\n    }\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n  }\n  function convertNumberToText(num) {\n    let converted = numberToWordsRu.convert(num, {\n      currency: {\n        currencyNameCases: ['ценная бумага', 'ценных бумаги', 'ценных бумаг'],\n        fractionalPartNameCases: ['', '', ''],\n        declension: 'nominative',\n        currencyNounGender: {\n          integer: 1, // 1 => Женский род ('одна', 'две'...)\n        }\n      },\n      showNumberParts: {\n        integer: true,\n        fractional: false\n      }\n    })\n    // console.log(\"WORD\", converted)\n    return converted\n  }\n  // Integer input handler\n  const handleIntChange = (event) => {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '')\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int })\n    if (event.target.name === \"quantity_int\") {\n      let converted = convertNumberToText(stringNum)\n      setFieldValue({ ...fieldValue, [\"quantity_text\"]: converted, [event.target.name]: int })\n    }\n  }\n  // Float input handler\n  const handleFloatChange = (event) => {\n    // console.log(\"FLOAT CHANGE\", event.target.name, event.target.value)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.value })\n  }\n  // const handleIntChange = (event) => {\n  //   console.log(\"EVENT\", event.target.name, event.target.value)\n  //   let stringNum = event.target.value.toString().replace(/ /g, '')\n  //   let int = parseInt(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: int })\n  //   if (event.target.name === \"quantity_int\") {\n  //     let converted = convertNumberToText(stringNum)\n  //     setFieldValue({ ...fieldValue, [\"quantity_text\"]: converted, [event.target.name]: int })\n  //   }\n  // }\n  // // Float input handler\n  // const handleFloatChange = (event) => {\n  //   let stringNum = event.target.value.toString().replace(/ /g, '');\n  //   let float = parseFloat(stringNum)\n  //   setFieldValue({ ...fieldValue, [event.target.name]: float })\n  //   console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  // }\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value\n    console.log(\"OPT\", option.name, option.value)\n    var updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option\n        noSuchOption = false\n        setSelectedOptions(updateSelectedOptions)\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    if (option.name === \"security\") {\n      // выбрана ценная бумага нужно найти эмитента и отобразить\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"security\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].id === option.value) {\n              let issuerId = enumData[i].data[d].issuer\n              fieldValue[\"issuer\"] = issuerId\n              fieldValue[\"security_type\"] = enumData[i].data[d].security_type\n              fieldValue[\"registrar\"] = enumData[i].data[d].registrar\n              // let registrarId\n              for (let j = 0; j < enumData.length; j++) {\n                if (enumData[j].name === \"issuer\") {\n                  // Set isuuer of security\n                  for (let h = 0; h < enumData[j].data.length; h++) {\n                    if (enumData[j].data[h].id === issuerId) {\n                      // Set registrar of issuer\n                      // registrarId = enumData[j].data[h].registrar\n                      let issuerOption = {\n                        value: issuerId,\n                        name: \"issuer\",\n                        label: enumData[j].data[h].label\n                      }\n                      let noIssuerOption = true\n                      for (let y = 0; y < updateSelectedOptions.length; y++) {\n                        if (updateSelectedOptions[y].name === \"issuer\") {\n                          updateSelectedOptions[y] = issuerOption\n                          noIssuerOption = false\n                          setSelectedOptions(updateSelectedOptions)\n                          break\n                        }\n                        else {\n                          noIssuerOption = true\n                        }\n                      }\n                      if (noIssuerOption === true) {\n                        updateSelectedOptions.push(issuerOption)\n                        setSelectedOptions(updateSelectedOptions)\n                      }\n                    }\n                  }\n                }\n              }\n              // for (let r = 0; r < enumData.length; r++) {\n              //   if (enumData[r].name === \"registrar\") {\n              //     // Set registrar of isuuer\n              //     for (let p = 0; p < enumData[r].data.length; p++) {\n              //       if (enumData[r].data[p].id === registrarId) {\n              //         fieldValue[\"registrar\"] = registrarId\n              //         let registrarOption = {\n              //           value: registrarId,\n              //           name: \"registrar\",\n              //           label: enumData[r].data[p].label\n              //         }\n              //         let noRegistrarOption = true\n              //         for (let y = 0; y < updateSelectedOptions.length; y++) {\n              //           if (updateSelectedOptions[y].name === \"registrar\") {\n              //             updateSelectedOptions[y] = registrarOption\n              //             noRegistrarOption = false\n              //             setSelectedOptions(updateSelectedOptions)\n              //             break\n              //           }\n              //           else {\n              //             noRegistrarOption = true\n              //           }\n              //         }\n              //         if (noRegistrarOption === true) {\n              //           updateSelectedOptions.push(registrarOption)\n              //           setSelectedOptions(updateSelectedOptions)\n              //         }\n              //       }\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n      }\n    }\n  }\n  function handleDateTimeChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let fullDate = props.parseDate(event.target.value)\n    var hours = new Date().getHours()\n    var minutes = new Date().getMinutes()\n    var seconds = new Date().getSeconds()\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\"\n    fieldValue[event.target.name] = convertedDate\n    setFieldValue(fieldValue)\n    // console.log(\"DATE CHANGE\", event.target.value)\n  }\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  // filter docList by filled parameters\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = []\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data\n    }\n    else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true\n          }\n          else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key)\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                catch (er) {\n                  console.log(\"ERR\", er)\n                  match = true\n                }\n              }\n              else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else { match = true }\n              }\n              else if (contentType === \"Enum\") {\n\n                if (fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true\n                }\n                else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n              else if (contentType === \"Bool\") {\n                if (key === \"filled\" || key === \"onExecution\" || key === \"executed\" || key === \"canceled\") {\n                  let instrStatus = \"\"\n                  let statusSelected = false\n                  let fieldStatus = \"\"\n                  // Check fields\n                  if (fields[\"filled\"] === true) {\n                    fieldStatus = \"filled\"\n                    statusSelected = true\n                  }\n                  if (fields[\"onExecution\"] === true) {\n                    fieldStatus = \"onExecution\"\n                    statusSelected = true\n                  }\n                  if (fields[\"executed\"] === true) {\n                    fieldStatus = \"executed\"\n                    statusSelected = true\n                  }\n                  if (fields[\"canceled\"] === true) {\n                    fieldStatus = \"canceled\"\n                    statusSelected = true\n                  }\n                  if (statusSelected === true) {\n                    // Check Instruction\n                    if (Data[i][\"filled\"] === true) {\n                      instrStatus = \"filled\"\n                    }\n                    if (Data[i][\"onExecution\"] === true) {\n                      instrStatus = \"onExecution\"\n                    }\n                    if (Data[i][\"executed\"] === true) {\n                      instrStatus = \"executed\"\n                    }\n                    if (Data[i][\"canceled\"] === true) {\n                      instrStatus = \"canceled\"\n                    }\n                    // Check whether statuses are equal\n                    if (fieldStatus === instrStatus) {\n                      match = true\n                    }\n                    else {\n                      match = false\n                      break\n                    }\n                  }\n                  else {\n                    match = true\n                  }\n                }\n                else {\n                  if (Data[i][key] === null || fields[key] === Data[i][key]) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n            }\n            else {\n              match = false\n              break\n            }\n          }\n        }\n        if (match === true) {\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered docList by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.round(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  // random UUID generator\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // random numbers generator\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  // Collect data to save doc\n  function getFieldValuesSaveDocument() {\n    let docToSave = {}\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined) {\n          docToSave[fieldName] = false\n        }\n        else {\n          docToSave[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToSave\n  }\n  function getFieldValuesUpdateDocument() {\n    let docToUpdate = selectedDoc\n    // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n    // docToUpdate[\"user_id\"] = selectedDoc.user_id\n    // docToUpdate[\"files_directory\"] = selectedDoc.files_directory\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false\n        }\n        else {\n          docToUpdate[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToUpdate\n  }\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].required === true) {\n          console.log(\"REQ\", Form.sections[s].contents[c].name)\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null ||\n            fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n            return checkedSuccessfuly\n          }\n          else {\n            checkedSuccessfuly = true\n          }\n        }\n        else {\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  async function buttonClick(buttonName, item) {\n    if (buttonName === \"findDocument\") {\n      if (accordionExpanded === false) {\n        setAccordionExpanded(true)\n      }\n      else {\n        filterDocList(0, size - 1, initialDocList, fieldValue)\n      }\n    }\n    else if (buttonName === \"saveTransferOrder\") {\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        let dir = getUUID()\n        let doc = getFieldValuesSaveDocument()\n        doc.files_directory = dir\n        doc.user_id = userProfile.userId\n        doc[\"status\"] = 1\n        let commandJson =\n        {\n          commandType: \"saveDocumentsWithFiles\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          blobs: Blobs,\n          directory: dir,\n          variables: {\n            userAction: { value: \"saveDocument\" },\n            document: { value: JSON.stringify(doc) },\n            selectedDoc: { value: JSON.stringify(doc) },\n            status: { value: 1 }\n          }\n        }\n        console.log(\"saveTransferOrder:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"openDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: { value: JSON.stringify(item) },\n          userAction: { value: \"openDocument\" },\n          docId: { value: item.id },\n          status: { value: item.status },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button openDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"editDocument\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"editDocument\" }\n        }\n      }\n      console.log(\"updateDocument:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocument\") {\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        let updateBody = getFieldValuesUpdateDocument()\n        updateBody.status = selectedDoc.status\n        let commandJson =\n        {\n          commandType: \"saveDocumentsWithFiles\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          blobs: Blobs,\n          directory: selectedDoc.files_directory,\n          variables: {\n            userAction: { value: \"updateDocument\" },\n            document: { value: JSON.stringify(updateBody) },\n            selectedDoc: { value: JSON.stringify(updateBody) }\n          }\n        }\n        console.log(\"updateDocument:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"sendToRegistrar\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody.status = 3\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          document: { value: JSON.stringify(updateBody) },\n          selectedDoc: { value: JSON.stringify(updateBody) },\n          status: { value: 3 }\n        }\n      }\n      console.log(\"updateDocument:\", updateBody)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"approveOrder\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        let checkResult = checkForRequieredFields()\n        if (checkResult === true) {\n          setStatus(4)\n          setShowModalEnterPin(true)\n          if (props.esInn === null) {\n            setShowModalEnterPin(true)\n          }\n          else {\n            let doc = null\n            let dir = selectedDoc.files_directory\n            doc = getFieldValuesUpdateDocument()\n            doc.user_id = selectedDoc.user_id\n            doc.status = status\n            doc[\"signed_by_registrar\"] = true\n            doc[\"signed_registrar_inn\"] = props.esInn\n            doc[\"signed_registrar_full_name\"] = props.esUserFullName\n            doc[\"signed_at_registrar\"] = props.getCurrentFullDateTime()\n            doc[\"status\"] = 4\n            doc[\"files_directory\"] = dir\n\n            let commandJson =\n            {\n              commandType: \"saveDocumentsWithFiles\",\n              session_id: session_id,\n              process_id: process_id,\n              taskID: taskID,\n              userId: userProfile.userId,\n              userRole: userProfile.userRole,\n              blobs: Blobs,\n              directory: dir,\n              variables: {\n                userAction: { value: \"updateDocument\" },\n                document: { value: JSON.stringify(doc) },\n                selectedDoc: { value: JSON.stringify(doc) },\n                status: { value: 4 }\n              }\n            }\n            console.log(\"signTransfetOrder:\", commandJson)\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n          }\n        }\n      }\n    }\n    else if (buttonName === \"cancelOrder\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        let checkResult = checkForRequieredFields()\n        if (checkResult === true) {\n          setStatus(5)\n          setShowModalEnterPin(true)\n        }\n      }\n    }\n    else if (buttonName === \"createDocument\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"createDocument\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"createDocument:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"signTransferOrder\") {\n      if (props.operDayIsOpened === false) {\n        swal({\n          text: \"Операционный день закрыт дождитесь открытия операционного дня!\",\n          icon: \"warning\",\n          buttons: { ok: \"Ок\" }\n        })\n      }\n      else {\n        let checkResult = checkForRequieredFields()\n        if (checkResult === true) {\n          if (props.esInn === null) {\n            setShowModalEnterPin(true)\n          }\n          else {\n            let doc = null\n            let dir = getUUID()\n            let action = \"\"\n            let curSt = 2\n            let signedBlobs = await signBlobs(props.esUserFullName, props.esInn, props.esExpiredDate)\n            if (taskType === \"showTransferOrdersCreatingForm\") { // Create new doc\n              doc = getFieldValuesSaveDocument()\n              doc.files_directory = dir\n              doc.user_id = userProfile.userId\n              action = \"saveDocument\"\n              doc.signed_by_depositor = true\n              doc.signed_depositor_inn = props.esInn\n              doc.signed_depositor_full_name = props.esUserFullName\n              doc.signed_at_depositor = props.getCurrentFullDateTime()\n              doc.status = 2\n            }\n            else { // Update old doc\n              dir = selectedDoc.files_directory\n              doc = getFieldValuesUpdateDocument()\n              doc.user_id = selectedDoc.user_id\n              doc.status = status\n              action = \"updateDocument\"\n              doc.signed_by_registrar = true\n              doc.signed_registrar_inn = props.esInn\n              doc.signed_registrar_full_name = props.esUserFullName\n              doc.signed_at_registrar = props.getCurrentFullDateTime()\n              doc.status = status\n              doc.files_directory = selectedDoc.files_directory\n              curSt = status // Approved || Canceled\n            }\n\n            let commandJson =\n            {\n              commandType: \"saveDocumentsWithFiles\",\n              session_id: session_id,\n              process_id: process_id,\n              taskID: taskID,\n              userId: userProfile.userId,\n              userRole: userProfile.userRole,\n              blobs: signedBlobs,\n              directory: dir,\n              variables: {\n                userAction: { value: action },\n                document: { value: JSON.stringify(doc) },\n                selectedDoc: { value: JSON.stringify(doc) },\n                status: { value: curSt }\n              }\n            }\n            console.log(\"signTransferOrder:\", commandJson)\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n          }\n        }\n      }\n    }\n    else if (buttonName === \"SignTransferOrderSaveButton\") {\n      let doc = null\n      let dir = getUUID()\n      let action = \"\"\n      if (taskType === \"showTransferOrdersCreatingForm\") {\n        doc = getFieldValuesSaveDocument()\n        doc.files_directory = dir\n        doc.user_id = userProfile.userId\n        action = \"saveDocument\"\n      }\n      else {\n        dir = selectedDoc.files_directory\n        doc = getFieldValuesUpdateDocument()\n        doc.files_directory = selectedDoc.files_directory\n        doc.user_id = selectedDoc.user_id\n        doc.status = 2\n        action = \"updateDocument\"\n      }\n\n      let commandJson =\n      {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        directory: dir,\n        variables: {\n          userAction: { value: action },\n          document: { value: doc },\n          selectedDoc: { value: \"\" },\n          status: { value: 2 }\n        }\n      }\n      console.log(\"SignTransferOrderSaveButton:\", commandJson)\n      sign(commandJson)\n    }\n    else if (buttonName === \"showTransferOrderReport\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"showTransferOrderReport\" },\n          reportName: { value: selectedDoc.individual === true ? \"Peredatochnoe_Rasporyajenie_FL\" : \"Peredatochnoe_Rasporyajenie_YUL\" },\n          reportVars: { value: \"?id=\" + selectedDoc.id }\n        }\n      }\n      console.log(\"showTransferOrderReport:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n\n    else if (buttonName === \"updateDocList\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocList\" },\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else {\n      console.log(\"UNKNOWN Button \", buttonName)\n    }\n  }\n  async function signBlobs(fullName, inn, expiredDate) {\n    let signedBlobs = []\n    for (let i = 0; i < Blobs.length; i++) {\n      if (Blobs[i].type === \"application/pdf\") {\n        for (let a = 0; a < attachedDocs.length; a++) {\n          if (Blobs[i].name === attachedDocs[a].name) {\n            let formData = new FormData()\n            formData.append(\"formFile\", attachedDocs[a], attachedDocs[a].name)\n\n            // let url = \"/back/api/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate\n            let url = props.api + \"/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate\n            var requestOptions = {\n              method: 'POST',\n              body: formData,\n              redirect: 'follow'\n            }\n            let signedBlob = await fetch(url, requestOptions)\n              .then(response => response.blob())\n              .then(bl => {\n                let pdf = new Blob([bl], { type: \"application/pdf\" })\n                async function blobToBase64(blob) {\n                  return new Promise((resolve, _) => {\n                    const reader = new FileReader()\n                    reader.onloadend = () => resolve(reader.result.split(\",\")[1])\n                    reader.readAsDataURL(blob)\n                  })\n                }\n                // let newBlob = {}\n                let newBlob = blobToBase64(pdf)\n                  .then(base64 => {\n                    return newBlob = { \"name\": Blobs[i].name, \"blob\": base64, \"size\": bl.size, type: Blobs[i].type }\n                  })\n                return newBlob\n              })\n              .catch(error => console.log('error', error))\n            signedBlobs.push(signedBlob)\n          }\n        }\n      }\n      else {\n        signedBlobs.push(Blobs[i])\n      }\n    }\n    for (let s = 0; s < savedDocs.length; s++) {\n      if (savedDocs[s].type === \"application/pdf\") {\n        // console.log(\"BLOB TO SIGN\", savedDocs[s])\n        let formData = new FormData()\n        formData.append(\"formFile\", savedDocs[s], savedDocs[s].name)\n\n        let url = props.api + \"/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate\n        var requestOptions = {\n          method: 'POST',\n          body: formData,\n          redirect: 'follow'\n        }\n        let signedBlob = await fetch(url, requestOptions)\n          .then(response => response.blob())\n          .then(bl => {\n            // var url = window.URL.createObjectURL(bl)\n            // var a = document.createElement('a')\n            // a.href = url\n            // a.download = savedDocs[s].name\n            // document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n            // a.click()\n            // a.remove()  //afterwards we remove the element again   \n\n            let pdf = new Blob([bl], { type: \"application/pdf\" })\n            async function blobToBase64(blob) {\n              return new Promise((resolve, _) => {\n                const reader = new FileReader()\n                reader.onloadend = () => resolve(reader.result.split(\",\")[1])\n                reader.readAsDataURL(blob)\n              })\n            }\n            let newBlob = blobToBase64(pdf)\n              .then(base64 => {\n                // console.log(\"BLOB SIGNED\", base64)\n                return newBlob = { \"name\": savedDocs[s].name, \"blob\": base64, \"size\": bl.size, type: savedDocs[s].type }\n              })\n            return newBlob\n          })\n          .catch(error => console.log('error', error))\n        signedBlobs.push(signedBlob)\n      }\n    }\n    //console.log(\"signedBlobs\", signedBlobs)\n    return signedBlobs\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"SignTransferOrderSaveButton\", null)\n    }\n  }\n  // attached documents\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files\n    console.log(\"A DOCS\", selectedFiles)\n    if (selectedFiles && selectedFiles[0]) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        if (selectedFiles[i].type === \"application/pdf\" ||\n          selectedFiles[i].type === \"application/msword\" ||\n          selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n          selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n          attachedDocs.push(selectedFiles[i])\n          setAttachedDocs(attachedDocs)\n          setUpdateState(getUUID())\n          // console.log(\"A DOCS\", attachedDocs)\n        }\n        else {\n          let reader = new FileReader()\n          reader.onload = async function (e) {\n            // push new images to list and show in UI\n            let image = { item: <img name={selectedFiles[i].name} height=\"150\" width=\"auto\" src={e.target.result} onClick={() => attachedImgClick(selectedFiles[i].name)} /> }\n            attachedImgs.push(image)\n            setAttachedImgs(attachedImgs)\n            setUpdateState(getUUID())\n            // console.log(\"IMGLIST\", attachedImgs)\n          }\n          reader.readAsDataURL(selectedFiles[i])\n          attachedImgsFiles.push(selectedFiles[i])\n          // pushAttachedImage(selectedFiles[i])\n          setAttachedImgsFiles(attachedImgsFiles)\n          // console.log(\"A IMGS\", attachedImgsFiles)\n        }\n        pushNewBlob(selectedFiles[i])\n      }\n    }\n  }\n  async function pushNewBlob(f) {\n    var blobToBase64 = function (f, cb) {\n      let reader = new FileReader()\n      reader.onload = function () {\n        // converts blob to base64\n        var dataUrl = reader.result\n        var base64 = dataUrl.split(\",\")[1]\n        cb(base64)\n      }\n      reader.readAsDataURL(f)\n    }\n    blobToBase64(f, async function (base64) {\n      // encode blobs to send to socket\n      let newBlob = { \"name\": f.name, \"blob\": base64, \"size\": f.size, type: f.type }\n      Blobs.push(newBlob)\n      setBlobs(Blobs)\n      console.log(\"BLOBS\", Blobs)\n    })\n  }\n  async function attachedImgClick(name) {\n    for (let l = 0; l < attachedImgs.length; l++) {\n      if (attachedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", attachedImgs[l])\n        setSelectedImg({\n          name: attachedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: attachedImgs[l].item.props.src\n        })\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function attachedDocsList() {\n    // console.log(\"A DOCS\", attachedDocs)\n    let selDocsList = []\n    for (let i = 0; i < attachedDocs.length; i++) {\n      selDocsList.push(\n        <Card style={{ margin: 3, backgroundColor: \"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\" }}>\n          <table>\n            <tr>\n              <td style={{ color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\" }}>\n                {attachedDocs[i].name + \" \"}{\"(\" + Math.round(attachedDocs[i].size / 1000) + \")\" + \"КБ\"}\n              </td>\n              <td>\n                <IconButton>\n                  <CloseIcon style={{ fontSize: \"medium\", color: \"black\" }} onClick={() => deleteAttachedDoc(attachedDocs[i].name)} />\n                </IconButton>\n              </td>\n            </tr>\n          </table>\n        </Card>)\n\n    }\n    return (selDocsList)\n  }\n  function attachedImgsList() {\n    var imgs = []\n    for (let l = 0; l < attachedImgs.length; l++) {\n      imgs.push(\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              {attachedImgs[l].item}\n            </TableCell>\n          </TableRow>\n          {/* <TableRow>\n            <TableCell width=\"20%\">\n              {attachedImgs[l].item.props.name}\n            </TableCell>\n          </TableRow> */}\n          <TableRow>\n            <TableCell align=\"center\">\n              <IconButton onClick={() => deleteAttachedImage(attachedImgs[l].item.props.name)}>\n                <DeleteForeverIcon fontSize=\"Large\" style={{ color: \"black\", margin: 0 }} />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      )\n    }\n    if (Object.keys(imgs).length !== 0) {\n      return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      )\n    }\n  }\n  function deleteAttachedDoc(name) {\n    let newDocList = []\n    for (let i = 0; i < attachedDocs.length; i++) {\n      if (name !== attachedDocs[i].name) {\n        newDocList.push(attachedDocs[i])\n      }\n      else {\n        deleteBlob(attachedDocs[i].name)\n      }\n    }\n    // attachedDocs = newDocList\n    setAttachedDocs(newDocList)\n    // setUpdateState(getUUID())\n    // console.log(\"FILES\", newDocList)\n  }\n  function deleteAttachedImage(name) {\n    let newImgList = []\n    let newImgFilesList = []\n    for (let i = 0; i < attachedImgs.length; i++) {\n      if (name !== attachedImgs[i].item.props.name) {\n        newImgList.push(attachedImgs[i])\n        newImgFilesList.push(attachedImgsFiles[i])\n      }\n      else {\n        deleteBlob(attachedImgs[i].item.props.name)\n      }\n    }\n    // deleteBlob(name)\n    // attachedImgs = newImgList\n    setAttachedImgs(newImgList)\n    // attachedImgsFiles = newImgFilesList\n    setAttachedImgsFiles(newImgFilesList)\n    // setUpdateState(getUUID())\n    // console.log(\"IMGS\", newImgFilesList)\n  }\n  function deleteBlob(name) {\n\n    console.log(\"NAME\", name)\n    let newBlobs = []\n    for (let b = 0; b < Blobs.length; b++) {\n      if (Blobs[b].name !== undefined) {\n        if (name !== Blobs[b].name) {\n          newBlobs.push(Blobs[b])\n        }\n        else {\n          console.log(\"DEL\", Blobs[b].name)\n        }\n      }\n    }\n    console.log(\"BLOBS\", newBlobs)\n    // Blobs = newBlobs\n    setBlobs(newBlobs)\n    // setUpdateState(getUUID())\n  }\n  // Previosly saved documents\n  function convertBase64ToFile(dataurl, fileName) {\n    var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n)\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n)\n    }\n    let convFile = new File([u8arr], fileName, { type: mime })\n    handleAttachSavedFile(convFile)\n  }\n  function handleAttachSavedFile(file) {\n    if (file.type === \"application/pdf\" || file.type === \"application/msword\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n      savedDocs.push(file)\n      setSavedDocs(savedDocs)\n    }\n    else {\n      savedImagesFiles.push(file)\n      setSavedImagesFiles(savedImagesFiles)\n      pushSavedImage(file)\n    }\n  }\n  async function pushSavedImage(f) {\n    let reader = new FileReader()\n    reader.onload = async function (e) {\n      // push new images to list and show in UI\n      let image = { item: <img name={f.name} height=\"150\" width=\"auto\" src={e.target.result} onClick={() => savedImgClick(f.name)} /> }\n      savedImgs.push(image)\n      // console.log(\"IMGLIST\", savedImgs)\n      setSavedImgs(savedImgs)\n      setUpdateState(getUUID())\n    }\n    reader.readAsDataURL(f)\n  }\n  async function savedImgClick(name) {\n    for (let l = 0; l < savedImgs.length; l++) {\n      if (savedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", savedImgs[l])\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        })\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function savedDocsList() {\n    // console.log(\"SAVEDOCS\", savedDocs)\n    let savedDocsList = []\n    for (let i = 0; i < savedDocs.length; i++) {\n      savedDocsList.push(\n        <Card style={{ margin: 3, backgroundColor: \"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\" }}>\n          <table>\n            <tr>\n              <td style={{ color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\" }}>\n                {savedDocs[i].name + \" \"}{\"(\" + Math.round(savedDocs[i].size / 1000) + \")\" + \"КБ\"}\n              </td>\n              <td>\n                <IconButton>\n                  <CloseIcon style={{ fontSize: \"medium\", color: \"black\" }} onClick={() => deleteSavedDoc(savedDocs[i].name)} />\n                </IconButton>\n              </td>\n              <td>\n                <IconButton\n                  component=\"a\"\n                  href={URL.createObjectURL(savedDocs[i])}\n                  download={savedDocs[i].name}\n                >\n                  <GetAppIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                </IconButton>\n              </td>\n            </tr>\n          </table>\n        </Card>)\n    }\n    return (savedDocsList)\n  }\n  function savedImgsList() {\n    // console.log(\"SAVEDIMGS\", savedImgs)\n    var imgs = []\n    for (let l = 0; l < savedImgs.length; l++) {\n      imgs.push(\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              {savedImgs[l].item}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell align=\"center\">\n              <IconButton onClick={() => deleteSavedImage(savedImgs[l].item.props.name)}>\n                <DeleteForeverIcon fontSize=\"Large\" style={{ color: \"black\", margin: 0 }} />\n              </IconButton>\n              {/* <IconButton \n                component=\"a\"\n                href={URL.createObjectURL(savedImgs[l].item.props.src)}\n                download\n              >\n                <GetAppIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n              </IconButton> */}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      )\n    }\n    if (Object.keys(imgs).length !== 0) {\n      return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      )\n    }\n  }\n  function deleteSavedDoc(name) {\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: { ok: \"Да\", cancel: \"Отмена\" },\n    })\n      .then((click) => {\n        if (click === \"ok\") {\n          let newDocList = []\n          for (let i = 0; i < savedDocs.length; i++) {\n            if (name !== savedDocs[i].name) {\n              newDocList.push(savedDocs[i])\n            }\n          }\n          setSavedDocs(newDocList)\n          let commandJson = {\n            commandType: \"deleteSavedDoc\",\n            userId: userProfile.userId,\n            directory: selectedDoc.files_directory,\n            fileName: name\n          }\n          props.sendFieldValues(commandJson)\n        }\n      })\n  }\n  function deleteSavedImage(name) {\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: { ok: \"Да\", cancel: \"Отмена\" },\n    })\n      .then((click) => {\n        if (click === \"ok\") {\n          let newImgList = []\n          for (let i = 0; i < savedImgs.length; i++) {\n            if (name !== savedImgs[i].item.props.name) {\n              newImgList.push(savedImgs[i])\n            }\n          }\n          setSavedImgs(newImgList)\n          // setUpdateState(getUUID())\n          let commandJson =\n          {\n            commandType: \"deleteSavedDoc\",\n            userId: userProfile.userId,\n            directory: selectedDoc.files_directory,\n            fileName: name\n          }\n          props.sendFieldValues(commandJson)\n        }\n      })\n  }\n  // Create grid form components\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name]\n    let name = contentItem.name\n    let type = contentItem.type\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\" }}\n          checked={(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        return (<td>{value}</td>)\n      }\n    }\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1\n    }\n    console.log(\"SORT\", property, sortOrder, type)\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA = dateA.getTime() / 1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB = dateB.getTime() / 1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else {\n          if (a[property] === null) {\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n    else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder\n        }\n        else {\n          let labelA = getEnumLabel(property, a[property])\n          // console.log(\"A\", property, a[property], labelA)\n          let labelB = getEnumLabel(property, b[property])\n          // console.log(\"labelB\", labelB, property, b)\n          var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n          return result * sortOrder\n        }\n\n      }\n    }\n  }\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size - 1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function checkToShowSection(section) {\n    let showSection = false\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true\n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i) {\n    let lastSection = true\n    if (i === gridForm.sections.length - 1) { // The last section\n      return true\n    }\n    else {\n      let nextS = i + 1\n      console.log(\"IT\", i, gridForm.sections[nextS])\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) { // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n  function getForm() {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n        <Grid item xs={isSearchForm === true ? 12 : 9}>\n          <Paper>\n            <Table style={{ width: \"100%\", \"border-collapse\": \"collapse\" }}>\n              {isSearchForm === false &&\n                <TableRow style={{ maxHeight: 25 }}>\n                  <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                </TableRow>\n              }\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {Form.sections.map(section => {\n                  return sectionBuilder(section)\n                })}\n              </Grid>\n              {/* <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                  {buttons.map((button, index) => (\n                    <Button\n                      name={button.name}\n                      variant=\"outlined\"\n                      onClick = {() => buttonClick(button.name, null)}\n                      style={{\n                        margin: 3,\n                        color: button.fontColor,\n                        backgroundColor: button.backgroundColor,\n                        height: 32,\n                        fontSize: 12\n                      }}\n                    >{button.label}\n                    </Button>\n                  ))}\n              </Grid> */}\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map(contentItem => (\n            contentItem.show === true &&\n            <TableRow style={{ height: 30 }}>\n              <TableCell\n                align=\"left\"\n                style={{ width: \"40%\" }}>\n                {contentItem.label}\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                style={{ width: \"60%\", height: 30 }}\n              >{contentBuilder(contentItem)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n  // Creating components by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur={handleTextChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name]) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined) ? false : true}\n        />\n      )\n    }\n    else if (contentItem.type === \"Int\") {\n      return (\n        <TextField\n          name={contentItem.name}\n          onKeyPress={onKeyPressInt}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          style={{ width: \"100%\" }}\n          // defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          // onBlur={handleIntChange}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleIntChange}\n          InputProps={{ inputComponent: IntegerFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Float\") {\n      console.log(\"FLOAT VAL\", fieldValue[contentItem.name])\n      return (\n        <TextField\n          onKeyPress={onKeyPressFloat}\n          name={contentItem.name}\n          // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n          // onBlur={handleFloatChange}\n          // value={fieldValue[contentItem.name]}\n          value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onChange={handleFloatChange}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: FloatFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressDateTime}\n          type=\"date\"\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\") {\n      return (\n        <TextField\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n      )\n    }\n  }\n  // Key press handlers for some fields\n  function onKeyPressText(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressDateTime(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressInt(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let int = parseInt(stringNum)\n          fieldValue[event.target.name] = int\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressFloat(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let float = parseFloat(stringNum)\n          fieldValue[event.target.name] = float\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function calculateColSpan(contents) {\n    let num = 0\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1\n      }\n    }\n    return num\n  }\n  const handleContextMenu = (event) => {\n    event.preventDefault()\n    console.log(\"CONT MENU\")\n    setAnchorEl(event.currentTarget)\n  }\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n    // console.log(\"CLOSE\", fieldValue)\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name]\n      }\n    }\n    console.log(\"nForm\", gridForm)\n    setGridForm(gridForm)\n    setUpdateState(getUUID())\n  }\n  function createMenuItems() {\n    let columns = []\n    columns.push(\n      <tr>\n        <td\n          style={{ paddingLeft: 5, cursor: \"pointer\" }}\n          name={\"selectAll\"}\n          onClick={() => handleTableCheckboxChange(\"selectAll\")}\n        >\n          Выбрать все\n        </td>\n        <td>\n          <Checkbox\n            style={{ maxWidth: 20, height: 15, color: \"green\" }}\n            name={\"selectAll\"}\n            onChange={handleGridCheckboxChange}\n            checked={(gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined) ? false : true}\n          />\n        </td>\n      </tr>\n    )\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name\n        columns.push(\n          <tr>\n            <td\n              style={{ paddingLeft: 5, cursor: \"pointer\", background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\" }}\n              name={name}\n              onClick={() => handleTableCheckboxChange(name)}\n            >\n              {gridForm.sections[s].contents[c].label}\n            </td>\n            <td>\n              <Checkbox\n                style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                name={name}\n                onChange={handleGridCheckboxChange}\n                checked={(gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined) ? false : true}\n              />\n            </td>\n          </tr>\n        )\n      }\n    }\n    return columns\n  }\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId))\n  }\n  const handleGridCheckboxChange = (event) => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = { [event.target.name]: event.target.checked }\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name]\n      }\n      // console.log(\"selectAll\", newFields)\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [event.target.name]: event.target.checked })\n    }\n  }\n  const handleTableCheckboxChange = (name) => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue }\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name]\n      }\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [name]: !gridFieldValue[name] })\n    }\n  }\n  if (updateState !== null) {\n    try {\n      return (\n        <Grid>\n          {/* Create main search table */}\n          {isSearchForm !== null &&\n            isSearchForm === true\n            ?\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n              <Grid item xs={9}>\n                <Accordion expanded={accordionExpanded} onChange={() => handleExpandAccordion()}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                  >\n                    <Typography>{Form.label}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    {getForm()}\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n            </Grid>\n            :\n            getForm()\n          }\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            {buttons.map((button, index) => (\n              <Button\n                name={button.name}\n                variant=\"outlined\"\n                onClick={() => buttonClick(button.name, null)}\n                style={{\n                  margin: 3,\n                  color: button.fontColor,\n                  backgroundColor: button.backgroundColor,\n                  height: 32,\n                  fontSize: 12\n                }}\n              >{button.label}\n              </Button>\n            ))}\n          </Grid>\n          {isSearchForm === true &&\n            <ReplayIcon style={{ paddingTop: 3, cursor: \"pointer\" }} onClick={() => buttonClick(\"updateDocList\")} />\n          }\n          {showAttachedDocuments === true &&\n            <Paper>\n              <Grid item>\n                <Grid container direction=\"row\">\n                  <div className={classes.importFile}>\n                    <input\n                      accept=\"image/*, application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                      className={classes.inputFile}\n                      id={buttonFilesWordPdfImgId}\n                      multiple\n                      type=\"file\"\n                      onChange={handleAttachFile}\n                    />\n                    <label htmlFor={buttonFilesWordPdfImgId}>\n                      <Button\n                        component=\"span\"\n                        variant=\"outlined\"\n                        style={{\n                          margin: 3,\n                          color: \"white\",\n                          backgroundColor: \"#BB7100\",\n                          borderColor: \"#161C87\",\n                          height: 32,\n                          fontSize: 12\n                        }}\n                        endIcon={<AttachFileIcon />}\n                      >Прикрепить файлы\n                      </Button>\n                    </label>\n                  </div>\n                </Grid>\n              </Grid>\n              <Grid container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n                <Grid item xs={\"auto\"}>\n                  <Grid container direction=\"column\" spacing={1}>\n                    <div style={{ paddingLeft: 10 }}>Прикрепленные документы</div>\n                    {attachedDocsList()}\n                    {attachedImgsList()}\n                  </Grid>\n                </Grid>\n              </Grid>\n              {showSavedDocuments === true &&\n                <Grid container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n                  <Grid item xs={\"auto\"}>\n                    <Grid container direction=\"column\" spacing={1}>\n                      <div style={{ paddingLeft: 10 }}>Сохраненные документы</div>\n                      {savedDocsList()}\n                      {savedImgsList()}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              }\n            </Paper>\n          }\n          {docList !== null &&\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n              <Grid item sm={\"auto\"}>\n                <Paper>\n                  <div style={{ height: \"500px\", overflow: \"auto\" }}>\n                    <table\n                      size=\"small\"\n                      class=\"main-table-style\"\n                      id={gridTableId}\n                    >\n                      <thead class=\"thead-style\" style={{ position: \"sticky\", top: 0 }}>\n                        {/* 1st Row Sections Labels */}\n                        <tr>\n                          <td class=\"td-head-first-child\" onContextMenu={(ev) => handleContextMenu(ev)}></td>\n                          {gridForm.sections.map((section, index) => {\n                            let showSection = checkToShowSection(section)\n                            if (showSection === true) {\n                              let lastSection = checkSectionOnLastChild(index)\n                              return (\n                                <td\n                                  colSpan={calculateColSpan(section.contents)}\n                                  class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                  onContextMenu={(ev) => handleContextMenu(ev)}\n                                >\n                                  {section.label}\n                                </td>\n                              )\n                            }\n                          })}\n                        </tr>\n                        {/* 2nd Row Sections Contents labels */}\n                        <tr>\n                          <td\n                            class=\"td-head-style-2row\"\n                            rowSpan=\"2\"\n                            style={{ \"minWidth\": \"65px\" }}\n                            onContextMenu={(ev) => handleContextMenu(ev)}\n                          >\n                            Действие\n                          </td>\n                          {gridForm.sections.map(section =>\n                            section.contents.map(contentItem => {\n                              if (contentItem.show === true) {\n                                return (\n                                  <td\n                                    class=\"td-head-style-2row\"\n                                    rowSpan=\"2\"\n                                    onClick={() => sortDataByColumn(contentItem.name, contentItem.type)}\n                                    onContextMenu={(ev) => handleContextMenu(ev)}\n                                  >\n                                    {contentItem.label}{sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{ marginBottom: -8 }} /> : <ArrowDropUpIcon style={{ marginBottom: -8 }} /> : \"\"}\n                                  </td>\n                                )\n                              }\n                            })\n                          )}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.keys(docList).length !== 0 &&\n                          docList.map(dataItem => (\n                            <tr style={{ \"height\": 30 }}>\n                              <td style={{ \"maxWidth\": 34, \"border-bottom\": \"1px solid grey\" }}>\n                                {gridFormButtons !== \"null\" &&\n                                  gridFormButtons.map(button =>\n                                    <Button\n                                      key={button.name}\n                                      name={button.name}\n                                      variant=\"outlined\"\n                                      // id={dataItem.id}\n                                      value={button.name}\n                                      onClick={() => buttonClick(button.name, dataItem)}\n                                      style={{\n                                        margin: 1,\n                                        height: 24,\n                                        fontSize: 10,\n                                        maxWidth: 32,\n                                        backgroundColor: button.backgroundColor,\n                                        borderColor: \"darkgreen\",\n                                        color: \"darkgreen\"\n                                      }}\n                                    >{button.label}\n                                    </Button>\n                                  )}\n                              </td>\n                              {gridForm.sections.map(section => (\n                                section.contents.map(contentItem => {\n                                  if (contentItem.show === true) {\n                                    return (\n                                      <td key={keyGen(4)} align=\"left\" style={{ color: \"black\", fontSize: 12, \"text-align\": \"center\", \"border-bottom\": \"1px solid grey\" }}>\n                                        {getGridFormItems(dataItem, contentItem)}\n                                      </td>\n                                    )\n                                  }\n                                })\n                              ))}\n                            </tr>\n                          )\n                          )}\n                      </tbody>\n                    </table>\n                  </div>\n                  <tfoot>\n                    <tr>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <Button\n                          variant=\"outlined\"\n                          style={{ background: \"#047535\", color: \"white\", height: 28 }}\n                          onClick={() => downloadExcel()}\n                        >В EXCEL\n                        </Button>\n                      </td>\n                      <td style={{ paddingLeft: \"20px\" }}>\n                        <div style={{ minWidth: 90, color: \"black\" }}>Кол-во записей</div>\n                      </td>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <FormControl\n                          variant=\"outlined\"\n                          style={{ minWidth: 30 }}\n                        >\n                          <GridSelect\n                            onChange={handleChangeRowsPerPage}\n                            style={{ height: 25, color: \"black\" }}\n                            value={size}\n                          >\n                            <MenuItem value={10}>10</MenuItem>\n                            <MenuItem value={20}>20</MenuItem>\n                            <MenuItem value={50}>50</MenuItem>\n                            <MenuItem value={100}>100</MenuItem>\n                            <MenuItem value={200}>200</MenuItem>\n                            <MenuItem value={500}>500</MenuItem>\n                          </GridSelect>\n                        </FormControl>\n                      </td>\n\n                      <td>\n                        <Tooltip title=\"На первую страницу\">\n                          <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                            <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На предыдущюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                            <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td style={{ color: \"black\", fontSize: 16 }}>\n                        <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                      </td>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <Tooltip title=\"Перейти на указанную страницу\">\n                          <Button\n                            onClick={() => GoToPage()}\n                            variant=\"outlined\"\n                            style={{\n                              height: 22,\n                              backgroundColor: \"#D1D6D6\",\n                              fontSize: 12\n                            }}\n                          >перейти\n                          </Button>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На следующюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                            <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td style={{ color: \"black\", fontSize: 16 }}>Стр. {page} из {getPageAmount()} Общее кол-во {filteredDocList.length}</td>\n                    </tr>\n\n                  </tfoot>\n                  <Menu\n                    anchorEl={anchorEl}\n                    open={openMenu}\n                    onClose={handleCloseMenu}\n                    MenuListProps={{\n                      'aria-labelledby': 'basic-button',\n                    }}\n                    style={{ paddingLeft: \"100px\" }}\n                  >\n                    <table>\n                      {createMenuItems()}\n                    </table>\n                  </Menu>\n                </Paper>\n              </Grid>\n            </Grid>\n          }\n          <Modal\n            style={{ paddingLeft: \"500px\", paddingTop: \"50px\", height: 700, width: 500 }}\n            open={openModal}\n            onClose={handleCloseModal}\n          >\n            <div className={classes.imagePaper}>\n              <img name={selectedImg.name} height={selectedImg.height} width=\"auto\" src={selectedImg.src} />\n            </div>\n          </Modal>\n          <Modal\n            open={showModalEnterPin}\n            onClose={handleCloseModalEnterPin}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <div style={modalStyle} className={classes.modal}>\n              <h3 id=\"simple-modal-title\">Введите ПИН код Рутокена</h3>\n              <FormControl variant=\"outlined\" style={{ width: \"100%\" }} error={wrongPin}>\n                <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n                <OutlinedInput\n                  type={showPin ? 'text' : 'password'}\n                  defaultValue={rutokenPin}\n                  onChange={handlePinChange}\n                  onKeyPress={onKeyPressModalEnterPin}\n                  autoFocus\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPin}\n                        edge=\"end\"\n                      >\n                        {showPin ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  labelWidth={25}\n                />\n              </FormControl>\n              {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n              <Button\n                variant=\"contained\"\n                onClick={() => buttonClick(\"SignTransferOrderSaveButton\")}\n                style={{\n                  margin: 3,\n                  height: 32,\n                  fontSize: 12,\n                  color: \"white\",\n                  backgroundColor: \"#2862F4\"\n                }}\n              >Ок\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={handleCloseModalEnterPin}\n                style={{\n                  margin: 3,\n                  height: 32,\n                  fontSize: 12,\n                  color: \"white\",\n                  backgroundColor: \"#E73639\"\n                }}\n              >Отмена\n              </Button>\n            </div>\n          </Modal>\n          <Snackbar\n            open={showSnackBar}\n            onClose={() => handleCloseSnackBar()}\n            autoHideDuration={1200}\n            message={snackBarMessage}\n          />\n        </Grid>\n      )\n    }\n    catch (er) {\n      console.log(\"ERROR\", er)\n      return <LinearProgress />\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}