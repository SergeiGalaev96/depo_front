{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\Users\\\\Users.jsx\";\nimport React, { useState, useEffect } from 'react'; // import clsx from 'clsx';\n// import { makeStyles} from '@material-ui/core/styles';\n\nimport MTable from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableFooter from '@material-ui/core/TableFooter';\nimport { Table } from 'reactstrap'; // Core ui table for grid form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem'; // Icons\n\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay'; // Form components\n\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nexport default (props => {\n  // This.state\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [Form] = useState(props.userTask.Form);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [userEnabled, setUserEnabled] = useState(null);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState([]);\n  const [filteredDocList, setFilteredDocList] = useState([]);\n  const [initialDocList, setInitialDocList] = useState([]);\n  const [gridForm] = useState(props.userTask.gridForm);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [enumData] = useState(props.userTask.enumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [fieldValue, setFieldValue] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [buttons] = useState(props.userTask.buttons);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"User PROPS\", props.userTask);\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedDocList = JSON.parse(props.userTask.docList); // console.log(\"DOCL\", parsedDocList)\n\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        let newDocList = [];\n\n        for (let i = 0; i < parsedDocList.length; i++) {\n          try {\n            let newUser = {\n              id: parsedDocList[i].id,\n              enabled: parsedDocList[i].enabled,\n              username: parsedDocList[i].username,\n              firstName: parsedDocList[i].firstName,\n              lastName: parsedDocList[i].lastName,\n              email: parsedDocList[i].email,\n              online: parsedDocList[i].online,\n              lastAccess: parsedDocList[i].lastAccess,\n              userRole: parseInt(parsedDocList[i].attributes.userRole[0]),\n              partner: parsedDocList[i].attributes.partner ? parseInt(parsedDocList[i].attributes.partner[0]) : null,\n              middleName: parsedDocList[i].attributes.middleName[0],\n              phone: parsedDocList[i].attributes.phone[0]\n            };\n            newDocList.push(newUser);\n          } catch (er) {\n            console.log(\"ERR\", er);\n          }\n        }\n\n        let sortedDocList = newDocList.sort(dynamicSort(\"online\", 1, \"Bool\"));\n        console.log(\"DOCL\", sortedDocList);\n        setInitialDocList(sortedDocList);\n        setFilteredDocList(sortedDocList);\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          let parsedDoc = JSON.parse(props.userTask.selectedDoc); // console.log(\"SHDOC\", parsedDoc)\n\n          setFieldValue(parsedDoc);\n          setSelectedDoc(parsedDoc);\n          filterDocList(0, s - 1, sortedDocList, parsedDoc);\n        } else {\n          fetchBySize(0, s - 1, sortedDocList);\n        }\n\n        setIsSearchForm(true);\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== null && props.userTask.docList === \"null\") {\n      let parsedDoc = JSON.parse(props.userTask.selectedDoc);\n      setUserEnabled(parsedDoc.enabled);\n      let fields = {\n        // id: parsedDoc.id,\n        username: parsedDoc.username,\n        firstName: parsedDoc.firstName,\n        lastName: parsedDoc.lastName,\n        email: parsedDoc.email\n      };\n\n      for (let i in parsedDoc.attributes) {\n        let value = parsedDoc.attributes[i][0] === \"true\" ? true : parsedDoc.attributes[i][0] === \"false\" ? false : parsedDoc.attributes[i][0];\n        fields[i] = value;\n      }\n\n      setFieldValue(fields);\n      setSelectedDoc(parsedDoc);\n      console.log(\"SDOC\", parsedDoc);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            });\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n    } // var d = new Date(1628246614000)\n    // let nd = d.toLocaleString()\n    // console.log(\"TIME\", nd)\n\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  const handleCheckboxChange = event => {\n    console.log(\"CHECK\", event.target.name, event.target.checked);\n\n    if (event.target.name === \"selectAllAdminFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"administartor\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllTradingFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"tradingSystems\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllMainFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"mainFunctions\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllAccountingFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"accountingDepartment\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllMortgageFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"mortgageCoverage\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllInstructionTypes\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"InstructionsAccessSection\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else if (event.target.name === \"selectAllReportTypes\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"ReportsAccessSection\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked;\n            setFieldValue(fieldValue);\n          }\n        }\n      }\n    } else {\n      setFieldValue({ ...fieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n\n    setUpdateState(getUUID());\n  };\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  }\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key);\n\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase().trim();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else if (contentType === \"Enum\") {\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } else {\n              match = false;\n              break;\n            }\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered users by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList);\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLastClick() {\n    if (page !== getPageAmount()) {\n      setPage(getPageAmount());\n      fetchBySize((getPageAmount() - 1) * size, filteredDocList.length, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на последней странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.floor(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  }\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  }\n\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleSelectChange(event) {\n    console.log(\"SO\", event, fieldValue);\n    fieldValue[event.name] = event.value;\n    setFieldValue(fieldValue);\n    let updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (event.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = event;\n        setSelectedOptions(updateSelectedOptions); // console.log(\"SO\", selectedOptions)\n\n        noSuchOption = false;\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(event);\n      setSelectedOptions(updateSelectedOptions); // console.log(\"SO\", selectedOptions)\n    }\n\n    if (event.name === \"userRole\" && props.userTask.taskType === \"showCreateUser\") {\n      if (event.value === 1) {\n        // console.log(\"SO\", event.name, event.value)\n        for (let i = 0; i < Form.sections.length; i++) {\n          for (let c = 0; c < Form.sections[i].contents.length; c++) {\n            if (Form.sections[i].contents[c].type === \"Bool\") {\n              fieldValue[Form.sections[i].contents[c].name] = true;\n              setFieldValue(fieldValue);\n            }\n          }\n        }\n      }\n    }\n  } // Collect data to create new user in REST\n\n\n  function getFieldValuesRest(keycloakUser) {\n    let restUser = {\n      user_id: null,\n      name: fieldValue[\"username\"],\n      lastname: fieldValue[\"lastName\"],\n      firstname: fieldValue[\"firstName\"],\n      email: fieldValue[\"email\"],\n      attributes: JSON.stringify(keycloakUser.attributes)\n    };\n\n    for (let key in keycloakUser.attributes) {\n      if (key === \"userId\") {\n        restUser[\"user_id\"] = keycloakUser.attributes[key];\n      }\n    }\n\n    return restUser;\n  } // Collect data to create new user\n\n\n  function getFieldValuesKeycloakCreate() {\n    let attrs = {\n      locale: \"ru\",\n      userId: getUUID(),\n      enabled: true\n    };\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let name = Form.sections[s].contents[c].name;\n        let type = Form.sections[s].contents[c].type; // console.log(\"NAME \", name, \"VAL\", fieldValue[name])\n\n        if (name !== \"username\" && name !== \"firstName\" && name !== \"lastName\" && name !== \"email\") {\n          if (type === \"Enum\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = null;\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          } else if (type === \"Text\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = \"-\";\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          } else if (type === \"Bool\") {\n            if (fieldValue[name] === undefined) {\n              attrs[name] = false;\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          }\n        }\n      }\n    }\n\n    let newUser = {\n      username: fieldValue[\"username\"],\n      firstName: fieldValue[\"firstName\"],\n      lastName: fieldValue[\"lastName\"],\n      email: fieldValue[\"email\"],\n      emailVerified: true,\n      enabled: true,\n      requiredActions: [\"UPDATE_PASSWORD\"],\n      attributes: attrs,\n      credentials: [{\n        type: \"password\",\n        value: \"12345\"\n      }]\n    }; // console.log(\"USER\", newUser)\n\n    return newUser;\n  } // Collect data to update existed user\n\n\n  function getFieldValuesKeycloakUpdate() {\n    let attrs = {\n      locale: \"ru\",\n      userId: fieldValue[\"userId\"],\n      enabled: selectedDoc.enabled\n    };\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let name = Form.sections[s].contents[c].name;\n        let type = Form.sections[s].contents[c].type;\n\n        if (name !== \"username\" && name !== \"firstName\" && name !== \"lastName\" && name !== \"email\" && name !== \"selectAllAdminFunctions\" && name !== \"selectAllTradingFunctions\" && name !== \"selectAllMainFunctions\" && name !== \"selectAllAccountingFunctions\" && name !== \"selectAllMortgageFunctions\" && name !== \"selectAllInstructionTypes\" && name !== \"selectAllReportTypes\") {\n          if (type === \"Enum\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = null;\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          } else if (type === \"Text\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = \"-\";\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          } else if (type === \"Bool\") {\n            if (fieldValue[name] === undefined) {\n              attrs[name] = false;\n            } else {\n              let value = fieldValue[name];\n              attrs[name] = value;\n            }\n          }\n        }\n      }\n    }\n\n    let updateUser = {\n      username: fieldValue[\"username\"],\n      firstName: fieldValue[\"firstName\"],\n      lastName: fieldValue[\"lastName\"],\n      email: fieldValue[\"email\"],\n      emailVerified: true,\n      enabled: selectedDoc.enabled,\n      attributes: attrs\n    }; // console.log(\"UPDATE\", updateUser)\n\n    return updateUser;\n  } // Collect data to reset existed user password\n\n\n  function getFieldValuesKeycloakResetPassword() {\n    let attrs = {};\n\n    for (let key in selectedDoc.attributes) {\n      attrs[key] = selectedDoc.attributes[key][0];\n    }\n\n    let updateUser = {\n      username: selectedDoc.username,\n      firstName: selectedDoc[\"firstName\"],\n      lastName: selectedDoc[\"lastName\"],\n      email: selectedDoc[\"email\"],\n      emailVerified: true,\n      enabled: selectedDoc.enabled,\n      requiredActions: [\"UPDATE_PASSWORD\"],\n      attributes: attrs,\n      credentials: [{\n        type: \"password\",\n        value: \"12345\"\n      }]\n    };\n    return updateUser;\n  } // Collect data to set state deleted\n\n\n  function getFieldValuesKeycloakChangeAccesUser(access) {\n    console.log(\"ACC\", access);\n    let attrs = {};\n\n    for (let key in selectedDoc.attributes) {\n      if (key === \"enabled\") {\n        attrs[key] = access;\n      } else {\n        attrs[key] = selectedDoc.attributes[key][0];\n      }\n    }\n\n    let updateUser = {\n      username: selectedDoc.username,\n      firstName: selectedDoc[\"firstName\"],\n      lastName: selectedDoc[\"lastName\"],\n      email: selectedDoc[\"email\"],\n      emailVerified: true,\n      enabled: access,\n      attributes: attrs\n    };\n    return updateUser;\n  } // Validate input data\n\n\n  function checkForWrongFields(commandJson) {\n    let enabledToSend = false;\n    var parsedGridFormData = JSON.parse(props.userTask.docList);\n\n    if (fieldValue[\"userRole\"] !== undefined && fieldValue[\"userRole\"] !== \"\") {\n      if (fieldValue[\"username\"] !== undefined && fieldValue[\"username\"] !== \"\") {\n        if (fieldValue[\"firstName\"] !== undefined && fieldValue[\"firstName\"] !== \"\") {\n          if (fieldValue[\"lastName\"] !== undefined && fieldValue[\"lastName\"] !== \"\") {\n            if (fieldValue[\"username\"] !== undefined && fieldValue[\"username\"] !== \"\") {\n              if (fieldValue[\"partner\"] !== undefined && fieldValue[\"partner\"] !== \"\") {\n                for (let i = 0; i < parsedGridFormData.length; i++) {\n                  if (parsedGridFormData[i].username === fieldValue[\"username\"]) {\n                    enabledToSend = false;\n                    return props.callErrorToast(\"Пользователь с таким логином уже существует\", \"warning\");\n                  } else enabledToSend = true;\n                }\n              } else props.callErrorToast(\"Введите Контрагента\", \"warning\");\n            } else props.callErrorToast(\"Введите Email\", \"warning\");\n          } else props.callErrorToast(\"Введите Имя\", \"warning\");\n        } else props.callErrorToast(\"Введите Фамилию\", \"warning\");\n      } else props.callErrorToast(\"Введите Логин\", \"warning\");\n    } else props.callErrorToast(\"Введите Роль\", \"warning\");\n\n    if (enabledToSend === true) {\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    }\n  }\n\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false;\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n            return checkedSuccessfuly;\n          } else {\n            checkedSuccessfuly = true;\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  async function buttonClick(buttonName, item) {\n    if (buttonName === \"createUser\") {\n      // let KeycloakDoc = getFieldValuesSelectedDoc()\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"createUser\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button createUser: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"saveUser\") {\n      // console.log(\"button saveUser: \", keycloakUser, restUser)\n      let keycloakUser = getFieldValuesKeycloakCreate(); // let role = getEnumLabelById(\"userRole\")\n\n      let restUser = getFieldValuesRest(keycloakUser); // let userMgment = role === \"Администратор\" ? \"true\" : \"false\"\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"saveUser\"\n          },\n          keycloakUserData: {\n            value: JSON.stringify(keycloakUser)\n          },\n          restUserData: {\n            value: JSON.stringify(restUser)\n          },\n          createdUserName: {\n            value: fieldValue[\"username\"]\n          }\n        }\n      };\n      checkForWrongFields(commandJson);\n    } else if (buttonName === \"findUser\") {\n      filterDocList(0, size, initialDocList, fieldValue);\n    } else if (buttonName === \"editUser\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"editUser\"\n          },\n          keycloakUserId: {\n            value: item.id\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button editUser: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateUser\") {\n      let keycloakUser = getFieldValuesKeycloakUpdate(); // let role = getEnumLabelById(\"userRole\")\n\n      let restUser = getFieldValuesRest(keycloakUser);\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"updateUser\"\n          },\n          keycloakUserId: {\n            value: selectedDoc.id\n          },\n          keycloakUserData: {\n            value: JSON.stringify(keycloakUser)\n          },\n          restUserData: {\n            value: JSON.stringify(restUser)\n          },\n          setRoleBody: {\n            value: JSON.stringify([{\n              \"id\": \"b9bc93bb-7915-485b-8c46-925098613a59\",\n              \"name\": \"userManagement\"\n            }])\n          }\n        }\n      };\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        console.log(\"updateUser:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"resetPassword\") {\n      swal({\n        text: \"Вы точно хотите сбросить пароль?\",\n        icon: \"warning\",\n        buttons: {\n          ok: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"ok\") {\n          var keycloakUser = getFieldValuesKeycloakResetPassword();\n          let commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            userId: userProfile.userId,\n            userRole: userProfile.userRole,\n            variables: {\n              authorization: {\n                value: \"token\"\n              },\n              userAction: {\n                value: \"resetPassword\"\n              },\n              keycloakUserId: {\n                value: selectedDoc.id\n              },\n              keycloakUserData: {\n                value: JSON.stringify(keycloakUser)\n              }\n            }\n          };\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n          console.log(\"REST PWD:\", commandJson);\n        }\n      });\n    } else if (buttonName === \"disableUser\") {\n      swal({\n        text: \"Вы точно хотите заблокировать пользователя?\",\n        icon: \"warning\",\n        buttons: {\n          ok: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"ok\") {\n          let keycloakUser = getFieldValuesKeycloakChangeAccesUser(false);\n          let restUser = getFieldValuesRest(keycloakUser);\n          let commandJson = {\n            commandType: \"completeTask\",\n            session_id: session_id,\n            process_id: process_id,\n            taskID: taskID,\n            userId: userProfile.userId,\n            userRole: userProfile.userRole,\n            variables: {\n              userAction: {\n                value: \"disableUser\"\n              },\n              keycloakUserId: {\n                value: selectedDoc.id\n              },\n              keycloakUserData: {\n                value: JSON.stringify(keycloakUser)\n              },\n              restUserData: {\n                value: JSON.stringify(restUser)\n              }\n            }\n          };\n          console.log(\"disableUser:\", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      });\n    } else if (buttonName === \"enableUser\") {\n      let keycloakUser = getFieldValuesKeycloakChangeAccesUser(true);\n      let restUser = getFieldValuesRest(keycloakUser);\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"enableUser\"\n          },\n          keycloakUserId: {\n            value: selectedDoc.id\n          },\n          keycloakUserData: {\n            value: JSON.stringify(keycloakUser)\n          },\n          restUserData: {\n            value: JSON.stringify(restUser)\n          }\n        }\n      };\n      console.log(\"enableUser:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"Button \", buttonName);\n    }\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section, index) {\n    return /*#__PURE__*/React.createElement(MTable, {\n      size: \"small\",\n      key: index + \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(MTable, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 9\n      }\n    }, section.contents.map((contentItem, index) => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 15\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 15\n      }\n    }, contentBuilder(contentItem))))));\n  } // Creating components by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleTextChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox // key={this.getUUID()}\n      , {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === true ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findUser\") {\n          console.log(\"CODE\", code);\n          handleTextChange(event);\n          buttonClick(\"findUser\", null);\n        }\n      }\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name];\n    let name = contentItem.name;\n    let type = contentItem.type;\n\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label;\n                }\n              }\n            }\n          } else {// console.log(\"Ошибка сбора справочной информации \")\n          }\n        }\n      }\n    } else if (type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newCur = props.currencyBeautifier(value);\n        return newCur;\n      }\n    } else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        let newInt = props.intBeautifier(value);\n        return newInt;\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\";\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 17\n          }\n        }, value);\n      }\n    }\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1;\n      console.log(\"IT\", i, gridForm.sections[nextS]);\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1;\n    } // console.log(\"SORT\", property, sortOrder, type)\n\n\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder;\n        } else {\n          let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n          let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n          var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n          return result * sortOrder;\n        }\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type)); // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function getFontColor(dataItem) {\n    if (dataItem.enabled === true) {\n      if (dataItem.online === true) {\n        return \"green\";\n      } else {\n        return \"black\";\n      }\n    } else {\n      return \"#FE6767\";\n    }\n  }\n\n  if (docList === null && props.userTask.taskType === \"showSearchUser\") {\n    return /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1311,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1315,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 23\n      }\n    }, Form.label)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 17\n      }\n    }, Form.sections.map((section, index) => {\n      return sectionBuilder(section, index);\n    }))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1330,\n        columnNumber: 11\n      }\n    }, buttons.map((button, index) => {\n      if (button.name === \"disableUser\") {\n        if (userEnabled === true) {\n          return /*#__PURE__*/React.createElement(Button, {\n            key: index,\n            name: button.name,\n            variant: \"outlined\",\n            value: button.name,\n            onClick: () => buttonClick(button.name, null),\n            style: {\n              margin: 3,\n              backgroundColor: button.backgroundColor,\n              height: 32,\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1335,\n              columnNumber: 21\n            }\n          }, button.label);\n        }\n      } else if (button.name === \"enableUser\") {\n        if (userEnabled === false) {\n          return /*#__PURE__*/React.createElement(Button, {\n            key: button.name + index,\n            name: button.name,\n            variant: \"outlined\",\n            value: button.name,\n            onClick: () => buttonClick(button.name, null),\n            style: {\n              margin: 3,\n              backgroundColor: button.backgroundColor,\n              height: 32,\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1355,\n              columnNumber: 21\n            }\n          }, button.label);\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(Button, {\n          key: button.name + index,\n          name: button.name,\n          variant: \"outlined\",\n          value: button.name,\n          onClick: () => buttonClick(button.name, null),\n          style: {\n            margin: 3,\n            backgroundColor: button.backgroundColor,\n            height: 32,\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 19\n          }\n        }, button.label);\n      }\n    }))), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n      style: {\n        paddingTop: 3,\n        cursor: \"pointer\"\n      },\n      onClick: () => buttonClick(\"updateDocList\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1395,\n        columnNumber: 11\n      }\n    }), docList !== null && props.userTask.taskType === \"showSearchUser\" && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1399,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1400,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1401,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"500px\",\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1402,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      class: \"main-table-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1403,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-style\",\n      style: {\n        position: \"sticky\",\n        top: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1404,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1406,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-first-child\",\n      colSpan: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1407,\n        columnNumber: 25\n      }\n    }), gridForm.sections.map((section, index) => {\n      let showSection = checkToShowSection(section);\n\n      if (showSection === true) {\n        let lastSection = checkSectionOnLastChild(index);\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n          colSpan: section.contents.length,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1413,\n            columnNumber: 31\n          }\n        }, section.label);\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1422,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-head-style-2row\",\n      rowSpan: \"2\",\n      style: {\n        \"minWidth\": \"65px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423,\n        columnNumber: 25\n      }\n    }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n      if (contentItem.show === true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          class: \"td-head-style-2row\",\n          rowSpan: \"2\",\n          onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 33\n          }\n        }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1440,\n            columnNumber: 98\n          }\n        }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n          style: {\n            marginBottom: -8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1440,\n            columnNumber: 151\n          }\n        }) : \"\");\n      }\n    })))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1448,\n        columnNumber: 21\n      }\n    }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        \"height\": 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1451,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"td-style\",\n      style: {\n        \"maxWidth\": 34\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1452,\n        columnNumber: 29\n      }\n    }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n      name: button.name,\n      variant: \"outlined\",\n      value: button.name,\n      onClick: () => buttonClick(button.name, dataItem),\n      style: {\n        margin: 1,\n        height: 24,\n        fontSize: 10,\n        maxWidth: 32,\n        backgroundColor: button.backgroundColor,\n        borderColor: \"darkgreen\",\n        color: \"darkgreen\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1455,\n        columnNumber: 35\n      }\n    }, button.label))), gridForm.sections.map(section => section.contents.map(contentItem => {\n      if (contentItem.show === true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"left\",\n          style: {\n            color: getFontColor(dataItem),\n            fontWeight: dataItem.online === true ? \"bold\" : \"normal\",\n            fontSize: 12,\n            \"text-align\": \"center\",\n            \"border-bottom\": \"1px solid grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1477,\n            columnNumber: 37\n          }\n        }, getGridFormItems(dataItem, contentItem));\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1490,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1491,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1492,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: 90,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1493,\n        columnNumber: 23\n      }\n    }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1495,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        minWidth: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1496,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(GridSelect, {\n      onChange: handleChangeRowsPerPage,\n      style: {\n        height: 25,\n        color: \"black\"\n      },\n      value: size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1500,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1505,\n        columnNumber: 27\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1506,\n        columnNumber: 27\n      }\n    }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 27\n      }\n    }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1508,\n        columnNumber: 27\n      }\n    }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 27\n      }\n    }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1510,\n        columnNumber: 27\n      }\n    }, \"500\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1511,\n        columnNumber: 27\n      }\n    }, \"1000\")))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1516,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowFirstClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1518,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1519,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1523,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1524,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLeftClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1525,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1526,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: \"black\",\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1530,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        maxWidth: 25\n      },\n      value: page,\n      onChange: handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1531,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1533,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1534,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => GoToPage(),\n      variant: \"outlined\",\n      style: {\n        height: 22,\n        backgroundColor: \"#D1D6D6\",\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1535,\n        columnNumber: 25\n      }\n    }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1547,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1548,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowRightClick(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1549,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1550,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1554,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"\\u041D\\u0430 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1555,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => KeyboardArrowLastClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1556,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(LastPageIcon, {\n      style: {\n        fontSize: \"large\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1557,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"pagination-rows-amount-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1561,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount(), \" \\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList.length)))))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: showSnackBar,\n      onClose: () => handleCloseSnackBar(),\n      autoHideDuration: 1200,\n      message: snackBarMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 9\n      }\n    }));\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","MTable","TableFooter","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","GridSelect","FormControl","IconButton","MenuItem","FirstPageIcon","LastPageIcon","ArrowForwardIosIcon","ArrowBackIosIcon","LinearProgress","Snackbar","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","TextField","Select","Checkbox","Tooltip","swal","props","userProfile","session_id","userTask","process_id","taskID","Form","selectedDoc","setSelectedDoc","userEnabled","setUserEnabled","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","gridForm","gridFormButtons","enumData","enumOptions","setEnumOptions","gridFormEnumData","fieldValue","setFieldValue","selectedOptions","setSelectedOptions","buttons","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","sectionColor","updateState","setUpdateState","isSearchForm","setIsSearchForm","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","console","log","parsedDocList","JSON","parse","s","parseInt","p","newDocList","i","length","newUser","id","enabled","username","firstName","lastName","email","online","lastAccess","userRole","attributes","partner","middleName","phone","push","er","sortedDocList","sort","dynamicSort","parsedDoc","filterDocList","fetchBySize","callErrorToast","taskType","fields","value","undefined","newEnumOptions","options","name","d","data","label","getLostEnumName","enumI","sections","c","contents","type","handleCheckboxChange","event","target","checked","getUUID","getContentType","key","fetchFrom","fetchTo","Data","Object","keys","match","contentType","searchField","toLowerCase","trim","dataField","includeSearch","includes","toString","parseDate","KeyboardArrowFirstClick","KeyboardArrowLastClick","getPageAmount","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","handleCloseSnackBar","pagesFloat","mathRoundOfPages","Math","floor","uuidv1","require","swAllert","text","icon","ok","handleTextChange","handleSelectChange","updateSelectedOptions","slice","noSuchOption","getFieldValuesRest","keycloakUser","restUser","user_id","lastname","firstname","stringify","getFieldValuesKeycloakCreate","attrs","locale","userId","emailVerified","requiredActions","credentials","getFieldValuesKeycloakUpdate","updateUser","getFieldValuesKeycloakResetPassword","getFieldValuesKeycloakChangeAccesUser","access","checkForWrongFields","commandJson","enabledToSend","parsedGridFormData","sendFieldValues","clearTabData","checkForRequieredFields","checkedSuccessfuly","fieldName","required","buttonClick","buttonName","item","commandType","variables","authorization","userAction","searchDoc","keycloakUserData","restUserData","createdUserName","keycloakUserId","setRoleBody","checkResult","cancel","then","click","sectionBuilder","section","index","height","color","fontSize","backgroundColor","width","bodyBuilder","map","contentItem","show","contentBuilder","onKeyPressText","edit","selectedOption","document","body","menuPortal","base","zIndex","maxWidth","code","charCode","getGridFormItems","dataItem","l","Date","substring","Time","newCur","currencyBeautifier","newInt","intBeautifier","checkToShowSection","showSection","checkSectionOnLastChild","lastSection","nextS","property","sortOrder","a","b","dateA","timeInSecA","getTime","dateB","timeInSecB","result","labelA","getEnumLabel","labelB","sortDataByColumn","getFontColor","maxHeight","button","margin","paddingTop","cursor","overflow","position","top","marginBottom","borderColor","fontWeight","paddingLeft","minWidth"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/Users/Users.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import clsx from 'clsx';\n// import { makeStyles} from '@material-ui/core/styles';\nimport MTable from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableFooter from '@material-ui/core/TableFooter';\nimport { Table } from 'reactstrap';  // Core ui table for grid form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n// Icons\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\n// Form components\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\n// Libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\n\nexport default (props) => {\n  // This.state\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [Form] = useState(props.userTask.Form)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [userEnabled, setUserEnabled] = useState(null)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState([])\n  const [filteredDocList, setFilteredDocList] = useState([])\n  const [initialDocList, setInitialDocList] = useState([])\n  const [gridForm] = useState(props.userTask.gridForm)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [enumData] = useState(props.userTask.enumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [fieldValue, setFieldValue] = useState({})\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [buttons] = useState(props.userTask.buttons)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [isSearchForm, setIsSearchForm] = useState(null)\n\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n\n  // Set data from props to state of component\n  useEffect(() => {\n    console.log(\"User PROPS\", props.userTask)\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedDocList = JSON.parse(props.userTask.docList)\n        // console.log(\"DOCL\", parsedDocList)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        let newDocList = []\n        for (let i = 0; i < parsedDocList.length; i++) {\n          try {\n            let newUser = {\n              id: parsedDocList[i].id,\n              enabled: parsedDocList[i].enabled,\n              username: parsedDocList[i].username,\n              firstName: parsedDocList[i].firstName,\n              lastName: parsedDocList[i].lastName,\n              email: parsedDocList[i].email,\n              online: parsedDocList[i].online,\n              lastAccess: parsedDocList[i].lastAccess,\n              userRole: parseInt(parsedDocList[i].attributes.userRole[0]),\n              partner: parsedDocList[i].attributes.partner ? parseInt(parsedDocList[i].attributes.partner[0]) : null,\n              middleName: parsedDocList[i].attributes.middleName[0],\n              phone: parsedDocList[i].attributes.phone[0]\n            }\n            newDocList.push(newUser)\n          }\n          catch (er) { console.log(\"ERR\", er) }\n        }\n        let sortedDocList = newDocList.sort(dynamicSort(\"online\", 1, \"Bool\"))\n        console.log(\"DOCL\", sortedDocList)\n        setInitialDocList(sortedDocList)\n        setFilteredDocList(sortedDocList)\n        if (props.userTask.selectedDoc !== \"null\") {\n          let parsedDoc = JSON.parse(props.userTask.selectedDoc)\n          // console.log(\"SHDOC\", parsedDoc)\n          setFieldValue(parsedDoc)\n          setSelectedDoc(parsedDoc)\n          filterDocList(0, s - 1, sortedDocList, parsedDoc)\n        }\n        else { fetchBySize(0, s - 1, sortedDocList) }\n        setIsSearchForm(true)\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== null && props.userTask.docList === \"null\") {\n      let parsedDoc = JSON.parse(props.userTask.selectedDoc)\n      setUserEnabled(parsedDoc.enabled)\n      let fields = {\n        // id: parsedDoc.id,\n        username: parsedDoc.username,\n        firstName: parsedDoc.firstName,\n        lastName: parsedDoc.lastName,\n        email: parsedDoc.email\n      }\n      for (let i in parsedDoc.attributes) {\n        let value = parsedDoc.attributes[i][0] === \"true\" ? true : parsedDoc.attributes[i][0] === \"false\" ? false : parsedDoc.attributes[i][0]\n        fields[i] = value\n      }\n      setFieldValue(fields)\n      setSelectedDoc(parsedDoc)\n      console.log(\"SDOC\", parsedDoc)\n    }\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {}\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }]\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            })\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n    }\n    // var d = new Date(1628246614000)\n    // let nd = d.toLocaleString()\n    // console.log(\"TIME\", nd)\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n\n  const handleCheckboxChange = (event) => {\n    console.log(\"CHECK\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAllAdminFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"administartor\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllTradingFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"tradingSystems\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllMainFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"mainFunctions\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllAccountingFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"accountingDepartment\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllMortgageFunctions\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"mortgageCoverage\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllInstructionTypes\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"InstructionsAccessSection\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else if (event.target.name === \"selectAllReportTypes\") {\n      for (let s = 0; s < Form.sections.length; s++) {\n        if (Form.sections[s].name === \"ReportsAccessSection\") {\n          for (let c = 0; c < Form.sections[s].contents.length; c++) {\n            fieldValue[Form.sections[s].contents[c].name] = event.target.checked\n            setFieldValue(fieldValue)\n          }\n        }\n      }\n    }\n    else {\n      setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n    }\n    setUpdateState(getUUID())\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = []\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data\n    }\n    else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true\n          }\n          else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key)\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase().trim()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                catch (er) {\n                  console.log(\"ERR\", er)\n                  match = true\n                }\n              }\n              else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else { match = true }\n              }\n              else if (contentType === \"Enum\") {\n\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true\n                }\n                else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n              else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n            }\n            else {\n              match = false\n              break\n            }\n          }\n        }\n        if (match === true) {\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered users by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLastClick() {\n    if (page !== getPageAmount()) {\n      setPage(getPageAmount())\n      fetchBySize((getPageAmount() - 1) * size, filteredDocList.length, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на последней странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.floor(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleSelectChange(event) {\n    console.log(\"SO\", event, fieldValue)\n    fieldValue[event.name] = event.value\n    setFieldValue(fieldValue)\n    let updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (event.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = event\n        setSelectedOptions(updateSelectedOptions)\n        // console.log(\"SO\", selectedOptions)\n        noSuchOption = false\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(event)\n      setSelectedOptions(updateSelectedOptions)\n      // console.log(\"SO\", selectedOptions)\n    }\n\n    if (event.name === \"userRole\" && props.userTask.taskType === \"showCreateUser\") {\n      if (event.value === 1) {\n        // console.log(\"SO\", event.name, event.value)\n        for (let i = 0; i < Form.sections.length; i++) {\n          for (let c = 0; c < Form.sections[i].contents.length; c++) {\n            if (Form.sections[i].contents[c].type === \"Bool\") {\n              fieldValue[Form.sections[i].contents[c].name] = true\n              setFieldValue(fieldValue)\n            }\n          }\n        }\n      }\n    }\n  }\n  // Collect data to create new user in REST\n  function getFieldValuesRest(keycloakUser) {\n    let restUser = {\n      user_id: null,\n      name: fieldValue[\"username\"],\n      lastname: fieldValue[\"lastName\"],\n      firstname: fieldValue[\"firstName\"],\n      email: fieldValue[\"email\"],\n      attributes: JSON.stringify(keycloakUser.attributes)\n    }\n    for (let key in keycloakUser.attributes) {\n      if (key === \"userId\") {\n        restUser[\"user_id\"] = keycloakUser.attributes[key]\n      }\n    }\n    return restUser\n  }\n  // Collect data to create new user\n  function getFieldValuesKeycloakCreate() {\n    let attrs = {\n      locale: \"ru\",\n      userId: getUUID(),\n      enabled: true\n    }\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let name = Form.sections[s].contents[c].name\n        let type = Form.sections[s].contents[c].type\n        // console.log(\"NAME \", name, \"VAL\", fieldValue[name])\n        if (name !== \"username\" && name !== \"firstName\" && name !== \"lastName\" && name !== \"email\") {\n          if (type === \"Enum\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = null\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n          else if (type === \"Text\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = \"-\"\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n          else if (type === \"Bool\") {\n            if (fieldValue[name] === undefined) {\n              attrs[name] = false\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n\n        }\n\n      }\n    }\n    let newUser = {\n      username: fieldValue[\"username\"],\n      firstName: fieldValue[\"firstName\"],\n      lastName: fieldValue[\"lastName\"],\n      email: fieldValue[\"email\"],\n      emailVerified: true,\n      enabled: true,\n      requiredActions: [\"UPDATE_PASSWORD\"],\n      attributes: attrs,\n      credentials: [\n        {\n          type: \"password\",\n          value: \"12345\"\n        }\n      ]\n    }\n    // console.log(\"USER\", newUser)\n    return newUser\n  }\n  // Collect data to update existed user\n  function getFieldValuesKeycloakUpdate() {\n    let attrs = {\n      locale: \"ru\",\n      userId: fieldValue[\"userId\"],\n      enabled: selectedDoc.enabled\n    }\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let name = Form.sections[s].contents[c].name\n        let type = Form.sections[s].contents[c].type\n        if (name !== \"username\" && name !== \"firstName\" && name !== \"lastName\" && name !== \"email\" && name !== \"selectAllAdminFunctions\"\n          && name !== \"selectAllTradingFunctions\" && name !== \"selectAllMainFunctions\" && name !== \"selectAllAccountingFunctions\"\n          && name !== \"selectAllMortgageFunctions\" && name !== \"selectAllInstructionTypes\" && name !== \"selectAllReportTypes\") {\n          if (type === \"Enum\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = null\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n          else if (type === \"Text\") {\n            if (fieldValue[name] === \"\" || fieldValue[name] === undefined) {\n              attrs[name] = \"-\"\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n          else if (type === \"Bool\") {\n            if (fieldValue[name] === undefined) {\n              attrs[name] = false\n            }\n            else {\n              let value = fieldValue[name]\n              attrs[name] = value\n            }\n          }\n        }\n\n      }\n    }\n    let updateUser = {\n      username: fieldValue[\"username\"],\n      firstName: fieldValue[\"firstName\"],\n      lastName: fieldValue[\"lastName\"],\n      email: fieldValue[\"email\"],\n      emailVerified: true,\n      enabled: selectedDoc.enabled,\n      attributes: attrs\n    }\n    // console.log(\"UPDATE\", updateUser)\n    return updateUser\n  }\n  // Collect data to reset existed user password\n  function getFieldValuesKeycloakResetPassword() {\n    let attrs = {}\n    for (let key in selectedDoc.attributes) {\n      attrs[key] = selectedDoc.attributes[key][0]\n    }\n\n    let updateUser = {\n      username: selectedDoc.username,\n      firstName: selectedDoc[\"firstName\"],\n      lastName: selectedDoc[\"lastName\"],\n      email: selectedDoc[\"email\"],\n      emailVerified: true,\n      enabled: selectedDoc.enabled,\n      requiredActions: [\"UPDATE_PASSWORD\"],\n      attributes: attrs,\n      credentials: [\n        {\n          type: \"password\",\n          value: \"12345\"\n        }\n      ]\n    }\n    return updateUser\n  }\n  // Collect data to set state deleted\n  function getFieldValuesKeycloakChangeAccesUser(access) {\n    console.log(\"ACC\", access)\n    let attrs = {}\n    for (let key in selectedDoc.attributes) {\n      if (key === \"enabled\") {\n        attrs[key] = access\n      }\n      else {\n        attrs[key] = selectedDoc.attributes[key][0]\n      }\n    }\n    let updateUser = {\n      username: selectedDoc.username,\n      firstName: selectedDoc[\"firstName\"],\n      lastName: selectedDoc[\"lastName\"],\n      email: selectedDoc[\"email\"],\n      emailVerified: true,\n      enabled: access,\n      attributes: attrs\n    }\n    return updateUser\n  }\n\n  // Validate input data\n  function checkForWrongFields(commandJson) {\n    let enabledToSend = false\n    var parsedGridFormData = JSON.parse(props.userTask.docList)\n    if (fieldValue[\"userRole\"] !== undefined && fieldValue[\"userRole\"] !== \"\") {\n      if (fieldValue[\"username\"] !== undefined && fieldValue[\"username\"] !== \"\") {\n        if (fieldValue[\"firstName\"] !== undefined && fieldValue[\"firstName\"] !== \"\") {\n          if (fieldValue[\"lastName\"] !== undefined && fieldValue[\"lastName\"] !== \"\") {\n            if (fieldValue[\"username\"] !== undefined && fieldValue[\"username\"] !== \"\") {\n              if (fieldValue[\"partner\"] !== undefined && fieldValue[\"partner\"] !== \"\") {\n                for (let i = 0; i < parsedGridFormData.length; i++) {\n                  if (parsedGridFormData[i].username === fieldValue[\"username\"]) {\n                    enabledToSend = false\n                    return props.callErrorToast(\"Пользователь с таким логином уже существует\", \"warning\")\n                  } else enabledToSend = true\n                }\n              } else props.callErrorToast(\"Введите Контрагента\", \"warning\")\n            } else props.callErrorToast(\"Введите Email\", \"warning\")\n          } else props.callErrorToast(\"Введите Имя\", \"warning\")\n        } else props.callErrorToast(\"Введите Фамилию\", \"warning\")\n      } else props.callErrorToast(\"Введите Логин\", \"warning\")\n    } else props.callErrorToast(\"Введите Роль\", \"warning\")\n    if (enabledToSend === true) {\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n  }\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null ||\n            fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n            return checkedSuccessfuly\n          }\n          else {\n            checkedSuccessfuly = true\n          }\n        }\n        else {\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  async function buttonClick(buttonName, item) {\n    if (buttonName === \"createUser\") {\n      // let KeycloakDoc = getFieldValuesSelectedDoc()\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"createUser\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button createUser: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"saveUser\") {\n      // console.log(\"button saveUser: \", keycloakUser, restUser)\n      let keycloakUser = getFieldValuesKeycloakCreate()\n      // let role = getEnumLabelById(\"userRole\")\n      let restUser = getFieldValuesRest(keycloakUser)\n      // let userMgment = role === \"Администратор\" ? \"true\" : \"false\"\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"saveUser\" },\n          keycloakUserData: { value: JSON.stringify(keycloakUser) },\n          restUserData: { value: JSON.stringify(restUser) },\n          createdUserName: { value: fieldValue[\"username\"] }\n        }\n      }\n      checkForWrongFields(commandJson)\n    }\n    else if (buttonName === \"findUser\") {\n      filterDocList(0, size, initialDocList, fieldValue)\n    }\n    else if (buttonName === \"editUser\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"editUser\" },\n          keycloakUserId: { value: item.id },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button editUser: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateUser\") {\n      let keycloakUser = getFieldValuesKeycloakUpdate()\n      // let role = getEnumLabelById(\"userRole\")\n      let restUser = getFieldValuesRest(keycloakUser)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"updateUser\" },\n          keycloakUserId: { value: selectedDoc.id },\n          keycloakUserData: { value: JSON.stringify(keycloakUser) },\n          restUserData: { value: JSON.stringify(restUser) },\n          setRoleBody: { value: JSON.stringify([{ \"id\": \"b9bc93bb-7915-485b-8c46-925098613a59\", \"name\": \"userManagement\" }]) }\n        }\n      }\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        console.log(\"updateUser:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"resetPassword\") {\n      swal({\n        text: \"Вы точно хотите сбросить пароль?\",\n        icon: \"warning\",\n        buttons: { ok: \"Да\", cancel: \"Отмена\" }\n      })\n        .then((click) => {\n          if (click === \"ok\") {\n            var keycloakUser = getFieldValuesKeycloakResetPassword()\n            let commandJson =\n            {\n              commandType: \"completeTask\",\n              session_id: session_id,\n              process_id: process_id,\n              taskID: taskID,\n              userId: userProfile.userId,\n              userRole: userProfile.userRole,\n              variables: {\n                authorization: { value: \"token\" },\n                userAction: { value: \"resetPassword\" },\n                keycloakUserId: { value: selectedDoc.id },\n                keycloakUserData: { value: JSON.stringify(keycloakUser) }\n              }\n            }\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n            console.log(\"REST PWD:\", commandJson)\n          }\n        })\n    }\n    else if (buttonName === \"disableUser\") {\n      swal({\n        text: \"Вы точно хотите заблокировать пользователя?\",\n        icon: \"warning\",\n        buttons: { ok: \"Да\", cancel: \"Отмена\" }\n      })\n        .then((click) => {\n          if (click === \"ok\") {\n            let keycloakUser = getFieldValuesKeycloakChangeAccesUser(false)\n            let restUser = getFieldValuesRest(keycloakUser)\n            let commandJson =\n            {\n              commandType: \"completeTask\",\n              session_id: session_id,\n              process_id: process_id,\n              taskID: taskID,\n              userId: userProfile.userId,\n              userRole: userProfile.userRole,\n              variables: {\n                userAction: { value: \"disableUser\" },\n                keycloakUserId: { value: selectedDoc.id },\n                keycloakUserData: { value: JSON.stringify(keycloakUser) },\n                restUserData: { value: JSON.stringify(restUser) }\n              }\n            }\n            console.log(\"disableUser:\", commandJson)\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n          }\n        })\n    }\n    else if (buttonName === \"enableUser\") {\n      let keycloakUser = getFieldValuesKeycloakChangeAccesUser(true)\n      let restUser = getFieldValuesRest(keycloakUser)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"enableUser\" },\n          keycloakUserId: { value: selectedDoc.id },\n          keycloakUserData: { value: JSON.stringify(keycloakUser) },\n          restUserData: { value: JSON.stringify(restUser) }\n        }\n      }\n      console.log(\"enableUser:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocList\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocList\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else {\n      console.log(\"Button \", buttonName)\n    }\n  }\n\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section, index) {\n    return (\n      <MTable size=\"small\" key={index + \"table\"}>\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              key={index = \"head\"}\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </MTable>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <MTable size=\"small\">\n        <TableBody>\n          {section.contents.map((contentItem, index) => (\n            contentItem.show === true &&\n            <TableRow key={index} style={{ height: 30 }}>\n              <TableCell\n                key={index + \"cell1\"}\n                align=\"left\"\n                style={{ width: \"40%\" }}>\n                {contentItem.label}\n              </TableCell>\n              <TableCell\n                key={index + \"cell2\"}\n                align=\"left\"\n                style={{ width: \"60%\", height: 30 }}\n              >{contentBuilder(contentItem)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </MTable>\n    )\n  }\n  // Creating components by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur={handleTextChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name]) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          // key={this.getUUID()}\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={fieldValue[contentItem.name] === true ? true : false}\n        />\n      )\n    }\n  }\n  function onKeyPressText(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findUser\") {\n          console.log(\"CODE\", code)\n          handleTextChange(event)\n          buttonClick(\"findUser\", null)\n        }\n      }\n    }\n  }\n  // Create grid form components\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name]\n    let name = contentItem.name\n    let type = contentItem.type\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label\n                }\n              }\n            }\n          }\n          else {\n            // console.log(\"Ошибка сбора справочной информации \")\n          }\n        }\n      }\n    }\n    else if (type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\" }}\n          checked={(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else if (type === \"Float\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newCur = props.currencyBeautifier(value)\n        return newCur\n      }\n    }\n    else if (type === \"Int\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        let newInt = props.intBeautifier(value)\n        return newInt\n      }\n    }\n    else {\n      if (value === null || value === \"\" || value === undefined) {\n        return \"-\"\n      }\n      else {\n        return (<td>{value}</td>)\n      }\n    }\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true\n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i) {\n    let lastSection = true\n    if (i === gridForm.sections.length - 1) { // The last section\n      return true\n    }\n    else {\n      let nextS = i + 1\n      console.log(\"IT\", i, gridForm.sections[nextS])\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) { // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1\n    }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA = dateA.getTime() / 1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB = dateB.getTime() / 1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else {\n          if (a[property] === null) {\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n    else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder\n        }\n        else {\n          let labelA = getEnumLabel(property, a[property])\n          // console.log(\"A\", property, a[property], labelA)\n          let labelB = getEnumLabel(property, b[property])\n          // console.log(\"labelB\", labelB, property, b)\n          var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n          return result * sortOrder\n        }\n\n      }\n    }\n  }\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size - 1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < gridFormEnumData.length; i++) {\n      if (gridFormEnumData[i].name === name) {\n        for (let d = 0; d < gridFormEnumData[i].data.length; d++) {\n          if (gridFormEnumData[i].data[d].id === id) {\n            return gridFormEnumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function getFontColor(dataItem) {\n    if (dataItem.enabled === true) {\n      if (dataItem.online === true) {\n        return \"green\"\n      }\n      else {\n        return \"black\"\n      }\n    }\n    else {\n      return \"#FE6767\"\n    }\n  }\n  if (docList === null && props.userTask.taskType === \"showSearchUser\") {\n    return <LinearProgress />\n  }\n  else {\n    return (\n      <Grid>\n        {/* Create main search table */}\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n          <Grid item xs={9}>\n            <Paper>\n              <MTable>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                  <TableHead>\n                    <TableRow style={{ maxHeight: 25 }}>\n                      <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Grid>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                  {Form.sections.map((section, index) => {\n                    return sectionBuilder(section, index)\n                  })}\n                </Grid>\n              </MTable>\n            </Paper>\n          </Grid>\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n            {buttons.map((button, index) => {\n              if (button.name === \"disableUser\") {\n                if (userEnabled === true) {\n                  return (\n                    <Button\n                      key={index}\n                      name={button.name}\n                      variant=\"outlined\"\n                      value={button.name}\n                      onClick={() => buttonClick(button.name, null)}\n                      style={{\n                        margin: 3,\n                        backgroundColor: button.backgroundColor,\n                        height: 32,\n                        fontSize: 12\n                      }}\n                    >{button.label}\n                    </Button>\n                  )\n                }\n              }\n              else if (button.name === \"enableUser\") {\n                if (userEnabled === false) {\n                  return (\n                    <Button\n                      key={button.name + index}\n                      name={button.name}\n                      variant=\"outlined\"\n                      value={button.name}\n                      onClick={() => buttonClick(button.name, null)}\n                      style={{\n                        margin: 3,\n                        backgroundColor: button.backgroundColor,\n                        height: 32,\n                        fontSize: 12\n                      }}\n                    >{button.label}\n                    </Button>\n                  )\n                }\n              }\n              else {\n                return (\n                  <Button\n                    key={button.name + index}\n                    name={button.name}\n                    variant=\"outlined\"\n                    value={button.name}\n                    onClick={() => buttonClick(button.name, null)}\n                    style={{\n                      margin: 3,\n                      backgroundColor: button.backgroundColor,\n                      height: 32,\n                      fontSize: 12\n                    }}\n                  >{button.label}\n                  </Button>\n                )\n              }\n            }\n            )}\n          </Grid>\n        </Grid>\n        {isSearchForm === true &&\n          <ReplayIcon style={{ paddingTop: 3, cursor: \"pointer\" }} onClick={() => buttonClick(\"updateDocList\")} />\n        }\n        {/* Create grid table with data from doclist */}\n        {docList !== null && props.userTask.taskType === \"showSearchUser\" &&\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            <Grid item sm={\"auto\"}>\n              <Paper>\n                <div style={{ height: \"500px\", overflow: \"auto\" }}>\n                  <table size=\"small\" class=\"main-table-style\">\n                    <thead class=\"thead-style\" style={{ position: \"sticky\", top: 0 }}>\n                      {/* 1st Row Sections Labels */}\n                      <tr>\n                        <td class=\"td-head-first-child\" colSpan=\"1\"></td>\n                        {gridForm.sections.map((section, index) => {\n                          let showSection = checkToShowSection(section)\n                          if (showSection === true) {\n                            let lastSection = checkSectionOnLastChild(index)\n                            return (\n                              <td\n                                class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                colSpan={section.contents.length}\n                              >{section.label}</td>\n                            )\n                          }\n                        })}\n                      </tr>\n                      {/* 2nd Row Sections Contents labels */}\n                      <tr>\n                        <td\n                          class=\"td-head-style-2row\"\n                          rowSpan=\"2\"\n                          style={{ \"minWidth\": \"65px\" }}\n                        >\n                          Действие\n                        </td>\n                        {gridForm.sections.map(section =>\n                          section.contents.map(contentItem => {\n                            if (contentItem.show === true) {\n                              return (\n                                <td\n                                  class=\"td-head-style-2row\"\n                                  rowSpan=\"2\"\n                                  onClick={() => sortDataByColumn(contentItem.name, contentItem.type)}\n                                >\n                                  {contentItem.label}\n                                  {sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{ marginBottom: -8 }} /> : <ArrowDropUpIcon style={{ marginBottom: -8 }} /> : \"\"}\n                                </td>\n                              )\n                            }\n                          })\n                        )}\n                      </tr>\n                    </thead>\n                    <TableBody>\n                      {Object.keys(docList).length !== 0 &&\n                        docList.map(dataItem => (\n                          <tr style={{ \"height\": 30 }}>\n                            <td class=\"td-style\" style={{ \"maxWidth\": 34 }}>\n                              {gridFormButtons !== \"null\" &&\n                                gridFormButtons.map(button =>\n                                  <Button\n                                    name={button.name}\n                                    variant=\"outlined\"\n                                    value={button.name}\n                                    onClick={() => buttonClick(button.name, dataItem)}\n                                    style={{\n                                      margin: 1,\n                                      height: 24,\n                                      fontSize: 10,\n                                      maxWidth: 32,\n                                      backgroundColor: button.backgroundColor,\n                                      borderColor: \"darkgreen\",\n                                      color: \"darkgreen\"\n                                    }}\n                                  >{button.label}\n                                  </Button>\n                                )}\n                            </td>\n                            {gridForm.sections.map(section => (\n                              section.contents.map(contentItem => {\n                                if (contentItem.show === true) {\n                                  return (\n                                    <td align=\"left\" style={{ color: getFontColor(dataItem), fontWeight: dataItem.online === true ? \"bold\" : \"normal\", fontSize: 12, \"text-align\": \"center\", \"border-bottom\": \"1px solid grey\" }}>\n                                      {getGridFormItems(dataItem, contentItem)}\n                                    </td>\n                                  )\n                                }\n                              })\n                            ))}\n                          </tr>\n                        )\n                        )}\n                    </TableBody>\n                  </table>\n                </div>\n                <tfoot>\n                  <tr>\n                    <td style={{ paddingLeft: \"20px\" }}>\n                      <div style={{ minWidth: 90, color: \"black\" }}>Кол-во записей</div>\n                    </td>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <FormControl\n                        variant=\"outlined\"\n                        style={{ minWidth: 30 }}\n                      >\n                        <GridSelect\n                          onChange={handleChangeRowsPerPage}\n                          style={{ height: 25, color: \"black\" }}\n                          value={size}\n                        >\n                          <MenuItem value={10}>10</MenuItem>\n                          <MenuItem value={20}>20</MenuItem>\n                          <MenuItem value={50}>50</MenuItem>\n                          <MenuItem value={100}>100</MenuItem>\n                          <MenuItem value={200}>200</MenuItem>\n                          <MenuItem value={500}>500</MenuItem>\n                          <MenuItem value={1000}>1000</MenuItem>\n                        </GridSelect>\n                      </FormControl>\n                    </td>\n\n                    <td>\n                      <Tooltip title=\"На первую страницу\">\n                        <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                          <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На предыдущюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                          <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td style={{ color: \"black\", fontSize: 16 }}>\n                      <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                    </td>\n                    <td style={{ paddingLeft: \"3px\" }}>\n                      <Tooltip title=\"Перейти на указанную страницу\">\n                        <Button\n                          onClick={() => GoToPage()}\n                          variant=\"outlined\"\n                          style={{\n                            height: 22,\n                            backgroundColor: \"#D1D6D6\",\n                            fontSize: 12\n                          }}\n                        >перейти\n                        </Button>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На следующюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                          <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td>\n                      <Tooltip title=\"На последнюю страницу\">\n                        <IconButton onClick={() => KeyboardArrowLastClick()}>\n                          <LastPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                        </IconButton>\n                      </Tooltip>\n                    </td>\n                    <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()} Общее кол-во {filteredDocList.length}</td>\n                  </tr>\n\n                </tfoot>\n              </Paper>\n            </Grid>\n          </Grid>\n        }\n        <Snackbar\n          open={showSnackBar}\n          onClose={() => handleCloseSnackBar()}\n          autoHideDuration={1200}\n          message={snackBarMessage}\n        />\n      </Grid>\n    )\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}