{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\Reports\\\\Reports.jsx\";\n// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from '@material-ui/core/Paper';\nimport Modal from \"@material-ui/core/Modal\";\nimport FormControl from '@material-ui/core/FormControl';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport Stack from '@mui/material/Stack';\nimport TimePicker from '@mui/lab/TimePicker';\nimport dayjs, { Dayjs } from 'dayjs';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'; // Icons\n\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // PIN components\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fade, makeStyles } from '@material-ui/core/styles'; // Import libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport { Markup } from 'interweave';\nimport * as rutoken from \"rutoken\";\n\nvar moment = require('moment');\n\nconst axios = require('axios');\n\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \",\",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  },\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  paper: {\n    width: \"100%\",\n    height: 200,\n    overflow: 'auto'\n  },\n  button: {\n    // width: \"5%\",\n    margin: theme.spacing(0)\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [process_id] = useState(props.userTask.process_id);\n  const [session_id] = useState(props.userTask.session_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [taskType] = useState(props.userTask.taskType);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [enumData] = useState(props.userTask.enumData);\n  const [selectedOptions, setSelectedOptions] = useState([]); // const [multiSelectData] = useState(props.userTask.multiSelectData)\n  // const [multiSelectDataOptions, setMultiSelectDataOptions] = useState({})\n  // const [multiSelectedOptions, setMultiSelectedOptions] = useState({})\n  // const [gridForm] = useState(props.userTask.gridForm)\n\n  const [reportName] = useState(props.userTask.reportName);\n  const [fieldValue, setFieldValue] = useState({});\n  const [docId] = useState(props.userTask.docId);\n  const [buttons] = useState(props.userTask.buttons);\n  const [formType] = useState(props.userTask.formType);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [updateState, setUpdateState] = useState(false);\n  const [reportVars, setReportVars] = useState(props.userTask.reportVars); // modals\n\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false);\n  const [modalStyle] = useState(getModalStyle); // TRANSFER LIST\n\n  const [transferList, setTransferList] = useState({\n    reg_id: [],\n    sec_id: [],\n    acc_type_code: [],\n    dep_id: [],\n    corr_dep_id: [],\n    currency_id: [],\n    service_type_id: [],\n    issuer_id: []\n  });\n  const [checked, setChecked] = useState({\n    reg_id: [],\n    sec_id: [],\n    acc_type_code: [],\n    dep_id: [],\n    corr_dep_id: [],\n    currency_id: [],\n    service_type_id: [],\n    issuer_id: []\n  });\n  const [selectedTransferList, setSelectedTransferList] = useState({\n    reg_id: [],\n    sec_id: [],\n    acc_type_code: [],\n    dep_id: [],\n    corr_dep_id: [],\n    currency_id: [],\n    service_type_id: [],\n    issuer_id: []\n  });\n  const [transferListSearchFileds, setTransferListSearchFileds] = useState({});\n  const [selectedTransferListSearchFileds, setSelectedTransferListSearchFileds] = useState({});\n  const [autofocusFieldTrList, setAutofocusFieldTrList] = useState(null);\n  const [autofocusFieldSelTrList, setAutofocusFieldSelTrList] = useState(null);\n  const [value, setValue] = React.useState < Dayjs | null > dayjs('2022-04-07');\n\n  function leftChecked(name) {\n    return intersection(checked[name], transferList[name]);\n  }\n\n  function rightChecked(name) {\n    return intersection(checked[name], selectedTransferList[name]);\n  } // Initializing\n\n\n  useEffect(() => {\n    repserverlogin();\n    console.log(\"REP PROPS\", props.userTask, props.userProfile);\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          if (props.userTask.enumData[i].name === \"report_name\") {\n            if (props.userTask.taskType === \"showReportsSelectingForm\") {\n              for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n                if (props.userProfile[props.userTask.enumData[i].data[d].report_name] === true) {\n                  options.push({\n                    \"value\": props.userTask.enumData[i].data[d].id,\n                    \"label\": props.userTask.enumData[i].data[d].label,\n                    \"name\": props.userTask.enumData[i].name\n                  });\n                }\n              }\n            }\n          } else {\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              options.push({\n                \"value\": props.userTask.enumData[i].data[d].id,\n                \"label\": props.userTask.enumData[i].data[d].label,\n                \"name\": props.userTask.enumData[i].name\n              });\n            }\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n      createTransferListOptions(props.userTask.Form, props.userTask.enumData);\n    } // let newMultiSelectDatamOptions = {}\n    // if(props.userTask.multiSelectData !== null && props.userTask.multiSelectData !== undefined && props.userTask.multiSelectData !== \"null\"){\n    //   for(let i=0; i<multiSelectData.length; i++){\n    //     let options = [{\n    //       \"value\": \"all\",\n    //       \"label\": \"Все\"\n    //     }]\n    //     if(multiSelectData[i].name !== \"acc_id\"){\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         options.push({\n    //           \"value\": multiSelectData[i].data[d].id,\n    //           \"label\": multiSelectData[i].data[d].label,\n    //         })\n    //       }\n    //     }\n    //     else{\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n    //           options.push({\n    //             \"value\": multiSelectData[i].data[d].id,\n    //             \"label\": multiSelectData[i].data[d].label,\n    //           })\n    //         }\n    //       }\n    //     }\n    //     newMultiSelectDatamOptions[multiSelectData[i].name] = options\n    //   }\n    //   setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    //   console.log(\"MS DATA OPTS\", newMultiSelectDatamOptions)\n    // }\n\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined) {\n      // console.log(\"SDOC\", props.userTask.selectedDoc)\n      setSelectedDoc(props.userTask.selectedDoc);\n    }\n\n    if (userProfile.userRole === \"3\") {\n      // Depositor\n      for (let s = 0; s < Form.sections.length; s++) {\n        // Block depositor field\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let n = Form.sections[s].contents[c].name;\n\n          if (n === \"dep_id\") {\n            Form.sections[s].contents[c].edit = false; // console.log(\"BLOCK\", Form.sections[s].contents[c])\n\n            let ed = props.userTask.enumData;\n\n            for (let e = 0; e < ed.length; e++) {\n              if (ed[e].name === \"depositors\") {\n                for (let d = 0; d < ed[e].data.length; d++) {\n                  if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                    setSelectedTransferList({ ...selectedTransferList,\n                      \"dep_id\": [ed[e].data[d].id]\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      setForm(Form); // for(let i=0; i<multiSelectData.length; i++){// find accounts of depositor\n      //   let options = [{\n      //     \"value\": \"all\",\n      //     \"label\": \"Все\"\n      //   }]\n      //   if(multiSelectData[i].name === \"acc_id\"){\n      //     for(let d=0; d<multiSelectData[i].data.length; d++){\n      //       if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n      //         options.push({\n      //           \"value\": multiSelectData[i].data[d].id,\n      //           \"label\": multiSelectData[i].data[d].label,\n      //         })\n      //       }\n      //     } \n      //   }\n      //   newMultiSelectDatamOptions[multiSelectData[i].name] = options\n      // }\n      // setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    }\n\n    if (userProfile.userRole === \"4\") {\n      // Registrar\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let n = Form.sections[s].contents[c].name;\n\n          if (n === \"reg_id\") {\n            Form.sections[s].contents[c].edit = false; // Block registrar field\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n\n            let ed = props.userTask.enumData;\n\n            for (let e = 0; e < ed.length; e++) {\n              if (ed[e].name === \"registrars\") {\n                for (let d = 0; d < ed[e].data.length; d++) {\n                  if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                    setSelectedTransferList({ ...selectedTransferList,\n                      \"registrars\": [ed[e].data[d].id]\n                    }); // multiSelectedOptions[n] = [{\n                    //   \"value\": ed[e].data[d].id,\n                    //   \"label\": ed[e].data[d].label\n                    // }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      setForm(Form);\n    }\n\n    if (userProfile.userRole === \"8\") {\n      // CorrDepository\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let n = Form.sections[s].contents[c].name;\n\n          if (n === \"corr_dep_id\") {\n            Form.sections[s].contents[c].edit = false; // Block corrDepositories field\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n\n            let ed = props.userTask.enumData;\n\n            for (let e = 0; e < ed.length; e++) {\n              if (ed[e].name === \"corrDepositories\") {\n                for (let d = 0; d < ed[e].data.length; d++) {\n                  if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                    setSelectedTransferList({ ...selectedTransferList,\n                      \"corrDepositories\": [ed[e].data[d].id]\n                    }); // multiSelectedOptions[n] = [{\n                    //   \"value\": ed[e].data[d].id,\n                    //   \"label\": ed[e].data[d].label\n                    // }]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      setForm(Form);\n    }\n\n    let newFields = {};\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      // Set current date to DateTime fields\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"FullDateTime\") newFields[Form.sections[s].contents[c].name] = new Date();\n      }\n    }\n\n    console.log(\"NEW F\", newFields);\n    setFieldValue(newFields);\n    setUpdateState(getUUID());\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  function createTransferListOptions(form, enums) {\n    let newTransferList = {};\n    let newSelectedTransferList = {};\n\n    for (let s = 0; s < form.sections.length; s++) {\n      for (let c = 0; c < form.sections[s].contents.length; c++) {\n        if (form.sections[s].contents[c].type === \"TransferList\") {\n          let newTrItems = [];\n          let newSelTrItems = [];\n          let cName = form.sections[s].contents[c].name;\n\n          for (let e = 0; e < enums.length; e++) {\n            if (enums[e] !== null) {\n              if (enums[e].name === cName) {\n                for (let d = 0; d < enums[e].data.length; d++) {\n                  newTrItems.push(enums[e].data[d].id);\n                }\n              }\n            } else {\n              props.callErrorToast(\"Ошибка сбора справочной информации \" + cName);\n            }\n          }\n\n          newTransferList[cName] = newTrItems;\n          newSelectedTransferList[cName] = newSelTrItems;\n        }\n      }\n    }\n\n    setTransferList(newTransferList);\n    setSelectedTransferList(newSelectedTransferList);\n  } // RuToken functions\n\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\")\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\");\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  });\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Rutoken MODAL\n\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  } // Sign transfer order with rutoken\n\n\n  function sign() {\n    // Перебор подключенных Рутокенов\n    if (plugin !== undefined) {\n      plugin.enumerateDevices().then(function (devices) {\n        if (devices.length > 0) {\n          return Promise.resolve(devices[0]);\n        } else {\n          alert(\"Рутокен не обнаружен\");\n        }\n      }) // Проверка залогиненности\n      .then(function (firstDevice) {\n        rutokenHandle = firstDevice;\n        return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n      }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n      .then(function (isLoggedIn) {\n        if (isLoggedIn) {\n          return Promise.resolve();\n        } else {\n          return plugin.login(rutokenHandle, rutokenPin); // 240699\n        }\n      }) // Перебор пользовательских сертификатов на токене\n      .then(function () {\n        return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n      }).then(function (certs) {\n        if (certs.length > 0) {\n          certHandle = certs[0];\n          return plugin.parseCertificate(rutokenHandle, certs[0]);\n        } else {\n          alert(\"Сертификат на Рутокен не обнаружен\");\n        }\n      }) // Подписание данных из текстового поля на первом найденом сертификате\n      .then(function (certs) {\n        certData = certs;\n\n        if (certHandle.length > 0) {\n          var options = {};\n          let inn = \"\";\n          let fullName = \"\";\n\n          for (let i = 0; i < certData.subject.length; i++) {\n            if (certData.subject[i].rdn === \"serialNumber\") {\n              inn = certData.subject[i].value;\n            }\n\n            if (certData.subject[i].rdn === \"commonName\") {\n              fullName = certData.subject[i].value;\n            }\n          }\n\n          props.setEsInn(inn);\n          props.setEsUserFullName(fullName);\n          props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n          handleCloseModalEnterPin(); // swAllert(\"Отчет успешно подписан!\", \"success\")\n\n          reportToPDFES(fullName, inn, certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n          return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n        } else {\n          alert(\"Сертификат на Рутокен не обнаружен\");\n        }\n      }) // Закрытие сессии\n      .then(function () {\n        plugin.logout(rutokenHandle);\n      }, handleError);\n    } else {\n      swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n    }\n  } // catch errors while signing docs\n\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"SignReportSaveButton\", null);\n    }\n  } // Integer input handlers\n\n\n  function handleChange(event) {\n    console.log(\"EV\", event);\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleDateChange(event) {\n    let fullDate = new Date(event.target.value); // console.log(\"DATE CHANGE\", fullDate)\n\n    if (fieldValue[event.target.name] !== undefined && fieldValue[event.target.name] !== null) {\n      let date = moment(fullDate).format(\"YYYY-MM-DD\");\n      let time = moment(fieldValue[event.target.name]).format(\"HH:mm:ss\");\n      fullDate = date + \"T\" + time; // let value = new Date(fieldValue[event.target.name])\n      // let nDate = props.parseDate(event.target.value)\n      // let hours = value.getHours() < 10 ? \"0\" + value.getHours() : value.getHours()\n      // let minutes = value.getMinutes() < 10 ? \"0\" + value.getMinutes() : value.getMinutes()\n      // let seconds = value.getSeconds() < 10 ? \"0\" + value.getSeconds() : value.getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      // console.log(\"F D\", fullDate, hours, minutes, seconds)\n    }\n\n    fieldValue[event.target.name] = fullDate;\n    setFieldValue(fieldValue);\n    console.log(\"DATE CHANGE\", fullDate);\n    console.log(\"FVAL\", fieldValue); // setUpdateState(getUUID())\n  }\n\n  function handleTimeChange(name, value) {\n    let fullDate = new Date(value);\n\n    if (fieldValue[name] !== undefined && fieldValue[name] !== null) {\n      // let nDate = props.parseDate(fieldValue[name])\n      // let hours = new Date(value).getHours()\n      // let minutes = new Date(value).getMinutes()\n      // let seconds = new Date(value).getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      let date = moment(fieldValue[name]).format(\"YYYY-MM-DD\");\n      let time = moment(value).format(\"HH:mm:ss\");\n      fullDate = date + \"T\" + time;\n    }\n\n    fieldValue[name] = fullDate;\n    setFieldValue(fieldValue);\n    console.log(\"FULL DATE CHANGE\", name, value, fieldValue);\n    console.log(\"FVAL\", fieldValue);\n    setUpdateState(getUUID());\n  }\n\n  function handleDateTimeChange(event) {\n    console.log(\"FULL DATE TIME CHANGE\", event.target.name, event.target.value);\n  }\n\n  const handleCheckboxChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Handler of select copmponet changes\n\n\n  function handleSelectChange(option) {\n    console.log(\"SEL CHANGE\", option.name, option.value);\n    fieldValue[option.name] = option.value;\n    let updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        setSelectedOptions(updateSelectedOptions); // console.log(\"SO\", selectedOptions)\n\n        noSuchOption = false;\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    setFieldValue(fieldValue);\n  } // function handleMultiSelectChange(value, {action, removedValue, name}) {\n  //   // console.log(\"MSOP\", multiSelectedOptions)\n  //   console.log(\"NAME\",name)\n  //   if(action === \"select-option\"){\n  //     let putAll = false\n  //     for(let i=0; i<value.length; i++){\n  //       if(value[i].value === \"all\"){\n  //         putAll = true\n  //       }\n  //     }\n  //     if(putAll === true){\n  //       multiSelectedOptions[name] = multiSelectDataOptions[name]\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"remove-value\"){\n  //     // console.log(\"RV\", removedValue, \"NAME\", name)\n  //     if(removedValue.value === \"all\"){\n  //       multiSelectedOptions[name] = null\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"clear\"){\n  //     multiSelectedOptions[name] = null\n  //   }\n  //   if(name === \"dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"depositors\"){\n  //           depositors = enumData[i].data // Find partner for each selected depositor\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<depositors.length; d++){\n  //           if(depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"corr_dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let corr_depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"corrDepositories\"){\n  //           corr_depositors = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<corr_depositors.length; d++){\n  //           if(corr_depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(corr_depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"reg_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let registrars = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"registrars\"){\n  //           registrars = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<registrars.length; d++){\n  //           if(registrars[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(registrars[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   setMultiSelectedOptions(multiSelectedOptions)\n  //   setUpdateState(getUUID())\n  // }\n\n\n  function handleIntChange(event) {\n    console.log(\"EVENT\", event.target.name, event.target.value);\n    fieldValue[event.target.name] = parseInt(event.target.value);\n    setFieldValue(fieldValue);\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section, index) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 9\n      }\n    }, section.contents.map((contentItem, index) => contentItem.show === true && contentItem.type === \"TransferList\" ? /*#__PURE__*/React.createElement(\"table\", {\n      size: \"small\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      colSpan: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 19\n      }\n    }, contentItem.label)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 19\n      }\n    }, \"\\u043F\\u043E\\u0438\\u0441\\u043A \", /*#__PURE__*/React.createElement(\"input\", {\n      autoFocus: autofocusFieldTrList === contentItem.name ? true : false,\n      name: contentItem.name,\n      onChange: handleSearchTransferListChange,\n      value: transferListSearchFileds[contentItem.name],\n      disabled: !contentItem.edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"4%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 19\n      }\n    }, \"\\u043F\\u043E\\u0438\\u0441\\u043A \", /*#__PURE__*/React.createElement(\"input\", {\n      autoFocus: autofocusFieldSelTrList === contentItem.name ? true : false,\n      name: contentItem.name,\n      onChange: handleSearchSelectedTransferListChange,\n      value: selectedTransferListSearchFileds[contentItem.name],\n      disabled: !contentItem.edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 69\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 21\n      }\n    }, getTransferList(transferList[contentItem.name], contentItem.name, contentItem.edit))), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"4%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleAllRight(contentItem.name),\n      disabled: transferList[contentItem.name].length === 0 || contentItem.edit === false ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 25\n      }\n    }, \"\\u226B\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleCheckedRight(contentItem.name),\n      disabled: leftChecked(contentItem.name).length === 0 || contentItem.edit === false ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 25\n      }\n    }, \">\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleCheckedLeft(contentItem.name),\n      disabled: rightChecked(contentItem.name).length === 0 || contentItem.edit === false ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 25\n      }\n    }, \"<\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleAllLeft(contentItem.name),\n      disabled: selectedTransferList[contentItem.name].length === 0 || contentItem.edit === false ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 25\n      }\n    }, \"\\u226A\")))), /*#__PURE__*/React.createElement(\"td\", {\n      width: \"43%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 21\n      }\n    }, getTransferList(selectedTransferList[contentItem.name], contentItem.name, contentItem.edit))))) : /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 19\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 19\n      }\n    }, contentBuilder(contentItem)))))));\n  } // Create component by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        multiline: true,\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\" // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        ,\n        onBlur: handleIntChange,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\" // defaultValue = {fieldValue[contentItem.name]}\n        ,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return (\n        /*#__PURE__*/\n        // <table>\n        //   <tr>\n        //     <td style={{width: \"45%\"}}>\n        //       <TextField\n        //         key={fieldValue[contentItem.name]}\n        //         type=\"date\"\n        //         name={contentItem.name}\n        //         onChange={handleDateChange}\n        //         style={{width: \"100%\"}}\n        //         defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"NaN.NaN.NaN\" }\n        //         disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n        //         InputLabelProps={{\n        //           shrink: true,\n        //         }}\n        //       />\n        //     </td>\n        //     <td style={{width: \"45%\"}}>\n        //       <LocalizationProvider dateAdapter={AdapterDayjs}>\n        //         <Stack>\n        //           <TimePicker\n        //             // key={fieldValue[contentItem.name]}\n        //             ampm={false}\n        //             openTo=\"hours\"\n        //             views={['hours', 'minutes', 'seconds']}\n        //             inputFormat=\"HH:mm:ss\"\n        //             mask=\"__:__:__\"\n        //             // value={dVal}\n        //             value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\" }\n        //             onChange={(newValue) => {handleTimeChange(contentItem.name, newValue)}}\n        //             renderInput={(params) => <TextField {...params} />}\n        //           />\n        //         </Stack>\n        //     </LocalizationProvider>\n        //   </td>\n        //   </tr>\n        // </table>\n        // <TextField\n        //   name={contentItem.name}\n        //   onChange={handleDateTimeChange}\n        //   type=\"datetime-local\"\n        //   // defaultValue=\"2017-05-24T10:30\"\n        //   defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? moment(fieldValue[contentItem.name]).format(\"YYYY-MM-DDTHH:MM\") : moment(new Date()).format(\"YYYY-MM-DDTHH:MM\")}\n        //   InputLabelProps={{\n        //     shrink: true,\n        //   }}\n        // />\n        React.createElement(TextField, {\n          name: contentItem.name,\n          onBlur: handleDateTimeChange,\n          style: {\n            width: \"100%\"\n          },\n          value: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\",\n          disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n          InputLabelProps: {\n            shrink: true\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 9\n          }\n        }) //   <LocalizationProvider dateAdapter={AdapterDateFns}>\n        //     <TimePicker\n        //       ampm={false}\n        //       openTo=\"hours\"\n        //       views={['hours', 'minutes', 'seconds']}\n        //       inputFormat=\"HH:mm:ss\"\n        //       mask=\"__:__:__\"\n        //       value={value}\n        //       // onChange={(newValue) => {\n        //       //   setValue(newValue);\n        //       // }}\n        //       renderInput={(params) => <TextField {...params} />}\n        //     />\n        // </LocalizationProvider>\n\n      );\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 9\n        }\n      });\n    } // else if (contentItem.type === \"MultiSelect\"){\n    //   return (\n    //     // <div style={{height: \"40px\", overflow: \"auto\"}}>\n    //       <Select\n    //         name={contentItem.name}\n    //         className=\"basic-multi-select\"\n    //         classNamePrefix=\"select\"\n    //         value={multiSelectedOptions[contentItem.name]}\n    //         onChange={handleMultiSelectChange}\n    //         closeMenuOnSelect={false}\n    //         isMulti\n    //         options={multiSelectDataOptions[contentItem.name]}\n    //         isDisabled ={(formType === \"view\" || contentItem.edit === false) ? true : false}\n    //         style={{height: \"120px\"}}\n    //       />\n    //     // </div>\n    //   )\n    // }\n    else if (contentItem.type === \"Currency\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        value: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          minWidth: 300\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 9\n        }\n      });\n    }\n  } // Main button click handler\n\n\n  function buttonClick(buttonName) {\n    console.log(\"Button\", buttonName);\n\n    if (buttonName === \"selectReportType\") {\n      let reportFormDefId = null;\n      let reportName = null;\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          if (enumData[i].name === \"report_name\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].id === fieldValue[\"report_name\"]) {\n                reportFormDefId = enumData[i].data[d].form_def_id;\n                reportName = enumData[i].data[d].report_name;\n              }\n            }\n          }\n        } else {\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"selectReportType\"\n          },\n          reportName: {\n            value: reportName\n          },\n          reportFormDefId: {\n            value: reportFormDefId\n          }\n        }\n      };\n      console.log(\"button selectReportType:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"createReport\") {\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        let reportVars = getFieldValuesCreateReport();\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: {\n              value: reportVars\n            },\n            userAction: {\n              value: \"createReport\"\n            }\n          }\n        };\n        console.log(\"button createReport:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createChargeForCDServiceReport\") {\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        let reportVars = getFieldValuesCreateReport();\n        let chargeBody = {\n          startDate: fieldValue.start_date,\n          endDate: fieldValue.end_date,\n          depositorId: selectedTransferList.dep_id,\n          serviceTypeId: selectedTransferList.service_type_id\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: {\n              value: reportVars\n            },\n            userAction: {\n              value: \"createReport\"\n            },\n            chargeBody: {\n              value: JSON.stringify(chargeBody)\n            }\n          }\n        };\n        console.log(\"button createChargeForCDServiceReport:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createCharge\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"createCharge\"\n          }\n        }\n      };\n      console.log(\"button createCharge:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"reportToExcel\") {\n      reportToExcel();\n      console.log(\"button reportToExcel: \");\n    } else if (buttonName === \"reportToPDF\") {\n      reportToPDF();\n      console.log(\"button reportToPDF: \");\n    } else if (buttonName === \"reportToPDFES\") {\n      if (props.esInn === null) {\n        setShowModalEnterPin(true);\n      } else {\n        reportToPDFES(props.esUserFullName, props.esInn, props.esExpiredDate);\n      }\n    } else if (buttonName === \"SignReportSaveButton\") {\n      sign();\n    } else if (buttonName === \"reportToWord\") {\n      reportToWord();\n      console.log(\"button reportToWord: \");\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"finish\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"finish\"\n          }\n        }\n      };\n      console.log(\"button finish: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    }\n  } // Transfer List functions\n\n\n  const handleToggle = (value, name) => () => {\n    const currentIndex = checked[name].indexOf(value);\n    const newChecked = [...checked[name]];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked({ ...checked,\n      [name]: newChecked\n    });\n  };\n\n  const handleAllRight = name => {\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: selectedTransferList[name].concat(transferList[name])\n    });\n    setTransferList({ ...transferList,\n      [name]: []\n    });\n  };\n\n  function handleCheckedRight(name) {\n    // console.log(\"CHECKED RIGHT\", name)\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: selectedTransferList[name].concat(leftChecked(name))\n    });\n    setTransferList({ ...transferList,\n      [name]: not(transferList[name], leftChecked(name))\n    });\n    setChecked({ ...checked,\n      [name]: not(checked[name], leftChecked(name))\n    });\n  }\n\n  function handleCheckedLeft(name) {\n    setTransferList({ ...transferList,\n      [name]: transferList[name].concat(rightChecked(name))\n    });\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: not(selectedTransferList[name], rightChecked(name))\n    });\n    setChecked({ ...checked,\n      [name]: not(checked[name], rightChecked(name))\n    });\n  }\n\n  const handleAllLeft = name => {\n    setTransferList({ ...transferList,\n      [name]: transferList[name].concat(selectedTransferList[name])\n    });\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: []\n    });\n  };\n\n  function getTransferList(items, name, edit) {\n    // console.log(\"G TR L\", items, name)\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1327,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 9\n      }\n    }, items.map(value => {\n      const labelId = `transfer-list-item-${value}-label`;\n      return /*#__PURE__*/React.createElement(ListItem, {\n        size: \"small\",\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle(value, name),\n        style: {\n          height: 40\n        },\n        disabled: edit === false ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        size: \"small\",\n        checked: checked[name].indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        style: {\n          height: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1340,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: getTranserListItemLabel(name, value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 17\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1353,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  function getTranserListItemLabel(name, value) {\n    // console.log(\"G TRL LABEL\", name, value)\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          if (enumData[e].data[d].id === value) {\n            return enumData[e].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function handleSearchTransferListChange(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n    setAutofocusFieldTrList(name);\n    setTransferListSearchFileds({ ...transferListSearchFileds,\n      [name]: value\n    });\n    let filteredTrListOpts = [];\n\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase();\n          let searchField = value.toLowerCase();\n          let includeSearch = label.includes(searchField);\n\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id);\n          }\n        }\n      }\n    } // console.log(\"N TR L\", newTrListOpts)\n\n\n    let newTrListOpts = [];\n\n    if (selectedTransferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true;\n\n        for (let s = 0; s < selectedTransferList[name].length; s++) {\n          if (filteredTrListOpts[i] === selectedTransferList[name][s]) {\n            include = false;\n            break;\n          }\n        }\n\n        if (include === true) {\n          newTrListOpts.push(filteredTrListOpts[i]);\n        }\n      }\n    } else {\n      newTrListOpts = filteredTrListOpts;\n    }\n\n    setTransferList({ ...transferList,\n      [name]: newTrListOpts\n    });\n  }\n\n  function handleSearchSelectedTransferListChange(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n    setAutofocusFieldSelTrList(name);\n    setSelectedTransferListSearchFileds({ ...selectedTransferListSearchFileds,\n      [name]: value\n    });\n    let filteredTrListOpts = [];\n\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase();\n          let searchField = value.toLowerCase();\n          let includeSearch = label.includes(searchField);\n\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id);\n          }\n        }\n      }\n    }\n\n    let newSelTrListOpts = [];\n\n    if (transferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true;\n\n        for (let s = 0; s < transferList[name].length; s++) {\n          if (filteredTrListOpts[i] === transferList[name][s]) {\n            include = false;\n            break;\n          }\n        }\n\n        if (include === true) {\n          newSelTrListOpts.push(filteredTrListOpts[i]);\n        }\n      }\n    } else {\n      newSelTrListOpts = filteredTrListOpts;\n    }\n\n    setSelectedTransferList({ ...selectedTransferList,\n      [name]: newSelTrListOpts\n    });\n  }\n\n  function getFieldValuesCreateReport() {\n    let reportVars = {};\n    let strReportVars = \"\";\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n        let type = Form.sections[s].contents[c].type;\n\n        if (type === \"DateTime\") {\n          // reportVars[fieldName] = props.parseDate(fieldValue[fieldName])\n          // reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\")\n          reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"DD.MM.YYYY\");\n        } // else if(type === \"MultiSelect\"){\n        //   if(Object.keys(multiSelectedOptions).length > 0){\n        //     let strVals = \"\"\n        //     for(let i=0; i<multiSelectedOptions[fieldName].length; i++){\n        //       let value = multiSelectedOptions[fieldName][i].value\n        //       if(value !== \"all\"){\n        //         if(i === multiSelectedOptions[fieldName].length-1){\n        //           strVals += value\n        //         }\n        //         else{\n        //           strVals += value + \",\"\n        //         }\n        //       }\n        //     }\n        //     reportVars[fieldName] = strVals\n        //     console.log(\"MULTI\", strVals)\n        //   }\n        // }\n        else if (type === \"TransferList\") {\n          // console.log(\"TTTTTT\", selectedTransferList[fieldName])\n          let strVals = \"\";\n\n          if (selectedTransferList[fieldName].length > 0) {\n            for (let i = 0; i < selectedTransferList[fieldName].length; i++) {\n              let value = selectedTransferList[fieldName][i];\n\n              if (i === selectedTransferList[fieldName].length - 1) {\n                strVals += value;\n              } else {\n                strVals += value + \",\";\n              }\n            }\n          }\n\n          reportVars[fieldName] = strVals; // console.log(\"TR LIST\", strVals)\n        } else if (type === \"FullDateTime\") {\n          // let val = new Date(fieldValue[fieldName])\n          // // let fullDate = props.parseDate(val)\n          // let newDate = new Date(fieldValue[fieldName]) // \"2020-01-26\"\n          // let dd = String(newDate.getDate()).padStart(2, '0')\n          // let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n          // let yyyy = newDate.getFullYear()\n          // var hours = val.getHours() < 10 ? \"0\" + val.getHours() : val.getHours()\n          // var minutes = val.getMinutes() < 10 ? \"0\" + val.getMinutes() : val.getMinutes()\n          // var seconds = val.getSeconds() < 10 ? \"0\" + val.getSeconds() : val.getSeconds()\n          // var convertedDate = dd + \".\" + mm + \".\" + yyyy + \"T\" + hours + \":\" + minutes + \":\" + seconds\n          let convertedDate = moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\");\n          reportVars[fieldName] = convertedDate;\n        } else {\n          reportVars[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    if (Object.keys(reportVars).length > 0) {\n      strReportVars = \"?\";\n\n      for (let key in reportVars) {\n        let newVar = key + \"=\" + reportVars[key] + \"&\";\n        strReportVars = strReportVars + newVar;\n      }\n\n      strReportVars = strReportVars.substring(0, strReportVars.length - 1);\n    }\n\n    return strReportVars;\n  }\n\n  function checkForRequieredFields() {\n    // console.log(\"MOPTS\", multiSelectedOptions)\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          // if(Form.sections[s].contents[c].type === \"MultiSelect\"){\n          //   if(multiSelectedOptions[fieldName] === undefined || multiSelectedOptions[fieldName] === null ||\n          //     multiSelectedOptions[fieldName].length === 0){\n          //     checkedSuccessfuly = false\n          //     swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n          //     return checkedSuccessfuly\n          //   }\n          //   else{\n          //     checkedSuccessfuly = true\n          //   }\n          // }\n          if (Form.sections[s].contents[c].type === \"TransferList\") {\n            if (selectedTransferList[fieldName] === undefined || selectedTransferList[fieldName] === null || selectedTransferList[fieldName].length === 0) {\n              checkedSuccessfuly = false;\n              swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n              return checkedSuccessfuly;\n            } else {\n              checkedSuccessfuly = true;\n            }\n          } else {\n            if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n              checkedSuccessfuly = false;\n              swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n              return checkedSuccessfuly;\n            } else {\n              checkedSuccessfuly = true;\n            }\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  async function repserverlogin() {\n    await fetch(`/jasperserver/rest_v2/login?j_username=jasperadmin&j_password=jasperadmin`, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => {\n      // response.text().then(string => {\n      console.log(\"JASPERT AUTH\", response); // })\n    }).catch(error => console.error(error));\n  }\n\n  async function reportToExcel() {\n    await repserverlogin();\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".xlsx\" + reportVars;\n    await fetch(url, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => response.blob()).then(blob => {\n      // console.log(\"RESP\", blob)\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      a.href = url;\n      a.download = `${reportName}.xlsx`;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n\n      a.click();\n      a.remove(); //afterwards we remove the element again         \n    }).catch(error => console.error(error));\n  }\n\n  async function reportToPDF() {\n    await repserverlogin();\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".pdf\" + reportVars;\n    await fetch(url, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => response.blob()).then(blob => {\n      console.log(\"RESP\", blob);\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      a.href = url;\n      a.download = `${reportName}.pdf`;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n\n      a.click();\n      a.remove(); //afterwards we remove the element again         \n    }).catch(error => console.error(error));\n  }\n\n  async function reportToPDFES(fullName, inn, expiredDate) {\n    await repserverlogin();\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".pdf\" + reportVars;\n    await fetch(url, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => response.blob()).then(blob => {\n      console.log(\"REPORT\", blob);\n      blob.name = reportName + \".pdf\";\n      let formData = new FormData();\n      formData.append(\"formFile\", blob, reportName + \".pdf\");\n\n      for (var value of formData.values()) {\n        console.log(\"FVAL\", value);\n      }\n\n      let url = \"/api/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate;\n      var requestOptions = {\n        method: 'POST',\n        body: formData,\n        redirect: 'follow'\n      };\n      fetch(url, requestOptions).then(response => response.blob()).then(bl => {\n        console.log(\"RES\", bl);\n        var pdf = new Blob([bl], {\n          type: \"application/pdf\"\n        });\n        var docUrl = window.URL.createObjectURL(pdf);\n        var a = document.createElement('a');\n        a.href = docUrl;\n        a.download = `${reportName}.pdf`;\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n      }).catch(error => console.log('error', error));\n    }).catch(error => console.error(error));\n  }\n\n  async function reportToWord() {\n    await repserverlogin();\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".docx\" + reportVars;\n    await fetch(url, {\n      mode: 'no-cors',\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8'\n      }\n    }).then(response => response.blob()).then(blob => {\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      a.href = url;\n      a.download = `${reportName}.docx`;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n\n      a.click();\n      a.remove(); //afterwards we remove the element again         \n    }).catch(error => console.error(error));\n  }\n\n  try {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1726,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      name: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1727,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1728,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1729,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1730,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1731,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1732,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1733,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1734,\n        columnNumber: 21\n      }\n    }, Form.label)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1738,\n        columnNumber: 15\n      }\n    }, Form.sections.map((section, index) => {\n      return sectionBuilder(section, index);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1743,\n        columnNumber: 15\n      }\n    }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      onClick: () => buttonClick(button.name),\n      style: {\n        margin: 3,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12,\n        color: button.fontColor\n      },\n      value: button.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1745,\n        columnNumber: 19\n      }\n    }, button.label)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1763,\n        columnNumber: 13\n      }\n    }), selectedDoc !== null && /*#__PURE__*/React.createElement(Markup, {\n      id: \"reportContainer\",\n      content: selectedDoc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1768,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      open: showModalEnterPin,\n      onClose: handleCloseModalEnterPin,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1772,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1778,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1779,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"100%\"\n      },\n      error: wrongPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1780,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1781,\n        columnNumber: 15\n      }\n    }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n      type: showPin ? 'text' : 'password',\n      defaultValue: rutokenPin,\n      onChange: handlePinChange,\n      onKeyPress: onKeyPressModalEnterPin,\n      autoFocus: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1789,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPin,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1790,\n          columnNumber: 21\n        }\n      }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1795,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1795,\n          columnNumber: 51\n        }\n      }))),\n      labelWidth: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1782,\n        columnNumber: 15\n      }\n    })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1802,\n        columnNumber: 35\n      }\n    }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => buttonClick(\"SignReportSaveButton\"),\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#2862F4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1803,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleCloseModalEnterPin,\n      style: {\n        margin: 3,\n        height: 32,\n        fontSize: 12,\n        color: \"white\",\n        backgroundColor: \"#E73639\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1815,\n        columnNumber: 13\n      }\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1834,\n        columnNumber: 12\n      }\n    }, \"error\");\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Select","NumberFormat","PropTypes","Grid","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Paper","Modal","FormControl","AdapterDateFns","AdapterDayjs","LocalizationProvider","Stack","TimePicker","dayjs","Dayjs","List","ListItem","ListItemIcon","ListItemText","ArrowUpwardRoundedIcon","FormControlLabel","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","IconButton","fade","makeStyles","swal","Markup","rutoken","moment","require","axios","plugin","rutokenHandle","certHandle","certData","cmsData","NumberFormatCustom","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","useStyles","theme","importFile","margin","spacing","inputFile","display","modal","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","height","overflow","button","getModalStyle","top","left","transform","not","a","b","filter","indexOf","intersection","classes","userProfile","process_id","userTask","session_id","taskID","taskType","enumOptions","setEnumOptions","Form","setForm","enumData","selectedOptions","setSelectedOptions","reportName","fieldValue","setFieldValue","docId","buttons","formType","sectionColor","selectedDoc","setSelectedDoc","updateState","setUpdateState","reportVars","setReportVars","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","modalStyle","transferList","setTransferList","reg_id","sec_id","acc_type_code","dep_id","corr_dep_id","currency_id","service_type_id","issuer_id","checked","setChecked","selectedTransferList","setSelectedTransferList","transferListSearchFileds","setTransferListSearchFileds","selectedTransferListSearchFileds","setSelectedTransferListSearchFileds","autofocusFieldTrList","setAutofocusFieldTrList","autofocusFieldSelTrList","setAutofocusFieldSelTrList","setValue","leftChecked","name","rightChecked","repserverlogin","console","log","undefined","newEnumOptions","i","length","options","d","data","report_name","push","id","label","getLostEnumName","callErrorToast","createTransferListOptions","userRole","s","sections","c","contents","n","edit","ed","e","partner","parseInt","newFields","type","Date","getUUID","enumI","form","enums","newTransferList","newSelectedTransferList","newTrItems","newSelTrItems","cName","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","uuidv1","handleCloseModalEnterPin","handlePinChange","event","handleClickShowPin","sign","enumerateDevices","devices","alert","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","inn","fullName","subject","rdn","setEsInn","setEsUserFullName","setEsExpiredDate","validNotAfter","substring","reportToPDFES","DATA_FORMAT_PLAIN","logout","handleError","swAllert","reason","isNaN","message","errorCodes","PIN_INCORRECT","onKeyPressModalEnterPin","code","charCode","buttonClick","handleChange","handleDateChange","fullDate","date","format","time","handleTimeChange","handleDateTimeChange","handleCheckboxChange","text","icon","ok","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","handleIntChange","sectionBuilder","section","index","color","fontSize","bodyBuilder","map","contentItem","show","handleSearchTransferListChange","handleSearchSelectedTransferListChange","getTransferList","handleAllRight","handleCheckedRight","handleCheckedLeft","handleAllLeft","contentBuilder","inputComponent","shrink","parseFullDateTime","selectedOption","document","body","menuPortal","base","zIndex","minWidth","maxWidth","buttonName","reportFormDefId","form_def_id","commandJson","commandType","userId","variables","userAction","sendFieldValues","clearTabData","checkResult","checkForRequieredFields","getFieldValuesCreateReport","chargeBody","startDate","start_date","endDate","end_date","depositorId","serviceTypeId","JSON","stringify","reportToExcel","reportToPDF","esInn","esUserFullName","esExpiredDate","reportToWord","handleToggle","currentIndex","newChecked","splice","concat","items","labelId","getTranserListItemLabel","filteredTrListOpts","toLowerCase","searchField","includeSearch","includes","newTrListOpts","include","newSelTrListOpts","strReportVars","fieldName","strVals","convertedDate","Object","keys","key","newVar","checkedSuccessfuly","required","fetch","mode","method","withCredentials","credentials","headers","response","catch","error","url","blob","URL","createObjectURL","createElement","href","download","appendChild","click","remove","expiredDate","formData","FormData","append","requestOptions","redirect","bl","pdf","Blob","docUrl","maxHeight","fontColor"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/Reports/Reports.jsx"],"sourcesContent":["// Import material and react components\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from '@material-ui/core/Paper';\nimport Modal from \"@material-ui/core/Modal\";\nimport FormControl from '@material-ui/core/FormControl';\n\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport Stack from '@mui/material/Stack';\nimport TimePicker from '@mui/lab/TimePicker';\nimport dayjs, { Dayjs } from 'dayjs';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// Icons\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// PIN components\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\n// Import libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport { Markup } from 'interweave';\nimport * as rutoken from \"rutoken\";\nvar moment = require('moment');\nconst axios = require('axios');\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\",\"}\n      isNumericString\n    />\n  );\n}\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles((theme) => ({\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  },\n  modal: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  paper: {\n    width: \"100%\",\n    height: 200,\n    overflow: 'auto',\n  },\n  button: {\n    // width: \"5%\",\n    margin: theme.spacing(0),\n  }\n}))\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\nexport default (props) => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile)\n  const [process_id] = useState(props.userTask.process_id)\n  const [session_id] = useState(props.userTask.session_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [taskType] = useState(props.userTask.taskType)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [enumData] = useState(props.userTask.enumData)\n  const [selectedOptions, setSelectedOptions] = useState([])\n\n  // const [multiSelectData] = useState(props.userTask.multiSelectData)\n  // const [multiSelectDataOptions, setMultiSelectDataOptions] = useState({})\n  // const [multiSelectedOptions, setMultiSelectedOptions] = useState({})\n  // const [gridForm] = useState(props.userTask.gridForm)\n  const [reportName] = useState(props.userTask.reportName)\n  const [fieldValue, setFieldValue] = useState({})\n  const [docId] = useState(props.userTask.docId)\n  const [buttons] = useState(props.userTask.buttons)\n  const [formType] = useState(props.userTask.formType)\n\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [updateState, setUpdateState] = useState(false)\n  const [reportVars, setReportVars] = useState(props.userTask.reportVars)\n\n  // modals\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n  const [modalStyle] = useState(getModalStyle)\n  // TRANSFER LIST\n  const [transferList, setTransferList] = useState({ reg_id: [], sec_id: [], acc_type_code: [], dep_id: [], corr_dep_id: [], currency_id: [], service_type_id: [], issuer_id: [] })\n  const [checked, setChecked] = useState({ reg_id: [], sec_id: [], acc_type_code: [], dep_id: [], corr_dep_id: [], currency_id: [], service_type_id: [], issuer_id: [] })\n  const [selectedTransferList, setSelectedTransferList] = useState({ reg_id: [], sec_id: [], acc_type_code: [], dep_id: [], corr_dep_id: [], currency_id: [], service_type_id: [], issuer_id: [] })\n  const [transferListSearchFileds, setTransferListSearchFileds] = useState({})\n  const [selectedTransferListSearchFileds, setSelectedTransferListSearchFileds] = useState({})\n  const [autofocusFieldTrList, setAutofocusFieldTrList] = useState(null)\n  const [autofocusFieldSelTrList, setAutofocusFieldSelTrList] = useState(null)\n\n  const [value, setValue] = React.useState < Dayjs | null > (dayjs('2022-04-07'));\n\n  function leftChecked(name) {\n    return intersection(checked[name], transferList[name])\n  }\n  function rightChecked(name) {\n    return intersection(checked[name], selectedTransferList[name])\n  }\n\n  // Initializing\n  useEffect(() => {\n    repserverlogin()\n    console.log(\"REP PROPS\", props.userTask, props.userProfile)\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {}\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }]\n          if (props.userTask.enumData[i].name === \"report_name\") {\n            if (props.userTask.taskType === \"showReportsSelectingForm\") {\n              for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n                if (props.userProfile[props.userTask.enumData[i].data[d].report_name] === true) {\n                  options.push({\n                    \"value\": props.userTask.enumData[i].data[d].id,\n                    \"label\": props.userTask.enumData[i].data[d].label,\n                    \"name\": props.userTask.enumData[i].name\n                  })\n                }\n              }\n            }\n          }\n          else {\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              options.push({\n                \"value\": props.userTask.enumData[i].data[d].id,\n                \"label\": props.userTask.enumData[i].data[d].label,\n                \"name\": props.userTask.enumData[i].name\n              })\n            }\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n      createTransferListOptions(props.userTask.Form, props.userTask.enumData)\n    }\n    // let newMultiSelectDatamOptions = {}\n    // if(props.userTask.multiSelectData !== null && props.userTask.multiSelectData !== undefined && props.userTask.multiSelectData !== \"null\"){\n    //   for(let i=0; i<multiSelectData.length; i++){\n    //     let options = [{\n    //       \"value\": \"all\",\n    //       \"label\": \"Все\"\n    //     }]\n    //     if(multiSelectData[i].name !== \"acc_id\"){\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         options.push({\n    //           \"value\": multiSelectData[i].data[d].id,\n    //           \"label\": multiSelectData[i].data[d].label,\n    //         })\n    //       }\n    //     }\n    //     else{\n    //       for(let d=0; d<multiSelectData[i].data.length; d++){\n    //         if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n    //           options.push({\n    //             \"value\": multiSelectData[i].data[d].id,\n    //             \"label\": multiSelectData[i].data[d].label,\n    //           })\n    //         }\n    //       }\n    //     }\n    //     newMultiSelectDatamOptions[multiSelectData[i].name] = options\n    //   }\n    //   setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    //   console.log(\"MS DATA OPTS\", newMultiSelectDatamOptions)\n    // }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined) {\n      // console.log(\"SDOC\", props.userTask.selectedDoc)\n      setSelectedDoc(props.userTask.selectedDoc)\n    }\n    if (userProfile.userRole === \"3\") { // Depositor\n      for (let s = 0; s < Form.sections.length; s++) {  // Block depositor field\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let n = Form.sections[s].contents[c].name\n          if (n === \"dep_id\") {\n            Form.sections[s].contents[c].edit = false\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n            let ed = props.userTask.enumData\n            for (let e = 0; e < ed.length; e++) {\n              if (ed[e].name === \"depositors\") {\n                for (let d = 0; d < ed[e].data.length; d++) {\n                  if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                    setSelectedTransferList({ ...selectedTransferList, \"dep_id\": [ed[e].data[d].id] })\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      setForm(Form)\n      // for(let i=0; i<multiSelectData.length; i++){// find accounts of depositor\n      //   let options = [{\n      //     \"value\": \"all\",\n      //     \"label\": \"Все\"\n      //   }]\n      //   if(multiSelectData[i].name === \"acc_id\"){\n      //     for(let d=0; d<multiSelectData[i].data.length; d++){\n      //       if(multiSelectData[i].data[d].partner === parseInt(userProfile.partner)){\n      //         options.push({\n      //           \"value\": multiSelectData[i].data[d].id,\n      //           \"label\": multiSelectData[i].data[d].label,\n      //         })\n      //       }\n      //     } \n      //   }\n      //   newMultiSelectDatamOptions[multiSelectData[i].name] = options\n      // }\n      // setMultiSelectDataOptions(newMultiSelectDatamOptions)\n    }\n    if (userProfile.userRole === \"4\") { // Registrar\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let n = Form.sections[s].contents[c].name\n          if (n === \"reg_id\") {\n            Form.sections[s].contents[c].edit = false // Block registrar field\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n            let ed = props.userTask.enumData\n            for (let e = 0; e < ed.length; e++) {\n              if (ed[e].name === \"registrars\") {\n                for (let d = 0; d < ed[e].data.length; d++) {\n                  if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                    setSelectedTransferList({ ...selectedTransferList, \"registrars\": [ed[e].data[d].id] })\n                    // multiSelectedOptions[n] = [{\n                    //   \"value\": ed[e].data[d].id,\n                    //   \"label\": ed[e].data[d].label\n                    // }]\n                  }\n                }\n              }\n            }\n\n          }\n        }\n      }\n      setForm(Form)\n    }\n    if (userProfile.userRole === \"8\") { // CorrDepository\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let n = Form.sections[s].contents[c].name\n          if (n === \"corr_dep_id\") {\n            Form.sections[s].contents[c].edit = false // Block corrDepositories field\n            // console.log(\"BLOCK\", Form.sections[s].contents[c])\n            let ed = props.userTask.enumData\n            for (let e = 0; e < ed.length; e++) {\n              if (ed[e].name === \"corrDepositories\") {\n                for (let d = 0; d < ed[e].data.length; d++) {\n                  if (ed[e].data[d].partner === parseInt(userProfile.partner)) {\n                    setSelectedTransferList({ ...selectedTransferList, \"corrDepositories\": [ed[e].data[d].id] })\n                    // multiSelectedOptions[n] = [{\n                    //   \"value\": ed[e].data[d].id,\n                    //   \"label\": ed[e].data[d].label\n                    // }]\n                  }\n                }\n              }\n            }\n\n          }\n        }\n      }\n      setForm(Form)\n    }\n    let newFields = {}\n    for (let s = 0; s < Form.sections.length; s++) { // Set current date to DateTime fields\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"FullDateTime\")\n          newFields[Form.sections[s].contents[c].name] = new Date()\n      }\n    }\n    console.log(\"NEW F\", newFields)\n    setFieldValue(newFields)\n    setUpdateState(getUUID())\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n  function createTransferListOptions(form, enums) {\n    let newTransferList = {}\n    let newSelectedTransferList = {}\n    for (let s = 0; s < form.sections.length; s++) {\n      for (let c = 0; c < form.sections[s].contents.length; c++) {\n        if (form.sections[s].contents[c].type === \"TransferList\") {\n          let newTrItems = []\n          let newSelTrItems = []\n          let cName = form.sections[s].contents[c].name\n          for (let e = 0; e < enums.length; e++) {\n            if (enums[e] !== null) {\n              if (enums[e].name === cName) {\n                for (let d = 0; d < enums[e].data.length; d++) {\n                  newTrItems.push(enums[e].data[d].id)\n                }\n              }\n            }\n            else {\n              props.callErrorToast(\"Ошибка сбора справочной информации \" + cName)\n            }\n          }\n          newTransferList[cName] = newTrItems\n          newSelectedTransferList[cName] = newSelTrItems\n        }\n      }\n    }\n\n    setTransferList(newTransferList)\n    setSelectedTransferList(newSelectedTransferList)\n  }\n  // RuToken functions\n  rutoken.ready\n    // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n    .then(function () {\n      if (window.chrome || typeof InstallTrigger !== 'undefined') {\n        return rutoken.isExtensionInstalled()\n      } else {\n        return Promise.resolve(true)\n      }\n    })\n    // Проверка установки Рутокен Плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.isPluginInstalled()\n      } else {\n        // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\")\n      }\n    })\n    // Загрузка плагина\n    .then(function (result) {\n      if (result) {\n        return rutoken.loadPlugin();\n      } else {\n        // alert(\"Не удаётся найти Плагин\");\n      }\n    })\n    //Можно начинать работать с плагином\n    .then(function (result) {\n      if (!result) {\n        return // alert(\"Не удаётся загрузить Плагин\");\n      } else {\n        plugin = result;\n        return Promise.resolve();\n      }\n    })\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n\n  // Rutoken MODAL\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin() {\n    setShowPin(!showPin)\n  }\n\n  // Sign transfer order with rutoken\n  function sign() {\n    // Перебор подключенных Рутокенов\n    if (plugin !== undefined) {\n      plugin.enumerateDevices()\n        .then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0])\n          } else {\n            alert(\"Рутокен не обнаружен\")\n          }\n        })\n        // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN)\n        })\n        // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve()\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin) // 240699\n          }\n        })\n        // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC)\n        })\n        .then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0]\n            return plugin.parseCertificate(rutokenHandle, certs[0])\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        })\n        // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs\n          if (certHandle.length > 0) {\n            var options = {}\n            let inn = \"\"\n            let fullName = \"\"\n            for (let i = 0; i < certData.subject.length; i++) {\n              if (certData.subject[i].rdn === \"serialNumber\") {\n                inn = certData.subject[i].value\n              }\n              if (certData.subject[i].rdn === \"commonName\") {\n                fullName = certData.subject[i].value\n              }\n            }\n            props.setEsInn(inn)\n            props.setEsUserFullName(fullName)\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n            handleCloseModalEnterPin()\n            // swAllert(\"Отчет успешно подписан!\", \"success\")\n            reportToPDFES(fullName, inn, certData.validNotAfter.substring(0, certData.validNotAfter.length - 1))\n            return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options)\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\")\n          }\n        })\n        // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle)\n        }, handleError)\n    }\n    else { swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\") }\n  }\n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode\n    if (code === 13) {\n      buttonClick(\"SignReportSaveButton\", null)\n    }\n  }\n  // Integer input handlers\n  function handleChange(event) {\n    console.log(\"EV\", event)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleDateChange(event) {\n    let fullDate = new Date(event.target.value)\n    // console.log(\"DATE CHANGE\", fullDate)\n    if (fieldValue[event.target.name] !== undefined && fieldValue[event.target.name] !== null) {\n      let date = moment(fullDate).format(\"YYYY-MM-DD\")\n      let time = moment(fieldValue[event.target.name]).format(\"HH:mm:ss\")\n      fullDate = date + \"T\" + time\n      // let value = new Date(fieldValue[event.target.name])\n      // let nDate = props.parseDate(event.target.value)\n      // let hours = value.getHours() < 10 ? \"0\" + value.getHours() : value.getHours()\n      // let minutes = value.getMinutes() < 10 ? \"0\" + value.getMinutes() : value.getMinutes()\n      // let seconds = value.getSeconds() < 10 ? \"0\" + value.getSeconds() : value.getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      // console.log(\"F D\", fullDate, hours, minutes, seconds)\n    }\n    fieldValue[event.target.name] = fullDate\n    setFieldValue(fieldValue)\n    console.log(\"DATE CHANGE\", fullDate)\n    console.log(\"FVAL\", fieldValue)\n    // setUpdateState(getUUID())\n  }\n  function handleTimeChange(name, value) {\n    let fullDate = new Date(value)\n    if (fieldValue[name] !== undefined && fieldValue[name] !== null) {\n      // let nDate = props.parseDate(fieldValue[name])\n      // let hours = new Date(value).getHours()\n      // let minutes = new Date(value).getMinutes()\n      // let seconds = new Date(value).getSeconds()\n      // fullDate = new Date(nDate + \"T\" + hours + \":\" + minutes + \":\" + seconds)\n      let date = moment(fieldValue[name]).format(\"YYYY-MM-DD\")\n      let time = moment(value).format(\"HH:mm:ss\")\n      fullDate = date + \"T\" + time\n    }\n    fieldValue[name] = fullDate\n    setFieldValue(fieldValue)\n    console.log(\"FULL DATE CHANGE\", name, value, fieldValue)\n    console.log(\"FVAL\", fieldValue)\n    setUpdateState(getUUID())\n  }\n  function handleDateTimeChange(event) {\n    console.log(\"FULL DATE TIME CHANGE\", event.target.name, event.target.value)\n  }\n  const handleCheckboxChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  // Handler of select copmponet changes\n  function handleSelectChange(option) {\n    console.log(\"SEL CHANGE\", option.name, option.value)\n    fieldValue[option.name] = option.value\n    let updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option\n        setSelectedOptions(updateSelectedOptions)\n        // console.log(\"SO\", selectedOptions)\n        noSuchOption = false\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    setFieldValue(fieldValue)\n  }\n  // function handleMultiSelectChange(value, {action, removedValue, name}) {\n  //   // console.log(\"MSOP\", multiSelectedOptions)\n  //   console.log(\"NAME\",name)\n  //   if(action === \"select-option\"){\n  //     let putAll = false\n  //     for(let i=0; i<value.length; i++){\n  //       if(value[i].value === \"all\"){\n  //         putAll = true\n  //       }\n  //     }\n  //     if(putAll === true){\n  //       multiSelectedOptions[name] = multiSelectDataOptions[name]\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"remove-value\"){\n  //     // console.log(\"RV\", removedValue, \"NAME\", name)\n  //     if(removedValue.value === \"all\"){\n  //       multiSelectedOptions[name] = null\n  //     }\n  //     else{\n  //       multiSelectedOptions[name] = value\n  //     }\n  //   }\n  //   else if(action === \"clear\"){\n  //     multiSelectedOptions[name] = null\n  //   }\n  //   if(name === \"dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"depositors\"){\n  //           depositors = enumData[i].data // Find partner for each selected depositor\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<depositors.length; d++){\n  //           if(depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"corr_dep_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let corr_depositors = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"corrDepositories\"){\n  //           corr_depositors = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<corr_depositors.length; d++){\n  //           if(corr_depositors[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(corr_depositors[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   if(name === \"reg_id\"){\n  //     if(multiSelectedOptions[name] !== null){\n  //       console.log(\"MS\", multiSelectedOptions[\"acc_id\"])\n  //       let partnersList = []\n  //       let registrars = []\n  //       for(let i=0; i<enumData.length; i++){\n  //         if(enumData[i].name === \"registrars\"){\n  //           registrars = enumData[i].data // Find partner for each selected corr depositories\n  //         }\n  //       }\n  //       for(let m=0; m<multiSelectedOptions[name].length; m++){\n  //         for(let d=0; d<registrars.length; d++){\n  //           if(registrars[d].id === multiSelectedOptions[name][m].value){\n  //             partnersList.push(registrars[d].partner)\n  //           }\n  //         }\n  //       }\n  //       // for(let ms=0; ms<multiSelectData.length; ms++){\n  //       //   if(multiSelectData[ms].name === \"acc_id\"){\n  //       //     let options = [{\n  //       //       \"value\": \"all\",\n  //       //       \"label\": \"Все\"\n  //       //     }]\n  //       //     for(let msd=0; msd<multiSelectData[ms].data.length; msd++){\n  //       //       for(let p=0; p<partnersList.length; p++){\n  //       //         if(partnersList[p] === multiSelectData[ms].data[msd].partner){\n\n  //       //           options.push({\n  //       //             \"value\": multiSelectData[ms].data[msd].id,\n  //       //             \"label\": multiSelectData[ms].data[msd].label,\n  //       //           })\n  //       //         }  \n  //       //       }\n  //       //     }\n  //       //     multiSelectDataOptions[\"acc_id\"] = options\n  //       //   }\n  //       // }\n  //     }\n  //     else{\n  //       multiSelectedOptions[\"acc_id\"] = null\n  //       // multiSelectDataOptions[\"acc_id\"] = null\n  //     }\n  //   }\n  //   setMultiSelectedOptions(multiSelectedOptions)\n  //   setUpdateState(getUUID())\n  // }\n  function handleIntChange(event) {\n    console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = parseInt(event.target.value)\n    setFieldValue(fieldValue)\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section, index) {\n    return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map((contentItem, index) => (\n            contentItem.show === true &&\n              contentItem.type === \"TransferList\" ?\n              <table size=\"small\" align=\"center\">\n                <tr>\n                  <th colSpan=\"3\">{contentItem.label}</th>\n                </tr>\n                <tr>\n                  <td width=\"43%\" style={{ padding: \"10px\" }}>поиск <input\n                    autoFocus={autofocusFieldTrList === contentItem.name ? true : false}\n                    name={contentItem.name}\n                    onChange={handleSearchTransferListChange}\n                    value={transferListSearchFileds[contentItem.name]}\n                    disabled={!contentItem.edit}\n                  />\n                  </td>\n                  <td width=\"4%\"></td>\n                  <td width=\"43%\" style={{ padding: \"10px\" }}>поиск <input\n                    autoFocus={autofocusFieldSelTrList === contentItem.name ? true : false}\n                    name={contentItem.name}\n                    onChange={handleSearchSelectedTransferListChange}\n                    value={selectedTransferListSearchFileds[contentItem.name]}\n                    disabled={!contentItem.edit}\n                  /></td>\n                </tr>\n                <tr>\n                  <td width=\"43%\">\n                    <Grid item>{getTransferList(transferList[contentItem.name], contentItem.name, contentItem.edit)}</Grid>\n                  </td>\n                  <td width=\"4%\">\n                    <Grid item>\n                      <Grid container direction=\"column\">\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={() => handleAllRight(contentItem.name)}\n                          disabled={(transferList[contentItem.name].length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          ≫\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={() => handleCheckedRight(contentItem.name)}\n                          disabled={(leftChecked(contentItem.name).length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          &gt;\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={() => handleCheckedLeft(contentItem.name)}\n                          disabled={(rightChecked(contentItem.name).length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          &lt;\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          className={classes.button}\n                          onClick={() => handleAllLeft(contentItem.name)}\n                          disabled={(selectedTransferList[contentItem.name].length === 0 || contentItem.edit === false) ? true : false}\n                        >\n                          ≪\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </td>\n                  <td width=\"43%\">\n                    <Grid item>{getTransferList(selectedTransferList[contentItem.name], contentItem.name, contentItem.edit)}</Grid>\n                  </td>\n                </tr>\n              </table>\n              :\n              <Table size=\"small\">\n                <TableRow style={{ height: 30 }}>\n                  <TableCell\n                    align=\"left\"\n                    style={{ width: \"40%\" }}>\n                    {contentItem.label}\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    style={{ width: \"60%\", height: 30 }}\n                  >{contentBuilder(contentItem)}\n                  </TableCell>\n                </TableRow>\n              </Table>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n  // Create component by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          multiline\n          onBlur={handleChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"Int\") {\n      return (\n        <TextField\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          onBlur={handleIntChange}\n          name={contentItem.name}\n          InputProps={{ inputComponent: NumberFormatCustom }}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\") {\n      return (\n        <TextField\n          type=\"date\"\n          name={contentItem.name}\n          onBlur={handleChange}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\"}\n          // defaultValue = {fieldValue[contentItem.name]}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\") {\n      return (\n        // <table>\n        //   <tr>\n        //     <td style={{width: \"45%\"}}>\n        //       <TextField\n        //         key={fieldValue[contentItem.name]}\n        //         type=\"date\"\n        //         name={contentItem.name}\n        //         onChange={handleDateChange}\n        //         style={{width: \"100%\"}}\n        //         defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"NaN.NaN.NaN\" }\n        //         disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n        //         InputLabelProps={{\n        //           shrink: true,\n        //         }}\n        //       />\n        //     </td>\n        //     <td style={{width: \"45%\"}}>\n        //       <LocalizationProvider dateAdapter={AdapterDayjs}>\n        //         <Stack>\n        //           <TimePicker\n        //             // key={fieldValue[contentItem.name]}\n        //             ampm={false}\n        //             openTo=\"hours\"\n        //             views={['hours', 'minutes', 'seconds']}\n        //             inputFormat=\"HH:mm:ss\"\n        //             mask=\"__:__:__\"\n        //             // value={dVal}\n        //             value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? fieldValue[contentItem.name] : \"NaN.NaN.NaN\" }\n        //             onChange={(newValue) => {handleTimeChange(contentItem.name, newValue)}}\n        //             renderInput={(params) => <TextField {...params} />}\n        //           />\n        //         </Stack>\n        //     </LocalizationProvider>\n        //   </td>\n        //   </tr>\n        // </table>\n\n\n        // <TextField\n        //   name={contentItem.name}\n        //   onChange={handleDateTimeChange}\n        //   type=\"datetime-local\"\n        //   // defaultValue=\"2017-05-24T10:30\"\n        //   defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? moment(fieldValue[contentItem.name]).format(\"YYYY-MM-DDTHH:MM\") : moment(new Date()).format(\"YYYY-MM-DDTHH:MM\")}\n        //   InputLabelProps={{\n        //     shrink: true,\n        //   }}\n        // />\n        <TextField\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n\n        //   <LocalizationProvider dateAdapter={AdapterDateFns}>\n\n        //     <TimePicker\n        //       ampm={false}\n        //       openTo=\"hours\"\n        //       views={['hours', 'minutes', 'seconds']}\n        //       inputFormat=\"HH:mm:ss\"\n        //       mask=\"__:__:__\"\n        //       value={value}\n        //       // onChange={(newValue) => {\n        //       //   setValue(newValue);\n        //       // }}\n        //       renderInput={(params) => <TextField {...params} />}\n        //     />\n        // </LocalizationProvider>\n\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (fieldValue[contentItem.name] === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    // else if (contentItem.type === \"MultiSelect\"){\n    //   return (\n    //     // <div style={{height: \"40px\", overflow: \"auto\"}}>\n    //       <Select\n    //         name={contentItem.name}\n    //         className=\"basic-multi-select\"\n    //         classNamePrefix=\"select\"\n    //         value={multiSelectedOptions[contentItem.name]}\n    //         onChange={handleMultiSelectChange}\n    //         closeMenuOnSelect={false}\n    //         isMulti\n    //         options={multiSelectDataOptions[contentItem.name]}\n    //         isDisabled ={(formType === \"view\" || contentItem.edit === false) ? true : false}\n    //         style={{height: \"120px\"}}\n    //       />\n    //     // </div>\n    //   )\n    // }\n    else if (contentItem.type === \"Currency\") {\n      return (\n        <TextField\n          value={fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\"}\n          onBlur={handleChange}\n          name={contentItem.name}\n          style={{ minWidth: 300 }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: NumberFormatCustom }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === \"True\" || fieldValue[contentItem.name] === true) ? true : false}\n        />\n      )\n    }\n  }\n  // Main button click handler\n  function buttonClick(buttonName) {\n    console.log(\"Button\", buttonName)\n    if (buttonName === \"selectReportType\") {\n      let reportFormDefId = null\n      let reportName = null\n      for (let i = 0; i < enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          if (enumData[i].name === \"report_name\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].id === fieldValue[\"report_name\"]) {\n                reportFormDefId = enumData[i].data[d].form_def_id\n                reportName = enumData[i].data[d].report_name\n              }\n            }\n          }\n        }\n        else {\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"selectReportType\" },\n          reportName: { value: reportName },\n          reportFormDefId: { value: reportFormDefId }\n        }\n      }\n      console.log(\"button selectReportType:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"createReport\") {\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        let reportVars = getFieldValuesCreateReport()\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: { value: reportVars },\n            userAction: { value: \"createReport\" }\n          }\n        }\n        console.log(\"button createReport:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createChargeForCDServiceReport\") {\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        let reportVars = getFieldValuesCreateReport()\n        let chargeBody = {\n          startDate: fieldValue.start_date,\n          endDate: fieldValue.end_date,\n          depositorId: selectedTransferList.dep_id,\n          serviceTypeId: selectedTransferList.service_type_id\n        }\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            reportVars: { value: reportVars },\n            userAction: { value: \"createReport\" },\n            chargeBody: { value: JSON.stringify(chargeBody) }\n          }\n        }\n        console.log(\"button createChargeForCDServiceReport:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createCharge\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"createCharge\" },\n        }\n      }\n      console.log(\"button createCharge:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n\n\n    else if (buttonName === \"reportToExcel\") {\n      reportToExcel()\n      console.log(\"button reportToExcel: \")\n    }\n    else if (buttonName === \"reportToPDF\") {\n      reportToPDF()\n      console.log(\"button reportToPDF: \")\n    }\n    else if (buttonName === \"reportToPDFES\") {\n      if (props.esInn === null) {\n        setShowModalEnterPin(true)\n      }\n      else {\n        reportToPDFES(props.esUserFullName, props.esInn, props.esExpiredDate)\n      }\n    }\n    else if (buttonName === \"SignReportSaveButton\") {\n      sign()\n    }\n    else if (buttonName === \"reportToWord\") {\n      reportToWord()\n      console.log(\"button reportToWord: \")\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"finish\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"finish\" },\n        }\n      }\n      console.log(\"button finish: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n  }\n  // Transfer List functions\n  const handleToggle = (value, name) => () => {\n    const currentIndex = checked[name].indexOf(value)\n    const newChecked = [...checked[name]]\n\n    if (currentIndex === -1) {\n      newChecked.push(value)\n    }\n    else {\n      newChecked.splice(currentIndex, 1)\n    }\n    setChecked({ ...checked, [name]: newChecked })\n  }\n  const handleAllRight = (name) => {\n    setSelectedTransferList({ ...selectedTransferList, [name]: selectedTransferList[name].concat(transferList[name]) })\n    setTransferList({ ...transferList, [name]: [] })\n  }\n  function handleCheckedRight(name) {\n    // console.log(\"CHECKED RIGHT\", name)\n    setSelectedTransferList({ ...selectedTransferList, [name]: selectedTransferList[name].concat(leftChecked(name)) })\n    setTransferList({ ...transferList, [name]: not(transferList[name], leftChecked(name)) })\n    setChecked({ ...checked, [name]: not(checked[name], leftChecked(name)) })\n  }\n  function handleCheckedLeft(name) {\n    setTransferList({ ...transferList, [name]: transferList[name].concat(rightChecked(name)) })\n    setSelectedTransferList({ ...selectedTransferList, [name]: not(selectedTransferList[name], rightChecked(name)) })\n    setChecked({ ...checked, [name]: not(checked[name], rightChecked(name)) })\n  }\n  const handleAllLeft = (name) => {\n    setTransferList({ ...transferList, [name]: transferList[name].concat(selectedTransferList[name]) })\n    setSelectedTransferList({ ...selectedTransferList, [name]: [] })\n  }\n  function getTransferList(items, name, edit) {\n    // console.log(\"G TR L\", items, name)\n    return (\n      <Paper className={classes.paper}>\n        <List dense component=\"div\" role=\"list\">\n          {items.map((value) => {\n            const labelId = `transfer-list-item-${value}-label`;\n            return (\n              <ListItem\n                size=\"small\"\n                key={value}\n                role=\"listitem\"\n                button onClick={handleToggle(value, name)}\n                style={{ height: 40 }}\n                disabled={edit === false ? true : false}\n              >\n                <Checkbox\n                  size=\"small\"\n                  checked={checked[name].indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                  style={{ height: 40 }}\n                />\n                {/* <ListItemText id={labelId} primary={value} /> */}\n                <ListItemText id={labelId} primary={getTranserListItemLabel(name, value)} />\n              </ListItem>\n            )\n          })}\n          <ListItem />\n        </List>\n      </Paper>\n    )\n  }\n  function getTranserListItemLabel(name, value) {\n    // console.log(\"G TRL LABEL\", name, value)\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          if (enumData[e].data[d].id === value) {\n            return enumData[e].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function handleSearchTransferListChange(event) {\n    let name = event.target.name\n    let value = event.target.value\n    setAutofocusFieldTrList(name)\n    setTransferListSearchFileds({ ...transferListSearchFileds, [name]: value })\n    let filteredTrListOpts = []\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase()\n          let searchField = value.toLowerCase()\n          let includeSearch = label.includes(searchField)\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id)\n          }\n        }\n      }\n    }\n    // console.log(\"N TR L\", newTrListOpts)\n    let newTrListOpts = []\n    if (selectedTransferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true\n        for (let s = 0; s < selectedTransferList[name].length; s++) {\n          if (filteredTrListOpts[i] === selectedTransferList[name][s]) {\n            include = false\n            break\n          }\n        }\n        if (include === true) {\n          newTrListOpts.push(filteredTrListOpts[i])\n        }\n      }\n    }\n    else {\n      newTrListOpts = filteredTrListOpts\n    }\n    setTransferList({ ...transferList, [name]: newTrListOpts })\n  }\n  function handleSearchSelectedTransferListChange(event) {\n    let name = event.target.name\n    let value = event.target.value\n    setAutofocusFieldSelTrList(name)\n    setSelectedTransferListSearchFileds({ ...selectedTransferListSearchFileds, [name]: value })\n    let filteredTrListOpts = []\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === name) {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let label = enumData[e].data[d].label.toLowerCase()\n          let searchField = value.toLowerCase()\n          let includeSearch = label.includes(searchField)\n          if (includeSearch === true) {\n            filteredTrListOpts.push(enumData[e].data[d].id)\n          }\n        }\n      }\n    }\n    let newSelTrListOpts = []\n    if (transferList[name].length > 0) {\n      for (let i = 0; i < filteredTrListOpts.length; i++) {\n        let include = true\n        for (let s = 0; s < transferList[name].length; s++) {\n          if (filteredTrListOpts[i] === transferList[name][s]) {\n            include = false\n            break\n          }\n        }\n        if (include === true) {\n          newSelTrListOpts.push(filteredTrListOpts[i])\n        }\n      }\n    }\n    else {\n      newSelTrListOpts = filteredTrListOpts\n    }\n    setSelectedTransferList({ ...selectedTransferList, [name]: newSelTrListOpts })\n  }\n  function getFieldValuesCreateReport() {\n    let reportVars = {}\n    let strReportVars = \"\"\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        let type = Form.sections[s].contents[c].type\n        if (type === \"DateTime\") {\n          // reportVars[fieldName] = props.parseDate(fieldValue[fieldName])\n          // reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"YYYY-MM-DD\")\n          reportVars[fieldName] = moment(fieldValue[fieldName]).format(\"DD.MM.YYYY\")\n        }\n        // else if(type === \"MultiSelect\"){\n        //   if(Object.keys(multiSelectedOptions).length > 0){\n        //     let strVals = \"\"\n        //     for(let i=0; i<multiSelectedOptions[fieldName].length; i++){\n        //       let value = multiSelectedOptions[fieldName][i].value\n        //       if(value !== \"all\"){\n        //         if(i === multiSelectedOptions[fieldName].length-1){\n        //           strVals += value\n        //         }\n        //         else{\n        //           strVals += value + \",\"\n        //         }\n        //       }\n        //     }\n        //     reportVars[fieldName] = strVals\n        //     console.log(\"MULTI\", strVals)\n        //   }\n        // }\n        else if (type === \"TransferList\") {\n          // console.log(\"TTTTTT\", selectedTransferList[fieldName])\n          let strVals = \"\"\n          if (selectedTransferList[fieldName].length > 0) {\n            for (let i = 0; i < selectedTransferList[fieldName].length; i++) {\n              let value = selectedTransferList[fieldName][i]\n              if (i === selectedTransferList[fieldName].length - 1) {\n                strVals += value\n              }\n              else {\n                strVals += value + \",\"\n              }\n            }\n          }\n          reportVars[fieldName] = strVals\n          // console.log(\"TR LIST\", strVals)\n        }\n        else if (type === \"FullDateTime\") {\n          // let val = new Date(fieldValue[fieldName])\n          // // let fullDate = props.parseDate(val)\n          // let newDate = new Date(fieldValue[fieldName]) // \"2020-01-26\"\n          // let dd = String(newDate.getDate()).padStart(2, '0')\n          // let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n          // let yyyy = newDate.getFullYear()\n          // var hours = val.getHours() < 10 ? \"0\" + val.getHours() : val.getHours()\n          // var minutes = val.getMinutes() < 10 ? \"0\" + val.getMinutes() : val.getMinutes()\n          // var seconds = val.getSeconds() < 10 ? \"0\" + val.getSeconds() : val.getSeconds()\n          // var convertedDate = dd + \".\" + mm + \".\" + yyyy + \"T\" + hours + \":\" + minutes + \":\" + seconds\n          let convertedDate = moment(fieldValue[fieldName]).format(\"DD.MM.YYYYTHH:mm:ss\")\n          reportVars[fieldName] = convertedDate\n        }\n        else {\n          reportVars[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    if (Object.keys(reportVars).length > 0) {\n      strReportVars = \"?\"\n      for (let key in reportVars) {\n        let newVar = key + \"=\" + reportVars[key] + \"&\"\n        strReportVars = strReportVars + newVar\n      }\n      strReportVars = strReportVars.substring(0, strReportVars.length - 1)\n    }\n    return strReportVars\n  }\n  function checkForRequieredFields() {\n    // console.log(\"MOPTS\", multiSelectedOptions)\n    let checkedSuccessfuly = null\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].required === true) {\n          // if(Form.sections[s].contents[c].type === \"MultiSelect\"){\n          //   if(multiSelectedOptions[fieldName] === undefined || multiSelectedOptions[fieldName] === null ||\n          //     multiSelectedOptions[fieldName].length === 0){\n          //     checkedSuccessfuly = false\n          //     swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n          //     return checkedSuccessfuly\n          //   }\n          //   else{\n          //     checkedSuccessfuly = true\n          //   }\n          // }\n          if (Form.sections[s].contents[c].type === \"TransferList\") {\n            if (selectedTransferList[fieldName] === undefined || selectedTransferList[fieldName] === null ||\n              selectedTransferList[fieldName].length === 0) {\n              checkedSuccessfuly = false\n              swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n              return checkedSuccessfuly\n            }\n            else {\n              checkedSuccessfuly = true\n            }\n          }\n          else {\n            if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null ||\n              fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n              checkedSuccessfuly = false\n              swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n              return checkedSuccessfuly\n            }\n            else {\n              checkedSuccessfuly = true\n            }\n          }\n        }\n        else {\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n\n  async function repserverlogin() {\n    await fetch(\n      `/jasperserver/rest_v2/login?j_username=jasperadmin&j_password=jasperadmin`,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n      .then(response => {\n        // response.text().then(string => {\n        console.log(\"JASPERT AUTH\", response)\n        // })\n      })\n      .catch(error => console.error(error));\n  }\n  async function reportToExcel() {\n    await repserverlogin()\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".xlsx\" + reportVars\n    await fetch(\n      url,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n      .then(response => response.blob())\n      .then(blob => {\n        // console.log(\"RESP\", blob)\n        var url = window.URL.createObjectURL(blob)\n        var a = document.createElement('a')\n        a.href = url\n        a.download = `${reportName}.xlsx`\n        document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n        a.click()\n        a.remove()  //afterwards we remove the element again         \n      })\n      .catch(error => console.error(error));\n  }\n  async function reportToPDF() {\n    await repserverlogin()\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".pdf\" + reportVars\n    await fetch(\n      url,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n      .then(response => response.blob())\n      .then(blob => {\n        console.log(\"RESP\", blob)\n        var url = window.URL.createObjectURL(blob)\n        var a = document.createElement('a')\n        a.href = url\n        a.download = `${reportName}.pdf`\n        document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n        a.click()\n        a.remove()  //afterwards we remove the element again         \n      })\n      .catch(error => console.error(error));\n  }\n  async function reportToPDFES(fullName, inn, expiredDate) {\n    await repserverlogin()\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".pdf\" + reportVars\n    await fetch(\n      url,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n      .then(response => response.blob())\n      .then(blob => {\n        console.log(\"REPORT\", blob);\n        blob.name = reportName + \".pdf\"\n        let formData = new FormData()\n        formData.append(\"formFile\", blob, reportName + \".pdf\")\n\n        for (var value of formData.values()) {\n          console.log(\"FVAL\", value)\n        }\n        let url = \"/api/Template/AddWatermark?text=ФИО: \" + fullName + \" ПИН: \" + inn + \" \" + expiredDate\n        var requestOptions = {\n          method: 'POST',\n          body: formData,\n          redirect: 'follow'\n        }\n\n        fetch(url, requestOptions)\n          .then(response => response.blob())\n          .then(bl => {\n            console.log(\"RES\", bl)\n            var pdf = new Blob([bl], { type: \"application/pdf\" })\n            var docUrl = window.URL.createObjectURL(pdf)\n            var a = document.createElement('a')\n            a.href = docUrl\n            a.download = `${reportName}.pdf`\n            document.body.appendChild(a)\n            a.click()\n            a.remove()\n          })\n          .catch(error => console.log('error', error))\n      })\n      .catch(error => console.error(error));\n  }\n  async function reportToWord() {\n    await repserverlogin()\n    let url = \"/jasperserver/rest_v2/reports/reports/interactive/\" + reportName + \".docx\" + reportVars\n    await fetch(\n      url,\n      {\n        mode: 'no-cors',\n        method: 'GET',\n        withCredentials: true,\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      }\n    )\n      .then(response => response.blob())\n      .then(blob => {\n        var url = window.URL.createObjectURL(blob)\n        var a = document.createElement('a')\n        a.href = url\n        a.download = `${reportName}.docx`\n        document.body.appendChild(a) // we need to append the element to the dom -> otherwise it will not work in firefox\n        a.click()\n        a.remove()  //afterwards we remove the element again         \n      })\n      .catch(error => console.error(error))\n  }\n  try {\n    return (\n      <Grid>\n        <a name=\"top\" />\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n          <Grid item xs={11}>\n            <Paper>\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <TableHead>\n                  <TableRow style={{ maxHeight: 25 }}>\n                    <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                  </TableRow>\n                </TableHead>\n              </Grid>\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {Form.sections.map((section, index) => {\n                  return sectionBuilder(section, index)\n                })}\n              </Grid>\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                {buttons.map((button, index) => (\n                  <Button\n                    variant=\"outlined\"\n                    name={button.name}\n                    onClick={() => buttonClick(button.name)}\n                    style={{\n                      margin: 3,\n                      backgroundColor: button.backgroundColor,\n                      height: 32,\n                      fontSize: 12,\n                      color: button.fontColor\n                    }}\n                    value={button.name}\n                  >\n                    {button.label}\n                  </Button>\n                ))}\n              </Grid>\n            </Paper>\n            <br></br>\n            {/* {selectedDoc !== null &&\n              <div>{getReport()}</div>\n            } */}\n            {selectedDoc !== null &&\n              <Markup id=\"reportContainer\" content={selectedDoc} />\n            }\n          </Grid>\n        </Grid>\n        <Modal\n          open={showModalEnterPin}\n          onClose={handleCloseModalEnterPin}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.modal}>\n            <h3 id=\"simple-modal-title\">Ведите ПИН код Рутокена</h3>\n            <FormControl variant=\"outlined\" style={{ width: \"100%\" }} error={wrongPin}>\n              <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n              <OutlinedInput\n                type={showPin ? 'text' : 'password'}\n                defaultValue={rutokenPin}\n                onChange={handlePinChange}\n                onKeyPress={onKeyPressModalEnterPin}\n                autoFocus\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPin}\n                      edge=\"end\"\n                    >\n                      {showPin ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={25}\n              />\n            </FormControl>\n            {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n            <Button\n              variant=\"contained\"\n              onClick={() => buttonClick(\"SignReportSaveButton\")}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#2862F4\"\n              }}\n            >Ок\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={handleCloseModalEnterPin}\n              style={{\n                margin: 3,\n                height: 32,\n                fontSize: 12,\n                color: \"white\",\n                backgroundColor: \"#E73639\"\n              }}\n            >Отмена\n            </Button>\n          </div>\n        </Modal>\n      </Grid>\n    )\n  }\n  catch (error) {\n    console.log(\"ERROR\", error)\n    return <div>error</div>\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}