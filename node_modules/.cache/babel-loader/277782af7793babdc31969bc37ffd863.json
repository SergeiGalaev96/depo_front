{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\MainForm\\\\MainForm.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Menu from '@mui/material/Menu'; // Accordion\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Icons\n\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // Form components\n\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select'; // https://react-select.com/home\n\nimport Checkbox from '@material-ui/core/Checkbox'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport hotkeys from 'hotkeys-js'; // https://github.com/jaywcjlove/hotkeys\n\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n// Custom components\n\nimport \"../../components/GridForm/GridFormCSS.css\";\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({}));\nexport default (props => {\n  // This.state\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [docId, setDocId] = useState(props.userTask.docId);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [enumData] = useState(props.userTask.enumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [fieldValue, setFieldValue] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [buttons] = useState(props.userTask.buttons);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [taskType] = useState(props.userTask.taskType);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [accordionExpanded, setAccordionExpanded] = useState(false);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  const [gridTableId] = useState(getUUID());\n  const [gridFieldValue, setGridFieldValue] = useState({}); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"MAINFORM PROPS\", props.userTask, props.userProfile);\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        setFilteredDocList(parsedData);\n        setIsSearchForm(true);\n        setInitialDocList(parsedData);\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", -1, \"Int\"));\n        let newSortedDocList = [];\n\n        if (props.userTask.taskType === \"showStockSecuritySearchForm\" || props.userTask.taskType === \"showStockCurrencySearchForm\") {\n          if (userProfile.userRole !== \"1\") {\n            for (let sd = 0; sd < sortedDocList.length; sd++) {\n              if (parseInt(userProfile.partner) === sortedDocList[sd].partner) {\n                newSortedDocList.push(sortedDocList[sd]);\n              }\n            }\n\n            sortedDocList = newSortedDocList;\n          }\n        }\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n          console.log(\"SHDOC\", parsedSelectedDoc);\n          filterDocList(0, s - 1, sortedDocList, parsedSelectedDoc);\n        } else {\n          fetchBySize(0, s - 1, sortedDocList);\n        }\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    } else {\n      setIsSearchForm(false);\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      let fields = {}; // let Form = props.userTask.Form\n\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name;\n          fields[fieldName] = parsedSelectedDoc[fieldName];\n        }\n      }\n\n      console.log(\"SDOC\", parsedSelectedDoc);\n      console.log(\"FIELDVAL\", fields);\n      setSelectedDoc(parsedSelectedDoc);\n      setFieldValue(fields);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            });\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n    }\n\n    if (gridForm !== null) {\n      let newFields = {};\n\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show;\n        }\n      }\n\n      setGridFieldValue(newFields);\n    }\n\n    setUpdateState(getUUID());\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded);\n    }\n  });\n\n  const handleCheckboxChange = event => {\n    console.log(\"CHBX\", event.target.name, event.target.checked);\n\n    if (event.target.name === \"is_resident\") {\n      console.log(\"IS_RES\");\n\n      if (taskType === \"showPartnersCreatingForm\" || taskType === \"showPartnersEditForm\" || taskType === \"showIssuersCreatingForm\" || taskType === \"showIssuersEditForm\") {\n        // let newFields = fieldValue\n        fieldValue[\"country\"] = 1;\n        fieldValue[\"is_resident\"] = event.target.checked;\n        var updateSelectedOptions = selectedOptions.slice();\n        let noSuchOption = true;\n        let countryOption = {\n          name: \"country\",\n          value: 1,\n          label: \"Кыргызская Республика\"\n        };\n\n        for (let l = 0; l < updateSelectedOptions.length; l++) {\n          if (updateSelectedOptions[l].name === \"country\") {\n            updateSelectedOptions[l] = countryOption;\n            setSelectedOptions(updateSelectedOptions);\n            break;\n          } else {\n            noSuchOption = true;\n          }\n        }\n\n        if (noSuchOption === true) {\n          updateSelectedOptions.push(countryOption);\n          setSelectedOptions(updateSelectedOptions);\n        }\n\n        if (taskType === \"showIssuersCreatingForm\" || taskType === \"showIssuersEditForm\") {\n          fieldValue[\"is_not_resident\"] = false;\n        }\n\n        console.log(\"FVAL\", fieldValue);\n        setFieldValue(fieldValue);\n      }\n    }\n\n    if (event.target.name === \"is_not_resident\") {\n      console.log(\"NOT_RES\");\n      fieldValue[\"is_resident\"] = false;\n      fieldValue[\"is_not_resident\"] = event.target.checked;\n      fieldValue[\"country\"] = null;\n      setFieldValue(fieldValue);\n      console.log(\"FVAL\", fieldValue);\n    } else {\n      setFieldValue({ ...fieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n\n    setUpdateState(getUUID());\n  };\n\n  const handleBoolCustomChange = event => {\n    console.log(\"BoolCustom\", fieldValue);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    });\n  }; // Integer input handler\n\n\n  const handleIntChange = event => {\n    console.log(\"EVENT\", event.target.name, event.target.value);\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    });\n    setUpdateState(getUUID());\n  }; // Float input handler\n\n\n  const handleFloatChange = event => {\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let float = parseFloat(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: float\n    });\n    console.log(\"FLOAT CHANGE\", event.target.name, fieldValue);\n  }; // Text input handler\n\n\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value;\n    console.log(\"OPT\", option.name, option.value);\n    var updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        noSuchOption = false;\n        setSelectedOptions(updateSelectedOptions);\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n\n    if (option.name === \"issuer\" && (taskType === \"showSecuritiesCreatingForm\" || taskType === \"showSecuritiesEditForm\")) {\n      // выбран Эмитент нужно найти ргистратора и отобразить\n      for (let j = 0; j < enumData.length; j++) {\n        if (enumData[j] !== null) {\n          if (enumData[j].name === \"issuer\") {\n            for (let h = 0; h < enumData[j].data.length; h++) {\n              if (enumData[j].data[h].id === option.value) {\n                // Find registrar of issuer\n                let registrarId = enumData[j].data[h].registrar;\n\n                for (let e = 0; e < enumData.length; e++) {\n                  if (enumData[e] !== null) {\n                    if (enumData[e].name === \"registrar\") {\n                      for (let r = 0; r < enumData[e].data.length; r++) {\n                        if (enumData[e].data[r].id === registrarId) {\n                          // Set registrar option \n                          fieldValue[\"registrar\"] = registrarId; // console.log(\"ISSUER SEC\", fieldValue)\n\n                          let registrarOption = {\n                            value: enumData[e].data[r].id,\n                            name: \"registrar\",\n                            label: enumData[e].data[r].label\n                          };\n                          let noRegistrarOption = true;\n\n                          for (let y = 0; y < updateSelectedOptions.length; y++) {\n                            if (updateSelectedOptions[y].name === \"registrar\") {\n                              updateSelectedOptions[y] = registrarOption;\n                              noRegistrarOption = false;\n                              setSelectedOptions(updateSelectedOptions);\n                              break;\n                            } else {\n                              noRegistrarOption = true;\n                            }\n                          }\n\n                          if (noRegistrarOption === true) {\n                            updateSelectedOptions.push(registrarOption);\n                            setSelectedOptions(updateSelectedOptions);\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (option.name === \"payer_type\" && (taskType === \"showPaymentsForCDServicesCreatingForm\" || taskType === \"showPaymentsForCDServicesViewForm\" || taskType === \"showPaymentsForCDServicesSearchForm\")) {\n      // console.log(\"SEL\", option.name, option.value)\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          if (Form.sections[s].contents[c].name === \"depositor\") {\n            if (option.value === 1) {\n              Form.sections[s].contents[c].show = true;\n              Form.sections[s].contents[c].edit = true;\n              fieldValue[\"issuer\"] = null;\n\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"issuer\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"issuer\"\n                  };\n                  setSelectedOptions(updateSelectedOptions);\n                  break;\n                }\n              }\n            } else {\n              Form.sections[s].contents[c].show = false;\n              Form.sections[s].contents[c].edit = false;\n            }\n          }\n\n          if (Form.sections[s].contents[c].name === \"issuer\") {\n            if (option.value === 2) {\n              Form.sections[s].contents[c].show = true;\n              Form.sections[s].contents[c].edit = true;\n              fieldValue[\"depositor\"] = null;\n\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"depositor\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"depositor\"\n                  };\n                  setSelectedOptions(updateSelectedOptions);\n                  break;\n                }\n              }\n            } else {\n              Form.sections[s].contents[c].show = false;\n              Form.sections[s].contents[c].edit = false;\n            }\n          }\n        }\n      }\n\n      setForm(Form); // console.log(\"NEW ENUMS\")\n    } else if (option.name === \"recipient_type\" && (taskType === \"showTransitChargeForCDServicesSearchForm\" || taskType === \"showTransitChargeForCDServicesCreatingForm\" || taskType === \"showTransitChargeForCDServicesEditForm\" || taskType === \"showTransitPaymentsForCDServicesSearchForm\" || taskType === \"showTransitPaymentsForCDServicesCreatingForm\" || taskType === \"showTransitPaymentsForCDServicesEditForm\")) {\n      // console.log(\"RECIPIENT\", option.name, option.value, fieldValue)\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          if (Form.sections[s].contents[c].name === \"registrar\") {\n            if (option.value === 1) {\n              Form.sections[s].contents[c].show = true;\n              Form.sections[s].contents[c].edit = true;\n              fieldValue[\"corr_depository\"] = null;\n\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"corr_depository\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"corr_depository\"\n                  };\n                  setSelectedOptions(updateSelectedOptions);\n                  break;\n                }\n              }\n            } else {\n              Form.sections[s].contents[c].show = false;\n              Form.sections[s].contents[c].edit = false;\n            }\n          }\n\n          if (Form.sections[s].contents[c].name === \"corr_depository\") {\n            if (option.value === 2) {\n              Form.sections[s].contents[c].show = true;\n              Form.sections[s].contents[c].edit = true;\n              fieldValue[\"registrar\"] = null;\n\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"registrar\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"registrar\"\n                  };\n                  setSelectedOptions(updateSelectedOptions);\n                  break;\n                }\n              }\n            } else {\n              Form.sections[s].contents[c].show = false;\n              Form.sections[s].contents[c].edit = false;\n            }\n          }\n        }\n      }\n\n      setForm(Form); // console.log(\"NEW ENUMS\")\n    }\n  }\n\n  function handleDateTimeChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let fullDate = props.parseDate(event.target.value);\n    var hours = new Date().getHours();\n    var minutes = new Date().getMinutes();\n    var seconds = new Date().getSeconds();\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\";\n    fieldValue[event.target.name] = convertedDate;\n    setFieldValue(fieldValue); // console.log(\"DATE CHANGE\", event.target.value)\n  }\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded);\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  } // filter docList by filled parameters\n\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    console.log(\"FILTER\", fields);\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key);\n\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR TEXT SEARCH\", er, Data[i][key]);\n                  match = true;\n                }\n              } else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else if (contentType === \"Enum\") {\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } else {\n              match = false;\n              break;\n            }\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered docList by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setFilteredDocList(Data);\n    setDocList(newDocList);\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.round(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  } // random UUID generator\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // random numbers generator\n\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  } // Collect data to save doc\n\n\n  function getFieldValuesSaveDocument() {\n    let docToSave = {};\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined) {\n          docToSave[fieldName] = false;\n        } else if (Form.sections[s].contents[c].type === \"BoolCustom\") {\n          if (fieldValue[fieldName] === true || fieldValue[fieldName] === Form.sections[s].contents[c].valueTrue) {\n            docToSave[fieldName] = Form.sections[s].contents[c].valueTrue;\n          } else {\n            docToSave[fieldName] = Form.sections[s].contents[c].valueFalse;\n          }\n        } else {\n          docToSave[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToSave;\n  } // Collect data to update doc\n\n\n  function getFieldValuesUpdateDocument() {\n    let docToUpdate = selectedDoc; // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = parseInt(docId)\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false;\n        } else if (Form.sections[s].contents[c].type === \"BoolCustom\") {\n          // console.log(\"BOOLCUST\", fieldName, fieldValue[fieldName])\n          if (fieldValue[fieldName] === true || fieldValue[fieldName] === Form.sections[s].contents[c].valueTrue) {\n            docToUpdate[fieldName] = Form.sections[s].contents[c].valueTrue;\n          } else {\n            docToUpdate[fieldName] = Form.sections[s].contents[c].valueFalse;\n          }\n        } else {\n          docToUpdate[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToUpdate;\n  }\n\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false;\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\");\n            return checkedSuccessfuly;\n          } else {\n            checkedSuccessfuly = true;\n          }\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  function buttonClick(buttonName, item) {\n    if (buttonName === \"findDocument\") {\n      // console.log(\"findDocument\")\n      filterDocList(0, size - 1, initialDocList, fieldValue);\n    } else if (buttonName === \"openDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: {\n            value: JSON.stringify(item)\n          },\n          userAction: {\n            value: \"openDocument\"\n          },\n          docId: {\n            value: item.id\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button openDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"editDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"editDocument\"\n          }\n        }\n      };\n      console.log(\"button editDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"openReferenceDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          apiName: {\n            value: item.controller\n          },\n          userAction: {\n            value: \"openReferenceDocument\"\n          },\n          searchFormDefId: {\n            value: item.search_form\n          },\n          gridFormDefId: {\n            value: item.grid_form\n          },\n          creatingFormDefId: {\n            value: item.creating_form\n          },\n          editFormDefId: {\n            value: item.edit_form\n          },\n          searchDocMain: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button openReferenceDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocument\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"updateDocument:\", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createDocument\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"createDocument\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"createDocument:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"saveDocument\") {\n      let docToSave = getFieldValuesSaveDocument();\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"saveDocument\"\n          },\n          document: {\n            value: JSON.stringify(docToSave)\n          }\n        }\n      };\n      console.log(\"saveDocument:\", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"saveSecurity\") {\n      let checkForCode = null;\n      let docToSave = getFieldValuesSaveDocument();\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"securities\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].code === fieldValue[\"code\"]) {\n              checkForCode = false;\n              swAllert(\"ЦБ с таким кодом уже существует\", \"warning\");\n              break;\n            }\n\n            if (d === enumData[i].data.length - 1 && enumData[i].data[d].isin !== fieldValue[\"code\"]) {\n              checkForCode = true;\n            }\n          }\n        }\n      }\n\n      let checkResult = checkForRequieredFields();\n      console.log(\"CODE\", checkForCode);\n\n      if (checkForCode !== null && checkForCode !== false) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: {\n              value: \"saveDocument\"\n            },\n            document: {\n              value: JSON.stringify(docToSave)\n            }\n          }\n        };\n        console.log(\"saveSecurity:\", commandJson);\n\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      }\n    } else if (buttonName === \"blockSecurity\") {\n      if (selectedDoc.blocked !== true) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: {\n              value: \"blockSecurity\"\n            },\n            security_id: {\n              value: selectedDoc.id\n            }\n          }\n        };\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно Заблокировать выпуск ЦБ?\",\n          icon: \"warning\",\n          buttons: {\n            yes: \"Да\",\n            cancel: \"Отмена\"\n          }\n        }).then(click => {\n          if (click === \"yes\") {\n            console.log(\"blockSecurity:\", commandJson);\n            props.sendFieldValues(commandJson);\n            props.clearTabData(process_id);\n          }\n        });\n      } else {\n        swAllert(\"ЦБ уже заблокирована!\", \"warning\");\n      }\n    } else if (buttonName === \"unblockSecurity\") {\n      if (selectedDoc.blocked === true) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: {\n              value: \"unblockSecurity\"\n            },\n            security_id: {\n              value: selectedDoc.id\n            }\n          }\n        };\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно разблокировать выпуск ЦБ?\",\n          icon: \"warning\",\n          buttons: {\n            yes: \"Да\",\n            cancel: \"Отмена\"\n          }\n        }).then(click => {\n          if (click === \"yes\") {\n            console.log(\"unblockSecurity:\", commandJson);\n            props.sendFieldValues(commandJson);\n            props.clearTabData(process_id);\n          }\n        });\n      } else {\n        swAllert(\"ЦБ не была блокирована ранее!\", \"warning\");\n      }\n    } else if (buttonName === \"blockIssuerSecurities\") {\n      if (selectedDoc.blocked !== true) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: {\n              value: \"blockIssuerSecurities\"\n            },\n            issuer_id: {\n              value: selectedDoc.id\n            }\n          }\n        };\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно Заблокировать ЦБ эмитента?\",\n          icon: \"warning\",\n          buttons: {\n            yes: \"Да\",\n            cancel: \"Отмена\"\n          }\n        }).then(click => {\n          if (click === \"yes\") {\n            console.log(\"blockIssuerSecurities:\", commandJson);\n            props.sendFieldValues(commandJson);\n            props.clearTabData(process_id);\n          }\n        });\n      } else {\n        swAllert(\"ЦБ эмитента уже заблокированы!\", \"warning\");\n      }\n    } else if (buttonName === \"unblockIssuerSecurities\") {\n      if (selectedDoc.blocked === true) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: {\n              value: \"unblockIssuerSecurities\"\n            },\n            issuer_id: {\n              value: selectedDoc.id\n            }\n          }\n        };\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно Разблокировать ЦБ эмитента?\",\n          icon: \"warning\",\n          buttons: {\n            yes: \"Да\",\n            cancel: \"Отмена\"\n          }\n        }).then(click => {\n          if (click === \"yes\") {\n            console.log(\"unblockIssuerSecurities:\", commandJson);\n            props.sendFieldValues(commandJson);\n            props.clearTabData(process_id);\n          }\n        });\n      } else {\n        swAllert(\"ЦБ эмитента не были блокированы ранее!\", \"warning\");\n      }\n    } else if (buttonName === \"deleteDocument\") {\n      let docToDelete = selectedDoc.id;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"deleteDocument\"\n          },\n          document: {\n            value: docToDelete.toString()\n          }\n        }\n      };\n      console.log(\"deleteDocument:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно удалить данную запись?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      });\n    } else if (buttonName === \"savePartnerContact\") {\n      let docToSave = getFieldValuesSaveDocument();\n      docToSave[\"partner\"] = docId;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"saveDocument\"\n          },\n          document: {\n            value: JSON.stringify(docToSave)\n          }\n        }\n      };\n      console.log(\"saveDocument:\", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"saveAccount\") {\n      const createDocument = getFieldValuesSaveDocument();\n\n      if (fieldValue[\"account_type\"] === 3001 || fieldValue[\"account_type\"] === 3101 || fieldValue[\"account_type\"] === 3301) {\n        createDocument[\"accnumber\"] = \"1-\" + fieldValue[\"account_type\"] + \"-\" + fieldValue[\"partner\"];\n      } else {\n        for (let i = 0; i < enumData.length; i++) {\n          if (enumData[i].name === \"account_type\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].id === fieldValue[\"account_type\"]) {\n                createDocument[\"accnumber\"] = enumData[i].data[d].status + \"-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"];\n              }\n            }\n          }\n        }\n      } // for(let i=0; i<enumData.length; i++){\n      //   if(enumData[i].name === \"account_type\"){\n      //     for(let d=0; d<enumData[i].data.length; d++){\n      //       if(enumData[i].data[d].id === fieldValue[\"account_type\"]){\n      //         if(fieldValue[\"istrading_account\"] === true){\n      //           createDocument[\"accnumber\"] = \"1-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n      //         }\n      //         else{\n      //           createDocument[\"accnumber\"] = enumData[i].data[d].status + \"-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n      //         }\n      //         // createDocument[\"account_type\"] = enumData[i].data[d].code\n      //       }\n      //     }\n      //   }\n      // }\n\n\n      createDocument[\"isactive\"] = true;\n      createDocument[\"isclosed\"] = false;\n      createDocument[\"dateopen\"] = props.getCurrentFullDateTime();\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"saveAccount\"\n          },\n          document: {\n            value: JSON.stringify(createDocument)\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          }\n        }\n      };\n      console.log(\"button saveAccount: \", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"updateAccount\") {\n      const updateDocument = getFieldValuesUpdateDocument();\n\n      if (fieldValue[\"account_type\"] === 3001 || fieldValue[\"account_type\"] === 3101 || fieldValue[\"account_type\"] === 3301) {\n        updateDocument[\"accnumber\"] = \"1-\" + fieldValue[\"account_type\"] + \"-\" + fieldValue[\"partner\"];\n      } else {\n        for (let i = 0; i < enumData.length; i++) {\n          if (enumData[i].name === \"account_type\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].id === fieldValue[\"account_type\"]) {\n                updateDocument[\"accnumber\"] = enumData[i].data[d].status + \"-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"];\n              }\n            }\n          }\n        }\n      } // for(let i=0; i<enumData.length; i++){\n      //   if(enumData[i].name === \"account_type\"){\n      //     for(let d=0; d<enumData[i].data.length; d++){\n      //       if(enumData[i].data[d].id === fieldValue[\"account_type\"]){\n      //         if(fieldValue[\"istrading_account\"] === true){\n      //           updateDocument[\"accnumber\"] = \"1-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n      //         }\n      //         else{\n      //           updateDocument[\"accnumber\"] = enumData[i].data[d].status + \"-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n      //         }\n      //       }\n      //     }\n      //   }\n      // }\n\n\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateAccount\"\n          },\n          document: {\n            value: JSON.stringify(updateDocument)\n          },\n          selectedDoc: {\n            value: JSON.stringify(updateDocument)\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          }\n        }\n      };\n      console.log(\"button updateAccount: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"saveAccountGIK\") {\n      const createDocument = getFieldValuesSaveDocument();\n\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"acc_type\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].id === fieldValue[\"acc_type\"]) {\n              createDocument[\"acc_number\"] = enumData[i].data[d].label + \"-\" + fieldValue[\"depositor\"];\n            }\n          }\n        }\n      }\n\n      createDocument[\"is_active\"] = true;\n      createDocument[\"is_closed\"] = false;\n      createDocument[\"open_date\"] = props.getCurrentFullDateTime();\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"saveAccountGIK\"\n          },\n          document: {\n            value: JSON.stringify(createDocument)\n          },\n          userId: {\n            value: userProfile.userId\n          },\n          userRole: {\n            value: userProfile.userRole\n          }\n        }\n      };\n      console.log(\"button saveInstruction: \", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"blockAccount\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody[\"isactive\"] = false;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"blockAccount\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"blockAccount:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите заблокировать данный счет?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id); // swAllert(\"Данные успешно обновлены!\", \"success\")\n        }\n      });\n    } else if (buttonName === \"blockAccountGIK\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody[\"is_active\"] = false;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"blockAccountGIK\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"blockAccountGIK:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите заблокировать данный счет?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id); // swAllert(\"Данные успешно обновлены!\", \"success\")\n        }\n      });\n    } else if (buttonName === \"unblockAccount\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody[\"isactive\"] = true;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"unblockAccount\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"unblockAccount:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите разблокировать данный счет?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      });\n    } else if (buttonName === \"unblockAccountGIK\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody[\"is_active\"] = true;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"unblockAccountGIK\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"unblockAccountGIK:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите разблокировать данный счет?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id); // swAllert(\"Данные успешно обновлены!\", \"success\")\n        }\n      });\n    } else if (buttonName === \"closeAccount\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody[\"isclosed\"] = null; // updateBody[\"isactive\"] = false\n\n      updateBody[\"deleted\"] = true;\n      updateBody[\"dateclosed\"] = props.getCurrentFullDateTime();\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"closeAccount\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"closeAccount:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите ЗАКРЫТЬ данный счет? Данную операцию невозможно отменить\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id); // swAllert(\"Данные успешно обновлены!\", \"success\")\n        }\n      });\n    } else if (buttonName === \"closeAccountGIK\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody[\"is_closed\"] = true;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"closeAccountGIK\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"closeAccountGIK:\", commandJson);\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите ЗАКРЫТЬ данный счет? Данную операцию невозможно отменить\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id); // swAllert(\"Данные успешно обновлены!\", \"success\")\n        }\n      });\n    } else if (buttonName === \"contacs\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"contacs\"\n          },\n          partnerId: {\n            value: docId\n          }\n        }\n      };\n      console.log(\"button contacs: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"setAccountManager\") {\n      console.log(\"ITEM\", item);\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"setAccountManager\"\n          },\n          manager_id: {\n            value: selectedDoc.acc_manager\n          }\n        }\n      };\n      console.log(\"button setAccountManager: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"saveAccountManager\") {\n      let doc = null;\n      let userAct = \"updateAccountManager\";\n\n      if (selectedDoc === null) {\n        userAct = \"createAccountManager\";\n        doc = getFieldValuesSaveDocument();\n      } else {\n        doc = getFieldValuesUpdateDocument();\n      }\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: userAct\n          },\n          document: {\n            value: JSON.stringify(doc)\n          }\n        }\n      };\n      console.log(\"button createUpdateACCManager: \", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"deleteAccountManager\") {\n      if (selectedDoc !== null) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: {\n              value: \"deleteAccountManager\"\n            },\n            docIdToDelete: {\n              value: selectedDoc.id.toString()\n            }\n          }\n        };\n        console.log(\"deleteAccountManager:\", commandJson);\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно хотите снять управляющего?\",\n          icon: \"warning\",\n          buttons: {\n            yes: \"Да\",\n            cancel: \"Отмена\"\n          }\n        }).then(click => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson);\n            props.clearTabData(process_id); // swAllert(\"Данные успешно обновлены!\", \"success\")\n          }\n        });\n      }\n    } else if (buttonName === \"showInstructionTypeCreatingForm\") {\n      let instructionTypeDoc = getFieldValuesSaveDocument();\n      instructionTypeDoc.create_form = \"\";\n      instructionTypeDoc.edit_form = \"\";\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"showInstructionTypeCreatingForm\"\n          },\n          instructionTypeDoc: {\n            value: JSON.stringify(instructionTypeDoc)\n          },\n          newInstructionLabel: {\n            value: fieldValue[\"name\"]\n          }\n        }\n      };\n      console.log(\"showInstructionTypeCreatingForm:\", commandJson);\n      props.sendFieldValues(commandJson);\n    } else if (buttonName === \"updatePartnerContacts\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody[\"partner\"] = selectedDoc.partner;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      console.log(\"updateDocument:\", commandJson);\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"getFiles\") {\n      if (fieldValue[\"date\"] !== undefined && fieldValue[\"date\"] !== \"NaN.NaN.NaN\") {\n        let newDate = new Date(fieldValue[\"date\"]); // \"2020-01-26\"\n\n        let dd = String(newDate.getDate()).padStart(2, '0');\n        let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n        let yyyy = newDate.getFullYear();\n        let fileDir = dd + mm + yyyy;\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: {\n              value: \"getFiles\"\n            },\n            selectedDoc: {\n              value: fileDir\n            }\n          }\n        };\n        console.log(\"getFiles:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      } else {\n        swAllert(\"Введите дату\", \"warning\");\n      }\n    } else if (buttonName === \"updateInstructionType\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody[\"create_form\"] = selectedDoc.create_form;\n      updateBody[\"edit_form\"] = selectedDoc.edit_form;\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        console.log(\"updateInstructionType:\", updateBody);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"history\") {\n      if (selectedDoc !== null) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: {\n              value: \"history\"\n            },\n            docId: {\n              value: selectedDoc.id\n            }\n          }\n        };\n        console.log(\"history:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"showSystemChargeReportSelecting\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"showSystemChargeReportSelecting\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button setAccountManager: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"saveDepositor\") {\n      let doc = getFieldValuesSaveDocument();\n      let tradesBody = {\n        depositor: 0,\n        trading_systems: 1,\n        depositor_code: 0\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"saveDepositor\"\n          },\n          document: {\n            value: JSON.stringify(doc)\n          },\n          createInTrades: {\n            value: false\n          },\n          tradesBody: {\n            value: JSON.stringify(tradesBody)\n          }\n        }\n      };\n      swal({\n        text: \"Добавить депонента в торги??\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Нет\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          commandJson.variables.createInTrades.value = true;\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n          console.log(\"button saveDepositor:\", commandJson);\n        } else {\n          console.log(\"button saveDepositor: \", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        }\n      });\n    } else if (buttonName === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        // session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"UNKNOWN Button \", buttonName);\n    }\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1816,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1817,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1818,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1819,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1838,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1839,\n        columnNumber: 9\n      }\n    }, section.contents.map(contentItem => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1842,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1843,\n        columnNumber: 15\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1848,\n        columnNumber: 15\n      }\n    }, contentBuilder(contentItem))))));\n  } // Creating components by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleTextChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1863,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1896,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1909,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"BoolCustom\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleBoolCustomChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined || fieldValue[contentItem.name] === contentItem.valueFalse ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1920,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        name: contentItem.name,\n        onKeyPress: onKeyPressInt,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\",\n        onBlur: handleIntChange // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n        // onChange={handleIntChange}\n        ,\n        InputProps: {\n          inputComponent: IntegerFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1931,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Float\") {\n      // console.log(\"FLOAT VAL\", fieldValue[contentItem.name])\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressFloat,\n        name: contentItem.name // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n        ,\n        onBlur: handleFloatChange,\n        value: fieldValue[contentItem.name],\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: FloatFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1947,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressDateTime,\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1961,\n          columnNumber: 9\n        }\n      });\n    }\n  } // Key press handlers for some fields\n\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressDateTime(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressInt(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let int = parseInt(stringNum);\n          fieldValue[event.target.name] = int;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressFloat(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let float = parseFloat(stringNum);\n          fieldValue[event.target.name] = float;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name];\n    let name = contentItem.name;\n    let type = contentItem.type;\n\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2037,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label;\n                }\n\n                if (l === gridFormEnumData[i].data.length - 1 && gridFormEnumData[i].data[l].id !== parseInt(value)) {\n                  return value + \" not found\";\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2059,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"BoolCustom\") {\n      // console.log(\"ITEM\", name, value, type)\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: \"green\"\n        },\n        checked: value === contentItem.valueTrue ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2068,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2076,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"-\";\n\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\";\n        }\n\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"Введено -> На исполнении\";\n        }\n\n        if (dataItem[\"executed\"] === true) {\n          status = \"На исполнении -> Исполнено\";\n        }\n\n        if (dataItem[\"canceled\"] === true) {\n          status = \"На исполнении -> Отменено\";\n        }\n\n        return status;\n      } else {\n        if (value === null || value === \"\" || value === undefined) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            align: \"center\",\n            style: {\n              color: \"black\",\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2105,\n              columnNumber: 19\n            }\n          }, \"-\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2108,\n              columnNumber: 19\n            }\n          }, value);\n        }\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2114,\n            columnNumber: 17\n          }\n        }, \"-\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2117,\n            columnNumber: 17\n          }\n        }, value);\n      }\n    }\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1; // console.log(\"IT\", i, gridForm.sections[nextS])\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: isSearchForm === true ? 12 : 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      style: {\n        width: \"100%\",\n        \"border-collapse\": \"collapse\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2155,\n        columnNumber: 13\n      }\n    }, isSearchForm === false && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        maxHeight: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        fontSize: 16,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2158,\n        columnNumber: 19\n      }\n    }, Form.label)), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2161,\n        columnNumber: 15\n      }\n    }, Form.sections.map(section => {\n      return sectionBuilder(section);\n    }))))));\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === name) {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1;\n    }\n\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder;\n        } else {\n          let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n          let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n          var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n          return result * sortOrder;\n        }\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type));\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function calculateColSpan(contents) {\n    let num = 0;\n\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1;\n      }\n    }\n\n    return num;\n  }\n\n  function createMenuItems() {\n    let columns = [];\n    columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2255,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingLeft: 5,\n        cursor: \"pointer\"\n      },\n      name: \"selectAll\",\n      onClick: () => handleTableCheckboxChange(\"selectAll\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2256,\n        columnNumber: 9\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2263,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        maxWidth: 20,\n        height: 15,\n        color: \"green\"\n      },\n      name: \"selectAll\",\n      onChange: handleGridCheckboxChange,\n      checked: gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2264,\n        columnNumber: 11\n      }\n    }))));\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name;\n        columns.push( /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2277,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            paddingLeft: 5,\n            cursor: \"pointer\",\n            background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\"\n          },\n          name: name,\n          onClick: () => handleTableCheckboxChange(name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2278,\n            columnNumber: 13\n          }\n        }, gridForm.sections[s].contents[c].label), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2285,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          style: {\n            maxWidth: 20,\n            height: 15,\n            color: \"green\"\n          },\n          name: name,\n          onChange: handleGridCheckboxChange,\n          checked: gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined ? false : true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2286,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n\n    return columns;\n  }\n\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId));\n  }\n\n  const handleGridCheckboxChange = event => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = {\n        [event.target.name]: event.target.checked\n      };\n\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name];\n      } // console.log(\"selectAll\", newFields)\n\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [event.target.name]: event.target.checked\n      });\n    }\n  };\n\n  const handleTableCheckboxChange = name => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue\n      };\n\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name];\n      }\n\n      setGridFieldValue(newFields);\n    } else {\n      setGridFieldValue({ ...gridFieldValue,\n        [name]: !gridFieldValue[name]\n      });\n    }\n  };\n\n  const handleContextMenu = event => {\n    event.preventDefault(); // console.log(\"CONT MENU\")\n\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null); // console.log(\"CLOSE\", fieldValue)\n\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name];\n      }\n    }\n\n    console.log(\"nForm\", gridForm);\n    setGridForm(gridForm);\n    setUpdateState(getUUID());\n  };\n\n  if (updateState !== null) {\n    try {\n      return /*#__PURE__*/React.createElement(Grid, {\n        key: updateState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2349,\n          columnNumber: 9\n        }\n      }, isSearchForm !== null && isSearchForm === true ? /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2353,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2354,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        expanded: accordionExpanded,\n        onChange: () => handleExpandAccordion(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2355,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AccordionSummary, {\n        expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2357,\n            columnNumber: 33\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2356,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2359,\n          columnNumber: 21\n        }\n      }, Form.label)), /*#__PURE__*/React.createElement(AccordionDetails, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2361,\n          columnNumber: 19\n        }\n      }, getForm())))) : getForm(), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2370,\n          columnNumber: 11\n        }\n      }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n        name: button.name,\n        variant: \"outlined\",\n        onClick: () => buttonClick(button.name, null),\n        style: {\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2372,\n          columnNumber: 15\n        }\n      }, button.label))), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n        style: {\n          paddingTop: 3,\n          cursor: \"pointer\"\n        },\n        onClick: () => buttonClick(\"updateDocList\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2388,\n          columnNumber: 13\n        }\n      }), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2392,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2393,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2394,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"500px\",\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2395,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        size: \"small\",\n        class: \"main-table-style\",\n        id: gridTableId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2396,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-style\",\n        style: {\n          position: \"sticky\",\n          top: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2397,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2399,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-first-child\",\n        colSpan: \"1\",\n        onContextMenu: ev => handleContextMenu(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2400,\n          columnNumber: 27\n        }\n      }), gridForm.sections.map((section, index) => {\n        let showSection = checkToShowSection(section);\n\n        if (showSection === true) {\n          let lastSection = checkSectionOnLastChild(index);\n          return /*#__PURE__*/React.createElement(\"td\", {\n            onContextMenu: ev => handleContextMenu(ev),\n            class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n            colSpan: calculateColSpan(section.contents),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2406,\n              columnNumber: 33\n            }\n          }, section.label);\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2416,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-style-2row\",\n        rowSpan: \"2\",\n        style: {\n          \"minWidth\": \"65px\"\n        },\n        onContextMenu: ev => handleContextMenu(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2417,\n          columnNumber: 27\n        }\n      }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            rowSpan: \"2\",\n            onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n            onContextMenu: ev => handleContextMenu(ev),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2429,\n              columnNumber: 35\n            }\n          }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2436,\n              columnNumber: 100\n            }\n          }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2436,\n              columnNumber: 153\n            }\n          }) : \"\");\n        }\n      })))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2444,\n          columnNumber: 23\n        }\n      }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          \"height\": 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2447,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-style\",\n        style: {\n          \"maxWidth\": 34\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2448,\n          columnNumber: 31\n        }\n      }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n        key: button.name,\n        name: button.name,\n        variant: \"outlined\",\n        value: button.name,\n        onClick: () => buttonClick(button.name, dataItem),\n        style: {\n          margin: 1,\n          height: 24,\n          fontSize: 10,\n          maxWidth: 32,\n          backgroundColor: button.backgroundColor,\n          borderColor: \"darkgreen\",\n          color: \"darkgreen\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2454,\n          columnNumber: 37\n        }\n      }, button.label))), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: keyGen(4),\n            align: \"left\",\n            style: {\n              color: \"black\",\n              fontSize: 12,\n              \"text-align\": \"center\",\n              \"border-bottom\": \"1px solid grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2477,\n              columnNumber: 39\n            }\n          }, getGridFormItems(dataItem, contentItem));\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2490,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2491,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2492,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        style: {\n          background: \"#047535\",\n          color: \"white\",\n          height: 28\n        },\n        onClick: () => downloadExcel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2493,\n          columnNumber: 25\n        }\n      }, \"\\u0412 EXCEL\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2500,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          minWidth: 90,\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2501,\n          columnNumber: 25\n        }\n      }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2503,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        style: {\n          minWidth: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2504,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(GridSelect, {\n        onChange: handleChangeRowsPerPage,\n        style: {\n          height: 25,\n          color: \"black\"\n        },\n        value: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2508,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2513,\n          columnNumber: 29\n        }\n      }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2514,\n          columnNumber: 29\n        }\n      }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2515,\n          columnNumber: 29\n        }\n      }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2516,\n          columnNumber: 29\n        }\n      }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2517,\n          columnNumber: 29\n        }\n      }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2518,\n          columnNumber: 29\n        }\n      }, \"500\")))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2523,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2524,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowFirstClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2525,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n        style: {\n          fontSize: \"large\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2526,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2530,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2531,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowLeftClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2532,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2533,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"black\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2537,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          maxWidth: 25\n        },\n        value: page,\n        onChange: handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2538,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2540,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2541,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => GoToPage(),\n        variant: \"outlined\",\n        style: {\n          height: 22,\n          backgroundColor: \"#D1D6D6\",\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2542,\n          columnNumber: 27\n        }\n      }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2554,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2555,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowRightClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2556,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2557,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        class: \"pagination-rows-amount-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2561,\n          columnNumber: 23\n        }\n      }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount(), \" \\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList.length))), /*#__PURE__*/React.createElement(Menu, {\n        anchorEl: anchorEl,\n        open: openMenu,\n        onClose: handleCloseMenu,\n        MenuListProps: {\n          'aria-labelledby': 'basic-button'\n        },\n        style: {\n          paddingLeft: \"100px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2565,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2574,\n          columnNumber: 21\n        }\n      }, createMenuItems()))))), /*#__PURE__*/React.createElement(Snackbar, {\n        open: showSnackBar,\n        onClose: () => handleCloseSnackBar(),\n        autoHideDuration: 1200,\n        message: snackBarMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2582,\n          columnNumber: 11\n        }\n      }));\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2593,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","GridSelect","FormControl","IconButton","MenuItem","LinearProgress","Snackbar","NumberFormat","PropTypes","Tooltip","Menu","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","FirstPageIcon","ArrowForwardIosIcon","ArrowBackIosIcon","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","ArrowUpwardRoundedIcon","TextField","Select","Checkbox","swal","hotkeys","tableToExcel","generator","require","FloatFormat","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","IntegerFormat","useStyles","theme","userProfile","session_id","userTask","process_id","taskID","Form","setForm","selectedDoc","setSelectedDoc","docId","setDocId","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","gridForm","setGridForm","gridFormButtons","enumData","enumOptions","setEnumOptions","gridFormEnumData","fieldValue","setFieldValue","selectedOptions","setSelectedOptions","buttons","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","sectionColor","updateState","setUpdateState","taskType","isSearchForm","setIsSearchForm","accordionExpanded","setAccordionExpanded","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","classes","anchorEl","setAnchorEl","openMenu","Boolean","gridTableId","getUUID","gridFieldValue","setGridFieldValue","console","log","parsedData","JSON","parse","s","parseInt","p","sortedDocList","sort","dynamicSort","newSortedDocList","userRole","sd","length","partner","push","parsedSelectedDoc","filterDocList","fetchBySize","er","callErrorToast","undefined","fields","sections","c","contents","fieldName","name","newEnumOptions","i","options","d","data","id","label","getLostEnumName","newFields","show","enumI","type","event","handler","key","handleCheckboxChange","checked","updateSelectedOptions","slice","noSuchOption","countryOption","l","handleBoolCustomChange","handleIntChange","stringNum","toString","replace","int","handleFloatChange","float","parseFloat","handleTextChange","handleSelectChange","option","j","h","registrarId","registrar","e","r","registrarOption","noRegistrarOption","y","edit","handleDateTimeChange","fullDate","parseDate","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","convertedDate","handleExpandAccordion","getContentType","fetchFrom","fetchTo","Data","newDocList","Object","keys","match","contentType","searchField","toLowerCase","dataField","includeSearch","includes","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","handleCloseSnackBar","getPageAmount","pagesFloat","mathRoundOfPages","Math","round","uuidv1","keyGen","password","generate","numbers","swAllert","text","icon","ok","getFieldValuesSaveDocument","docToSave","valueTrue","valueFalse","getFieldValuesUpdateDocument","docToUpdate","checkForRequieredFields","checkedSuccessfuly","required","buttonClick","buttonName","item","commandJson","commandType","userId","variables","stringify","userAction","searchDoc","sendFieldValues","clearTabData","apiName","controller","searchFormDefId","search_form","gridFormDefId","grid_form","creatingFormDefId","creating_form","editFormDefId","edit_form","searchDocMain","updateBody","document","checkResult","checkForCode","code","isin","blocked","security_id","yes","cancel","then","click","issuer_id","docToDelete","createDocument","status","getCurrentFullDateTime","updateDocument","partnerId","manager_id","acc_manager","doc","userAct","docIdToDelete","instructionTypeDoc","create_form","newInstructionLabel","newDate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","fileDir","tradesBody","depositor","trading_systems","depositor_code","createInTrades","authorization","sectionBuilder","section","height","color","fontSize","backgroundColor","width","bodyBuilder","map","contentItem","contentBuilder","onKeyPressText","selectedOption","body","menuPortal","base","zIndex","maxWidth","onKeyPressInt","inputComponent","onKeyPressFloat","onKeyPressDateTime","shrink","charCode","getGridFormItems","dataItem","substring","Time","checkToShowSection","showSection","checkSectionOnLastChild","lastSection","nextS","getForm","maxHeight","getEnumLabel","property","sortOrder","a","b","dateA","timeInSecA","getTime","dateB","timeInSecB","result","labelA","labelB","sortDataByColumn","calculateColSpan","num","createMenuItems","columns","paddingLeft","cursor","handleTableCheckboxChange","handleGridCheckboxChange","background","downloadExcel","convert","getElementById","handleContextMenu","preventDefault","currentTarget","handleCloseMenu","button","index","margin","fontColor","paddingTop","overflow","position","top","ev","marginBottom","borderColor","minWidth"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/MainForm/MainForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport GridSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Menu from '@mui/material/Menu';\n// Accordion\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Icons\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// Form components\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select'; // https://react-select.com/home\nimport Checkbox from '@material-ui/core/Checkbox';\n// Libraries\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\nimport hotkeys from 'hotkeys-js'; // https://github.com/jaywcjlove/hotkeys\nimport tableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n// Custom components\nimport \"../../components/GridForm/GridFormCSS.css\"\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        })\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles(theme => ({\n}))\nexport default (props) => {\n  // This.state\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [docId, setDocId] = useState(props.userTask.docId)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [gridForm, setGridForm] = useState(props.userTask.gridForm)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [enumData] = useState(props.userTask.enumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [fieldValue, setFieldValue] = useState({})\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [buttons] = useState(props.userTask.buttons)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [taskType] = useState(props.userTask.taskType)\n  const [isSearchForm, setIsSearchForm] = useState(null)\n  const [accordionExpanded, setAccordionExpanded] = useState(false)\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n  const classes = useStyles()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const openMenu = Boolean(anchorEl)\n  const [gridTableId] = useState(getUUID())\n  const [gridFieldValue, setGridFieldValue] = useState({})\n\n  // Set data from props to state of component\n  useEffect(() => {\n    console.log(\"MAINFORM PROPS\", props.userTask, props.userProfile)\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        setFilteredDocList(parsedData)\n        setIsSearchForm(true)\n        setInitialDocList(parsedData)\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", -1, \"Int\"))\n        let newSortedDocList = []\n        if (props.userTask.taskType === \"showStockSecuritySearchForm\" || props.userTask.taskType === \"showStockCurrencySearchForm\") {\n          if (userProfile.userRole !== \"1\") {\n            for (let sd = 0; sd < sortedDocList.length; sd++) {\n              if (parseInt(userProfile.partner) === sortedDocList[sd].partner) {\n                newSortedDocList.push(sortedDocList[sd])\n              }\n            }\n            sortedDocList = newSortedDocList\n          }\n        }\n        if (props.userTask.selectedDoc !== \"null\") {\n          let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n          console.log(\"SHDOC\", parsedSelectedDoc)\n          filterDocList(0, s - 1, sortedDocList, parsedSelectedDoc)\n        }\n        else { fetchBySize(0, s - 1, sortedDocList) }\n      }\n      catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    else { setIsSearchForm(false) }\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      let fields = {}\n      // let Form = props.userTask.Form\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name\n          fields[fieldName] = parsedSelectedDoc[fieldName]\n        }\n      }\n      console.log(\"SDOC\", parsedSelectedDoc)\n      console.log(\"FIELDVAL\", fields)\n      setSelectedDoc(parsedSelectedDoc)\n      setFieldValue(fields)\n    }\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {}\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }]\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            })\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n    }\n    if (gridForm !== null) {\n      let newFields = {}\n      for (let s = 0; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          newFields[gridForm.sections[s].contents[c].name] = gridForm.sections[s].contents[c].show\n        }\n      }\n      setGridFieldValue(newFields)\n    }\n    setUpdateState(getUUID())\n  }, [])\n  function getLostEnumName(i) {\n    let enumI = 0\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name\n          }\n          else { enumI += 1 }\n        }\n      }\n    }\n  }\n  hotkeys('ctrl+b, enter', function (event, handler) {\n    if (handler.key === \"ctrl+b\") {\n      setAccordionExpanded(!accordionExpanded)\n    }\n  })\n  const handleCheckboxChange = (event) => {\n    console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"is_resident\") {\n      console.log(\"IS_RES\")\n      if (taskType === \"showPartnersCreatingForm\" || taskType === \"showPartnersEditForm\"\n        || taskType === \"showIssuersCreatingForm\" || taskType === \"showIssuersEditForm\") {\n        // let newFields = fieldValue\n        fieldValue[\"country\"] = 1\n        fieldValue[\"is_resident\"] = event.target.checked\n\n        var updateSelectedOptions = selectedOptions.slice()\n        let noSuchOption = true\n        let countryOption = {\n          name: \"country\",\n          value: 1,\n          label: \"Кыргызская Республика\"\n        }\n        for (let l = 0; l < updateSelectedOptions.length; l++) {\n          if (updateSelectedOptions[l].name === \"country\") {\n            updateSelectedOptions[l] = countryOption\n            setSelectedOptions(updateSelectedOptions)\n            break\n          }\n          else {\n            noSuchOption = true\n          }\n        }\n        if (noSuchOption === true) {\n          updateSelectedOptions.push(countryOption)\n          setSelectedOptions(updateSelectedOptions)\n        }\n        if (taskType === \"showIssuersCreatingForm\" || taskType === \"showIssuersEditForm\") {\n          fieldValue[\"is_not_resident\"] = false\n        }\n        console.log(\"FVAL\", fieldValue)\n        setFieldValue(fieldValue)\n      }\n    }\n    if (event.target.name === \"is_not_resident\") {\n      console.log(\"NOT_RES\")\n      fieldValue[\"is_resident\"] = false\n      fieldValue[\"is_not_resident\"] = event.target.checked\n      fieldValue[\"country\"] = null\n      setFieldValue(fieldValue)\n      console.log(\"FVAL\", fieldValue)\n    }\n    else {\n      setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked })\n    }\n    setUpdateState(getUUID())\n  }\n  const handleBoolCustomChange = (event) => {\n    console.log(\"BoolCustom\", fieldValue)\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked });\n  }\n  // Integer input handler\n  const handleIntChange = (event) => {\n    console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g, '')\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int })\n    setUpdateState(getUUID())\n  }\n  // Float input handler\n  const handleFloatChange = (event) => {\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let float = parseFloat(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: float })\n    console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  }\n  // Text input handler\n  function handleTextChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value\n    console.log(\"OPT\", option.name, option.value)\n    var updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option\n        noSuchOption = false\n        setSelectedOptions(updateSelectedOptions)\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n    if (option.name === \"issuer\" && (taskType === \"showSecuritiesCreatingForm\" || taskType === \"showSecuritiesEditForm\")) {\n      // выбран Эмитент нужно найти ргистратора и отобразить\n      for (let j = 0; j < enumData.length; j++) {\n        if (enumData[j] !== null) {\n          if (enumData[j].name === \"issuer\") {\n            for (let h = 0; h < enumData[j].data.length; h++) {\n              if (enumData[j].data[h].id === option.value) {\n                // Find registrar of issuer\n                let registrarId = enumData[j].data[h].registrar\n\n                for (let e = 0; e < enumData.length; e++) {\n                  if (enumData[e] !== null) {\n                    if (enumData[e].name === \"registrar\") {\n                      for (let r = 0; r < enumData[e].data.length; r++) {\n                        if (enumData[e].data[r].id === registrarId) {\n                          // Set registrar option \n\n                          fieldValue[\"registrar\"] = registrarId\n                          // console.log(\"ISSUER SEC\", fieldValue)\n                          let registrarOption = {\n                            value: enumData[e].data[r].id,\n                            name: \"registrar\",\n                            label: enumData[e].data[r].label\n                          }\n                          let noRegistrarOption = true\n                          for (let y = 0; y < updateSelectedOptions.length; y++) {\n                            if (updateSelectedOptions[y].name === \"registrar\") {\n                              updateSelectedOptions[y] = registrarOption\n                              noRegistrarOption = false\n                              setSelectedOptions(updateSelectedOptions)\n                              break\n                            }\n                            else {\n                              noRegistrarOption = true\n                            }\n                          }\n                          if (noRegistrarOption === true) {\n                            updateSelectedOptions.push(registrarOption)\n                            setSelectedOptions(updateSelectedOptions)\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n      }\n    }\n    if (option.name === \"payer_type\" && (taskType === \"showPaymentsForCDServicesCreatingForm\" ||\n      taskType === \"showPaymentsForCDServicesViewForm\" || taskType === \"showPaymentsForCDServicesSearchForm\")) {\n      // console.log(\"SEL\", option.name, option.value)\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          if (Form.sections[s].contents[c].name === \"depositor\") {\n            if (option.value === 1) {\n              Form.sections[s].contents[c].show = true\n              Form.sections[s].contents[c].edit = true\n              fieldValue[\"issuer\"] = null\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"issuer\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"issuer\"\n                  }\n                  setSelectedOptions(updateSelectedOptions)\n                  break\n                }\n              }\n            }\n            else {\n              Form.sections[s].contents[c].show = false\n              Form.sections[s].contents[c].edit = false\n            }\n          }\n          if (Form.sections[s].contents[c].name === \"issuer\") {\n            if (option.value === 2) {\n              Form.sections[s].contents[c].show = true\n              Form.sections[s].contents[c].edit = true\n              fieldValue[\"depositor\"] = null\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"depositor\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"depositor\"\n                  }\n                  setSelectedOptions(updateSelectedOptions)\n                  break\n                }\n              }\n            }\n            else {\n              Form.sections[s].contents[c].show = false\n              Form.sections[s].contents[c].edit = false\n            }\n          }\n        }\n      }\n      setForm(Form)\n\n      // console.log(\"NEW ENUMS\")\n    }\n    else if (option.name === \"recipient_type\" && (\n      taskType === \"showTransitChargeForCDServicesSearchForm\" ||\n      taskType === \"showTransitChargeForCDServicesCreatingForm\" ||\n      taskType === \"showTransitChargeForCDServicesEditForm\" ||\n      taskType === \"showTransitPaymentsForCDServicesSearchForm\" ||\n      taskType === \"showTransitPaymentsForCDServicesCreatingForm\" ||\n      taskType === \"showTransitPaymentsForCDServicesEditForm\")) {\n      // console.log(\"RECIPIENT\", option.name, option.value, fieldValue)\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          if (Form.sections[s].contents[c].name === \"registrar\") {\n            if (option.value === 1) {\n              Form.sections[s].contents[c].show = true\n              Form.sections[s].contents[c].edit = true\n              fieldValue[\"corr_depository\"] = null\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"corr_depository\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"corr_depository\"\n                  }\n                  setSelectedOptions(updateSelectedOptions)\n                  break\n                }\n              }\n            }\n            else {\n              Form.sections[s].contents[c].show = false\n              Form.sections[s].contents[c].edit = false\n            }\n          }\n          if (Form.sections[s].contents[c].name === \"corr_depository\") {\n            if (option.value === 2) {\n              Form.sections[s].contents[c].show = true\n              Form.sections[s].contents[c].edit = true\n              fieldValue[\"registrar\"] = null\n              for (let i = 0; i < updateSelectedOptions.length; i++) {\n                if (updateSelectedOptions[i].name === \"registrar\") {\n                  updateSelectedOptions[i] = {\n                    \"value\": \"\",\n                    \"label\": \"Пусто\",\n                    \"name\": \"registrar\"\n                  }\n                  setSelectedOptions(updateSelectedOptions)\n                  break\n                }\n              }\n            }\n            else {\n              Form.sections[s].contents[c].show = false\n              Form.sections[s].contents[c].edit = false\n            }\n          }\n        }\n      }\n      setForm(Form)\n      // console.log(\"NEW ENUMS\")\n    }\n  }\n  function handleDateTimeChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    let fullDate = props.parseDate(event.target.value)\n    var hours = new Date().getHours()\n    var minutes = new Date().getMinutes()\n    var seconds = new Date().getSeconds()\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\"\n    fieldValue[event.target.name] = convertedDate\n    setFieldValue(fieldValue)\n    // console.log(\"DATE CHANGE\", event.target.value)\n  }\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded)\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  // filter docList by filled parameters\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    console.log(\"FILTER\", fields)\n    var newDocList = []\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data\n    }\n    else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true\n          }\n          else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key)\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                catch (er) {\n                  console.log(\"ERR TEXT SEARCH\", er, Data[i][key])\n                  match = true\n                }\n              }\n              else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if (includeSearch === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n                else { match = true }\n              }\n              else if (contentType === \"Enum\") {\n\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n              else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if (searchField === \"NaN-NaN-NaN\" || searchField === \"Invalid date\") {\n                  match = true\n                }\n                else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true\n                  }\n                  else {\n                    match = false\n                    break\n                  }\n                }\n              }\n              else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true\n                }\n                else {\n                  match = false\n                  break\n                }\n              }\n            }\n            else {\n              match = false\n              break\n            }\n          }\n        }\n        if (match === true) {\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered docList by size\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = []\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i])\n      }\n    }\n    setFilteredDocList(Data)\n    setDocList(newDocList)\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1)\n      fetchBySize(0, size - 1, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage - 1) * size) //10\n      let fetchTo = (size * prevPage) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else {\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    }\n    else {\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size) - 1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n\n  }\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value - 1, filteredDocList)\n  }\n  function GoToPage() {\n    let fetchFrom = (page * size - 1) - size\n    let fetchTo = page * size - 1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event) {\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar() {\n    setShowSnackBar(false)\n  }\n  function getPageAmount() {\n    let pagesFloat = (filteredDocList.length) / size\n    let mathRoundOfPages = Math.round(pagesFloat)\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1\n    }\n    else {\n      return mathRoundOfPages\n    }\n  }\n  // random UUID generator\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // random numbers generator\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function swAllert(text, icon) {\n    return (\n      swal({\n        text: text,\n        icon: icon,\n        buttons: { ok: \"Ок\" },\n      })\n    )\n  }\n  // Collect data to save doc\n  function getFieldValuesSaveDocument() {\n    let docToSave = {}\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined) {\n          docToSave[fieldName] = false\n        }\n        else if (Form.sections[s].contents[c].type === \"BoolCustom\") {\n          if (fieldValue[fieldName] === true || fieldValue[fieldName] === Form.sections[s].contents[c].valueTrue) {\n            docToSave[fieldName] = Form.sections[s].contents[c].valueTrue\n          }\n          else {\n            docToSave[fieldName] = Form.sections[s].contents[c].valueFalse\n          }\n        }\n        else {\n          docToSave[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToSave\n  }\n  // Collect data to update doc\n  function getFieldValuesUpdateDocument() {\n    let docToUpdate = selectedDoc\n    // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = parseInt(docId)\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false\n        }\n        else if (Form.sections[s].contents[c].type === \"BoolCustom\") {\n          // console.log(\"BOOLCUST\", fieldName, fieldValue[fieldName])\n          if (fieldValue[fieldName] === true || fieldValue[fieldName] === Form.sections[s].contents[c].valueTrue) {\n            docToUpdate[fieldName] = Form.sections[s].contents[c].valueTrue\n          }\n          else {\n            docToUpdate[fieldName] = Form.sections[s].contents[c].valueFalse\n          }\n        }\n        else {\n          docToUpdate[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToUpdate\n  }\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = null\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name\n        if (Form.sections[s].contents[c].required === true) {\n          if (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null ||\n            fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName] === \"\") {\n            checkedSuccessfuly = false\n            swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\", \"warning\")\n            return checkedSuccessfuly\n          }\n          else {\n            checkedSuccessfuly = true\n          }\n        }\n        else {\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  function buttonClick(buttonName, item) {\n    if (buttonName === \"findDocument\") {\n      // console.log(\"findDocument\")\n      filterDocList(0, size - 1, initialDocList, fieldValue)\n    }\n    else if (buttonName === \"openDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: { value: JSON.stringify(item) },\n          userAction: { value: \"openDocument\" },\n          docId: { value: item.id },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button openDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"editDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"editDocument\" }\n        }\n      }\n      console.log(\"button editDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"openReferenceDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          apiName: { value: item.controller },\n          userAction: { value: \"openReferenceDocument\" },\n          searchFormDefId: { value: item.search_form },\n          gridFormDefId: { value: item.grid_form },\n          creatingFormDefId: { value: item.creating_form },\n          editFormDefId: { value: item.edit_form },\n          searchDocMain: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button openReferenceDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocument\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"updateDocument:\", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"createDocument\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"createDocument\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"createDocument:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"saveDocument\") {\n      let docToSave = getFieldValuesSaveDocument()\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"saveDocument\" },\n          document: { value: JSON.stringify(docToSave) }\n        }\n      }\n      console.log(\"saveDocument:\", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"saveSecurity\") {\n      let checkForCode = null\n      let docToSave = getFieldValuesSaveDocument()\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"securities\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].code === fieldValue[\"code\"]) {\n              checkForCode = false\n              swAllert(\"ЦБ с таким кодом уже существует\", \"warning\")\n              break\n            }\n            if (d === enumData[i].data.length - 1 && enumData[i].data[d].isin !== fieldValue[\"code\"]) {\n              checkForCode = true\n            }\n          }\n        }\n      }\n      let checkResult = checkForRequieredFields()\n      console.log(\"CODE\", checkForCode)\n      if (checkForCode !== null && checkForCode !== false) {\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: { value: \"saveDocument\" },\n            document: { value: JSON.stringify(docToSave) }\n          }\n        }\n        console.log(\"saveSecurity:\", commandJson)\n        if (checkResult === true) {\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n      }\n    }\n    else if (buttonName === \"blockSecurity\") {\n      if (selectedDoc.blocked !== true) {\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: { value: \"blockSecurity\" },\n            security_id: { value: selectedDoc.id }\n          }\n        }\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно Заблокировать выпуск ЦБ?\",\n          icon: \"warning\",\n          buttons: { yes: \"Да\", cancel: \"Отмена\" },\n        })\n          .then((click) => {\n            if (click === \"yes\") {\n              console.log(\"blockSecurity:\", commandJson)\n              props.sendFieldValues(commandJson)\n              props.clearTabData(process_id)\n            }\n          })\n      }\n      else {\n        swAllert(\"ЦБ уже заблокирована!\", \"warning\")\n      }\n    }\n    else if (buttonName === \"unblockSecurity\") {\n      if (selectedDoc.blocked === true) {\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: { value: \"unblockSecurity\" },\n            security_id: { value: selectedDoc.id }\n          }\n        }\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно разблокировать выпуск ЦБ?\",\n          icon: \"warning\",\n          buttons: { yes: \"Да\", cancel: \"Отмена\" },\n        })\n          .then((click) => {\n            if (click === \"yes\") {\n              console.log(\"unblockSecurity:\", commandJson)\n              props.sendFieldValues(commandJson)\n              props.clearTabData(process_id)\n            }\n          })\n      }\n      else {\n        swAllert(\"ЦБ не была блокирована ранее!\", \"warning\")\n      }\n    }\n    else if (buttonName === \"blockIssuerSecurities\") {\n      if (selectedDoc.blocked !== true) {\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: { value: \"blockIssuerSecurities\" },\n            issuer_id: { value: selectedDoc.id }\n          }\n        }\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно Заблокировать ЦБ эмитента?\",\n          icon: \"warning\",\n          buttons: { yes: \"Да\", cancel: \"Отмена\" },\n        })\n          .then((click) => {\n            if (click === \"yes\") {\n              console.log(\"blockIssuerSecurities:\", commandJson)\n              props.sendFieldValues(commandJson)\n              props.clearTabData(process_id)\n            }\n          })\n      }\n      else {\n        swAllert(\"ЦБ эмитента уже заблокированы!\", \"warning\")\n      }\n    }\n    else if (buttonName === \"unblockIssuerSecurities\") {\n      if (selectedDoc.blocked === true) {\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: { value: \"unblockIssuerSecurities\" },\n            issuer_id: { value: selectedDoc.id }\n          }\n        }\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно Разблокировать ЦБ эмитента?\",\n          icon: \"warning\",\n          buttons: { yes: \"Да\", cancel: \"Отмена\" },\n        })\n          .then((click) => {\n            if (click === \"yes\") {\n              console.log(\"unblockIssuerSecurities:\", commandJson)\n              props.sendFieldValues(commandJson)\n              props.clearTabData(process_id)\n            }\n          })\n      }\n      else {\n        swAllert(\"ЦБ эмитента не были блокированы ранее!\", \"warning\")\n      }\n    }\n    else if (buttonName === \"deleteDocument\") {\n      let docToDelete = selectedDoc.id\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"deleteDocument\" },\n          document: { value: docToDelete.toString() }\n        }\n      }\n      console.log(\"deleteDocument:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно удалить данную запись?\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n          }\n        })\n    }\n    else if (buttonName === \"savePartnerContact\") {\n      let docToSave = getFieldValuesSaveDocument()\n      docToSave[\"partner\"] = docId\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"saveDocument\" },\n          document: { value: JSON.stringify(docToSave) }\n        }\n      }\n      console.log(\"saveDocument:\", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"saveAccount\") {\n      const createDocument = getFieldValuesSaveDocument()\n      if (fieldValue[\"account_type\"] === 3001 || fieldValue[\"account_type\"] === 3101 || fieldValue[\"account_type\"] === 3301) {\n        createDocument[\"accnumber\"] = \"1-\" + fieldValue[\"account_type\"] + \"-\" + fieldValue[\"partner\"]\n      }\n      else {\n        for (let i = 0; i < enumData.length; i++) {\n          if (enumData[i].name === \"account_type\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].id === fieldValue[\"account_type\"]) {\n                createDocument[\"accnumber\"] = enumData[i].data[d].status + \"-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n              }\n            }\n          }\n        }\n      }\n      // for(let i=0; i<enumData.length; i++){\n      //   if(enumData[i].name === \"account_type\"){\n      //     for(let d=0; d<enumData[i].data.length; d++){\n      //       if(enumData[i].data[d].id === fieldValue[\"account_type\"]){\n      //         if(fieldValue[\"istrading_account\"] === true){\n      //           createDocument[\"accnumber\"] = \"1-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n      //         }\n      //         else{\n      //           createDocument[\"accnumber\"] = enumData[i].data[d].status + \"-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n      //         }\n      //         // createDocument[\"account_type\"] = enumData[i].data[d].code\n      //       }\n      //     }\n      //   }\n      // }\n      createDocument[\"isactive\"] = true\n      createDocument[\"isclosed\"] = false\n      createDocument[\"dateopen\"] = props.getCurrentFullDateTime()\n\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"saveAccount\" },\n          document: { value: JSON.stringify(createDocument) },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole }\n        }\n      }\n      console.log(\"button saveAccount: \", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"updateAccount\") {\n      const updateDocument = getFieldValuesUpdateDocument()\n      if (fieldValue[\"account_type\"] === 3001 || fieldValue[\"account_type\"] === 3101 || fieldValue[\"account_type\"] === 3301) {\n        updateDocument[\"accnumber\"] = \"1-\" + fieldValue[\"account_type\"] + \"-\" + fieldValue[\"partner\"]\n      }\n      else {\n        for (let i = 0; i < enumData.length; i++) {\n          if (enumData[i].name === \"account_type\") {\n            for (let d = 0; d < enumData[i].data.length; d++) {\n              if (enumData[i].data[d].id === fieldValue[\"account_type\"]) {\n                updateDocument[\"accnumber\"] = enumData[i].data[d].status + \"-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n              }\n            }\n          }\n        }\n      }\n      // for(let i=0; i<enumData.length; i++){\n      //   if(enumData[i].name === \"account_type\"){\n      //     for(let d=0; d<enumData[i].data.length; d++){\n      //       if(enumData[i].data[d].id === fieldValue[\"account_type\"]){\n      //         if(fieldValue[\"istrading_account\"] === true){\n      //           updateDocument[\"accnumber\"] = \"1-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n      //         }\n      //         else{\n      //           updateDocument[\"accnumber\"] = enumData[i].data[d].status + \"-\" + enumData[i].data[d].code + \"-\" + fieldValue[\"partner\"]\n      //         }\n      //       }\n      //     }\n      //   }\n      // }\n\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateAccount\" },\n          document: { value: JSON.stringify(updateDocument) },\n          selectedDoc: { value: JSON.stringify(updateDocument) },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole }\n        }\n      }\n      console.log(\"button updateAccount: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"saveAccountGIK\") {\n      const createDocument = getFieldValuesSaveDocument()\n      for (let i = 0; i < enumData.length; i++) {\n        if (enumData[i].name === \"acc_type\") {\n          for (let d = 0; d < enumData[i].data.length; d++) {\n            if (enumData[i].data[d].id === fieldValue[\"acc_type\"]) {\n              createDocument[\"acc_number\"] = enumData[i].data[d].label + \"-\" + fieldValue[\"depositor\"]\n            }\n          }\n        }\n      }\n      createDocument[\"is_active\"] = true\n      createDocument[\"is_closed\"] = false\n      createDocument[\"open_date\"] = props.getCurrentFullDateTime()\n\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"saveAccountGIK\" },\n          document: { value: JSON.stringify(createDocument) },\n          userId: { value: userProfile.userId },\n          userRole: { value: userProfile.userRole }\n        }\n      }\n      console.log(\"button saveInstruction: \", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"blockAccount\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody[\"isactive\"] = false\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"blockAccount\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"blockAccount:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите заблокировать данный счет?\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n            // swAllert(\"Данные успешно обновлены!\", \"success\")\n          }\n        })\n\n    }\n    else if (buttonName === \"blockAccountGIK\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody[\"is_active\"] = false\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"blockAccountGIK\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"blockAccountGIK:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите заблокировать данный счет?\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n            // swAllert(\"Данные успешно обновлены!\", \"success\")\n          }\n        })\n\n    }\n    else if (buttonName === \"unblockAccount\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody[\"isactive\"] = true\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"unblockAccount\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"unblockAccount:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите разблокировать данный счет?\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n          }\n        })\n    }\n    else if (buttonName === \"unblockAccountGIK\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody[\"is_active\"] = true\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"unblockAccountGIK\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"unblockAccountGIK:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите разблокировать данный счет?\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n            // swAllert(\"Данные успешно обновлены!\", \"success\")\n          }\n        })\n\n    }\n    else if (buttonName === \"closeAccount\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody[\"isclosed\"] = null\n      // updateBody[\"isactive\"] = false\n      updateBody[\"deleted\"] = true\n      updateBody[\"dateclosed\"] = props.getCurrentFullDateTime()\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"closeAccount\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"closeAccount:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите ЗАКРЫТЬ данный счет? Данную операцию невозможно отменить\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n            // swAllert(\"Данные успешно обновлены!\", \"success\")\n          }\n        })\n\n    }\n    else if (buttonName === \"closeAccountGIK\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody[\"is_closed\"] = true\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"closeAccountGIK\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"closeAccountGIK:\", commandJson)\n      swal({\n        text: \"ВНИМАНИЕ! Вы действительно хотите ЗАКРЫТЬ данный счет? Данную операцию невозможно отменить\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Отмена\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n            // swAllert(\"Данные успешно обновлены!\", \"success\")\n          }\n        })\n\n    }\n    else if (buttonName === \"contacs\") {\n      // console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"contacs\" },\n          partnerId: { value: docId }\n        }\n      }\n      console.log(\"button contacs: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"setAccountManager\") {\n      console.log(\"ITEM\", item)\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"setAccountManager\" },\n          manager_id: { value: selectedDoc.acc_manager }\n        }\n      }\n      console.log(\"button setAccountManager: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"saveAccountManager\") {\n      let doc = null\n      let userAct = \"updateAccountManager\"\n      if (selectedDoc === null) {\n        userAct = \"createAccountManager\"\n        doc = getFieldValuesSaveDocument()\n      }\n      else {\n        doc = getFieldValuesUpdateDocument()\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: userAct },\n          document: { value: JSON.stringify(doc) }\n        }\n      }\n      console.log(\"button createUpdateACCManager: \", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"deleteAccountManager\") {\n      if (selectedDoc !== null) {\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: { value: \"deleteAccountManager\" },\n            docIdToDelete: { value: selectedDoc.id.toString() }\n          }\n        }\n        console.log(\"deleteAccountManager:\", commandJson)\n        swal({\n          text: \"ВНИМАНИЕ! Вы действительно хотите снять управляющего?\",\n          icon: \"warning\",\n          buttons: { yes: \"Да\", cancel: \"Отмена\" },\n        })\n          .then((click) => {\n            if (click === \"yes\") {\n              props.sendFieldValues(commandJson)\n              props.clearTabData(process_id)\n              // swAllert(\"Данные успешно обновлены!\", \"success\")\n            }\n          })\n      }\n    }\n    else if (buttonName === \"showInstructionTypeCreatingForm\") {\n      let instructionTypeDoc = getFieldValuesSaveDocument()\n      instructionTypeDoc.create_form = \"\"\n      instructionTypeDoc.edit_form = \"\"\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"showInstructionTypeCreatingForm\" },\n          instructionTypeDoc: { value: JSON.stringify(instructionTypeDoc) },\n          newInstructionLabel: { value: fieldValue[\"name\"] }\n        }\n      }\n      console.log(\"showInstructionTypeCreatingForm:\", commandJson)\n      props.sendFieldValues(commandJson)\n    }\n    else if (buttonName === \"updatePartnerContacts\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody[\"partner\"] = selectedDoc.partner\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      console.log(\"updateDocument:\", commandJson)\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"getFiles\") {\n      if (fieldValue[\"date\"] !== undefined && fieldValue[\"date\"] !== \"NaN.NaN.NaN\") {\n        let newDate = new Date(fieldValue[\"date\"]) // \"2020-01-26\"\n        let dd = String(newDate.getDate()).padStart(2, '0')\n        let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n        let yyyy = newDate.getFullYear()\n        let fileDir = dd + mm + yyyy\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: { value: \"getFiles\" },\n            selectedDoc: { value: fileDir }\n          }\n        }\n        console.log(\"getFiles:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n      else { swAllert(\"Введите дату\", \"warning\") }\n    }\n    else if (buttonName === \"updateInstructionType\") {\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody[\"create_form\"] = selectedDoc.create_form\n      updateBody[\"edit_form\"] = selectedDoc.edit_form\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"updateDocument\" },\n          document: { value: JSON.stringify(updateBody) }\n        }\n      }\n      let checkResult = checkForRequieredFields()\n      if (checkResult === true) {\n        console.log(\"updateInstructionType:\", updateBody)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n\n    }\n    else if (buttonName === \"history\") {\n      if (selectedDoc !== null) {\n        let commandJson =\n        {\n          commandType: \"completeTask\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          variables: {\n            userAction: { value: \"history\" },\n            docId: { value: selectedDoc.id }\n          }\n        }\n        console.log(\"history:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if (buttonName === \"showSystemChargeReportSelecting\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"showSystemChargeReportSelecting\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button setAccountManager: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"saveDepositor\") {\n      let doc = getFieldValuesSaveDocument()\n      let tradesBody = {\n        depositor: 0,\n        trading_systems: 1,\n        depositor_code: 0\n      }\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"saveDepositor\" },\n          document: { value: JSON.stringify(doc) },\n          createInTrades: { value: false },\n          tradesBody: { value: JSON.stringify(tradesBody) }\n        }\n      }\n      swal({\n        text: \"Добавить депонента в торги??\",\n        icon: \"warning\",\n        buttons: { yes: \"Да\", cancel: \"Нет\" },\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            commandJson.variables.createInTrades.value = true\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n            console.log(\"button saveDepositor:\", commandJson)\n          }\n          else {\n            console.log(\"button saveDepositor: \", commandJson)\n            props.sendFieldValues(commandJson)\n            props.clearTabData(process_id)\n          }\n        })\n    }\n    else if (buttonName === \"back\") {\n      let commandJson =\n      {\n        commandType: \"completeTask\",\n        // session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: { value: \"back\" },\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"cancel\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: { value: \"token\" },\n          userAction: { value: \"cancel\" },\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"updateDocList\") {\n      const commandJson =\n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: { value: \"updateDocList\" },\n          searchDoc: { value: JSON.stringify(fieldValue) }\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else {\n      console.log(\"UNKNOWN Button \", buttonName)\n    }\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section) {\n    return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow style={{ height: 30 }}>\n            <TableCell\n              style={{\n                color: \"black\",\n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n              {section.label}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section) {\n\n    return (\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map(contentItem => (\n            contentItem.show === true &&\n            <TableRow style={{ height: 30 }}>\n              <TableCell\n                align=\"left\"\n                style={{ width: \"40%\" }}>\n                {contentItem.label}\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                style={{ width: \"60%\", height: 30 }}\n              >{contentBuilder(contentItem)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n  // Creating components by it's type\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur={handleTextChange}\n          name={contentItem.name}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue={(fieldValue[contentItem.name]) ? fieldValue[contentItem.name] : \"\"}\n        />\n      )\n    }\n    else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      }\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name={contentItem.name}\n          value={selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Bool\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined) ? false : true}\n        />\n      )\n    }\n    else if (contentItem.type === \"BoolCustom\") {\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\n          name={contentItem.name}\n          onChange={handleBoolCustomChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked={(fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined || fieldValue[contentItem.name] === contentItem.valueFalse) ? false : true}\n        />\n      )\n    }\n    else if (contentItem.type === \"Int\") {\n      return (\n        <TextField\n          name={contentItem.name}\n          onKeyPress={onKeyPressInt}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          onBlur={handleIntChange}\n          // value={(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name] : \"\"}\n          // onChange={handleIntChange}\n          InputProps={{ inputComponent: IntegerFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"Float\") {\n      // console.log(\"FLOAT VAL\", fieldValue[contentItem.name])\n      return (\n        <TextField\n          onKeyPress={onKeyPressFloat}\n          name={contentItem.name}\n          // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n          onBlur={handleFloatChange}\n          value={fieldValue[contentItem.name]}\n          style={{ width: \"100%\" }}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{ inputComponent: FloatFormat }}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\") {\n      return (\n        <TextField\n          onKeyPress={onKeyPressDateTime}\n          type=\"date\"\n          name={contentItem.name}\n          onBlur={handleDateTimeChange}\n          style={{ width: \"100%\" }}\n          defaultValue={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]) : \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n  }\n  // Key press handlers for some fields\n  function onKeyPressText(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleTextChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressDateTime(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressInt(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let int = parseInt(stringNum)\n          fieldValue[event.target.name] = int\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressFloat(event) {\n    let code = event.charCode\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '')\n          let float = parseFloat(stringNum)\n          fieldValue[event.target.name] = float\n          setFieldValue(fieldValue)\n          filterDocList(0, size - 1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  // Create grid form components\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name]\n    let name = contentItem.name\n    let type = contentItem.type\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label\n                }\n                if (l === gridFormEnumData[i].data.length - 1 && gridFormEnumData[i].data[l].id !== parseInt(value)) {\n                  return value + \" not found\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\" }}\n          checked={(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if (type === \"BoolCustom\") {\n      // console.log(\"ITEM\", name, value, type)\n      return (\n        <Checkbox\n          style={{ maxWidth: 20, height: 15, color: \"green\" }}\n          checked={(value === contentItem.valueTrue) ? true : false}\n        />\n      )\n    }\n    else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"-\"\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\"\n        }\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"Введено -> На исполнении\"\n        }\n        if (dataItem[\"executed\"] === true) {\n          status = \"На исполнении -> Исполнено\"\n        }\n        if (dataItem[\"canceled\"] === true) {\n          status = \"На исполнении -> Отменено\"\n        }\n        return status\n      }\n      else {\n        if (value === null || value === \"\" || value === undefined) {\n          return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n        }\n        else {\n          return (<td>{value}</td>)\n        }\n      }\n    }\n    else {\n      if (value === null || value === \"\" || value === undefined) {\n        return (<td align=\"center\" style={{ color: \"black\", fontSize: 12 }}>-</td>)\n      }\n      else {\n        return (<td>{value}</td>)\n      }\n    }\n  }\n  function checkToShowSection(section) {\n    let showSection = false\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true\n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i) {\n    let lastSection = true\n    if (i === gridForm.sections.length - 1) { // The last section\n      return true\n    }\n    else {\n      let nextS = i + 1\n      // console.log(\"IT\", i, gridForm.sections[nextS])\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) { // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n  function getForm() {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n        <Grid item xs={isSearchForm === true ? 12 : 8}>\n          <Paper>\n            <Table style={{ width: \"100%\", \"border-collapse\": \"collapse\" }}>\n              {isSearchForm === false &&\n                <TableRow style={{ maxHeight: 25 }}>\n                  <TableCell style={{ fontSize: 16, color: \"black\" }}>{Form.label}</TableCell>\n                </TableRow>\n              }\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {Form.sections.map(section => {\n                  return sectionBuilder(section)\n                })}\n              </Grid>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === name) {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1\n    }\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA = dateA.getTime() / 1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB = dateB.getTime() / 1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else {\n          if (a[property] === null) {\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n    else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder\n        }\n        else {\n          let labelA = getEnumLabel(property, a[property])\n          // console.log(\"A\", property, a[property], labelA)\n          let labelB = getEnumLabel(property, b[property])\n          // console.log(\"labelB\", labelB, property, b)\n          var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n          return result * sortOrder\n        }\n      }\n    }\n  }\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size - 1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function calculateColSpan(contents) {\n    let num = 0\n    for (let i = 0; i < contents.length; i++) {\n      if (contents[i].show === true) {\n        num += 1\n      }\n    }\n    return num\n  }\n  function createMenuItems() {\n    let columns = []\n    columns.push(\n      <tr>\n        <td\n          style={{ paddingLeft: 5, cursor: \"pointer\" }}\n          name={\"selectAll\"}\n          onClick={() => handleTableCheckboxChange(\"selectAll\")}\n        >\n          Выбрать все\n        </td>\n        <td>\n          <Checkbox\n            style={{ maxWidth: 20, height: 15, color: \"green\" }}\n            name={\"selectAll\"}\n            onChange={handleGridCheckboxChange}\n            checked={(gridFieldValue[\"selectAll\"] === false || gridFieldValue[\"selectAll\"] === null || gridFieldValue[\"selectAll\"] === undefined) ? false : true}\n          />\n        </td>\n      </tr>\n    )\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        let name = gridForm.sections[s].contents[c].name\n        columns.push(\n          <tr>\n            <td\n              style={{ paddingLeft: 5, cursor: \"pointer\", background: gridFieldValue[name] === true ? \"#E2E2E2\" : \"white\" }}\n              name={name}\n              onClick={() => handleTableCheckboxChange(name)}\n            >\n              {gridForm.sections[s].contents[c].label}\n            </td>\n            <td>\n              <Checkbox\n                style={{ maxWidth: 20, height: 15, color: \"green\" }}\n                name={name}\n                onChange={handleGridCheckboxChange}\n                checked={(gridFieldValue[name] === false || gridFieldValue[name] === null || gridFieldValue[name] === undefined) ? false : true}\n              />\n            </td>\n          </tr>\n        )\n      }\n    }\n    return columns\n  }\n  function downloadExcel() {\n    tableToExcel.convert(document.getElementById(gridTableId))\n  }\n  const handleGridCheckboxChange = (event) => {\n    // console.log(\"CHBX\", event.target.name, event.target.checked)\n    if (event.target.name === \"selectAll\") {\n      let newFields = { [event.target.name]: event.target.checked }\n      for (let key in gridFieldValue) {\n        newFields[key] = !gridFieldValue[event.target.name]\n      }\n      // console.log(\"selectAll\", newFields)\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [event.target.name]: event.target.checked })\n    }\n  }\n  const handleTableCheckboxChange = (name) => {\n    // console.log(\"TD CHBX\", name)\n    if (name === \"selectAll\") {\n      let newFields = { ...gridFieldValue }\n      for (let key in newFields) {\n        newFields[key] = !gridFieldValue[name]\n      }\n      setGridFieldValue(newFields)\n    }\n    else {\n      setGridFieldValue({ ...gridFieldValue, [name]: !gridFieldValue[name] })\n    }\n  }\n  const handleContextMenu = (event) => {\n    event.preventDefault()\n    // console.log(\"CONT MENU\")\n    setAnchorEl(event.currentTarget)\n  }\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n    // console.log(\"CLOSE\", fieldValue)\n    for (let s = 0; s < gridForm.sections.length; s++) {\n      for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n        gridForm.sections[s].contents[c].show = gridFieldValue[gridForm.sections[s].contents[c].name]\n      }\n    }\n    console.log(\"nForm\", gridForm)\n    setGridForm(gridForm)\n    setUpdateState(getUUID())\n  }\n  if (updateState !== null) {\n    try {\n      return (\n        <Grid key={updateState}>\n          {isSearchForm !== null &&\n            isSearchForm === true\n            ?\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n              <Grid item xs={11}>\n                <Accordion expanded={accordionExpanded} onChange={() => handleExpandAccordion()}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                  >\n                    <Typography>{Form.label}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    {getForm()}\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n            </Grid>\n            :\n            getForm()\n          }\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            {buttons.map((button, index) => (\n              <Button\n                name={button.name}\n                variant=\"outlined\"\n                onClick={() => buttonClick(button.name, null)}\n                style={{\n                  margin: 3,\n                  color: button.fontColor,\n                  backgroundColor: button.backgroundColor,\n                  height: 32,\n                  fontSize: 12\n                }}\n              >{button.label}\n              </Button>\n            ))}\n          </Grid>\n          {isSearchForm === true &&\n            <ReplayIcon style={{ paddingTop: 3, cursor: \"pointer\" }} onClick={() => buttonClick(\"updateDocList\")} />\n          }\n          {/* Create grid table with data from doclist */}\n          {docList !== null &&\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n              <Grid item sm={\"auto\"}>\n                <Paper>\n                  <div style={{ height: \"500px\", overflow: \"auto\" }}>\n                    <table size=\"small\" class=\"main-table-style\" id={gridTableId}>\n                      <thead class=\"thead-style\" style={{ position: \"sticky\", top: 0 }}>\n                        {/* 1st Row Sections Labels */}\n                        <tr>\n                          <td class=\"td-head-first-child\" colSpan=\"1\" onContextMenu={(ev) => handleContextMenu(ev)}></td>\n                          {gridForm.sections.map((section, index) => {\n                            let showSection = checkToShowSection(section)\n                            if (showSection === true) {\n                              let lastSection = checkSectionOnLastChild(index)\n                              return (\n                                <td\n                                  onContextMenu={(ev) => handleContextMenu(ev)}\n                                  class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                  colSpan={calculateColSpan(section.contents)}\n                                >{section.label}</td>\n                              )\n                            }\n                          })}\n                        </tr>\n                        {/* 2nd Row Sections Contents labels */}\n                        <tr>\n                          <td\n                            class=\"td-head-style-2row\"\n                            rowSpan=\"2\"\n                            style={{ \"minWidth\": \"65px\" }}\n                            onContextMenu={(ev) => handleContextMenu(ev)}\n                          >\n                            Действие\n                          </td>\n                          {gridForm.sections.map(section =>\n                            section.contents.map(contentItem => {\n                              if (contentItem.show === true) {\n                                return (\n                                  <td\n                                    class=\"td-head-style-2row\"\n                                    rowSpan=\"2\"\n                                    onClick={() => sortDataByColumn(contentItem.name, contentItem.type)}\n                                    onContextMenu={(ev) => handleContextMenu(ev)}\n                                  >\n                                    {contentItem.label}\n                                    {sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{ marginBottom: -8 }} /> : <ArrowDropUpIcon style={{ marginBottom: -8 }} /> : \"\"}\n                                  </td>\n                                )\n                              }\n                            })\n                          )}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.keys(docList).length !== 0 &&\n                          docList.map(dataItem => (\n                            <tr style={{ \"height\": 30 }}>\n                              <td\n                                class=\"td-style\"\n                                style={{ \"maxWidth\": 34 }}\n                              >\n                                {gridFormButtons !== \"null\" &&\n                                  gridFormButtons.map(button =>\n                                    <Button\n                                      key={button.name}\n                                      name={button.name}\n                                      variant=\"outlined\"\n                                      value={button.name}\n                                      onClick={() => buttonClick(button.name, dataItem)}\n                                      style={{\n                                        margin: 1,\n                                        height: 24,\n                                        fontSize: 10,\n                                        maxWidth: 32,\n                                        backgroundColor: button.backgroundColor,\n                                        borderColor: \"darkgreen\",\n                                        color: \"darkgreen\"\n                                      }}\n                                    >{button.label}\n                                    </Button>\n                                  )}\n                              </td>\n                              {gridForm.sections.map(section => (\n                                section.contents.map(contentItem => {\n                                  if (contentItem.show === true) {\n                                    return (\n                                      <td key={keyGen(4)} align=\"left\" style={{ color: \"black\", fontSize: 12, \"text-align\": \"center\", \"border-bottom\": \"1px solid grey\" }}>\n                                        {getGridFormItems(dataItem, contentItem)}\n                                      </td>\n                                    )\n                                  }\n                                })\n                              ))}\n                            </tr>\n                          )\n                          )}\n                      </tbody>\n                    </table>\n                  </div>\n                  <tfoot>\n                    <tr>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <Button\n                          variant=\"outlined\"\n                          style={{ background: \"#047535\", color: \"white\", height: 28 }}\n                          onClick={() => downloadExcel()}\n                        >В EXCEL\n                        </Button>\n                      </td>\n                      <td style={{ paddingLeft: \"20px\" }}>\n                        <div style={{ minWidth: 90, color: \"black\" }}>Кол-во записей</div>\n                      </td>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <FormControl\n                          variant=\"outlined\"\n                          style={{ minWidth: 30 }}\n                        >\n                          <GridSelect\n                            onChange={handleChangeRowsPerPage}\n                            style={{ height: 25, color: \"black\" }}\n                            value={size}\n                          >\n                            <MenuItem value={10}>10</MenuItem>\n                            <MenuItem value={20}>20</MenuItem>\n                            <MenuItem value={50}>50</MenuItem>\n                            <MenuItem value={100}>100</MenuItem>\n                            <MenuItem value={200}>200</MenuItem>\n                            <MenuItem value={500}>500</MenuItem>\n                          </GridSelect>\n                        </FormControl>\n                      </td>\n\n                      <td>\n                        <Tooltip title=\"На первую страницу\">\n                          <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                            <FirstPageIcon style={{ fontSize: \"large\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На предыдущюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                            <ArrowBackIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td style={{ color: \"black\", fontSize: 16 }}>\n                        <input style={{ maxWidth: 25 }} value={page} onChange={handlePageChange}></input>\n                      </td>\n                      <td style={{ paddingLeft: \"3px\" }}>\n                        <Tooltip title=\"Перейти на указанную страницу\">\n                          <Button\n                            onClick={() => GoToPage()}\n                            variant=\"outlined\"\n                            style={{\n                              height: 22,\n                              backgroundColor: \"#D1D6D6\",\n                              fontSize: 12\n                            }}\n                          >перейти\n                          </Button>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На следующюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                            <ArrowForwardIosIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()} Общее кол-во {filteredDocList.length}\n                      </td>\n                    </tr>\n                  </tfoot>\n                  <Menu\n                    anchorEl={anchorEl}\n                    open={openMenu}\n                    onClose={handleCloseMenu}\n                    MenuListProps={{\n                      'aria-labelledby': 'basic-button',\n                    }}\n                    style={{ paddingLeft: \"100px\" }}\n                  >\n                    <table>\n                      {createMenuItems()}\n                    </table>\n                  </Menu>\n                </Paper>\n              </Grid>\n            </Grid>\n          }\n          <Snackbar\n            open={showSnackBar}\n            onClose={() => handleCloseSnackBar()}\n            autoHideDuration={1200}\n            message={snackBarMessage}\n          />\n        </Grid>\n      )\n    }\n    catch (er) {\n      console.log(\"ERROR\", er)\n      return <LinearProgress />\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}