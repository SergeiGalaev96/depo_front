{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\ExchangeTSFiles\\\\ExchangeTSFiles.jsx\";\nimport React, { useState, useEffect } from 'react'; // import clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card'; // Icons\n\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport GetAppIcon from '@material-ui/icons/GetApp'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport Tooltip from '@material-ui/core/Tooltip'; // import txtimg from '../txt.png';\n\nvar generator = require('generate-password');\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto'\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto'\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}));\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [selectedDoc, setSelectedDoc] = useState(props.userTask.selectedDoc);\n  const [buttons] = useState(props.userTask.buttons);\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [taskType] = useState(props.userTask.taskType);\n  const [attachedDocs, setAttachedDocs] = useState([]);\n  const [Blobs, setBlobs] = useState([]);\n  const [savedDocs, setSavedDocs] = useState([]);\n  const [buttonFilesWordPdfImgId, setButtonFilesWordPdfImgId] = useState(null); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"TSFILES PROPS\", props);\n    setButtonFilesWordPdfImgId(getUUID());\n\n    if (props.userTask.savedDocs.length !== 0) {\n      console.log(\"S DOCS\", props.userTask.savedDocs);\n\n      for (let d = 0; d < props.userTask.savedDocs.length; d++) {\n        let file = props.userTask.savedDocs[d];\n        convertBase64ToFile(\"data:text/plain;base64,\" + file.content, file.fileName, file.birthTime);\n      }\n    }\n\n    setUpdateState(getUUID());\n  }, []); // Previosly saved documents\n\n  function convertBase64ToFile(dataurl, fileName, bTime) {\n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    let convFile = new File([u8arr], fileName, {\n      type: mime\n    });\n    convFile.birthTime = bTime;\n    handleAttachSavedFile(convFile);\n    console.log(\"CONV FILE\", convFile);\n  } // random UUID generator\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // random numbers generator\n\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  }\n\n  function buttonClick(buttonName, item) {\n    if (buttonName === \"saveDocs\") {\n      if (Blobs.length > 0) {\n        let commandJson = {\n          commandType: \"saveTSFiles\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          newFiles: Blobs,\n          directory: selectedDoc,\n          variables: {\n            userAction: {\n              value: \"saveDocument\"\n            }\n          }\n        };\n        console.log(\"saveTSFiles:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      } else {\n        swAllert(\"Прикрепите файлы доля сохранения!\", \"warning\");\n      }\n    } else if (buttonName === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"UNKNOWN Button \", buttonName);\n    }\n  }\n\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files; // console.log(\"A DOCS\", selectedFiles)\n\n    if (selectedFiles && selectedFiles[0]) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        attachedDocs.push(selectedFiles[i]);\n        setAttachedDocs(attachedDocs);\n        setUpdateState(getUUID());\n        pushNewBlob(selectedFiles[i]);\n      }\n    }\n  } // attached documents\n\n\n  async function pushNewBlob(f) {\n    // console.log(\"WRITING BLOBS\")\n    let docUrl = URL.createObjectURL(f);\n    fetch(docUrl).then(res => res.blob()).then(blob => {\n      // blob.name = f.name\n      var blobToBase64 = function (f, cb) {\n        let reader = new FileReader();\n\n        reader.onload = function () {\n          // converts blob to base64\n          var dataUrl = reader.result;\n          var base64 = dataUrl.split(\",\")[1];\n          cb(base64);\n        };\n\n        reader.readAsDataURL(f);\n      };\n\n      blobToBase64(f, async function (base64) {\n        // encode blobs to send to socket\n        let newBlob = {\n          \"name\": f.name,\n          \"blob\": base64,\n          \"size\": f.size\n        };\n        Blobs.push(newBlob);\n        setBlobs(Blobs);\n        console.log(\"BLOBS\", Blobs);\n      });\n    });\n  }\n\n  function attachedDocsList() {\n    // console.log(\"A DOCS\", attachedDocs)\n    let selDocsList = [];\n\n    for (let i = 0; i < attachedDocs.length; i++) {\n      selDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"../txt.png\",\n        height: \"35px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, attachedDocs[i].name + \" \", \"(\" + Math.round(attachedDocs[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        onClick: () => deleteAttachedDoc(attachedDocs[i].name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      })))))));\n    }\n\n    return selDocsList;\n  }\n\n  function deleteAttachedDoc(name) {\n    let newDocList = [];\n\n    for (let i = 0; i < attachedDocs.length; i++) {\n      if (name !== attachedDocs[i].name) {\n        newDocList.push(attachedDocs[i]);\n      } else {\n        deleteBlob(attachedDocs[i].name);\n      }\n    } // attachedDocs = newDocList\n\n\n    setAttachedDocs(newDocList); // setUpdateState(getUUID())\n    // console.log(\"FILES\", newDocList)\n  }\n\n  function deleteBlob(name) {\n    console.log(\"NAME\", name);\n    let newBlobs = [];\n\n    for (let b = 0; b < Blobs.length; b++) {\n      if (Blobs[b].name !== undefined) {\n        if (name !== Blobs[b].name) {\n          newBlobs.push(Blobs[b]);\n        } else {\n          console.log(\"DEL\", Blobs[b].name);\n        }\n      }\n    }\n\n    console.log(\"BLOBS\", newBlobs);\n    setBlobs(newBlobs);\n  }\n\n  function handleAttachSavedFile(file) {\n    // console.log(\"FILE\", file)\n    savedDocs.push(file);\n    setSavedDocs(savedDocs);\n  }\n\n  function savedDocsList() {\n    // console.log(\"SAVEDOCS\", savedDocs)\n    let savedDocsList = [];\n\n    for (let i = 0; i < savedDocs.length; i++) {\n      savedDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"../txt.png\",\n        height: \"35px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }\n      }, savedDocs[i].name + \" \", \"(\" + Math.round(savedDocs[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }\n      }, savedDocs[i].birthTime)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        onClick: () => deleteSavedDoc(savedDocs[i].name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(savedDocs[i]),\n        download: savedDocs[i].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }\n      })))))))); // console.log(\"FILE\", savedDocs[i])\n    }\n\n    return savedDocsList;\n  }\n\n  function deleteSavedDoc(name) {\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: {\n        ok: \"Да\",\n        cancel: \"Отмена\"\n      }\n    }).then(click => {\n      if (click === \"ok\") {\n        let newDocList = [];\n\n        for (let i = 0; i < savedDocs.length; i++) {\n          if (name !== savedDocs[i].name) {\n            newDocList.push(savedDocs[i]);\n          }\n        }\n\n        setSavedDocs(newDocList);\n        let commandJson = {\n          commandType: \"deleteSavedDocTS\",\n          userId: userProfile.userId,\n          directory: selectedDoc,\n          fileName: name\n        };\n        props.sendFieldValues(commandJson);\n      }\n    });\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      style: {\n        width: \"100%\",\n        \"border-collapse\": \"collapse\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 15\n      }\n    }, Form.sections.map(section => {\n      return sectionBuilder(section);\n    }))))));\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      key: keyGen(5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: keyGen(5),\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 13\n      }\n    }, section.label))));\n  }\n\n  if (updateState !== null) {\n    try {\n      return /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 9\n        }\n      }, getForm(), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }\n      }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n        name: button.name,\n        variant: \"outlined\",\n        onClick: () => buttonClick(button.name, null),\n        style: {\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }\n      }, button.label))), /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.importFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        accept: \"text/plain\",\n        className: classes.inputFile,\n        id: buttonFilesWordPdfImgId,\n        multiple: true,\n        type: \"file\",\n        onChange: handleAttachFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: buttonFilesWordPdfImgId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        component: \"span\",\n        key: keyGen(5),\n        variant: \"outlined\",\n        style: {\n          margin: 3,\n          color: \"white\",\n          backgroundColor: \"#BB7100\",\n          borderColor: \"#161C87\",\n          height: 32,\n          fontSize: 12\n        },\n        endIcon: /*#__PURE__*/React.createElement(AttachFileIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 34\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 23\n        }\n      }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B\"))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }\n      }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"), attachedDocsList()))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 21\n        }\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"), savedDocsList())))));\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","Card","AttachFileIcon","LinearProgress","IconButton","CloseIcon","DeleteForeverIcon","GetAppIcon","swal","Tooltip","generator","require","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","importFile","inputFile","display","modal","alignItems","justifyContent","props","classes","userProfile","session_id","userTask","process_id","taskID","Form","setForm","selectedDoc","setSelectedDoc","buttons","sectionColor","updateState","setUpdateState","taskType","attachedDocs","setAttachedDocs","Blobs","setBlobs","savedDocs","setSavedDocs","buttonFilesWordPdfImgId","setButtonFilesWordPdfImgId","console","log","getUUID","length","d","file","convertBase64ToFile","content","fileName","birthTime","dataurl","bTime","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","convFile","File","type","handleAttachSavedFile","uuidv1","keyGen","password","generate","numbers","swAllert","text","icon","ok","buttonClick","buttonName","item","commandJson","commandType","userId","userRole","newFiles","directory","variables","userAction","value","sendFieldValues","clearTabData","authorization","handleAttachFile","e","selectedFiles","target","files","i","push","pushNewBlob","f","docUrl","URL","createObjectURL","fetch","then","res","blob","blobToBase64","cb","reader","FileReader","onload","dataUrl","result","base64","readAsDataURL","newBlob","name","size","attachedDocsList","selDocsList","backgroundColor","paddingLeft","minWidth","color","Math","round","fontSize","deleteAttachedDoc","newDocList","deleteBlob","newBlobs","b","undefined","savedDocsList","deleteSavedDoc","cancel","click","getForm","sections","map","section","sectionBuilder","label","index","fontColor","borderColor","er"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/ExchangeTSFiles/ExchangeTSFiles.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n// import clsx from 'clsx';\nimport { makeStyles} from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\n\n// Icons\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\n// Libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport Tooltip from '@material-ui/core/Tooltip';\n// import txtimg from '../txt.png';\n\nvar generator = require('generate-password');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}))\nexport default (props) => {\n    // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [selectedDoc, setSelectedDoc] = useState(props.userTask.selectedDoc)\n\n  const [buttons] = useState(props.userTask.buttons)\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [taskType] = useState(props.userTask.taskType)\n\n  const [attachedDocs, setAttachedDocs] = useState([])\n  const [Blobs, setBlobs] = useState([])\n  const [savedDocs, setSavedDocs] = useState([])\n  const [buttonFilesWordPdfImgId, setButtonFilesWordPdfImgId] = useState(null)\n\n\n   // Set data from props to state of component\n   useEffect(()=>{\n    console.log(\"TSFILES PROPS\", props)\n    setButtonFilesWordPdfImgId(getUUID())\n    if(props.userTask.savedDocs.length !== 0){\n      console.log(\"S DOCS\", props.userTask.savedDocs)\n      for(let d=0; d<props.userTask.savedDocs.length; d++){\n        let file = props.userTask.savedDocs[d]\n        convertBase64ToFile(\"data:text/plain;base64,\" + file.content, file.fileName, file.birthTime)\n      }\n    }\n    setUpdateState(getUUID())\n  },[])\n  // Previosly saved documents\n  function convertBase64ToFile(dataurl, fileName, bTime){\n    var arr = dataurl.split(','),\n    mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n)\n    \n    while(n--){\n      u8arr[n] = bstr.charCodeAt(n)\n    }\n    let convFile = new File([u8arr], fileName, {type: mime})\n    convFile.birthTime = bTime\n    handleAttachSavedFile(convFile)\n    console.log(\"CONV FILE\", convFile)\n  }\n\n  // random UUID generator\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // random numbers generator\n  function keyGen(length){\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function swAllert(text, icon){\n    return(\n      swal({\n        text: text,\n        icon: icon,\n        buttons: {ok: \"Ок\"},\n      })\n    )\n  }\n  function buttonClick(buttonName, item){      \n    if(buttonName === \"saveDocs\"){\n      if(Blobs.length > 0){\n        let commandJson = \n        {\n          commandType: \"saveTSFiles\",\n          session_id: session_id,\n          process_id: process_id,\n          taskID: taskID,\n          userId: userProfile.userId,\n          userRole: userProfile.userRole,\n          newFiles: Blobs,\n          directory: selectedDoc,\n          variables: {\n            userAction: {value: \"saveDocument\"}\n          }\n        }\n        console.log(\"saveTSFiles:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n      else{\n        swAllert(\"Прикрепите файлы доля сохранения!\", \"warning\")\n      }\n    }\n    else if (buttonName === \"back\"){\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {value: \"back\"},\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"cancel\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {value: \"token\"},\n          userAction: {value: \"cancel\"},\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else{\n      console.log(\"UNKNOWN Button \", buttonName)\n    }\n  }\n  function handleAttachFile(e){\n    let selectedFiles = e.target.files\n    // console.log(\"A DOCS\", selectedFiles)\n    if(selectedFiles && selectedFiles[0]){\n      for(let i=0; i<selectedFiles.length; i++){\n        attachedDocs.push(selectedFiles[i])\n        setAttachedDocs(attachedDocs)\n        setUpdateState(getUUID())\n        pushNewBlob(selectedFiles[i])\n      }\n    }\n    \n  }\n  // attached documents\n  async function pushNewBlob(f){\n    // console.log(\"WRITING BLOBS\")\n    let docUrl = URL.createObjectURL(f)\n    fetch(docUrl)\n    .then(res => res.blob())\n    .then(blob => {\n      // blob.name = f.name\n      var blobToBase64 = function(f, cb) {\n        let reader = new FileReader()\n        reader.onload = function(){\n          // converts blob to base64\n          var dataUrl = reader.result\n          var base64 = dataUrl.split(\",\")[1]\n          cb(base64)\n        }\n        reader.readAsDataURL(f)\n      }\n      blobToBase64(f,  async function(base64){\n        // encode blobs to send to socket\n        let newBlob = {\"name\": f.name, \"blob\": base64, \"size\": f.size}\n        Blobs.push(newBlob)\n        setBlobs(Blobs)\n        console.log(\"BLOBS\", Blobs)\n      })\n    })\n  }\n  \n  function attachedDocsList(){\n    // console.log(\"A DOCS\", attachedDocs)\n    let selDocsList = []\n    for(let i=0; i<attachedDocs.length; i++){\n      selDocsList.push(\n      <Card style={{margin: 3, backgroundColor:\"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\"}}>\n        <table>\n          <tr>\n            <td><img src=\"../txt.png\" height=\"35px\"/></td>\n            <td style={{color: \"#1B2CE8\", width: \"95%\"}}>\n              {attachedDocs[i].name + \" \"}{\"(\" + Math.round(attachedDocs[i].size/1000) + \")\" + \"КБ\"}\n            </td>\n            <td>\n              <IconButton>\n                <CloseIcon style={{fontSize: \"medium\", color: \"black\"}} onClick={()=> deleteAttachedDoc(attachedDocs[i].name)}/>\n              </IconButton>\n            </td>\n          </tr>\n        </table>\n    </Card>)\n    \n    }\n    return(selDocsList)\n  }\n  function deleteAttachedDoc(name){\n    let newDocList = []\n    for(let i=0; i<attachedDocs.length; i++){\n      if(name !== attachedDocs[i].name){\n        newDocList.push(attachedDocs[i])\n      }\n      else{\n        deleteBlob(attachedDocs[i].name)\n      }\n    }\n    // attachedDocs = newDocList\n    setAttachedDocs(newDocList)\n    // setUpdateState(getUUID())\n    // console.log(\"FILES\", newDocList)\n  }\n  function deleteBlob(name){\n    console.log(\"NAME\", name)\n    let newBlobs = []\n    for(let b=0; b<Blobs.length; b++){\n      if(Blobs[b].name !== undefined){\n        if(name !== Blobs[b].name){\n          newBlobs.push(Blobs[b])\n        }\n        else{\n          console.log(\"DEL\", Blobs[b].name)\n        }\n      }\n    }\n    console.log(\"BLOBS\", newBlobs)\n    setBlobs(newBlobs)\n  }\n  \n  function handleAttachSavedFile(file){\n    // console.log(\"FILE\", file)\n    savedDocs.push(file)\n    setSavedDocs(savedDocs)\n  }\n  function savedDocsList(){\n    // console.log(\"SAVEDOCS\", savedDocs)\n    let savedDocsList = []\n    for(let i=0; i<savedDocs.length; i++){\n      savedDocsList.push(\n        <Card style={{margin: 3, backgroundColor:\"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\"}}>\n          <table>\n            <tr>\n              <td style={{width: \"95%\"}}>\n                <td><img src=\"../txt.png\" height=\"35px\"/></td>\n                <td style={{color: \"#1B2CE8\"}}>\n                  {savedDocs[i].name + \" \"}{\"(\" + Math.round(savedDocs[i].size/1000) + \")\" + \"КБ\"}\n                </td>\n                <td style={{color: \"black\"}}>\n                  {savedDocs[i].birthTime}\n                </td>\n              </td>\n              <td>\n                <td>\n                  <IconButton>\n                    <CloseIcon style={{fontSize: \"medium\", color: \"black\"}} onClick={()=> deleteSavedDoc(savedDocs[i].name)}/>\n                  </IconButton>\n                </td>\n                <td>\n                  <IconButton\n                    component=\"a\"\n                    href={URL.createObjectURL(savedDocs[i])}\n                    download={savedDocs[i].name}\n                  >\n                    <GetAppIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n                  </IconButton>\n                </td>\n              </td>\n            </tr>\n          </table>\n      </Card>\n    )\n    // console.log(\"FILE\", savedDocs[i])\n    }\n    return(savedDocsList)\n  }\n  function deleteSavedDoc(name){\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: {ok: \"Да\", cancel: \"Отмена\"},\n    })\n    .then((click) => {\n      if(click === \"ok\"){\n        let newDocList = []\n        for(let i=0; i<savedDocs.length; i++){\n          if(name !== savedDocs[i].name){\n            newDocList.push(savedDocs[i])\n          }\n        }\n        setSavedDocs(newDocList)\n        let commandJson = {\n          commandType: \"deleteSavedDocTS\",\n          userId: userProfile.userId,\n          directory: selectedDoc,\n          fileName: name\n        }\n        props.sendFieldValues(commandJson)\n      }\n    })\n  }\n  function getForm(){\n    return(\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n        <Grid item xs={8}>\n          <Paper>\n            <Table style={{width:\"100%\", \"border-collapse\": \"collapse\"}}>\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {Form.sections.map(section => {\n                  return sectionBuilder(section)\n                })}\n              </Grid>\n              {/* <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                {buttons.map((button, index) => (\n                  <Button\n                    name={button.name}\n                    variant=\"outlined\"\n                    onClick = {() => buttonClick(button.name, null)}\n                    style={{\n                      margin: 3,\n                      color: button.fontColor,\n                      backgroundColor: button.backgroundColor,\n                      height: 32,\n                      fontSize: 12\n                    }}\n                  >{button.label}\n                  </Button>\n                ))}\n              </Grid> */}\n            </Table>  \n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section){\n    return (\n      <Table size=\"small\" key={keyGen(5)}>\n        <TableHead>\n          <TableRow style={{height: 30}}>\n            <TableCell \n              key={keyGen(5)} \n              style={{\n                color: \"black\", \n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n                {section.label}\n            </TableCell> \n          </TableRow>\n        </TableHead>\n      </Table>\n    )\n  }\n  if(updateState !== null){\n    try{\n      return(\n        <Grid>\n          {/* Create main search table */}\n          {getForm()}\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            {buttons.map((button, index) => (\n              <Button\n                name={button.name}\n                variant=\"outlined\"\n                onClick = {() => buttonClick(button.name, null)}\n                style={{\n                  margin: 3,\n                  color: button.fontColor,\n                  backgroundColor: button.backgroundColor,\n                  height: 32,\n                  fontSize: 12\n                }}\n              >{button.label}\n              </Button>\n            ))}\n          </Grid>\n\n            <Paper>\n              <Grid item>\n                <Grid container direction=\"row\">         \n                  <div className={classes.importFile}>\n                    <input\n                      accept=\"text/plain\"\n                      className={classes.inputFile}\n                      id={buttonFilesWordPdfImgId}\n                      multiple\n                      type=\"file\"\n                      onChange={handleAttachFile}\n                    />\n                    <label htmlFor={buttonFilesWordPdfImgId}>\n                      <Button\n                        component=\"span\"\n                        key={keyGen(5)}\n                        variant=\"outlined\"\n                        style={{\n                          margin: 3,\n                          color: \"white\",\n                          backgroundColor: \"#BB7100\",\n                          borderColor: \"#161C87\",\n                          height: 32,\n                          fontSize: 12\n                        }}\n                        endIcon={<AttachFileIcon/>}\n                      >Прикрепить файлы\n                      </Button>\n                    </label>\n                  </div>\n                </Grid>\n              </Grid>\n              <Grid container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n                <Grid item xs={\"auto\"}>\n                  <Grid container direction=\"column\" spacing={1}>\n                    <div style={{paddingLeft: 10}}>Прикрепленные документы</div>\n                    {attachedDocsList()}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n                <Grid item xs={\"auto\"}>\n                  <Grid container direction=\"column\" spacing={1}>\n                    <div style={{paddingLeft: 10}}>Сохраненные документы</div>\n                    {savedDocsList()}\n                  </Grid>\n                </Grid>\n              </Grid>\n          </Paper>\n        </Grid>\n      )\n    }\n    catch(er){\n      console.log(\"ERROR\", er)\n      return <LinearProgress/>\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}