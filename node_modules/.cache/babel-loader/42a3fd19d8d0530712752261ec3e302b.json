{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\DocsWithFiles\\\\DocsWithFiles.jsx\";\nimport React, { useState, useEffect } from 'react'; // import clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport Modal from \"@material-ui/core/Modal\"; // Accordion\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Icons\n\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded'; // Form components\n\nimport GridSelect from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto'\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto'\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}));\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [Form, setForm] = useState(props.userTask.Form);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [docId, setDocId] = useState(props.userTask.docId);\n  const [formType] = useState(props.userTask.formType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [gridForm] = useState(props.userTask.gridForm);\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons);\n  const [enumData] = useState(props.userTask.enumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData);\n  const [fieldValue, setFieldValue] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [buttons] = useState(props.userTask.buttons);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const [sectionColor] = useState(\"#B2E0C9\");\n  const [updateState, setUpdateState] = useState(false);\n  const [taskType] = useState(props.userTask.taskType);\n  const [showSavedDocuments, setShowSavedDocuments] = useState(false);\n  const [showAttachedDocuments, setShowAttachedDocuments] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [attachedImgs, setAttachedImgs] = useState([]);\n  const [attachedImgsFiles, setAttachedImgsFiles] = useState([]);\n  const [attachedDocs, setAttachedDocs] = useState([]);\n  const [Blobs, setBlobs] = useState([]);\n  const [selectedImg, setSelectedImg] = useState({});\n  const [savedImgs, setSavedImgs] = useState([]);\n  const [savedImagesFiles, setSavedImagesFiles] = useState([]);\n  const [savedDocs, setSavedDocs] = useState([]);\n  const [buttonFilesWordPdfImgId, setButtonFilesWordPdfImgId] = useState(null);\n  const [sortedColumn, setSortedColumn] = useState(\"null\");\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1);\n  const [isSearchForm, setIsSearchForm] = useState(null);\n  const [accordionExpanded, setAccordionExpanded] = useState(false); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"CONTRACTS PROPS\", props);\n    setButtonFilesWordPdfImgId(getUUID());\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        let s = parseInt(props.userTask.size);\n        let p = parseInt(props.userTask.page);\n        setSize(s);\n        setPage(p);\n        setIsSearchForm(true);\n        setFilteredDocList(parsedData);\n        setInitialDocList(parsedData);\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"));\n\n        if (props.userTask.selectedDoc !== \"null\") {\n          filterDocList(0, s - 1, sortedDocList, JSON.parse(props.userTask.selectedDoc));\n        } else {\n          fetchBySize(0, s - 1, sortedDocList);\n        }\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setIsSearchForm(true);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    } else {\n      setIsSearchForm(false);\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      let fields = {}; // let Form = props.userTask.Form\n\n      for (let s = 0; s < Form.sections.length; s++) {\n        for (let c = 0; c < Form.sections[s].contents.length; c++) {\n          let fieldName = Form.sections[s].contents[c].name;\n          fields[fieldName] = parsedSelectedDoc[fieldName];\n        }\n      }\n\n      console.log(\"SDOC\", parsedSelectedDoc); // console.log(\"FIELDVAL\", fields)\n\n      setSelectedDoc(parsedSelectedDoc);\n      setFieldValue(fields);\n    }\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      let newEnumOptions = {};\n\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\": props.userTask.enumData[i].name\n          }];\n\n          for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n            options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\": props.userTask.enumData[i].name\n            });\n          }\n\n          newEnumOptions[props.userTask.enumData[i].name] = options;\n        } else {\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\": getLostEnumName(i)\n          }];\n          newEnumOptions[getLostEnumName(i)] = options;\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i));\n        }\n      }\n\n      setEnumOptions(newEnumOptions);\n    }\n\n    if (props.userTask.taskType === \"showContractsCreatingForm\" || props.userTask.taskType === \"showExcertsCreatingForm\") {\n      setShowAttachedDocuments(true);\n    }\n\n    if (props.userTask.taskType === \"showContractsEditForm\" || props.userTask.taskType === \"showExcertsEditForm\") {\n      setShowAttachedDocuments(true);\n      setShowSavedDocuments(true);\n    }\n\n    if (props.userTask.savedDocs.length !== 0) {\n      for (let d = 0; d < props.userTask.savedDocs.length; d++) {\n        let extension = props.userTask.savedDocs[d].extension;\n\n        if (extension === \".png\") {\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".jpeg\" || extension === \".jpg\") {\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".doc\") {\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".docx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".xlsx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".pdf\") {\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        }\n      }\n    }\n\n    setUpdateState(getUUID());\n  }, []);\n\n  function getLostEnumName(i) {\n    let enumI = 0;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (Form.sections[s].contents[c].type === \"Enum\") {\n          if (enumI === i) {\n            return Form.sections[s].contents[c].name;\n          } else {\n            enumI += 1;\n          }\n        }\n      }\n    }\n  }\n\n  function handleExpandAccordion() {\n    setAccordionExpanded(!accordionExpanded);\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const handleCheckboxChange = event => {\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: event.target.checked\n    });\n  }; // Integer input handler\n\n\n  const handleIntChange = event => {\n    console.log(\"EVENT\", event.target.name, event.target.value);\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let int = parseInt(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: int\n    });\n  }; // Float input handler\n\n\n  const handleFloatChange = event => {\n    let stringNum = event.target.value.toString().replace(/ /g, '');\n    let float = parseFloat(stringNum);\n    setFieldValue({ ...fieldValue,\n      [event.target.name]: float\n    });\n    console.log(\"FLOAT CHANGE\", event.target.name, fieldValue);\n  };\n\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  }\n\n  function handleSelectChange(option) {\n    fieldValue[option.name] = option.value;\n    console.log(\"OPT\", option.name, option.value);\n    var updateSelectedOptions = selectedOptions.slice();\n    let noSuchOption = true;\n\n    for (let i = 0; i < updateSelectedOptions.length; i++) {\n      if (option.name === updateSelectedOptions[i].name) {\n        updateSelectedOptions[i] = option;\n        noSuchOption = false;\n        setSelectedOptions(updateSelectedOptions);\n        break;\n      } else {\n        noSuchOption = true;\n      }\n    }\n\n    if (noSuchOption === true) {\n      updateSelectedOptions.push(option);\n      setSelectedOptions(updateSelectedOptions);\n    }\n  }\n\n  function handleDateTimeChange(event) {\n    let fullDate = props.parseDate(event.target.value);\n    var hours = new Date().getHours();\n    var minutes = new Date().getMinutes();\n    var seconds = new Date().getSeconds();\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\";\n    fieldValue[event.target.name] = convertedDate;\n    setFieldValue(fieldValue);\n    console.log(\"DATE CHANGE\", event.target.value);\n  }\n\n  function getContentType(key) {\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        if (key === Form.sections[s].contents[c].name) {\n          return Form.sections[s].contents[c].type;\n        }\n      }\n    }\n  } // filter docList by filled parameters\n\n\n  function filterDocList(fetchFrom, fetchTo, Data, fields) {\n    var newDocList = [];\n\n    if (Object.keys(fields).length === 0) {\n      newDocList = Data;\n    } else {\n      for (let i = 0; i < Data.length; i++) {\n        let match = false;\n\n        for (let key in fields) {\n          if (fields[key] === null || fields[key] === \"\" || fields[key] === undefined) {\n            match = true;\n          } else {\n            if (Data[i][key] !== null) {\n              let contentType = getContentType(key);\n\n              if (contentType === \"Text\") {\n                try {\n                  let searchField = fields[key].toLowerCase();\n                  let dataField = Data[i][key].toLowerCase();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } catch (er) {\n                  console.log(\"ERR\", er);\n                  match = true;\n                }\n              } else if (contentType === \"Int\" || contentType === \"Float\") {\n                if (fields[key] >= 0 || fields[key] < 0) {\n                  let searchField = fields[key].toString();\n                  let dataField = Data[i][key].toString();\n                  let includeSearch = dataField.includes(searchField);\n\n                  if (includeSearch === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                } else {\n                  match = true;\n                }\n              } else if (contentType === \"Enum\") {\n                if (fields[key] === Data[i][key]) {\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              } else if (contentType === \"DateTime\") {\n                let searchField = props.parseDate(fields[key]);\n                let dataField = props.parseDate(Data[i][key]); // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n\n                if (searchField === \"NaN-NaN-NaN\") {\n                  match = true;\n                } else {\n                  if (searchField.includes(dataField) === true) {\n                    match = true;\n                  } else {\n                    match = false;\n                    break;\n                  }\n                }\n              } else if (contentType === \"Bool\") {\n                if (fields[key] === Data[i][key]) {\n                  match = true;\n                } else {\n                  match = false;\n                  break;\n                }\n              }\n            } else {\n              match = false;\n              break;\n            }\n          }\n        }\n\n        if (match === true) {\n          newDocList.push(Data[i]);\n        }\n      }\n    }\n\n    setFilteredDocList(newDocList);\n    fetchBySize(fetchFrom, fetchTo, newDocList);\n  } // get rows amount of filtered docList by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList);\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.round(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  } // random UUID generator\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // random numbers generator\n\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    }) // .then((click) => {\n    //   if(click === \"ok\"){\n    //     console.log(\"CLICK OK\", click)\n    //   }\n    // })\n    ;\n  } // Collect data to save doc\n\n\n  function getFieldValuesSaveDocument() {\n    let docToSave = {};\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined) {\n          docToSave[fieldName] = false;\n        } else {\n          docToSave[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToSave;\n  }\n\n  function getFieldValuesUpdateDocument() {\n    let docToUpdate = selectedDoc; // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)) {\n          docToUpdate[fieldName] = false;\n        } else {\n          docToUpdate[fieldName] = fieldValue[fieldName];\n        }\n      }\n    }\n\n    return docToUpdate;\n  }\n\n  function checkForRequieredFields() {\n    let checkedSuccessfuly = false;\n\n    for (let s = 0; s < Form.sections.length; s++) {\n      for (let c = 0; c < Form.sections[s].contents.length; c++) {\n        let fieldName = Form.sections[s].contents[c].name;\n\n        if (Form.sections[s].contents[c].required === true && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName].length === 0)) {\n          checkedSuccessfuly = false;\n          swAllert(\"Внимание заполните поле \\\"\" + Form.sections[s].contents[c].label + \"\\\"\");\n          break;\n        } else {\n          checkedSuccessfuly = true;\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  }\n\n  function buttonClick(buttonName, item) {\n    if (buttonName === \"findDocument\") {\n      filterDocList(0, size, initialDocList, fieldValue);\n    } else if (buttonName === \"openDocument\") {\n      // console.log(\"ITEM\", item)\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: {\n            value: JSON.stringify(item)\n          },\n          userAction: {\n            value: \"openDocument\"\n          },\n          docId: {\n            value: item.id\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"button openDocument: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"updateDocument\") {\n      let updateBody = getFieldValuesUpdateDocument();\n      updateBody.files_directory = selectedDoc.files_directory;\n      let commandJson = {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        blobs: Blobs,\n        directory: selectedDoc.files_directory,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          document: {\n            value: JSON.stringify(updateBody)\n          }\n        }\n      };\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        console.log(\"updateDocument:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (buttonName === \"createDocument\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"createDocument\"\n          },\n          searchDoc: {\n            value: JSON.stringify(fieldValue)\n          }\n        }\n      };\n      console.log(\"createDocument:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"saveDocument\") {\n      let docToSave = getFieldValuesSaveDocument();\n      let dir = getUUID();\n      docToSave.files_directory = dir;\n      let commandJson = {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        blobs: Blobs,\n        directory: dir,\n        variables: {\n          userAction: {\n            value: \"saveDocument\"\n          },\n          document: {\n            value: JSON.stringify(docToSave)\n          }\n        }\n      };\n      let checkResult = checkForRequieredFields();\n\n      if (checkResult === true) {\n        console.log(\"saveDocument:\", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      } // swAllert(\"Данные сохранены!\", \"success\")\n\n    } else if (buttonName === \"updateDocList\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocList\"\n          }\n        }\n      };\n      console.log(\"button updateDocList: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (buttonName === \"cancel\") {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {\n            value: \"token\"\n          },\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      console.log(\"UNKNOWN Button \", buttonName);\n    }\n  } // Create grid form components\n\n\n  function getGridFormItems(dataItem, contentItem) {\n    let value = dataItem[contentItem.name];\n    let name = contentItem.name;\n    let type = contentItem.type;\n\n    if (type === \"Enum\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 16\n          }\n        }, \"-\");\n      } else {\n        for (let i = 0; i < gridFormEnumData.length; i++) {\n          if (gridFormEnumData[i] !== null) {\n            if (name === gridFormEnumData[i].name) {\n              for (let l = 0; l < gridFormEnumData[i].data.length; l++) {\n                if (gridFormEnumData[i].data[l].id === parseInt(value)) {\n                  return gridFormEnumData[i].data[l].label;\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (type === \"Bool\") {\n      // console.log(\"ITEM\", name, value, type)\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: value === false ? \"red\" : \"green\"\n        },\n        checked: value === false || value === null || value === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"DateTime\") {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 16\n          }\n        }, \"-\");\n      } else {\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10);\n        let Time = value.substring(11, 16);\n        return Date + \" \" + Time;\n      }\n    } else if (type === \"Text\") {\n      // console.log(\"ITEM\", name, value, type)\n      if (name === \"instructionStatus\") {\n        let status = \"-\";\n\n        if (dataItem[\"filled\"] === true) {\n          status = \"Введено\";\n        }\n\n        if (dataItem[\"onExecution\"] === true) {\n          status = \"Введено -> На исполнении\";\n        }\n\n        if (dataItem[\"executed\"] === true) {\n          status = \"На исполнении -> Исполнено\";\n        }\n\n        if (dataItem[\"canceled\"] === true) {\n          status = \"На исполнении -> Отменено\";\n        }\n\n        return status;\n      } else {\n        if (value === null || value === \"\" || value === undefined) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            align: \"center\",\n            style: {\n              color: \"black\",\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 18\n            }\n          }, \"-\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 18\n            }\n          }, value);\n        }\n      }\n    } else {\n      if (value === null || value === \"\" || value === undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            color: \"black\",\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 16\n          }\n        }, \"-\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 16\n          }\n        }, value);\n      }\n    }\n  } // attached documents\n\n\n  async function pushNewBlob(f) {\n    // console.log(\"WRITING BLOBS\")\n    let docUrl = URL.createObjectURL(f);\n    fetch(docUrl).then(res => res.blob()).then(blob => {\n      // blob.name = f.name\n      var blobToBase64 = function (f, cb) {\n        let reader = new FileReader();\n\n        reader.onload = function () {\n          // converts blob to base64\n          var dataUrl = reader.result;\n          var base64 = dataUrl.split(\",\")[1];\n          cb(base64);\n        };\n\n        reader.readAsDataURL(f);\n      };\n\n      blobToBase64(f, async function (base64) {\n        // encode blobs to send to socket\n        let newBlob = {\n          \"name\": f.name,\n          \"blob\": base64,\n          \"size\": f.size\n        };\n        Blobs.push(newBlob);\n        setBlobs(Blobs); // console.log(\"BLOBS\", Blobs)\n      });\n    });\n  }\n\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files;\n    console.log(\"A DOCS\", selectedFiles);\n\n    if (selectedFiles && selectedFiles[0]) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        if (selectedFiles[i].type === \"application/pdf\" || selectedFiles[i].type === \"application/msword\" || selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n          attachedDocs.push(selectedFiles[i]);\n          setAttachedDocs(attachedDocs);\n          setUpdateState(getUUID()); // console.log(\"A DOCS\", attachedDocs)\n        } else {\n          let reader = new FileReader();\n\n          reader.onload = async function (e) {\n            // push new images to list and show in UI\n            let image = {\n              item: /*#__PURE__*/React.createElement(\"img\", {\n                name: selectedFiles[i].name,\n                height: \"150\",\n                width: \"auto\",\n                src: e.target.result,\n                onClick: () => attachedImgClick(selectedFiles[i].name),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 32\n                }\n              })\n            };\n            attachedImgs.push(image);\n            setAttachedImgs(attachedImgs);\n            setUpdateState(getUUID()); // console.log(\"IMGLIST\", attachedImgs)\n          };\n\n          reader.readAsDataURL(selectedFiles[i]);\n          attachedImgsFiles.push(selectedFiles[i]); // pushAttachedImage(selectedFiles[i])\n\n          setAttachedImgsFiles(attachedImgsFiles); // console.log(\"A IMGS\", attachedImgsFiles)\n        }\n\n        pushNewBlob(selectedFiles[i]);\n      }\n    }\n  } // async function pushAttachedImage(f){\n  //   let reader = new FileReader()\n  //   reader.onload = async function(e){\n  //     // push new images to list and show in UI\n  //     let image = {item: <img name={f.name} height=\"150\" width=\"auto\" src={e.target.result} onClick={()=> attachedImgClick(f.name)}/>}\n  //     attachedImgs.push(image)\n  //     setAttachedImgs(attachedImgs)\n  //     // console.log(\"IMGLIST\", attachedImgs)\n  //   }\n  //   reader.readAsDataURL(f)\n  //   // setUpdateState(getUUID())\n  // }\n\n\n  async function attachedImgClick(name) {\n    for (let l = 0; l < attachedImgs.length; l++) {\n      if (attachedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", attachedImgs[l]);\n        setSelectedImg({\n          name: attachedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: attachedImgs[l].item.props.src\n        });\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function attachedDocsList() {\n    console.log(\"A DOCS\", attachedDocs);\n    let selDocsList = [];\n\n    for (let i = 0; i < attachedDocs.length; i++) {\n      selDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 13\n        }\n      }, attachedDocs[i].name + \" \", \"(\" + Math.round(attachedDocs[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        onClick: () => deleteAttachedDoc(attachedDocs[i].name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 17\n        }\n      })))))));\n    }\n\n    return selDocsList;\n  }\n\n  function attachedImgsList() {\n    var imgs = [];\n\n    for (let l = 0; l < attachedImgs.length; l++) {\n      imgs.push( /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 13\n        }\n      }, attachedImgs[l].item)), /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => deleteAttachedImage(attachedImgs[l].item.props.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DeleteForeverIcon, {\n        fontSize: \"Large\",\n        style: {\n          color: \"black\",\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 17\n        }\n      }))))));\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 9\n        }\n      }, imgs);\n    }\n  }\n\n  function deleteAttachedDoc(name) {\n    let newDocList = [];\n\n    for (let i = 0; i < attachedDocs.length; i++) {\n      if (name !== attachedDocs[i].name) {\n        newDocList.push(attachedDocs[i]);\n      } else {\n        deleteBlob(attachedDocs[i].name);\n      }\n    } // attachedDocs = newDocList\n\n\n    setAttachedDocs(newDocList); // setUpdateState(getUUID())\n    // console.log(\"FILES\", newDocList)\n  }\n\n  function deleteAttachedImage(name) {\n    let newImgList = [];\n    let newImgFilesList = [];\n\n    for (let i = 0; i < attachedImgs.length; i++) {\n      if (name !== attachedImgs[i].item.props.name) {\n        newImgList.push(attachedImgs[i]);\n        newImgFilesList.push(attachedImgsFiles[i]);\n      } else {\n        deleteBlob(attachedImgs[i].item.props.name);\n      }\n    } // deleteBlob(name)\n    // attachedImgs = newImgList\n\n\n    setAttachedImgs(newImgList); // attachedImgsFiles = newImgFilesList\n\n    setAttachedImgsFiles(newImgFilesList); // setUpdateState(getUUID())\n    // console.log(\"IMGS\", newImgFilesList)\n  }\n\n  function deleteBlob(name) {\n    console.log(\"NAME\", name);\n    let newBlobs = [];\n\n    for (let b = 0; b < Blobs.length; b++) {\n      if (Blobs[b].name !== undefined) {\n        if (name !== Blobs[b].name) {\n          newBlobs.push(Blobs[b]);\n        } else {\n          console.log(\"DEL\", Blobs[b].name);\n        }\n      }\n    }\n\n    console.log(\"BLOBS\", newBlobs);\n    setBlobs(newBlobs);\n  } // Previosly saved documents\n\n\n  function convertBase64ToFile(dataurl, fileName) {\n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    let convFile = new File([u8arr], fileName, {\n      type: mime\n    });\n    handleAttachSavedFile(convFile);\n    console.log(\"CONV FILE\", convFile);\n  }\n\n  function handleAttachSavedFile(file) {\n    console.log(\"FILE\", file);\n\n    if (file.type === \"application/pdf\" || file.type === \"application/msword\" || file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n      savedDocs.push(file);\n      setSavedDocs(savedDocs);\n    } else {\n      savedImagesFiles.push(file);\n      setSavedImagesFiles(savedImagesFiles);\n      pushSavedImage(file);\n    } // setUpdateState(getUUID())\n\n  }\n\n  async function pushSavedImage(f) {\n    let reader = new FileReader();\n\n    reader.onload = async function (e) {\n      // push new images to list and show in UI\n      let image = {\n        item: /*#__PURE__*/React.createElement(\"img\", {\n          name: f.name,\n          height: \"150\",\n          width: \"auto\",\n          src: e.target.result,\n          onClick: () => savedImgClick(f.name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 26\n          }\n        })\n      };\n      savedImgs.push(image); // console.log(\"IMGLIST\", savedImgs)\n\n      setSavedImgs(savedImgs);\n      setUpdateState(getUUID());\n    };\n\n    reader.readAsDataURL(f);\n  }\n\n  async function savedImgClick(name) {\n    for (let l = 0; l < savedImgs.length; l++) {\n      if (savedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", savedImgs[l]);\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        });\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function savedDocsList() {\n    console.log(\"SAVEDOCS\", savedDocs);\n    let savedDocsList = [];\n\n    for (let i = 0; i < savedDocs.length; i++) {\n      savedDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 13\n        }\n      }, savedDocs[i].name + \" \", \"(\" + Math.round(savedDocs[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        onClick: () => deleteSavedDoc(savedDocs[i].name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(savedDocs[i]),\n        download: savedDocs[i].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 17\n        }\n      }))))))); // console.log(\"FILE\", savedDocs[i])\n    }\n\n    return savedDocsList;\n  }\n\n  function savedImgsList() {\n    console.log(\"SAVEDIMGS\", savedImgs);\n    var imgs = [];\n\n    for (let l = 0; l < savedImgs.length; l++) {\n      let blob = converFileToBlob(savedImgs[l].item.props.src);\n      imgs.push( /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 13\n        }\n      }, savedImgs[l].item)), /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => deleteSavedImage(savedImgs[l].item.props.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DeleteForeverIcon, {\n        fontSize: \"Large\",\n        style: {\n          color: \"black\",\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(blob),\n        download: savedImgs[l].item.props.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 17\n        }\n      }))))));\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 9\n        }\n      }, imgs);\n    }\n  }\n\n  function converFileToBlob(src) {\n    var byteString = atob(src.split(',')[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new Blob([ab], {\n      type: 'image/jpeg'\n    });\n  }\n\n  function deleteSavedDoc(name) {\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: {\n        ok: \"Да\",\n        cancel: \"Отмена\"\n      }\n    }).then(click => {\n      if (click === \"ok\") {\n        let newDocList = [];\n\n        for (let i = 0; i < savedDocs.length; i++) {\n          if (name !== savedDocs[i].name) {\n            newDocList.push(savedDocs[i]);\n          }\n        }\n\n        setSavedDocs(newDocList);\n        let commandJson = {\n          commandType: \"deleteSavedDoc\",\n          userId: userProfile.userId,\n          directory: selectedDoc.files_directory,\n          fileName: name\n        };\n        props.sendFieldValues(commandJson);\n      }\n    });\n  }\n\n  function deleteSavedImage(name) {\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: {\n        ok: \"Да\",\n        cancel: \"Отмена\"\n      }\n    }).then(click => {\n      if (click === \"ok\") {\n        let newImgList = [];\n\n        for (let i = 0; i < savedImgs.length; i++) {\n          if (name !== savedImgs[i].item.props.name) {\n            newImgList.push(savedImgs[i]);\n          }\n        }\n\n        setSavedImgs(newImgList); // setUpdateState(getUUID())\n\n        let commandJson = {\n          commandType: \"deleteSavedDoc\",\n          userId: userProfile.userId,\n          directory: selectedDoc.files_directory,\n          fileName: name\n        };\n        props.sendFieldValues(commandJson);\n      }\n    });\n  }\n\n  function checkToShowSection(section) {\n    let showSection = false;\n\n    for (let i = 0; i < section.contents.length; i++) {\n      if (section.contents[i].show === true) {\n        showSection = true;\n        break;\n      }\n    }\n\n    return showSection;\n  }\n\n  function checkSectionOnLastChild(i) {\n    let lastSection = true;\n\n    if (i === gridForm.sections.length - 1) {\n      // The last section\n      return true;\n    } else {\n      let nextS = i + 1;\n      console.log(\"IT\", i, gridForm.sections[nextS]);\n\n      for (let s = nextS; s < gridForm.sections.length; s++) {\n        for (let c = 0; c < gridForm.sections[s].contents.length; c++) {\n          // Check next section\n          if (gridForm.sections[s].contents[c].show === true) {\n            lastSection = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return lastSection;\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if (type === \"DateTime\" || type === \"Bool\") {\n      sortOrder = sortOrder * -1;\n    } // console.log(\"SORT\", property, sortOrder, type)\n\n\n    if (type === \"DateTime\") {\n      return function (a, b) {\n        if (a[property] !== null && b[property] !== null) {\n          let dateA = new Date(a[property].substring(0, 19));\n          let timeInSecA = dateA.getTime() / 1000; // console.log(\"timeInSecA\", timeInSecA)\n\n          let dateB = new Date(b[property].substring(0, 19));\n          let timeInSecB = dateB.getTime() / 1000; // console.log(\"timeInSecB\", timeInSecB)\n\n          var result = timeInSecA < timeInSecB ? -1 : timeInSecA > timeInSecB ? 1 : 0;\n          return result * sortOrder;\n        } else {\n          if (a[property] === null) {\n            return -1 * sortOrder;\n          }\n\n          return 1 * sortOrder;\n        }\n      };\n    } else if (type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\") {\n      return function (a, b) {\n        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    } else if (type === \"Enum\") {\n      return function (a, b) {\n        if (a[property] === null) {\n          return 1 * sortOrder;\n        } else {\n          let labelA = getEnumLabel(property, a[property]); // console.log(\"A\", property, a[property], labelA)\n\n          let labelB = getEnumLabel(property, b[property]); // console.log(\"labelB\", labelB, property, b)\n\n          var result = labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\n          return result * sortOrder;\n        }\n      };\n    }\n  }\n\n  function sortDataByColumn(name, type) {\n    let sortOrder = 1;\n\n    if (sortedColumn === name) {\n      sortOrder = sortedColumnOrder * -1;\n    }\n\n    setSortedColumnOrder(sortOrder);\n    setSortedColumn(name);\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type)); // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n\n    setPage(1);\n    let fetchFrom = 0;\n    let fetchTo = size - 1;\n    setFilteredDocList(sortedDocList);\n    fetchBySize(fetchFrom, fetchTo, sortedDocList);\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === name) {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function getForm() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1336,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: isSearchForm === true ? 12 : 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1338,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      style: {\n        width: \"100%\",\n        \"border-collapse\": \"collapse\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 15\n      }\n    }, Form.sections.map(section => {\n      return sectionBuilder(section);\n    }))))));\n  } // Create sections with labels and call bodyBuilder function\n\n\n  function sectionBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      key: keyGen(5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1372,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: keyGen(5),\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: sectionColor,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1374,\n        columnNumber: 13\n      }\n    }, section.label))), bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  function bodyBuilder(section) {\n    return /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1393,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1394,\n        columnNumber: 9\n      }\n    }, section.contents.map(contentItem => contentItem.show === true && /*#__PURE__*/React.createElement(TableRow, {\n      key: keyGen(5),\n      style: {\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1397,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      key: keyGen(5),\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1398,\n        columnNumber: 17\n      }\n    }, contentItem.label), /*#__PURE__*/React.createElement(TableCell, {\n      key: keyGen(5),\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1404,\n        columnNumber: 17\n      }\n    }, contentBuilder(contentItem))))));\n  } // Creating components by it's type\n\n\n  function contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressText,\n        multiline: !isSearchForm,\n        onBlur: handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        defaultValue: fieldValue[contentItem.name] ? fieldValue[contentItem.name] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1420,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Enum\") {\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\": contentItem.name\n      };\n\n      if (fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < enumOptions[contentItem.name].length; i++) {\n          if (parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value) {\n            selectedOption = enumOptions[contentItem.name][i];\n            break;\n          }\n        }\n      }\n\n      if (selectedOptions.length !== 0) {\n        for (let i = 0; i < selectedOptions.length; i++) {\n          if (contentItem.name === selectedOptions[i].name) {\n            selectedOption = selectedOptions[i];\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: handleSelectChange,\n        options: enumOptions[contentItem.name],\n        isDisabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: base => ({ ...base,\n            zIndex: 9999\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1453,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: handleCheckboxChange,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1466,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Int\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressInt,\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined ? fieldValue[contentItem.name] : \"\" // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n        ,\n        onBlur: handleIntChange,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: IntegerFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"Float\") {\n      console.log(\"FLOAT VAL\", fieldValue[contentItem.name]);\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressFloat,\n        name: contentItem.name // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n        ,\n        onBlur: handleFloatChange,\n        value: fieldValue[contentItem.name],\n        style: {\n          width: \"100%\"\n        },\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: FloatFormat\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1492,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPressDateTime,\n        type: \"date\",\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        defaultValue: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseDate(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1506,\n          columnNumber: 9\n        }\n      });\n    } else if (contentItem.type === \"FullDateTime\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        name: contentItem.name,\n        onBlur: handleDateTimeChange,\n        style: {\n          width: \"100%\"\n        },\n        value: fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null ? props.parseFullDateTime(fieldValue[contentItem.name]) : \"\",\n        disabled: formType === \"view\" || contentItem.edit === false ? true : false,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1522,\n          columnNumber: 9\n        }\n      });\n    }\n  } // Key press handlers for some fields\n\n\n  function onKeyPressText(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressDateTime(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event);\n          buttonClick(\"findDocument\", null);\n        }\n      }\n    }\n  }\n\n  function onKeyPressInt(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let int = parseInt(stringNum);\n          fieldValue[event.target.name] = int;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  function onKeyPressFloat(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].name === \"findDocument\") {\n          let stringNum = event.target.value.toString().replace(/ /g, '');\n          let float = parseFloat(stringNum);\n          fieldValue[event.target.name] = float;\n          setFieldValue(fieldValue);\n          filterDocList(0, size - 1, initialDocList, fieldValue);\n        }\n      }\n    }\n  }\n\n  if (updateState !== null) {\n    try {\n      return /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1592,\n          columnNumber: 9\n        }\n      }, isSearchForm !== null && isSearchForm === true ? /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1597,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1598,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        expanded: accordionExpanded,\n        onChange: () => handleExpandAccordion(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1599,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AccordionSummary, {\n        expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1601,\n            columnNumber: 33\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1600,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1603,\n          columnNumber: 21\n        }\n      }, Form.label)), /*#__PURE__*/React.createElement(AccordionDetails, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1605,\n          columnNumber: 19\n        }\n      }, getForm())))) : getForm(), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1614,\n          columnNumber: 11\n        }\n      }, buttons.map((button, index) => /*#__PURE__*/React.createElement(Button, {\n        name: button.name,\n        variant: \"outlined\",\n        onClick: () => buttonClick(button.name, null),\n        style: {\n          margin: 3,\n          color: button.fontColor,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1616,\n          columnNumber: 15\n        }\n      }, button.label))), isSearchForm === true && /*#__PURE__*/React.createElement(ReplayIcon, {\n        style: {\n          paddingTop: 3\n        },\n        onClick: () => buttonClick(\"updateDocList\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1632,\n          columnNumber: 13\n        }\n      }), showAttachedDocuments === true && /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1635,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1636,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1637,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.importFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1638,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        accept: \"image/*, application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        className: classes.inputFile,\n        id: buttonFilesWordPdfImgId,\n        multiple: true,\n        type: \"file\",\n        onChange: handleAttachFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1639,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: buttonFilesWordPdfImgId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1647,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        component: \"span\",\n        key: keyGen(5),\n        variant: \"outlined\",\n        style: {\n          margin: 3,\n          color: \"white\",\n          backgroundColor: \"#BB7100\",\n          borderColor: \"#161C87\",\n          height: 32,\n          fontSize: 12\n        },\n        endIcon: /*#__PURE__*/React.createElement(AttachFileIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1660,\n            columnNumber: 34\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1648,\n          columnNumber: 23\n        }\n      }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B\"))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1667,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1668,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1669,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1670,\n          columnNumber: 21\n        }\n      }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"), attachedDocsList(), attachedImgsList()))), showSavedDocuments === true && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1678,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1679,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1680,\n          columnNumber: 19\n        }\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"), savedDocsList(), savedImgsList())))), docList !== null && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1690,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1691,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1692,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"500px\",\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1693,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        size: \"small\",\n        class: \"main-table-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1694,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        class: \"thead-style\",\n        style: {\n          position: \"sticky\",\n          top: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1697,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-first-child\",\n        colSpan: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1698,\n          columnNumber: 27\n        }\n      }), gridForm.sections.map((section, index) => {\n        let showSection = checkToShowSection(section);\n\n        if (showSection === true) {\n          let lastSection = checkSectionOnLastChild(index);\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: lastSection === true ? \"td-head-last-child\" : \"td-head-style\",\n            colSpan: section.contents.length,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1704,\n              columnNumber: 33\n            }\n          }, section.label);\n        }\n      })), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1713,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-head-style-2row\",\n        rowSpan: \"2\",\n        style: {\n          \"minWidth\": \"65px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1714,\n          columnNumber: 27\n        }\n      }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            rowSpan: \"2\",\n            onClick: () => sortDataByColumn(contentItem.name, contentItem.type),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1725,\n              columnNumber: 35\n            }\n          }, contentItem.label, sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1731,\n              columnNumber: 100\n            }\n          }) : /*#__PURE__*/React.createElement(ArrowDropUpIcon, {\n            style: {\n              marginBottom: -8\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1731,\n              columnNumber: 150\n            }\n          }) : \"\");\n        }\n      })))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1739,\n          columnNumber: 23\n        }\n      }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n        key: keyGen(5),\n        style: {\n          \"height\": 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1742,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        class: \"td-style\",\n        style: {\n          \"maxWidth\": 34\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1743,\n          columnNumber: 31\n        }\n      }, gridFormButtons !== \"null\" && gridFormButtons.map(button => /*#__PURE__*/React.createElement(Button, {\n        key: button.name,\n        name: button.name,\n        variant: \"outlined\" // id={dataItem.id}\n        ,\n        value: button.name,\n        onClick: () => buttonClick(button.name, dataItem),\n        style: {\n          margin: 1,\n          height: 24,\n          fontSize: 10,\n          maxWidth: 32,\n          backgroundColor: button.backgroundColor,\n          borderColor: \"darkgreen\",\n          color: \"darkgreen\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1746,\n          columnNumber: 35\n        }\n      }, button.label))), gridForm.sections.map(section => section.contents.map(contentItem => {\n        if (contentItem.show === true) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: keyGen(4),\n            align: \"left\",\n            style: {\n              color: \"black\",\n              fontSize: 12,\n              \"text-align\": \"center\",\n              \"border-bottom\": \"1px solid grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1770,\n              columnNumber: 39\n            }\n          }, getGridFormItems(dataItem, contentItem));\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1783,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1784,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1785,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          minWidth: 90,\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1786,\n          columnNumber: 25\n        }\n      }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1788,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        style: {\n          minWidth: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1789,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(GridSelect, {\n        onChange: handleChangeRowsPerPage,\n        style: {\n          height: 25,\n          color: \"black\"\n        },\n        value: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1793,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1798,\n          columnNumber: 29\n        }\n      }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1799,\n          columnNumber: 29\n        }\n      }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1800,\n          columnNumber: 29\n        }\n      }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1801,\n          columnNumber: 29\n        }\n      }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1802,\n          columnNumber: 29\n        }\n      }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1803,\n          columnNumber: 29\n        }\n      }, \"500\")))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1808,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1809,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowFirstClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1810,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n        style: {\n          fontSize: \"large\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1811,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1815,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1816,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowLeftClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1817,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1818,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"black\",\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1822,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          maxWidth: 25\n        },\n        value: page,\n        onChange: handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1823,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          paddingLeft: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1825,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1826,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => GoToPage(),\n        variant: \"outlined\",\n        style: {\n          height: 22,\n          backgroundColor: \"#D1D6D6\",\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1827,\n          columnNumber: 29\n        }\n      }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1839,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1840,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => KeyboardArrowRightClick(page),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1841,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1842,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        class: \"pagination-rows-amount-style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1846,\n          columnNumber: 23\n        }\n      }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount(), \" \\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B-\\u0432\\u043E \", filteredDocList.length)))))), /*#__PURE__*/React.createElement(Modal, {\n        className: classes.modal,\n        open: openModal,\n        onClose: handleCloseModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1854,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.imagePaper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1859,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        name: selectedImg.name,\n        height: 600,\n        width: \"auto\",\n        src: selectedImg.src,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1860,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Snackbar, {\n        open: showSnackBar,\n        onClose: () => handleCloseSnackBar(),\n        autoHideDuration: 1200,\n        message: snackBarMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1863,\n          columnNumber: 11\n        }\n      }));\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1874,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","Grid","Paper","FormControl","Snackbar","NumberFormat","PropTypes","Card","Modal","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","AttachFileIcon","MenuItem","FirstPageIcon","ArrowForwardIosIcon","ArrowBackIosIcon","LinearProgress","IconButton","CloseIcon","DeleteForeverIcon","GetAppIcon","ArrowDropDownIcon","ArrowDropUpIcon","ReplayIcon","ArrowUpwardRoundedIcon","GridSelect","TextField","Select","Checkbox","swal","Tooltip","generator","require","FloatFormat","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","IntegerFormat","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","importFile","inputFile","display","modal","alignItems","justifyContent","classes","userProfile","session_id","userTask","process_id","taskID","Form","setForm","selectedDoc","setSelectedDoc","docId","setDocId","formType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","gridForm","gridFormButtons","enumData","enumOptions","setEnumOptions","gridFormEnumData","fieldValue","setFieldValue","selectedOptions","setSelectedOptions","buttons","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","sectionColor","updateState","setUpdateState","taskType","showSavedDocuments","setShowSavedDocuments","showAttachedDocuments","setShowAttachedDocuments","openModal","setOpenModal","attachedImgs","setAttachedImgs","attachedImgsFiles","setAttachedImgsFiles","attachedDocs","setAttachedDocs","Blobs","setBlobs","selectedImg","setSelectedImg","savedImgs","setSavedImgs","savedImagesFiles","setSavedImagesFiles","savedDocs","setSavedDocs","buttonFilesWordPdfImgId","setButtonFilesWordPdfImgId","sortedColumn","setSortedColumn","sortedColumnOrder","setSortedColumnOrder","isSearchForm","setIsSearchForm","accordionExpanded","setAccordionExpanded","console","log","getUUID","parsedData","JSON","parse","s","parseInt","p","sortedDocList","sort","dynamicSort","filterDocList","fetchBySize","er","callErrorToast","undefined","parsedSelectedDoc","fields","sections","length","c","contents","fieldName","name","newEnumOptions","i","options","d","data","push","id","label","getLostEnumName","extension","convertBase64ToFile","content","fileName","enumI","type","handleExpandAccordion","handleOpenModal","handleCloseModal","handleCheckboxChange","event","checked","handleIntChange","stringNum","toString","replace","int","handleFloatChange","float","parseFloat","handleChange","handleSelectChange","option","updateSelectedOptions","slice","noSuchOption","handleDateTimeChange","fullDate","parseDate","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","convertedDate","getContentType","key","fetchFrom","fetchTo","Data","newDocList","Object","keys","match","contentType","searchField","toLowerCase","dataField","includeSearch","includes","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","handleCloseSnackBar","getPageAmount","pagesFloat","mathRoundOfPages","Math","round","uuidv1","keyGen","password","generate","numbers","swAllert","text","icon","ok","getFieldValuesSaveDocument","docToSave","getFieldValuesUpdateDocument","docToUpdate","checkForRequieredFields","checkedSuccessfuly","required","buttonClick","buttonName","item","commandJson","commandType","userId","userRole","variables","stringify","userAction","searchDoc","sendFieldValues","clearTabData","updateBody","files_directory","blobs","directory","document","checkResult","dir","authorization","getGridFormItems","dataItem","contentItem","color","fontSize","l","maxWidth","substring","Time","status","pushNewBlob","f","docUrl","URL","createObjectURL","fetch","then","res","blob","blobToBase64","cb","reader","FileReader","onload","dataUrl","result","base64","split","readAsDataURL","newBlob","handleAttachFile","e","selectedFiles","files","image","attachedImgClick","src","newId","attachedDocsList","selDocsList","backgroundColor","paddingLeft","minWidth","fontWeight","deleteAttachedDoc","attachedImgsList","imgs","deleteAttachedImage","deleteBlob","newImgList","newImgFilesList","newBlobs","b","dataurl","arr","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","convFile","File","handleAttachSavedFile","file","pushSavedImage","savedImgClick","savedDocsList","deleteSavedDoc","savedImgsList","converFileToBlob","deleteSavedImage","byteString","ab","ArrayBuffer","ia","Blob","cancel","click","checkToShowSection","section","showSection","show","checkSectionOnLastChild","lastSection","nextS","property","sortOrder","a","dateA","timeInSecA","getTime","dateB","timeInSecB","labelA","getEnumLabel","labelB","sortDataByColumn","getForm","map","sectionBuilder","bodyBuilder","contentBuilder","onKeyPressText","edit","selectedOption","body","menuPortal","base","zIndex","onKeyPressInt","inputComponent","onKeyPressFloat","onKeyPressDateTime","shrink","parseFullDateTime","code","charCode","index","fontColor","paddingTop","borderColor","position","top","marginBottom","imagePaper"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/DocsWithFiles/DocsWithFiles.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n// import clsx from 'clsx';\nimport { makeStyles} from '@material-ui/core/styles';\nimport Table from \"@material-ui/core/Table\"; // Material ui table for usual form\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport Modal from \"@material-ui/core/Modal\";\n// Accordion\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Icons\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\n// Form components\nimport GridSelect from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n// Libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport Tooltip from '@material-ui/core/Tooltip';\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props){\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}))\nexport default (props) => {\n    // This.state\n  const classes = useStyles()\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [Form, setForm] = useState(props.userTask.Form)\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  const [docId, setDocId] = useState(props.userTask.docId)\n  const [formType] = useState(props.userTask.formType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [gridForm] = useState(props.userTask.gridForm)\n  const [gridFormButtons] = useState(props.userTask.gridFormButtons)\n  const [enumData] = useState(props.userTask.enumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [gridFormEnumData] = useState(props.userTask.gridFormEnumData)\n  const [fieldValue, setFieldValue] = useState({})\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [buttons] = useState(props.userTask.buttons)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\")\n  const [sectionColor] = useState(\"#B2E0C9\")\n  const [updateState, setUpdateState] = useState(false)\n  const [taskType] = useState(props.userTask.taskType)\n  const [showSavedDocuments, setShowSavedDocuments] = useState(false)\n  const [showAttachedDocuments, setShowAttachedDocuments] = useState(false)\n\n  const [openModal, setOpenModal] = useState(false)\n  const [attachedImgs, setAttachedImgs] = useState([])\n  const [attachedImgsFiles, setAttachedImgsFiles] = useState([])\n  const [attachedDocs, setAttachedDocs] = useState([])\n  const [Blobs, setBlobs] = useState([])\n  const [selectedImg, setSelectedImg] = useState({})\n  const [savedImgs, setSavedImgs] = useState([])\n  const [savedImagesFiles, setSavedImagesFiles] = useState([])\n  const [savedDocs, setSavedDocs] = useState([])\n  const [buttonFilesWordPdfImgId, setButtonFilesWordPdfImgId] = useState(null)\n\n  const [sortedColumn, setSortedColumn] = useState(\"null\")\n  const [sortedColumnOrder, setSortedColumnOrder] = useState(1)\n  const [isSearchForm, setIsSearchForm] = useState(null)\n  const [accordionExpanded, setAccordionExpanded] = useState(false)\n  \n   // Set data from props to state of component\n   useEffect(()=>{\n    console.log(\"CONTRACTS PROPS\", props)\n    setButtonFilesWordPdfImgId(getUUID())\n    if(props.userTask.docList !== \"null\" && props.userTask.docList !== null){\n      try{\n        let parsedData  = JSON.parse(props.userTask.docList)\n        let s = parseInt(props.userTask.size)\n        let p = parseInt(props.userTask.page)\n        setSize(s)\n        setPage(p)\n        setIsSearchForm(true)\n        setFilteredDocList(parsedData)\n        setInitialDocList(parsedData)\n        let sortedDocList = parsedData.sort(dynamicSort(\"id\", 1, \"Int\"))\n        if(props.userTask.selectedDoc !== \"null\"){\n          filterDocList(0, s-1, sortedDocList, JSON.parse(props.userTask.selectedDoc))\n        }\n        else{fetchBySize(0, s-1, sortedDocList)}\n      }\n      catch(er){\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setIsSearchForm(true)\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    else{setIsSearchForm(false)}\n    if(props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null){\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      let fields = {}\n      // let Form = props.userTask.Form\n      for(let s=0; s<Form.sections.length; s++){\n        for(let c=0; c<Form.sections[s].contents.length; c++){\n          let fieldName = Form.sections[s].contents[c].name\n          fields[fieldName] = parsedSelectedDoc[fieldName]\n        }\n      }\n      console.log(\"SDOC\", parsedSelectedDoc)\n      // console.log(\"FIELDVAL\", fields)\n      setSelectedDoc(parsedSelectedDoc)\n      setFieldValue(fields)\n    }\n    if(props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\"){\n      let newEnumOptions = {}\n      for(let i=0; i<props.userTask.enumData.length; i++){\n        if(props.userTask.enumData[i] !== null){\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Пусто\",\n            \"name\" : props.userTask.enumData[i].name\n          }]\n          for(let d=0; d<props.userTask.enumData[i].data.length; d++){\n              options.push({\n              \"value\": props.userTask.enumData[i].data[d].id,\n              \"label\": props.userTask.enumData[i].data[d].label,\n              \"name\" : props.userTask.enumData[i].name\n            })\n          }\n          newEnumOptions[props.userTask.enumData[i].name] = options\n        }\n        else{\n          let options = [{\n            \"value\": \"\",\n            \"label\": \"Ошибка...\",\n            \"name\" : getLostEnumName(i)\n          }]\n          newEnumOptions[getLostEnumName(i)] = options\n          props.callErrorToast(\"Ошибка сбора справочной информации \" + getLostEnumName(i))\n        }\n      }\n      setEnumOptions(newEnumOptions)\n    }\n    if(props.userTask.taskType === \"showContractsCreatingForm\" || props.userTask.taskType === \"showExcertsCreatingForm\"){\n      setShowAttachedDocuments(true)\n    }\n    if(props.userTask.taskType === \"showContractsEditForm\" || props.userTask.taskType === \"showExcertsEditForm\"){\n      setShowAttachedDocuments(true)\n      setShowSavedDocuments(true)\n    }\n    if(props.userTask.savedDocs.length !== 0){\n      for(let d=0; d<props.userTask.savedDocs.length; d++){\n        let extension = props.userTask.savedDocs[d].extension\n        if(extension === \".png\"){\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".jpeg\" || extension === \".jpg\"){\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".doc\"){\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".docx\"){\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".xlsx\"){\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".pdf\"){\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n      }\n    }\n    setUpdateState(getUUID())\n  },[])\n  function getLostEnumName(i){\n    let enumI = 0\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        if(Form.sections[s].contents[c].type === \"Enum\"){\n          if(enumI === i){\n            return Form.sections[s].contents[c].name\n          }\n          else{enumI += 1}\n        }\n      }\n    }\n  }\n  function handleExpandAccordion(){\n    setAccordionExpanded(!accordionExpanded)\n  }\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n  const handleCloseModal = () => {\n    setOpenModal(false)\n  }\n  const handleCheckboxChange = (event) => {\n    setFieldValue({ ...fieldValue, [event.target.name]: event.target.checked });\n  }\n  // Integer input handler\n  const handleIntChange = (event) => {\n    console.log(\"EVENT\", event.target.name, event.target.value)\n    let stringNum = event.target.value.toString().replace(/ /g,'');\n    let int = parseInt(stringNum)\n    setFieldValue({ ...fieldValue, [event.target.name]: int });\n  }\n  // Float input handler\n  const handleFloatChange = (event) => {\n    let stringNum = event.target.value.toString().replace(/ /g,'');\n    let float = parseFloat(stringNum)\n    setFieldValue({...fieldValue, [event.target.name]: float})\n    console.log(\"FLOAT CHANGE\", event.target.name, fieldValue)\n  }\n  function handleChange(event){\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  function handleSelectChange(option){\n    fieldValue[option.name] = option.value\n    console.log(\"OPT\", option.name, option.value)\n    var updateSelectedOptions = selectedOptions.slice()\n    let noSuchOption = true\n    for(let i=0; i<updateSelectedOptions.length; i++){\n      if(option.name === updateSelectedOptions[i].name){\n        updateSelectedOptions[i] = option\n        noSuchOption = false\n        setSelectedOptions(updateSelectedOptions)\n        break\n      }\n      else {\n        noSuchOption = true\n      }\n    }\n    if(noSuchOption === true){\n      updateSelectedOptions.push(option)\n      setSelectedOptions(updateSelectedOptions)\n    }\n  }\n  function handleDateTimeChange(event){\n    let fullDate = props.parseDate(event.target.value)\n    var hours = new Date().getHours()\n    var minutes = new Date().getMinutes()\n    var seconds = new Date().getSeconds()\n    var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456+06\"\n    fieldValue[event.target.name] = convertedDate\n    setFieldValue(fieldValue)\n    console.log(\"DATE CHANGE\", event.target.value)\n  }\n\n  function getContentType(key){\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        if(key === Form.sections[s].contents[c].name){\n          return Form.sections[s].contents[c].type\n        }\n      }\n    }\n  }\n  // filter docList by filled parameters\n  function filterDocList(fetchFrom, fetchTo, Data, fields){\n    var newDocList = []\n    if(Object.keys(fields).length === 0){\n      newDocList = Data\n    }\n    else{\n      for(let i=0; i<Data.length; i++){\n        let match = false\n        for(let key in fields){\n          if(fields[key] === null || fields[key] === \"\" || fields[key] === undefined){\n            match = true\n          }\n          else{\n            if(Data[i][key] !== null){\n              let contentType = getContentType(key)\n              if(contentType === \"Text\"){\n                try{\n                  let searchField = fields[key].toLowerCase()\n                  let dataField = Data[i][key].toLowerCase()\n                  let includeSearch = dataField.includes(searchField)\n                  if(includeSearch === true){\n                    match = true\n                  }\n                  else{\n                    match = false\n                    break\n                  }\n                }\n                catch(er){\n                  console.log(\"ERR\", er)\n                  match = true\n                }\n              }\n              else if(contentType === \"Int\" || contentType === \"Float\"){\n                if(fields[key] >= 0 || fields[key] < 0){\n                  let searchField = fields[key].toString()\n                  let dataField = Data[i][key].toString()\n                  let includeSearch = dataField.includes(searchField)\n                  if(includeSearch === true){\n                    match = true\n                  }\n                  else{\n                    match = false\n                    break\n                  }\n                }\n                else{match = true}\n              }\n              else if(contentType === \"Enum\"){\n                \n                if(fields[key] === Data[i][key]){\n                  // console.log(\"ENUMS\", key, fields[key], Data[i][key])\n                  match = true\n                }\n                else{\n                  match = false\n                  break\n                }\n              }\n              else if(contentType === \"DateTime\"){\n                let searchField = props.parseDate(fields[key])\n                let dataField = props.parseDate(Data[i][key])\n                // console.log(\"DATES\", searchField, dataField, searchField.includes(dataField))\n                if(searchField === \"NaN-NaN-NaN\"){\n                  match = true\n                }\n                else{\n                  if(searchField.includes(dataField) === true){\n                    match = true\n                  }\n                  else{\n                    match = false\n                    break\n                  }\n                }\n              }\n              else if(contentType === \"Bool\"){\n                if(fields[key] === Data[i][key]){\n                  match = true\n                }\n                else{\n                  match = false\n                  break\n                }\n              }\n            }\n            else{\n              match = false\n              break\n            }\n          }\n        }\n        if(match === true){\n          newDocList.push(Data[i])\n        }\n      }\n    }\n    setFilteredDocList(newDocList)\n    fetchBySize(fetchFrom, fetchTo, newDocList)\n  }\n  // get rows amount of filtered docList by size\n  function fetchBySize(fetchFrom, fetchTo, Data){\n    // console.log(\"fetchFrom\", \"fetchTo\")\n    let newDocList = []\n    for(let i=fetchFrom; i<=fetchTo; i++){\n      if(Data[i] !== undefined){\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick(){\n    if(page !== 1){\n      setPage(1)\n      fetchBySize(0, size-1, filteredDocList)\n    }\n    else{\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page){\n    if(page !== 1){\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage -1) * size) //10\n      let fetchTo = (size * prevPage)-1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else{\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page){\n    if(docList.length < size-1){\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    } \n    else{\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size)-1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    \n  }\n  function handleChangeRowsPerPage(event){\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value-1, filteredDocList)\n  } \n  function GoToPage(){\n    let fetchFrom = (page*size-1)-size\n    let fetchTo = page*size-1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event){\n    setPage(event.target.value)\n  }\n  function handleCloseSnackBar(){\n    setShowSnackBar(false)\n  }\n  function getPageAmount(){\n    let pagesFloat = (filteredDocList.length)/size\n    let mathRoundOfPages = Math.round(pagesFloat)\n    if(pagesFloat > mathRoundOfPages){\n      return mathRoundOfPages + 1\n    }\n    else{\n      return mathRoundOfPages\n    }\n  }\n  // random UUID generator\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // random numbers generator\n  function keyGen(length){\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function swAllert(text, icon){\n    return(\n      swal({\n        text: text,\n        icon: icon,\n        buttons: {ok: \"Ок\"},\n      })\n      // .then((click) => {\n      //   if(click === \"ok\"){\n      //     console.log(\"CLICK OK\", click)\n      //   }\n      // })\n    )\n  }\n  // Collect data to save doc\n  function getFieldValuesSaveDocument(){\n    let docToSave = {}\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        let fieldName = Form.sections[s].contents[c].name\n        if(Form.sections[s].contents[c].type === \"Bool\" && fieldValue[fieldName] === undefined){\n          docToSave[fieldName] = false\n        }\n        else{\n          docToSave[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToSave\n  }\n  function getFieldValuesUpdateDocument(){\n    let docToUpdate = selectedDoc\n    // docToUpdate[\"created_at\"] = selectedDoc.created_at\n    // docToUpdate[\"id\"] = selectedDoc.id\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        let fieldName = Form.sections[s].contents[c].name\n        if(Form.sections[s].contents[c].type === \"Bool\" && (fieldValue[fieldName] === undefined || fieldValue[fieldName] === null)){\n          docToUpdate[fieldName] = false\n        }\n        else{\n          docToUpdate[fieldName] = fieldValue[fieldName]\n        }\n      }\n    }\n    return docToUpdate\n  }\n  function checkForRequieredFields(){\n    let checkedSuccessfuly = false\n    for(let s=0; s<Form.sections.length; s++){\n      for(let c=0; c<Form.sections[s].contents.length; c++){\n        let fieldName = Form.sections[s].contents[c].name\n        if(Form.sections[s].contents[c].required === true && (fieldValue[fieldName] === undefined || \n          fieldValue[fieldName] === null || fieldValue[fieldName] === \"NaN.NaN.NaN\" || fieldValue[fieldName].length === 0)){\n          checkedSuccessfuly = false\n          swAllert(\"Внимание заполните поле \\\"\" +  Form.sections[s].contents[c].label + \"\\\"\")\n          break\n        }\n        else{\n          checkedSuccessfuly = true\n        }\n      }\n    }\n    return checkedSuccessfuly\n  }\n  function buttonClick(buttonName, item){      \n    if(buttonName === \"findDocument\"){\n      filterDocList(0, size, initialDocList, fieldValue)\n    }\n    else if(buttonName === \"openDocument\"){\n      // console.log(\"ITEM\", item)\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          selectedDoc: {value: JSON.stringify(item)},\n          userAction: {value: \"openDocument\"},\n          docId: {value: item.id},\n          searchDoc: {value: JSON.stringify(fieldValue)}\n        }\n      }\n      console.log(\"button openDocument: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"updateDocument\"){\n      let updateBody = getFieldValuesUpdateDocument()\n      updateBody.files_directory = selectedDoc.files_directory\n      let commandJson = \n      {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        blobs: Blobs,\n        directory: selectedDoc.files_directory,\n        variables: {\n          userAction: {value: \"updateDocument\"},\n          document: {value: JSON.stringify(updateBody)}\n        }\n      }\n      let checkResult = checkForRequieredFields()\n      if(checkResult === true){\n        console.log(\"updateDocument:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if(buttonName === \"createDocument\"){\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {value: \"createDocument\"},\n          searchDoc: {value: JSON.stringify(fieldValue)}\n        }\n      }\n      console.log(\"createDocument:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"saveDocument\"){\n      let docToSave = getFieldValuesSaveDocument()\n      let dir = getUUID()\n      docToSave.files_directory = dir\n      let commandJson = \n      {\n        commandType: \"saveDocumentsWithFiles\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        blobs: Blobs,\n        directory: dir,\n        variables: {\n          userAction: {value: \"saveDocument\"},\n          document: {value: JSON.stringify(docToSave)}\n        }\n      }\n      let checkResult = checkForRequieredFields()\n      if(checkResult === true){\n        console.log(\"saveDocument:\", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n      // swAllert(\"Данные сохранены!\", \"success\")\n    }\n    else if(buttonName === \"updateDocList\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"updateDocList\"},\n        }\n      }\n      console.log(\"button updateDocList: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (buttonName === \"back\"){\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {value: \"back\"},\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(buttonName === \"cancel\"){\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        userRole: userProfile.userRole,\n        variables: {\n          authorization: {value: \"token\"},\n          userAction: {value: \"cancel\"},\n        }\n      }\n      console.log(\"button cancel: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else{\n      console.log(\"UNKNOWN Button \", buttonName)\n    }\n  }\n \n  // Create grid form components\n  function getGridFormItems(dataItem, contentItem){\n    let value = dataItem[contentItem.name]\n    let name = contentItem.name\n    let type = contentItem.type\n    if(type === \"Enum\"){\n      if(value === null || value === \"\" || value === undefined){\n        return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n      }\n      else{\n        for(let i=0; i<gridFormEnumData.length; i++){\n          if(gridFormEnumData[i] !== null){\n            if(name === gridFormEnumData[i].name){\n              for(let l=0; l<gridFormEnumData[i].data.length; l++){\n                if(gridFormEnumData[i].data[l].id === parseInt(value)){\n                  return gridFormEnumData[i].data[l].label\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    else if(type === \"Bool\"){\n      // console.log(\"ITEM\", name, value, type)\n      return(\n        <Checkbox\n          style={{maxWidth: 20, height: 15, color: value === false ? \"red\" : \"green\"}}\n          checked = {(value === false || value === null || value === undefined) ? false : true}\n        />\n      )\n    }\n    else if(type === \"DateTime\"){\n      if(value === null || value === \"\" || value === undefined){\n        return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n      }\n      else{\n        // console.log(\"ITEM\", dataItem, value)\n        let Date = value.substring(0, 10)\n        let Time = value.substring(11, 16)\n        return Date + \" \" + Time\n      }\n    }\n    else if(type === \"Text\"){\n      // console.log(\"ITEM\", name, value, type)\n      if(name === \"instructionStatus\"){\n        let status = \"-\"\n        if(dataItem[\"filled\"] === true){\n          status = \"Введено\"\n        }\n        if(dataItem[\"onExecution\"] === true){\n          status = \"Введено -> На исполнении\"\n        }\n        if(dataItem[\"executed\"] === true){\n          status = \"На исполнении -> Исполнено\"\n        }\n        if(dataItem[\"canceled\"] === true){\n          status = \"На исполнении -> Отменено\"\n        }\n        return status\n      }\n      else{\n        if(value === null || value === \"\" || value === undefined){\n          return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n        }\n        else{\n          return(<td>{value}</td>)\n        }\n      }\n    }\n    else{\n      if(value === null || value === \"\" || value === undefined){\n        return(<td align=\"center\" style={{color: \"black\", fontSize: 12}}>-</td>)\n      }\n      else{\n        return(<td>{value}</td>)\n      }\n    }\n  }\n  // attached documents\n  async function pushNewBlob(f){\n    // console.log(\"WRITING BLOBS\")\n    let docUrl = URL.createObjectURL(f)\n    fetch(docUrl)\n    .then(res => res.blob())\n    .then(blob => {\n      // blob.name = f.name\n      var blobToBase64 = function(f, cb) {\n        let reader = new FileReader()\n        reader.onload = function(){\n          // converts blob to base64\n          var dataUrl = reader.result\n          var base64 = dataUrl.split(\",\")[1]\n          cb(base64)\n        }\n        reader.readAsDataURL(f)\n      }\n      blobToBase64(f,  async function(base64){\n        // encode blobs to send to socket\n        let newBlob = {\"name\": f.name, \"blob\": base64, \"size\": f.size}\n        Blobs.push(newBlob)\n        setBlobs(Blobs)\n        // console.log(\"BLOBS\", Blobs)\n      })\n    })\n  }\n  function handleAttachFile(e){\n    let selectedFiles = e.target.files\n    console.log(\"A DOCS\", selectedFiles)\n    if(selectedFiles && selectedFiles[0]){\n      for(let i=0; i<selectedFiles.length; i++){\n        if(selectedFiles[i].type === \"application/pdf\" ||\n          selectedFiles[i].type === \"application/msword\" ||\n          selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n          selectedFiles[i].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"){\n          attachedDocs.push(selectedFiles[i])\n          setAttachedDocs(attachedDocs)\n          setUpdateState(getUUID())\n          // console.log(\"A DOCS\", attachedDocs)\n        }\n        else{\n          let reader = new FileReader()\n          reader.onload = async function(e){\n            // push new images to list and show in UI\n            let image = {item: <img name={selectedFiles[i].name} height=\"150\" width=\"auto\" src={e.target.result} onClick={()=> attachedImgClick(selectedFiles[i].name)}/>}\n            attachedImgs.push(image)\n            setAttachedImgs(attachedImgs)\n            setUpdateState(getUUID())\n            // console.log(\"IMGLIST\", attachedImgs)\n          }\n          reader.readAsDataURL(selectedFiles[i])\n          attachedImgsFiles.push(selectedFiles[i])\n          // pushAttachedImage(selectedFiles[i])\n          setAttachedImgsFiles(attachedImgsFiles)\n          // console.log(\"A IMGS\", attachedImgsFiles)\n        }\n        pushNewBlob(selectedFiles[i])\n      }\n    }\n    \n  }\n  // async function pushAttachedImage(f){\n  //   let reader = new FileReader()\n  //   reader.onload = async function(e){\n  //     // push new images to list and show in UI\n  //     let image = {item: <img name={f.name} height=\"150\" width=\"auto\" src={e.target.result} onClick={()=> attachedImgClick(f.name)}/>}\n  //     attachedImgs.push(image)\n  //     setAttachedImgs(attachedImgs)\n  //     // console.log(\"IMGLIST\", attachedImgs)\n  //   }\n  //   reader.readAsDataURL(f)\n  //   // setUpdateState(getUUID())\n  // }\n  async function attachedImgClick(name){\n    for(let l=0; l<attachedImgs.length; l++){\n      if(attachedImgs[l].item.props.name === name){\n        console.log(\"IMG\", attachedImgs[l])\n        setSelectedImg({\n          name: attachedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: attachedImgs[l].item.props.src\n        })\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function attachedDocsList(){\n    console.log(\"A DOCS\", attachedDocs)\n    let selDocsList = []\n    for(let i=0; i<attachedDocs.length; i++){\n      selDocsList.push(\n      <Card style={{margin: 3, backgroundColor:\"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\"}}>\n        <table>\n          <tr>\n            <td style={{color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\"}}>\n               {attachedDocs[i].name + \" \"}{\"(\" + Math.round(attachedDocs[i].size/1000) + \")\" + \"КБ\"}\n            </td>\n            <td>\n              <IconButton>\n                <CloseIcon style={{fontSize: \"medium\", color: \"black\"}} onClick={()=> deleteAttachedDoc(attachedDocs[i].name)}/>\n              </IconButton>\n            </td>\n          </tr>\n        </table>\n    </Card>)\n    \n    }\n    return(selDocsList)\n  }\n  function attachedImgsList(){\n    var imgs = []\n    for(let l=0; l<attachedImgs.length; l++){\n      imgs.push(\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              {attachedImgs[l].item}\n            </TableCell>\n          </TableRow>\n          {/* <TableRow>\n            <TableCell width=\"20%\">\n              {attachedImgs[l].item.props.name}\n            </TableCell>\n          </TableRow> */}\n          <TableRow>\n            <TableCell align=\"center\">\n              <IconButton onClick={()=> deleteAttachedImage(attachedImgs[l].item.props.name)}>\n                <DeleteForeverIcon  fontSize=\"Large\" style={{color: \"black\", margin: 0}}/>\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      )\n    }\n    if(Object.keys(imgs).length !== 0){\n      return(\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      ) \n    }\n  }\n  function deleteAttachedDoc(name){\n    let newDocList = []\n    for(let i=0; i<attachedDocs.length; i++){\n      if(name !== attachedDocs[i].name){\n        newDocList.push(attachedDocs[i])\n      }\n      else{\n        deleteBlob(attachedDocs[i].name)\n      }\n    }\n    // attachedDocs = newDocList\n    setAttachedDocs(newDocList)\n    // setUpdateState(getUUID())\n    // console.log(\"FILES\", newDocList)\n  }\n  function deleteAttachedImage(name){\n    let newImgList = []\n    let newImgFilesList = []\n    for(let i=0; i<attachedImgs.length; i++){\n      if(name !== attachedImgs[i].item.props.name){\n        newImgList.push(attachedImgs[i])\n        newImgFilesList.push(attachedImgsFiles[i])\n      }\n      else{\n        deleteBlob(attachedImgs[i].item.props.name)\n      }\n    }\n    // deleteBlob(name)\n    // attachedImgs = newImgList\n    setAttachedImgs(newImgList)\n    // attachedImgsFiles = newImgFilesList\n    setAttachedImgsFiles(newImgFilesList)\n    // setUpdateState(getUUID())\n    // console.log(\"IMGS\", newImgFilesList)\n  }\n  function deleteBlob(name){\n    console.log(\"NAME\", name)\n    let newBlobs = []\n    for(let b=0; b<Blobs.length; b++){\n      if(Blobs[b].name !== undefined){\n        if(name !== Blobs[b].name){\n          newBlobs.push(Blobs[b])\n        }\n        else{\n          console.log(\"DEL\", Blobs[b].name)\n        }\n      }\n    }\n    console.log(\"BLOBS\", newBlobs)\n    setBlobs(newBlobs)\n  }\n  // Previosly saved documents\n  function convertBase64ToFile(dataurl, fileName){\n    var arr = dataurl.split(','),\n    mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n)\n    \n    while(n--){\n      u8arr[n] = bstr.charCodeAt(n)\n    }\n    let convFile = new File([u8arr], fileName, {type: mime})\n    handleAttachSavedFile(convFile)\n    console.log(\"CONV FILE\", convFile)\n  }\n  function handleAttachSavedFile(file){\n    console.log(\"FILE\", file)\n    if(file.type === \"application/pdf\" || file.type === \"application/msword\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"){\n      savedDocs.push(file)\n      setSavedDocs(savedDocs)\n    }\n    else{\n      savedImagesFiles.push(file)\n      setSavedImagesFiles(savedImagesFiles)\n      pushSavedImage(file)\n    }\n    // setUpdateState(getUUID())\n  }\n  async function pushSavedImage(f){\n    let reader = new FileReader()\n    reader.onload = async function(e){\n      // push new images to list and show in UI\n      let image = {item: <img name={f.name} height=\"150\" width=\"auto\" src={e.target.result} onClick={()=> savedImgClick(f.name)}/>}\n      savedImgs.push(image)\n      // console.log(\"IMGLIST\", savedImgs)\n      setSavedImgs(savedImgs)\n      setUpdateState(getUUID())\n    }\n    reader.readAsDataURL(f)\n  }\n  async function savedImgClick(name){\n    for(let l=0; l<savedImgs.length; l++){\n      if(savedImgs[l].item.props.name === name){\n        console.log(\"IMG\", savedImgs[l])\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        })\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function savedDocsList(){\n    console.log(\"SAVEDOCS\", savedDocs)\n    let savedDocsList = []\n    for(let i=0; i<savedDocs.length; i++){\n      savedDocsList.push(\n      <Card style={{margin: 3, backgroundColor:\"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\"}}>\n        <table>\n          <tr>\n            <td style={{color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\"}}>\n               {savedDocs[i].name + \" \"}{\"(\" + Math.round(savedDocs[i].size/1000) + \")\" + \"КБ\"}\n            </td>\n            <td>\n              <IconButton>\n                <CloseIcon style={{fontSize: \"medium\", color: \"black\"}} onClick={()=> deleteSavedDoc(savedDocs[i].name)}/>\n              </IconButton>\n            </td>\n            <td>\n              <IconButton\n                component=\"a\"\n                href={URL.createObjectURL(savedDocs[i])}\n                download={savedDocs[i].name}\n              >\n                <GetAppIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n              </IconButton>\n            </td>\n          </tr>\n        </table>\n    </Card>)\n    // console.log(\"FILE\", savedDocs[i])\n    }\n    return(savedDocsList)\n  }\n  function savedImgsList(){\n    console.log(\"SAVEDIMGS\", savedImgs)\n    var imgs = []\n    for(let l=0; l<savedImgs.length; l++){\n      let blob = converFileToBlob(savedImgs[l].item.props.src)\n      imgs.push(\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              {savedImgs[l].item}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell align=\"center\">\n              <IconButton onClick={()=> deleteSavedImage(savedImgs[l].item.props.name)}>\n                <DeleteForeverIcon  fontSize=\"Large\" style={{color: \"black\", margin: 0}}/>\n              </IconButton>\n              <IconButton \n                component=\"a\"\n                href={URL.createObjectURL(blob)}\n                download={savedImgs[l].item.props.name}\n              >\n                <GetAppIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      )\n    }\n    if(Object.keys(imgs).length !== 0){\n      return(\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      ) \n    }\n  }\n  function converFileToBlob(src){\n    var byteString = atob(src.split(',')[1])\n    var ab = new ArrayBuffer(byteString.length)\n    var ia = new Uint8Array(ab)\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ab], { type: 'image/jpeg' })\n  }\n  function deleteSavedDoc(name){\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: {ok: \"Да\", cancel: \"Отмена\"},\n    })\n    .then((click) => {\n      if(click === \"ok\"){\n        let newDocList = []\n        for(let i=0; i<savedDocs.length; i++){\n          if(name !== savedDocs[i].name){\n            newDocList.push(savedDocs[i])\n          }\n        }\n        setSavedDocs(newDocList)\n        let commandJson = {\n          commandType: \"deleteSavedDoc\",\n          userId: userProfile.userId,\n          directory: selectedDoc.files_directory,\n          fileName: name\n        }\n        props.sendFieldValues(commandJson)\n      }\n    })\n  }\n  function deleteSavedImage(name){\n    swal({\n      text: \"Вы действительно хотите удалить этот файл?\",\n      icon: \"warning\",\n      buttons: {ok: \"Да\", cancel: \"Отмена\"},\n    })\n    .then((click) => {\n      if(click === \"ok\"){\n        let newImgList = []\n        for(let i=0; i<savedImgs.length; i++){\n          if(name !== savedImgs[i].item.props.name){\n            newImgList.push(savedImgs[i])\n          }\n        }\n        setSavedImgs(newImgList)\n        // setUpdateState(getUUID())\n        let commandJson = \n        {\n          commandType: \"deleteSavedDoc\",\n          userId: userProfile.userId,\n          directory: selectedDoc.files_directory,\n          fileName: name\n        }\n        props.sendFieldValues(commandJson)\n      }\n    })\n  }\n  function checkToShowSection(section){\n    let showSection = false\n    for(let i=0; i<section.contents.length; i++){\n      if(section.contents[i].show === true){\n        showSection = true \n        break\n      }\n    }\n    return showSection\n  }\n  function checkSectionOnLastChild(i){\n    let lastSection = true\n    if(i === gridForm.sections.length-1){ // The last section\n      return true\n    }\n    else{\n      let nextS = i+1\n      console.log(\"IT\", i, gridForm.sections[nextS])\n      for(let s=nextS; s<gridForm.sections.length; s++){\n        for(let c=0; c<gridForm.sections[s].contents.length; c++){ // Check next section\n          if(gridForm.sections[s].contents[c].show === true){\n            lastSection = false\n            break\n          }\n        }\n      }\n    }\n    return lastSection\n  }\n\n  function dynamicSort(property, sortOrder, type) {\n    if(type === \"DateTime\" || type === \"Bool\"){\n      sortOrder = sortOrder * -1\n    }\n    // console.log(\"SORT\", property, sortOrder, type)\n    if(type === \"DateTime\"){\n      return function(a, b){\n        if(a[property] !== null && b[property] !== null){\n          let dateA = new Date(a[property].substring(0, 19))\n          let timeInSecA =  dateA.getTime()/1000\n          // console.log(\"timeInSecA\", timeInSecA)\n          let dateB = new Date(b[property].substring(0, 19))\n          let timeInSecB =  dateB.getTime()/1000\n          // console.log(\"timeInSecB\", timeInSecB)\n          var result = (timeInSecA < timeInSecB) ? -1 : (timeInSecA > timeInSecB) ? 1 : 0\n          return result * sortOrder\n        }\n        else{\n          if(a[property] === null){\n            return -1 * sortOrder\n          }\n          return 1 * sortOrder\n        }\n      }\n    }\n    else if(type === \"Int\" || type === \"Text\" || type === \"Float\" || type === \"Bool\"){\n      return function(a, b){\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0\n        return result * sortOrder\n      }\n    }\n    else if(type === \"Enum\"){\n      return function(a, b){\n        if(a[property] === null){\n          return 1 * sortOrder\n        }\n        else{\n          let labelA = getEnumLabel(property, a[property])\n          // console.log(\"A\", property, a[property], labelA)\n          let labelB = getEnumLabel(property, b[property])\n          // console.log(\"labelB\", labelB, property, b)\n          var result = (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0\n          return result * sortOrder\n        }\n        \n      }\n    }\n  }\n  function sortDataByColumn(name, type){\n    let sortOrder = 1\n    if(sortedColumn === name){\n      sortOrder = sortedColumnOrder * -1\n    }\n    setSortedColumnOrder(sortOrder)\n    setSortedColumn(name)\n    let sortedDocList = filteredDocList.sort(dynamicSort(name, sortOrder, type))\n    // let fetchFrom = (page*size-1)-size\n    // let fetchTo = page*size-1\n    setPage(1)\n    let fetchFrom = 0\n    let fetchTo = size-1\n    setFilteredDocList(sortedDocList)\n    fetchBySize(fetchFrom, fetchTo, sortedDocList)\n  }\n  function getEnumLabel(name, id){\n    for(let i=0; i<enumData.length; i++){\n      if(enumData[i].name === name){\n        for(let d=0; d<enumData[i].data.length; d++){\n          if(enumData[i].data[d].id === id){\n            return enumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function getForm(){\n    return(\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n        <Grid item xs={isSearchForm === true ? 12 : 8}>\n          <Paper>\n            <Table style={{width:\"100%\", \"border-collapse\": \"collapse\"}}>\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {Form.sections.map(section => {\n                  return sectionBuilder(section)\n                })}\n              </Grid>\n              {/* <Grid container  direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                {buttons.map((button, index) => (\n                  <Button\n                    name={button.name}\n                    variant=\"outlined\"\n                    onClick = {() => buttonClick(button.name, null)}\n                    style={{\n                      margin: 3,\n                      color: button.fontColor,\n                      backgroundColor: button.backgroundColor,\n                      height: 32,\n                      fontSize: 12\n                    }}\n                  >{button.label}\n                  </Button>\n                ))}\n              </Grid> */}\n            </Table>  \n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n  // Create sections with labels and call bodyBuilder function\n  function sectionBuilder(section){\n    return (\n      <Table size=\"small\" key={keyGen(5)}>\n        <TableHead>\n          <TableRow style={{height: 30}}>\n            <TableCell \n              key={keyGen(5)} \n              style={{\n                color: \"black\", \n                fontSize: 14,\n                backgroundColor: sectionColor,\n                width: \"100%\"\n              }}>\n                {section.label}\n            </TableCell> \n          </TableRow>\n        </TableHead>\n        {bodyBuilder(section)}\n      </Table>\n    )\n  }\n  // Create body of each section and call contentBuilder function\n  function bodyBuilder(section){\n    return(\n      <Table size=\"small\">\n        <TableBody>\n          {section.contents.map(contentItem=> (\n            contentItem.show === true &&\n              <TableRow key = {keyGen(5)} style={{height: 30}}> \n                <TableCell\n                  key = {keyGen(5)}\n                  align=\"left\"\n                  style={{width: \"40%\"}}>\n                  {contentItem.label}\n                </TableCell>                           \n                <TableCell\n                  key = {keyGen(5)}\n                  align=\"left\"\n                  style={{width: \"60%\", height: 30}}\n                  >{contentBuilder(contentItem)}\n                </TableCell>\n              </TableRow>\n          ))} \n        </TableBody>\n      </Table>\n    )\n  }\n  // Creating components by it's type\n  function contentBuilder(contentItem){\n    if (contentItem.type === \"Text\"){\n      return (\n        <TextField\n          onKeyPress={onKeyPressText}\n          multiline={!isSearchForm}\n          onBlur = {handleChange}\n          name = {contentItem.name}\n          style={{width: \"100%\"}}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n        />\n      )\n    }  \n    else if (contentItem.type === \"Enum\"){\n      let selectedOption = {\n        \"value\": \"\",\n        \"label\": \"Пусто\",\n        \"name\" : contentItem.name\n      }\n      if(fieldValue[contentItem.name] !== undefined){\n        for(let i=0; i<enumOptions[contentItem.name].length; i++){\n          if(parseInt(fieldValue[contentItem.name]) === enumOptions[contentItem.name][i].value){\n            selectedOption = enumOptions[contentItem.name][i]\n            break\n          }\n        }\n      }\n      if(selectedOptions.length !== 0){\n        for(let i=0; i<selectedOptions.length; i++){\n          if(contentItem.name === selectedOptions[i].name){\n            selectedOption = selectedOptions[i]\n          }\n        }\n      }\n      return (\n        <Select\n          name = {contentItem.name}\n          value = {selectedOption}\n          onChange={handleSelectChange}\n          options={enumOptions[contentItem.name]}\n          isDisabled ={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n        />\n      )\n    }\n    else if(contentItem.type === \"Bool\"){\n      return(\n        <Checkbox\n          style={{maxWidth: 20, height: 15, color: (formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\"}}\n          name = {contentItem.name}\n          onChange={handleCheckboxChange}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          checked = {(fieldValue[contentItem.name] === false || fieldValue[contentItem.name] === null || fieldValue[contentItem.name] === undefined) ? false : true}\n        />\n      )\n    }\n    else if(contentItem.type === \"Int\"){\n      return (\n        <TextField\n          onKeyPress={onKeyPressInt}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          style={{width: \"100%\"}}\n          defaultValue = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          // value = {(fieldValue[contentItem.name] !== undefined) ? fieldValue[contentItem.name]: \"\"}\n          onBlur = {handleIntChange}\n          name = {contentItem.name}\n          InputProps={{inputComponent: IntegerFormat}}\n        />\n      )\n    }\n    else if(contentItem.type === \"Float\"){\n      console.log(\"FLOAT VAL\", fieldValue[contentItem.name])\n      return(\n        <TextField\n          onKeyPress={onKeyPressFloat}\n          name = {contentItem.name}\n          // defaultValue = {(fieldValue[contentItem.name]) ? fieldValue[contentItem.name]: \"\"}\n          onBlur = {handleFloatChange}\n          value = {fieldValue[contentItem.name]}\n          style={{width: \"100%\"}}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputProps={{inputComponent: FloatFormat}}\n        />\n      )\n    }\n    else if (contentItem.type === \"DateTime\"){\n      return (\n        <TextField\n          onKeyPress={onKeyPressDateTime}\n          type=\"date\"\n          name = {contentItem.name}\n          onBlur = {handleDateTimeChange}\n          style={{width: \"100%\"}}\n          defaultValue = {(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseDate(fieldValue[contentItem.name]): \"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      )\n    }\n    else if (contentItem.type === \"FullDateTime\"){\n      return (\n        <TextField\n          name = {contentItem.name}\n          onBlur = {handleDateTimeChange}\n          style={{width: \"100%\"}}\n          value={(fieldValue[contentItem.name] !== undefined && fieldValue[contentItem.name] !== null) ? props.parseFullDateTime(fieldValue[contentItem.name]):\"\"}\n          disabled={(formType === \"view\" || contentItem.edit === false) ? true : false}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n      )\n    }\n  }\n  // Key press handlers for some fields\n  function onKeyPressText(event){\n    let code = event.charCode\n    if(code === 13){\n      for(let i=0; i<buttons.length; i++){\n        if(buttons[i].name === \"findDocument\"){\n          // console.log(\"CODE\", code)\n          handleChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressDateTime(event){\n    let code = event.charCode\n    if(code === 13){\n      for(let i=0; i<buttons.length; i++){\n        if(buttons[i].name === \"findDocument\"){\n          // console.log(\"CODE\", code)\n          handleDateTimeChange(event)\n          buttonClick(\"findDocument\", null)\n        }\n      }\n    }\n  }\n  function onKeyPressInt(event){\n    let code = event.charCode\n    if(code === 13){\n      for(let i=0; i<buttons.length; i++){\n        if(buttons[i].name === \"findDocument\"){\n          // console.log(\"CODE\", code)\n          let stringNum = event.target.value.toString().replace(/ /g,'')\n          let int = parseInt(stringNum)\n          fieldValue[event.target.name] = int\n          setFieldValue(fieldValue)\n          filterDocList(0, size-1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  function onKeyPressFloat(event){\n    let code = event.charCode\n    if(code === 13){\n      for(let i=0; i<buttons.length; i++){\n        if(buttons[i].name === \"findDocument\"){\n          let stringNum = event.target.value.toString().replace(/ /g,'')\n          let float = parseFloat(stringNum)\n          fieldValue[event.target.name] = float\n          setFieldValue(fieldValue)\n          filterDocList(0, size-1, initialDocList, fieldValue)\n        }\n      }\n    }\n  }\n  if(updateState !== null){\n    try{\n      return(\n        <Grid>\n          {/* Create main search table */}\n          {isSearchForm !== null &&\n            isSearchForm === true \n            ?\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n              <Grid item xs={8}>\n                <Accordion expanded={accordionExpanded} onChange={() => handleExpandAccordion()}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                  >\n                    <Typography>{Form.label}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    {getForm()}\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n            </Grid>\n            :\n            getForm()\n          }\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n            {buttons.map((button, index) => (\n              <Button\n                name={button.name}\n                variant=\"outlined\"\n                onClick = {() => buttonClick(button.name, null)}\n                style={{\n                  margin: 3,\n                  color: button.fontColor,\n                  backgroundColor: button.backgroundColor,\n                  height: 32,\n                  fontSize: 12\n                }}\n              >{button.label}\n              </Button>\n            ))}\n          </Grid>\n          {isSearchForm === true &&\n            <ReplayIcon style={{paddingTop: 3}} onClick={()=> buttonClick(\"updateDocList\")}/>\n          }\n          {showAttachedDocuments === true && \n            <Paper>\n              <Grid item>\n                <Grid container direction=\"row\">         \n                  <div className={classes.importFile}>\n                    <input\n                      accept=\"image/*, application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                      className={classes.inputFile}\n                      id={buttonFilesWordPdfImgId}\n                      multiple\n                      type=\"file\"\n                      onChange={handleAttachFile}\n                    />\n                    <label htmlFor={buttonFilesWordPdfImgId}>\n                      <Button\n                        component=\"span\"\n                        key={keyGen(5)}\n                        variant=\"outlined\"\n                        style={{\n                          margin: 3,\n                          color: \"white\",\n                          backgroundColor: \"#BB7100\",\n                          borderColor: \"#161C87\",\n                          height: 32,\n                          fontSize: 12\n                        }}\n                        endIcon={<AttachFileIcon/>}\n                      >Прикрепить файлы\n                      </Button>\n                    </label>\n                  </div>\n                </Grid>\n              </Grid>\n              <Grid container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n                <Grid item xs={\"auto\"}>\n                  <Grid container direction=\"column\" spacing={1}>\n                    <div style={{paddingLeft: 10}}>Прикрепленные документы</div>\n                    {attachedDocsList()}\n                    {attachedImgsList()}\n                  </Grid>\n                </Grid>\n              </Grid>\n          {showSavedDocuments === true &&\n            <Grid container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n              <Grid item xs={\"auto\"}>\n                <Grid container direction=\"column\" spacing={1}>\n                  <div style={{paddingLeft: 10}}>Сохраненные документы</div>\n                  {savedDocsList()}\n                  {savedImgsList()}\n                </Grid>\n              </Grid>\n            </Grid>\n          }\n            </Paper>\n          }\n          {docList !== null &&\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\n              <Grid item sm={\"auto\"}>\n                <Paper>\n                  <div style={{height: \"500px\", overflow: \"auto\"}}>\n                    <table size=\"small\" class=\"main-table-style\">\n                      <thead class=\"thead-style\" style={{position: \"sticky\", top: 0}}>\n                        {/* 1st Row Sections Labels */}\n                        <tr>\n                          <td class=\"td-head-first-child\" colSpan=\"1\"></td>\n                          {gridForm.sections.map((section, index) => {\n                            let showSection = checkToShowSection(section)\n                            if(showSection === true){\n                              let lastSection = checkSectionOnLastChild(index)\n                              return (\n                                <td \n                                  class={lastSection === true ? \"td-head-last-child\" : \"td-head-style\"}\n                                  colSpan={section.contents.length}\n                                >{section.label}</td>\n                              )\n                            }\n                          })}\n                        </tr>\n                        {/* 2nd Row Sections Contents labels */}\n                        <tr>\n                          <td \n                            class=\"td-head-style-2row\"\n                            rowSpan=\"2\" \n                            style={{\"minWidth\": \"65px\"}}\n                          >\n                            Действие\n                          </td>\n                          {gridForm.sections.map(section =>\n                            section.contents.map(contentItem => {\n                              if(contentItem.show === true){\n                                return (\n                                  <td \n                                    class=\"td-head-style-2row\"\n                                    rowSpan=\"2\"\n                                    onClick={()=> sortDataByColumn(contentItem.name, contentItem.type)} \n                                  >\n                                    {contentItem.label}\n                                    {sortedColumn === contentItem.name ? sortedColumnOrder === 1 ? <ArrowDropDownIcon style={{marginBottom: -8}}/> : <ArrowDropUpIcon style={{marginBottom: -8}}/> : \"\"}\n                                  </td>\n                                )\n                              }\n                            })\n                          )}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.keys(docList).length !== 0 &&\n                          docList.map(dataItem => (\n                            <tr key={keyGen(5)} style={{\"height\": 30}}>\n                              <td class=\"td-style\" style={{\"maxWidth\": 34}}>\n                                {gridFormButtons !== \"null\" &&\n                                  gridFormButtons.map(button => \n                                  <Button\n                                    key={button.name}\n                                    name={button.name}\n                                    variant=\"outlined\"\n                                    // id={dataItem.id}\n                                    value={button.name}                               \n                                    onClick = {() => buttonClick(button.name, dataItem)}\n                                    style={{\n                                      margin: 1,\n                                      height: 24,\n                                      fontSize: 10,\n                                      maxWidth: 32,\n                                      backgroundColor: button.backgroundColor,\n                                      borderColor: \"darkgreen\",\n                                      color: \"darkgreen\"\n                                    }}\n                                  >{button.label}\n                                  </Button>\n                                )}\n                              </td>\n                              {gridForm.sections.map(section => (\n                                section.contents.map(contentItem => {\n                                  if(contentItem.show === true){\n                                    return(\n                                      <td key={keyGen(4)} align=\"left\" style={{color: \"black\", fontSize: 12, \"text-align\": \"center\", \"border-bottom\": \"1px solid grey\"}}>\n                                        {getGridFormItems(dataItem, contentItem)}\n                                      </td>\n                                    )\n                                  }\n                                })\n                              ))}\n                            </tr>\n                          )\n                        )}                    \n                      </tbody>\n                    </table>\n                  </div>\n                  <tfoot>\n                    <tr>\n                      <td style={{paddingLeft: \"20px\"}}>\n                        <div style={{minWidth: 90, color: \"black\"}}>Кол-во записей</div>\n                      </td>                    \n                      <td style={{paddingLeft: \"3px\"}}>\n                        <FormControl\n                          variant=\"outlined\"\n                          style={{minWidth: 30}}\n                        >\n                          <GridSelect \n                            onChange={handleChangeRowsPerPage}\n                            style={{height: 25, color: \"black\"}}\n                            value = {size}\n                            > \n                            <MenuItem value = {10}>10</MenuItem>\n                            <MenuItem value = {20}>20</MenuItem>\n                            <MenuItem value = {50}>50</MenuItem>\n                            <MenuItem value = {100}>100</MenuItem>\n                            <MenuItem value = {200}>200</MenuItem>\n                            <MenuItem value = {500}>500</MenuItem>\n                          </GridSelect>\n                        </FormControl>\n                      </td>\n                      \n                      <td>\n                        <Tooltip title=\"На первую страницу\">\n                          <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                            <FirstPageIcon style={{fontSize: \"large\", color: \"black\"}}/>\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На предыдущюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                            <ArrowBackIosIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td style={{color: \"black\", fontSize: 16}}>\n                        <input style={{maxWidth: 25}} value={page} onChange={handlePageChange}></input>\n                      </td>\n                      <td style={{paddingLeft: \"3px\"}}>\n                        <Tooltip title=\"Перейти на указанную страницу\">                              \n                            <Button\n                              onClick={()=> GoToPage()}\n                              variant=\"outlined\"\n                              style={{\n                                height: 22,\n                                backgroundColor: \"#D1D6D6\",\n                                fontSize: 12\n                              }}\n                            >перейти\n                            </Button>\n                        </Tooltip>\n                      </td>\n                      <td>\n                        <Tooltip title=\"На следующюю страницу\">\n                          <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                            <ArrowForwardIosIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n                          </IconButton>\n                        </Tooltip>\n                      </td>\n                      <td class=\"pagination-rows-amount-style\">Стр. {page} из {getPageAmount()} Общее кол-во {filteredDocList.length}</td>                 \n                    </tr>\n                    \n                  </tfoot>                \n                </Paper>\n              </Grid>\n            </Grid>\n          }\n          <Modal\n            className={classes.modal}\n            open={openModal}\n            onClose={handleCloseModal}\n          >\n            <div className={classes.imagePaper}>\n              <img name={selectedImg.name} height={600} width=\"auto\" src={selectedImg.src}/>\n            </div>\n          </Modal>\n          <Snackbar\n            open={showSnackBar}\n            onClose={()=> handleCloseSnackBar()}\n            autoHideDuration={1200}\n            message={snackBarMessage}\n          />\n        </Grid>\n      )\n    }\n    catch(er){\n      console.log(\"ERROR\", er)\n      return <LinearProgress/>\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}