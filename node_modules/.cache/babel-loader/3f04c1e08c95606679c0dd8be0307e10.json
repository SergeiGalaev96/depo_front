{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\ComponentManager\\\\ComponentManager.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport LinearProgress from '@material-ui/core/LinearProgress'; // Custom components\n\nimport OperationDay from \"../OperationDay/OperationDay.jsx\";\nimport Instructions from \"../Instructions/Instructions.jsx\";\nimport TreansferOrders from \"../TreansferOrders/TreansferOrders.jsx\";\nimport Users from \"../Users/Users.jsx\";\nimport Reports from \"../Reports/Reports.jsx\";\nimport MainForm from \"../MainForm/MainForm.jsx\";\nimport InstructionsRegistrars from \"../InstructionsRegistrars/InstructionsRegistrars.jsx\";\nimport ImportFileGIK from \"../ImportFileGIK/ImportFileGIK.jsx\";\nimport CorporativeActions from \"../CorporativeActions/CorporativeActions.jsx\";\nimport DocsWithFiles from \"../DocsWithFiles/DocsWithFiles.jsx\";\nimport TradingSystems from \"../TradingSystems/TradingSystems.jsx\";\nimport Forms from \"../Forms/Forms.jsx\";\nimport History from \"../History/History.jsx\";\nimport NewSecurityApplications from \"../NewSecurityApplications/NewSecurityApplications.jsx\";\nimport ExchangeTSFiles from \"../ExchangeTSFiles/ExchangeTSFiles.jsx\";\nimport RegistryGIK from \"../RegistryGIK/RegistryGIK.jsx\";\n\nvar moment = require('moment');\n\nexport default (props => {\n  const [taskNames] = useState([]);\n  useEffect(() => {// console.log(\"COMP MNGR PROPs\", props)\n  }, []);\n\n  async function sendFieldValues(commandJson) {\n    props.sendFieldValues(commandJson);\n  }\n\n  async function handleCloseCurrentTab(process_id) {\n    props.handleCloseCurrentTab(process_id);\n  }\n\n  async function clearTabData(process_id) {\n    props.clearTabData(process_id);\n  } // GENERAL FUNCTIONS\n\n\n  function parseFullDateTime(date, separator) {\n    // \"2017-05-24T10:30\"\n    // console.log(\"IN DATE\", date)\n    if (date !== null) {\n      let newDate = new Date(date); // console.log(\"IN DATE\", newDate)\n\n      let dd = String(newDate.getDate()).padStart(2, '0');\n      let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      let yyyy = newDate.getFullYear();\n      let hours = newDate.getHours();\n\n      if (parseInt(hours) < 10) {\n        hours = \"0\" + hours;\n      }\n\n      let minutes = newDate.getMinutes();\n\n      if (parseInt(minutes) < 10) {\n        minutes = \"0\" + minutes;\n      }\n\n      let fullDateTime = yyyy + '-' + mm + '-' + dd + separator + hours + \":\" + minutes; // + \":\" + seconds\n      // console.log(\"FDATE\", fullDateTime)\n      // let fullDateTime = moment(date).format('YYYY-MM-DDTHH:MM')\n\n      return fullDateTime;\n    }\n  } // Convert date to approptiate format\n\n\n  function parseDate(date) {\n    try {\n      // let newDate = new Date(date) // \"2020-01-26\"\n      // let dd = String(newDate.getDate()).padStart(2, '0')\n      // let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n      // let yyyy = newDate.getFullYear()\n      // let convertedDate = yyyy + '-' + mm + '-' + dd\n      // console.log(\"CDATE\", convertedDate)\n      // return convertedDate\n      let convertedDate = moment(date).format('YYYY-MM-DD');\n      return convertedDate;\n    } catch (er) {\n      return \"NaN.NaN.NaN\";\n    }\n  }\n\n  function getCurrentFullDateTime() {\n    // var fullDate = parseDate(new Date())\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // return convertedDate\n    let fullDateTime = moment(new Date()).format('YYYY-MM-DDTHH:mm:ss'); // + \".123456\"\n\n    return fullDateTime;\n  }\n\n  function taskManager(task) {\n    let taskList = {\n      Instructions: [\"showInstructionsSearchForm\", \"showInstructionsCreationForm\", \"showInstructionsViewForm\", \"showInstructionsTypeSelectingForm\", \"showInstructionsGIKSearchForm\", \"showInstructionsGIKTypeSelectingForm\", \"showInstructionsGIKCreationForm\", \"showInstructionsGIKViewForm\"],\n      InstructionsRegistrars: [\"showInstructionsRegistrarsSearchForm\", \"showInstructionsRegistrarsViewForm\"],\n      TreansferOrders: [\"showTransferOrdersSearchForm\", \"showTransferOrdersCreatingForm\", \"showTransferOrdersEditForm\"],\n      RegistryGIK: [\"showRegistryGIKSearchForm\", \"showRegistryGIKEditForm\"],\n      Users: [\"showSearchUser\", \"showCreateUser\", \"showEditUser\"],\n      Reports: [\"showReport\", \"showAccountingReportsSelectingForm\", \"showReportsSelectingForm\", \"showReportsCreatingForm\"],\n      OperationDay: [\"showOperationDayForm\"],\n      ImportFileGIK: [\"showImportFileGIKForm\"],\n      CorporativeActions: [\"corporativeActionsMainForm\", \"shomMessageForm\"],\n      DocsWithFiles: [\"showContractsSearchForm\", \"showContractsCreatingForm\", \"showContractsEditForm\", \"showExcertsSearchForm\", \"showExcertsCreatingForm\", \"showExcertsEditForm\"],\n      NewSecurityApplications: [\"showNewSecurityApplicationsSearchForm\", \"showNewSecurityApplicationsTypeSelectingForm\", \"showNewSecurityApplicationsCreatingForm\", \"showNewSecurityApplicationsEditForm\"],\n      TradingSystems: [\"showUploadDataToTSSecuritiesForm\", \"showLoadDataFromTSSecuritiesForm\", \"showUploadDataToTSCurrenciesForm\", \"showLoadDataFromTSCurrenciesForm\"],\n      Forms: [\"showFormsEditForm\"],\n      History: [\"showHistoryForm\"],\n      ExchangeTSFiles: [\"showExchangeTSFilesListForm\"]\n    };\n    let taskName = \"MainForm\";\n\n    for (let key in taskList) {\n      for (let i = 0; i < taskList[key].length; i++) {\n        if (taskList[key][i] === task) {\n          taskName = key;\n          break;\n        }\n      }\n    } // console.log(\"TASK\", task, taskName)\n\n\n    return taskName;\n  }\n\n  if (!props.userTask) return /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 31\n    }\n  });else if (taskManager(props.userTask.taskType) === \"Instructions\") {\n    return /*#__PURE__*/React.createElement(Instructions // VARIABLES\n    , {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask,\n      operDayIsOpened: props.operDayIsOpened,\n      esUserFullName: props.esUserFullName,\n      esInn: props.esInn,\n      esExpiredDate: props.esExpiredDate // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      setEsUserFullName: props.setEsUserFullName,\n      setEsInn: props.setEsInn,\n      setEsExpiredDate: props.setEsExpiredDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"InstructionsRegistrars\") {\n    return /*#__PURE__*/React.createElement(InstructionsRegistrars // VARIABLES\n    , {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask,\n      operDayIsOpened: props.operDayIsOpened,\n      esUserFullName: props.esUserFullName,\n      esInn: props.esInn,\n      esExpiredDate: props.esExpiredDate // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      setEsUserFullName: props.setEsUserFullName,\n      setEsInn: props.setEsInn,\n      setEsExpiredDate: props.setEsExpiredDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"TreansferOrders\") {\n    return /*#__PURE__*/React.createElement(TreansferOrders // VARIABLES\n    , {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask,\n      operDayIsOpened: props.operDayIsOpened,\n      esUserFullName: props.esUserFullName,\n      esInn: props.esInn,\n      esExpiredDate: props.esExpiredDate // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      setEsUserFullName: props.setEsUserFullName,\n      setEsInn: props.setEsInn,\n      setEsExpiredDate: props.setEsExpiredDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"MainForm\") {\n    return /*#__PURE__*/React.createElement(MainForm, {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"RegistryGIK\") {\n    return /*#__PURE__*/React.createElement(RegistryGIK, {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"Users\") {\n    return /*#__PURE__*/React.createElement(Users, {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"Reports\") {\n    return /*#__PURE__*/React.createElement(Reports, {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask,\n      esUserFullName: props.esUserFullName,\n      esInn: props.esInn,\n      esExpiredDate: props.esExpiredDate // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      setEsUserFullName: props.setEsUserFullName,\n      setEsInn: props.setEsInn,\n      setEsExpiredDate: props.setEsExpiredDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      downloadReport: props.downloadReport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"OperationDay\") {\n    return /*#__PURE__*/React.createElement(OperationDay, {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask,\n      operDayIsOpened: props.operDayIsOpened // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"ImportFileGIK\") {\n    return /*#__PURE__*/React.createElement(ImportFileGIK, {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"CorporativeActions\") {\n    return /*#__PURE__*/React.createElement(CorporativeActions, {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask,\n      esUserFullName: props.esUserFullName,\n      esInn: props.esInn,\n      esExpiredDate: props.esExpiredDate // mailRest={props.mailRest}\n      // FUNCTIONS\n      ,\n      updateMailDistributions: props.updateMailDistributions,\n      reduceMailDistributions: props.reduceMailDistributions,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      setEsUserFullName: props.setEsUserFullName,\n      setEsInn: props.setEsInn,\n      setEsExpiredDate: props.setEsExpiredDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"DocsWithFiles\") {\n    return /*#__PURE__*/React.createElement(DocsWithFiles, {\n      api: props.api,\n      id: props.userTask.process_id,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"NewSecurityApplications\") {\n    return /*#__PURE__*/React.createElement(NewSecurityApplications // VARIABLES\n    , {\n      api: props.api,\n      id: props.userTask.process_id,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask,\n      esUserFullName: props.esUserFullName,\n      esInn: props.esInn,\n      esExpiredDate: props.esExpiredDate // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      setEsUserFullName: props.setEsUserFullName,\n      setEsInn: props.setEsInn,\n      setEsExpiredDate: props.setEsExpiredDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"TradingSystems\") {\n    return /*#__PURE__*/React.createElement(TradingSystems, {\n      api: props.api,\n      id: props.userTask.process_id,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"Forms\") {\n    return /*#__PURE__*/React.createElement(Forms, {\n      api: props.api,\n      id: props.userTask.process_id,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"History\") {\n    return /*#__PURE__*/React.createElement(History, {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 7\n      }\n    });\n  } else if (taskManager(props.userTask.taskType) === \"ExchangeTSFiles\") {\n    return /*#__PURE__*/React.createElement(ExchangeTSFiles, {\n      api: props.api,\n      key: props.userTask.process_id,\n      userProfile: props.userProfile,\n      userTask: props.userTask // FUNCTIONS\n      ,\n      callErrorToast: props.callErrorToast,\n      callSuccessToast: props.callSuccessToast,\n      sendFieldValues: sendFieldValues,\n      clearTabData: clearTabData,\n      handleCloseCurrentTab: handleCloseCurrentTab,\n      parseFullDateTime: parseFullDateTime,\n      getCurrentFullDateTime: getCurrentFullDateTime,\n      parseDate: parseDate,\n      currencyBeautifier: props.currencyBeautifier,\n      intBeautifier: props.intBeautifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 7\n      }\n    });\n  } else if (props.userTask.taskType === \"error\") {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 19\n      }\n    }, props.userTask.taskType)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 19\n      }\n    }, props.userTask.process_id)))))));\n  } else {\n    console.log(\"MAIN COMP ERR\", props.userTask);\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 13\n      }\n    }))));\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","LinearProgress","OperationDay","Instructions","TreansferOrders","Users","Reports","MainForm","InstructionsRegistrars","ImportFileGIK","CorporativeActions","DocsWithFiles","TradingSystems","Forms","History","NewSecurityApplications","ExchangeTSFiles","RegistryGIK","moment","require","props","taskNames","sendFieldValues","commandJson","handleCloseCurrentTab","process_id","clearTabData","parseFullDateTime","date","separator","newDate","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hours","getHours","parseInt","minutes","getMinutes","fullDateTime","parseDate","convertedDate","format","er","getCurrentFullDateTime","taskManager","task","taskList","taskName","key","i","length","userTask","taskType","api","userProfile","operDayIsOpened","esUserFullName","esInn","esExpiredDate","callErrorToast","callSuccessToast","setEsUserFullName","setEsInn","setEsExpiredDate","currencyBeautifier","intBeautifier","downloadReport","updateMailDistributions","reduceMailDistributions","console","log"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/ComponentManager/ComponentManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// Custom components\nimport OperationDay from \"../OperationDay/OperationDay.jsx\";\nimport Instructions from \"../Instructions/Instructions.jsx\";\nimport TreansferOrders from \"../TreansferOrders/TreansferOrders.jsx\";\nimport Users from \"../Users/Users.jsx\";\nimport Reports from \"../Reports/Reports.jsx\";\nimport MainForm from \"../MainForm/MainForm.jsx\";\nimport InstructionsRegistrars from \"../InstructionsRegistrars/InstructionsRegistrars.jsx\";\nimport ImportFileGIK from \"../ImportFileGIK/ImportFileGIK.jsx\";\nimport CorporativeActions from \"../CorporativeActions/CorporativeActions.jsx\";\nimport DocsWithFiles from \"../DocsWithFiles/DocsWithFiles.jsx\";\nimport TradingSystems from \"../TradingSystems/TradingSystems.jsx\";\nimport Forms from \"../Forms/Forms.jsx\";\nimport History from \"../History/History.jsx\";\nimport NewSecurityApplications from \"../NewSecurityApplications/NewSecurityApplications.jsx\";\nimport ExchangeTSFiles from \"../ExchangeTSFiles/ExchangeTSFiles.jsx\";\nimport RegistryGIK from \"../RegistryGIK/RegistryGIK.jsx\";\nvar moment = require('moment');\n\nexport default (props) => {\n  const [taskNames] = useState([])\n  useEffect(() => {\n    // console.log(\"COMP MNGR PROPs\", props)\n  }, [])\n  async function sendFieldValues(commandJson) {\n    props.sendFieldValues(commandJson)\n  }\n  async function handleCloseCurrentTab(process_id) {\n    props.handleCloseCurrentTab(process_id)\n  }\n  async function clearTabData(process_id) {\n    props.clearTabData(process_id)\n  }\n  // GENERAL FUNCTIONS\n  function parseFullDateTime(date, separator) {// \"2017-05-24T10:30\"\n    // console.log(\"IN DATE\", date)\n    if (date !== null) {\n      let newDate = new Date(date)\n      // console.log(\"IN DATE\", newDate)\n      let dd = String(newDate.getDate()).padStart(2, '0')\n      let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n      let yyyy = newDate.getFullYear()\n      let hours = newDate.getHours()\n      if (parseInt(hours) < 10) {\n        hours = \"0\" + hours\n      }\n      let minutes = newDate.getMinutes()\n      if (parseInt(minutes) < 10) {\n        minutes = \"0\" + minutes\n      }\n      let fullDateTime = yyyy + '-' + mm + '-' + dd + separator + hours + \":\" + minutes // + \":\" + seconds\n      // console.log(\"FDATE\", fullDateTime)\n\n      // let fullDateTime = moment(date).format('YYYY-MM-DDTHH:MM')\n      return fullDateTime\n    }\n  }\n  // Convert date to approptiate format\n  function parseDate(date) {\n    try {\n      // let newDate = new Date(date) // \"2020-01-26\"\n      // let dd = String(newDate.getDate()).padStart(2, '0')\n      // let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n      // let yyyy = newDate.getFullYear()\n      // let convertedDate = yyyy + '-' + mm + '-' + dd\n      // console.log(\"CDATE\", convertedDate)\n      // return convertedDate\n\n      let convertedDate = moment(date).format('YYYY-MM-DD')\n      return convertedDate\n    }\n    catch (er) {\n      return \"NaN.NaN.NaN\"\n    }\n  }\n  function getCurrentFullDateTime() {\n\n    // var fullDate = parseDate(new Date())\n    // var hours = new Date().getHours()\n    // var minutes = new Date().getMinutes()\n    // var seconds = new Date().getSeconds()\n    // var convertedDate = fullDate + \" \" + hours + \":\" + minutes + \":\" + seconds + \".123456\"\n    // return convertedDate\n\n    let fullDateTime = moment(new Date()).format('YYYY-MM-DDTHH:mm:ss') // + \".123456\"\n    return fullDateTime\n  }\n  function taskManager(task) {\n    let taskList = {\n      Instructions: [\"showInstructionsSearchForm\", \"showInstructionsCreationForm\", \"showInstructionsViewForm\", \"showInstructionsTypeSelectingForm\", \"showInstructionsGIKSearchForm\", \"showInstructionsGIKTypeSelectingForm\", \"showInstructionsGIKCreationForm\", \"showInstructionsGIKViewForm\"],\n      InstructionsRegistrars: [\"showInstructionsRegistrarsSearchForm\", \"showInstructionsRegistrarsViewForm\"],\n      TreansferOrders: [\"showTransferOrdersSearchForm\", \"showTransferOrdersCreatingForm\", \"showTransferOrdersEditForm\"],\n      RegistryGIK: [\"showRegistryGIKSearchForm\", \"showRegistryGIKEditForm\"],\n      Users: [\"showSearchUser\", \"showCreateUser\", \"showEditUser\"],\n      Reports: [\"showReport\", \"showAccountingReportsSelectingForm\", \"showReportsSelectingForm\", \"showReportsCreatingForm\"],\n      OperationDay: [\"showOperationDayForm\"],\n      ImportFileGIK: [\"showImportFileGIKForm\"],\n      CorporativeActions: [\"corporativeActionsMainForm\", \"shomMessageForm\"],\n      DocsWithFiles: [\"showContractsSearchForm\", \"showContractsCreatingForm\", \"showContractsEditForm\", \"showExcertsSearchForm\", \"showExcertsCreatingForm\", \"showExcertsEditForm\"],\n      NewSecurityApplications: [\"showNewSecurityApplicationsSearchForm\", \"showNewSecurityApplicationsTypeSelectingForm\", \"showNewSecurityApplicationsCreatingForm\", \"showNewSecurityApplicationsEditForm\"],\n      TradingSystems: [\"showUploadDataToTSSecuritiesForm\", \"showLoadDataFromTSSecuritiesForm\", \"showUploadDataToTSCurrenciesForm\", \"showLoadDataFromTSCurrenciesForm\"],\n      Forms: [\"showFormsEditForm\"],\n      History: [\"showHistoryForm\"],\n      ExchangeTSFiles: [\"showExchangeTSFilesListForm\"]\n    }\n    let taskName = \"MainForm\"\n    for (let key in taskList) {\n      for (let i = 0; i < taskList[key].length; i++) {\n        if (taskList[key][i] === task) {\n          taskName = key\n          break\n        }\n      }\n    }\n    // console.log(\"TASK\", task, taskName)\n    return taskName\n  }\n\n  if (!props.userTask) return <LinearProgress />\n  else if (taskManager(props.userTask.taskType) === \"Instructions\") {\n    return (\n      <Instructions\n        // VARIABLES\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        operDayIsOpened={props.operDayIsOpened}\n        esUserFullName={props.esUserFullName}\n        esInn={props.esInn}\n        esExpiredDate={props.esExpiredDate}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        setEsUserFullName={props.setEsUserFullName}\n        setEsInn={props.setEsInn}\n        setEsExpiredDate={props.setEsExpiredDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"InstructionsRegistrars\") {\n    return (\n      <InstructionsRegistrars\n        // VARIABLES\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        operDayIsOpened={props.operDayIsOpened}\n        esUserFullName={props.esUserFullName}\n        esInn={props.esInn}\n        esExpiredDate={props.esExpiredDate}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        setEsUserFullName={props.setEsUserFullName}\n        setEsInn={props.setEsInn}\n        setEsExpiredDate={props.setEsExpiredDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"TreansferOrders\") {\n    return (\n      <TreansferOrders\n        // VARIABLES\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        operDayIsOpened={props.operDayIsOpened}\n        esUserFullName={props.esUserFullName}\n        esInn={props.esInn}\n        esExpiredDate={props.esExpiredDate}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        setEsUserFullName={props.setEsUserFullName}\n        setEsInn={props.setEsInn}\n        setEsExpiredDate={props.setEsExpiredDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"MainForm\") {\n    return (\n      <MainForm\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"RegistryGIK\") {\n    return (\n      <RegistryGIK\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"Users\") {\n    return (\n      <Users\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"Reports\") {\n    return (\n      <Reports\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        esUserFullName={props.esUserFullName}\n        esInn={props.esInn}\n        esExpiredDate={props.esExpiredDate}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        setEsUserFullName={props.setEsUserFullName}\n        setEsInn={props.setEsInn}\n        setEsExpiredDate={props.setEsExpiredDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n        downloadReport={props.downloadReport}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"OperationDay\") {\n    return (\n      <OperationDay\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        operDayIsOpened={props.operDayIsOpened}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"ImportFileGIK\") {\n    return (\n      <ImportFileGIK\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"CorporativeActions\") {\n    return (\n      <CorporativeActions\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        esUserFullName={props.esUserFullName}\n        esInn={props.esInn}\n        esExpiredDate={props.esExpiredDate}\n        // mailRest={props.mailRest}\n        // FUNCTIONS\n        updateMailDistributions={props.updateMailDistributions}\n        reduceMailDistributions={props.reduceMailDistributions}\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        setEsUserFullName={props.setEsUserFullName}\n        setEsInn={props.setEsInn}\n        setEsExpiredDate={props.setEsExpiredDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"DocsWithFiles\") {\n    return (\n      <DocsWithFiles\n        api={props.api}\n        id={props.userTask.process_id}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"NewSecurityApplications\") {\n    return (\n      <NewSecurityApplications\n        // VARIABLES\n        api={props.api}\n        id={props.userTask.process_id}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        esUserFullName={props.esUserFullName}\n        esInn={props.esInn}\n        esExpiredDate={props.esExpiredDate}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        setEsUserFullName={props.setEsUserFullName}\n        setEsInn={props.setEsInn}\n        setEsExpiredDate={props.setEsExpiredDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"TradingSystems\") {\n    return (\n      <TradingSystems\n        api={props.api}\n        id={props.userTask.process_id}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"Forms\") {\n    return (\n      <Forms\n        api={props.api}\n        id={props.userTask.process_id}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"History\") {\n    return (\n      <History\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n  else if (taskManager(props.userTask.taskType) === \"ExchangeTSFiles\") {\n    return (\n      <ExchangeTSFiles\n        api={props.api}\n        key={props.userTask.process_id}\n        userProfile={props.userProfile}\n        userTask={props.userTask}\n        // FUNCTIONS\n        callErrorToast={props.callErrorToast}\n        callSuccessToast={props.callSuccessToast}\n        sendFieldValues={sendFieldValues}\n        clearTabData={clearTabData}\n        handleCloseCurrentTab={handleCloseCurrentTab}\n        parseFullDateTime={parseFullDateTime}\n        getCurrentFullDateTime={getCurrentFullDateTime}\n        parseDate={parseDate}\n        currencyBeautifier={props.currencyBeautifier}\n        intBeautifier={props.intBeautifier}\n      />\n    )\n  }\n\n  else if (props.userTask.taskType === \"error\") {\n    return (\n      <Grid container direction=\"row\" justify=\"center\" spacing={0}>\n        <Grid item xs={12}>\n          <Card>\n            <table>\n              <tbody>\n                <tr>\n                  <td>{props.userTask.taskType}</td>\n                </tr>\n                <tr>\n                  <td>{props.userTask.process_id}</td>\n                </tr>\n              </tbody>\n            </table>\n          </Card>\n        </Grid>\n      </Grid>\n    )\n  }\n  else {\n    console.log(\"MAIN COMP ERR\", props.userTask)\n    return (\n      <Grid container direction=\"row\" justify=\"center\" spacing={0}>\n        <Grid item xs={12}>\n          <Card>\n            <LinearProgress />\n          </Card>\n        </Grid>\n      </Grid>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}