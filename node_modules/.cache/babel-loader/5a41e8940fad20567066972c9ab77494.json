{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\depo\\\\src\\\\components\\\\CorporativeActions\\\\CorporativeActions.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card'; // Form components\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from '@material-ui/core/FormControl';\nimport MaterialSelect from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem'; // Icons\n\nimport SendIcon from '@material-ui/icons/Send';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'; // Libraries\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport axios from 'axios';\nimport * as rutoken from \"rutoken\";\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\n\nvar moment = require('moment');\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \".\",\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }));\n}\n\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction IntegerFormat(props) {\n  const {\n    inputRef,\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \" \",\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }));\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto'\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto'\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  inputFile: {\n    display: 'none'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalRutoken: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nexport default (props => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile);\n  const [session_id] = useState(props.userTask.session_id);\n  const [process_id] = useState(props.userTask.process_id);\n  const [taskID] = useState(props.userTask.taskID);\n  const [enumData] = useState(props.userTask.enumData);\n  const [enumOptions, setEnumOptions] = useState({});\n  const [fieldValue, setFieldValue] = useState({\n    subject: \"\",\n    body: \"\",\n    esDate: \"\",\n    esFullName: \"\",\n    esInn: \"\"\n  });\n  const [searchFieldValue, setSearchFieldValue] = useState(\"\");\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [updateState, setUpdateState] = useState(false);\n  const [taskType] = useState(props.userTask.taskType);\n  const [docList, setDocList] = useState(null);\n  const [filteredDocList, setFilteredDocList] = useState(null);\n  const [initialDocList, setInitialDocList] = useState(null);\n  const [page, setPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(false);\n  const [clickedMessagesType, setClickedMessagesType] = useState(\"inbox\");\n  const [checked, setChecked] = useState([]);\n  const [partners, setPartners] = useState([]);\n  const [selectedPartners, setSelectedPartners] = useState([]);\n  const leftChecked = intersection(checked, partners);\n  const rightChecked = intersection(checked, selectedPartners);\n  const [files, setFiles] = useState([]);\n  const [Blobs, setBlobs] = useState([]);\n  const [corpActionsAttachFileButtonId, setCorpActionsAttachFileButtonId] = useState(null);\n  const [menuId, setMenuId] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [writeMessage, setWriteMessage] = useState(false);\n  const [messageType, setMessageType] = useState(1);\n  const [allMessagesSelected, setAllMessagesSelected] = useState(false);\n  const [selectedMessages, setSelectedMessages] = useState({});\n  const [selectedDoc, setSelectedDoc] = useState(null); // Saved Docs\n\n  const [savedImgs, setSavedImgs] = useState([]);\n  const [savedImagesFiles, setSavedImagesFiles] = useState([]);\n  const [savedDocs, setSavedDocs] = useState([]);\n  const [selectedImg, setSelectedImg] = useState({});\n  const [openModal, setOpenModal] = useState(false);\n  const [idFromUsers, setIdFromUsers] = useState(false); // Rutoken\n\n  const [modalStyle] = useState(getModalStyle);\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false);\n  const [rutokenPin, setRutokenPin] = useState(\"\");\n  const [showPin, setShowPin] = useState(false);\n  const [wrongPin, setWrongPin] = useState(false); // Set data from props to state of component\n\n  useEffect(() => {\n    console.log(\"CORPACTS PROPS\", props);\n    setCorpActionsAttachFileButtonId(getUUID());\n    setMenuId(getUUID());\n\n    if (props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\") {\n      for (let i = 0; i < props.userTask.enumData.length; i++) {\n        if (props.userTask.enumData[i] !== null) {\n          if (props.userTask.enumData[i].name === \"partners\") {\n            let newPartners = [];\n\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              newPartners.push(props.userTask.enumData[i].data[d].id);\n            }\n\n            setPartners(newPartners);\n          } else if (props.userTask.enumData[i].name === \"users\") {\n            for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n              if (props.userTask.enumData[i].data[d].user_id === props.userProfile.userId) {\n                setIdFromUsers(props.userTask.enumData[i].data[d].id);\n              }\n            }\n          }\n        } else {\n          if (i === 0) {\n            setPartners([]);\n            props.callErrorToast(\"Ошибка сбора справочной информации Partners\");\n          } else {\n            props.callErrorToast(\"Ошибка сбора справочной информации Users\");\n          }\n        }\n      }\n    }\n\n    if (props.userTask.docList !== \"null\" && props.userTask.docList !== null) {\n      try {\n        let parsedData = JSON.parse(props.userTask.docList);\n        console.log(\"DOCL\", parsedData);\n        setInitialDocList(parsedData);\n        let filteredDocL = [];\n\n        for (let i = 0; i < parsedData.recipient.length; i++) {\n          if (parsedData.recipient[i].recipient_status === 1 || parsedData.recipient[i].recipient_status === 2) {\n            filteredDocL.push(parsedData.recipient[i]);\n          }\n        }\n\n        fetchBySize(0, 9, filteredDocL);\n        setFilteredDocList(filteredDocL);\n      } catch (er) {\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType);\n        setFilteredDocList([]);\n        setInitialDocList([]);\n        setDocList([]);\n      }\n    }\n\n    if (props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null) {\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc);\n      console.log(\"SDOC\", parsedSelectedDoc);\n      setSelectedDoc(parsedSelectedDoc);\n    }\n\n    if (props.userTask.savedDocs.length !== 0) {\n      for (let d = 0; d < props.userTask.savedDocs.length; d++) {\n        let extension = props.userTask.savedDocs[d].extension;\n\n        if (extension === \".png\") {\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".jpeg\" || extension === \".jpg\") {\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".doc\") {\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".docx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".xlsx\") {\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        } else if (extension === \".pdf\") {\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName);\n        }\n      }\n    }\n\n    setUpdateState(getUUID());\n  }, []); // RuToken functions\n\n  function handlePinChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value);\n    console.log(\"PIN\", event.target.value);\n  }\n\n  function handleClickShowPin() {\n    setShowPin(!showPin);\n  }\n\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false);\n  };\n\n  rutoken.ready // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled();\n    } else {\n      return Promise.resolve(true);\n    }\n  }) // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled();\n    } else {// alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n    }\n  }) // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin();\n    } else {// alert(\"Не удаётся найти Плагин\");\n    }\n  }) //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return; // alert(\"Не удаётся загрузить Плагин\")\n    } else {\n      plugin = result;\n      return Promise.resolve();\n    }\n  }); // catch errors while signing docs\n\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true);\n          break;\n\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  } // Sign transfer order with rutoken\n\n\n  function sign(commandJson) {\n    try {\n      // Получение текста для подписи\n      if (plugin !== undefined) {\n        // Перебор подключенных Рутокенов\n        plugin.enumerateDevices().then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0]);\n          } else {\n            alert(\"Рутокен не обнаружен\");\n          }\n        }) // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice;\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n        }) // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve();\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin);\n          }\n        }) // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n        }).then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0];\n            return plugin.parseCertificate(rutokenHandle, certs[0]);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs; // console.log(\"RUTDATA\", certData)\n\n          if (certHandle.length > 0) {\n            senMails();\n            var options = {};\n            let inn = \"\";\n            let fullName = \"\";\n\n            for (let i = 0; i < certData.subject.length; i++) {\n              if (certData.subject[i].rdn === \"serialNumber\") {\n                inn = certData.subject[i].value;\n              }\n\n              if (certData.subject[i].rdn === \"commonName\") {\n                fullName = certData.subject[i].value;\n              }\n            }\n\n            let newMailBody = JSON.parse(commandJson.variables.mailBody.value);\n            newMailBody.mails.es_date = moment(new Date()).format();\n            newMailBody.mails.es_full_name = fullName;\n            newMailBody.mails.es_inn = inn;\n            let newCommandJson = commandJson;\n            newCommandJson.variables.mailBody.value = JSON.stringify(newMailBody);\n            props.setEsInn(inn);\n            props.setEsUserFullName(fullName);\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length - 1));\n            handleCloseModalEnterPin();\n            console.log(\"SIGNED CJ\", newCommandJson);\n            props.sendFieldValues(newCommandJson);\n            props.clearTabData(process_id);\n            return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        }) // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle);\n        }, handleError);\n      } else {\n        swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\");\n      }\n    } catch (er) {\n      console.log(\"Rutoken ERR\");\n    }\n  } // Documents attached to mail\n\n\n  function convertBase64ToFile(dataurl, fileName) {\n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    let convFile = new File([u8arr], fileName, {\n      type: mime\n    });\n    handleAttachSavedFile(convFile);\n    console.log(\"CONV FILE\", convFile);\n  }\n\n  function handleAttachSavedFile(file) {\n    // console.log(\"FILE\", file)\n    if (file.type === \"application/pdf\" || file.type === \"application/msword\" || file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n      savedDocs.push(file);\n      setSavedDocs(savedDocs);\n    } else {\n      savedImagesFiles.push(file);\n      setSavedImagesFiles(savedImagesFiles);\n      pushSavedImage(file);\n    } // setUpdateState(getUUID())\n\n  }\n\n  async function pushSavedImage(f) {\n    let reader = new FileReader();\n\n    reader.onload = async function (e) {\n      // push new images to list and show in UI\n      let image = {\n        item: /*#__PURE__*/React.createElement(\"img\", {\n          name: f.name,\n          height: \"150\",\n          width: \"auto\",\n          src: e.target.result,\n          onClick: () => savedImgClick(f.name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 26\n          }\n        })\n      };\n      savedImgs.push(image); // console.log(\"IMGLIST\", savedImgs)\n\n      setSavedImgs(savedImgs);\n      setUpdateState(getUUID());\n    };\n\n    reader.readAsDataURL(f);\n  }\n\n  async function savedImgClick(name) {\n    for (let l = 0; l < savedImgs.length; l++) {\n      if (savedImgs[l].item.props.name === name) {\n        console.log(\"IMG\", savedImgs[l]);\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        });\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const openMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeMenuClick = () => {\n    setAnchorEl(null);\n  };\n\n  function handleChange(event) {\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value;\n    setFieldValue(fieldValue);\n    console.log(\"FIELDVALUE\", fieldValue);\n  } // random UUID generator\n\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // random numbers generator\n\n\n  function keyGen(length) {\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    });\n    return password;\n  }\n\n  function swAllert(text, icon) {\n    return swal({\n      text: text,\n      icon: icon,\n      buttons: {\n        ok: \"Ок\"\n      }\n    });\n  }\n\n  function getEmail(id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === \"partners\") {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].email;\n          }\n        }\n      }\n    }\n  }\n\n  async function buttonClick(name, item) {\n    if (name === \"send\") {\n      if (selectedPartners.length === 0) {\n        swAllert(\"Выберите как минимум одного получателя!\", \"warning\");\n      } else {\n        senMails(); // Get sender id by userId in users\n\n        let senderId = null;\n\n        for (let e = 0; e < enumData.length; e++) {\n          if (enumData[e].name === \"users\") {\n            for (let d = 0; d < enumData[e].data.length; d++) {\n              if (enumData[e].data[d].user_id === userProfile.userId) {\n                senderId = enumData[e].data[d].id;\n              }\n            }\n          }\n        } // Create Mail Body for local notifications\n\n\n        let files_dir = getUUID(); // let lostRecipients = []\n\n        let mailBody = {\n          mails: {\n            type: messageType,\n            subject: fieldValue.subject,\n            body: fieldValue.body,\n            files_directory: files_dir,\n            status: 3,\n            sender: senderId,\n            es_date: null,\n            es_full_name: null,\n            es_inn: null\n          },\n          mail_distributions: []\n        };\n        console.log(\"mailBody\", mailBody); // Push recipient of local system mail\n\n        for (let s = 0; s < selectedPartners.length; s++) {\n          let recipientId = getRecipientId(selectedPartners[s]);\n\n          if (recipientId !== null) {\n            let newDistribution = {\n              sender: senderId,\n              sender_status: 3,\n              recipient_status: 1,\n              recipient: recipientId\n            };\n            mailBody.mail_distributions.push(newDistribution);\n          } // else{\n          //   lostRecipients.push(selectedPartners[s])\n          //   // console.log(\"LOST RECIPIENT\", selectedPartners[s])\n          // }\n\n        } // Files attached to mail\n\n\n        let blobs = [];\n\n        for (let f = 0; f < files.length; f++) {\n          for (let b = 0; b < Blobs.length; b++) {\n            if (files[f].name === Blobs[b].name) {\n              console.log(\"MATCH\", files[f].name, Blobs[b]);\n              blobs.push(Blobs[b]);\n            }\n          }\n        }\n\n        const commandJson = {\n          commandType: \"sendMails\",\n          process_id: process_id,\n          session_id: session_id,\n          taskID: taskID,\n          directory: files_dir,\n          blobs: blobs,\n          variables: {\n            userAction: {\n              value: \"sendMail\"\n            },\n            mailBody: {\n              value: JSON.stringify(mailBody)\n            }\n          }\n        };\n        console.log(\"button sendMail: \", commandJson);\n        props.sendFieldValues(commandJson);\n        props.clearTabData(process_id);\n      }\n    } else if (name === \"sendWithES\") {\n      if (selectedPartners.length === 0) {\n        swAllert(\"Выберите как минимум одного получателя!\", \"warning\");\n      } else {\n        // Get sender id by userId in users\n        let senderId = null;\n\n        for (let e = 0; e < enumData.length; e++) {\n          if (enumData[e].name === \"users\") {\n            for (let d = 0; d < enumData[e].data.length; d++) {\n              if (enumData[e].data[d].user_id === userProfile.userId) {\n                senderId = enumData[e].data[d].id;\n              }\n            }\n          }\n        } // Create Mail Body for local notifications\n\n\n        let files_dir = getUUID(); // let lostRecipients = []\n\n        let mailBody = {\n          mails: {\n            type: messageType,\n            subject: fieldValue.subject,\n            body: fieldValue.body,\n            files_directory: files_dir,\n            status: 3,\n            sender: senderId,\n            es_date: moment(new Date()).format(),\n            es_full_name: props.esFullName,\n            es_inn: props.esInn\n          },\n          mail_distributions: []\n        };\n        console.log(\"mailBody\", mailBody); // Push recipient of local system mail\n\n        for (let s = 0; s < selectedPartners.length; s++) {\n          let recipientId = getRecipientId(selectedPartners[s]);\n\n          if (recipientId !== null) {\n            let newDistribution = {\n              sender: senderId,\n              sender_status: 3,\n              recipient_status: 1,\n              recipient: recipientId\n            };\n            mailBody.mail_distributions.push(newDistribution);\n          }\n        } // Files attached to mail\n\n\n        let blobs = [];\n\n        for (let f = 0; f < files.length; f++) {\n          for (let b = 0; b < Blobs.length; b++) {\n            if (files[f].name === Blobs[b].name) {\n              console.log(\"MATCH\", files[f].name, Blobs[b]);\n              blobs.push(Blobs[b]);\n            }\n          }\n        }\n\n        const commandJson = {\n          commandType: \"sendMails\",\n          process_id: process_id,\n          session_id: session_id,\n          taskID: taskID,\n          directory: files_dir,\n          blobs: blobs,\n          variables: {\n            userAction: {\n              value: \"sendMail\"\n            },\n            mailBody: {\n              value: JSON.stringify(mailBody)\n            }\n          }\n        };\n        console.log(\"button sendMail: \", commandJson);\n\n        if (props.esInn !== null) {\n          senMails();\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id);\n        } else {\n          sign(commandJson);\n        }\n      }\n    } else if (name === \"showReport\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"showReport\"\n          },\n          reportName: {\n            value: \"Message_alert\"\n          },\n          reportVars: {\n            value: \"?id=\" + selectedDoc.mail_id\n          }\n        }\n      };\n      console.log(\"button showReport:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (name === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back:\", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    }\n  }\n\n  async function senMails() {\n    // Create FormData\n    let formData = new FormData();\n    formData.append(\"subject\", fieldValue[\"subject\"]);\n    formData.append(\"body\", fieldValue[\"body\"]);\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append('attachments', files[i], files[i].name);\n    }\n\n    for (let p = 0; p < selectedPartners.length; p++) {\n      formData.append(\"toEmail\", getEmail(selectedPartners[p]));\n      await fetch(\"/api/Mail/SendMail\", {\n        mode: 'no-cors',\n        method: 'POST',\n        body: formData\n      }).then(response => {\n        console.log(\"RES SEND MAIL\", response);\n      }).catch(error => console.error(error));\n    }\n  }\n\n  function getRecipientId(partner) {\n    console.log(\"Partner ID\", partner);\n    let recipientId = null;\n\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === \"users\") {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          let parsedAttr = JSON.parse(enumData[e].data[d].attributes);\n\n          if (partner === parseInt(parsedAttr[\"partner\"])) {\n            recipientId = enumData[e].data[d].id;\n          }\n        }\n      }\n    }\n\n    console.log(\"RES ID\", recipientId);\n    return recipientId;\n  } // Pagination functions\n\n\n  function KeyboardArrowFirstClick() {\n    if (page !== 1) {\n      setPage(1);\n      fetchBySize(0, size - 1, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowLeftClick(page) {\n    if (page !== 1) {\n      var prevPage = page - 1;\n      setPage(prevPage);\n      let fetchFrom = (prevPage - 1) * size; //10\n\n      let fetchTo = size * prevPage - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    } else {\n      setSnackBarMessage(\"Вы на первой странице!\");\n      setShowSnackBar(true);\n    }\n  }\n\n  function KeyboardArrowRightClick(page) {\n    if (docList.length < size - 1) {\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\");\n      setShowSnackBar(true);\n    } else {\n      setPage(page + 1);\n      let fetchFrom = size * page;\n      let fetchTo = (page + 1) * size - 1;\n      fetchBySize(fetchFrom, fetchTo, filteredDocList);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setSize(event.target.value);\n    setPage(1);\n    fetchBySize(0, event.target.value - 1, filteredDocList);\n  }\n\n  function GoToPage() {\n    let fetchFrom = page * size - 1 - size;\n    let fetchTo = page * size - 1;\n    fetchBySize(fetchFrom, fetchTo, filteredDocList);\n  }\n\n  function handlePageChange(event) {\n    setPage(event.target.value);\n  }\n\n  function getPageAmount() {\n    let pagesFloat = filteredDocList.length / size;\n    let mathRoundOfPages = Math.round(pagesFloat);\n\n    if (pagesFloat > mathRoundOfPages) {\n      return mathRoundOfPages + 1;\n    } else {\n      return mathRoundOfPages;\n    }\n  }\n\n  function handleCloseSnackBar() {\n    setShowSnackBar(false);\n  } // get rows amount of filtered docs by size\n\n\n  function fetchBySize(fetchFrom, fetchTo, Data) {\n    let newDocList = [];\n\n    for (let i = fetchFrom; i <= fetchTo; i++) {\n      if (Data[i] !== undefined) {\n        newDocList.push(Data[i]);\n      }\n    }\n\n    setDocList(newDocList);\n    setUpdateState(getUUID());\n  } // Convert date to approptiate format\n\n\n  function beautifyDate(date) {\n    try {\n      var newDate = new Date(date); // \"2020-01-26\"\n\n      var dd = String(newDate.getDate()).padStart(2, '0');\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = newDate.getFullYear();\n      let beautyDate = \"\";\n\n      if (parseInt(dd) < 10) {\n        let shortdd = dd.substring(1, 2);\n        dd = shortdd + \" \";\n      } else {\n        beautyDate += dd;\n      }\n\n      switch (mm) {\n        case \"01\":\n          {\n            mm = \"янв.\";\n            break;\n          }\n\n        case \"02\":\n          {\n            mm = \"февр.\";\n            break;\n          }\n\n        case \"03\":\n          {\n            mm = \"мар.\";\n            break;\n          }\n\n        case \"04\":\n          {\n            mm = \"апр.\";\n            break;\n          }\n\n        case \"05\":\n          {\n            mm = \"мая\";\n            break;\n          }\n\n        case \"06\":\n          {\n            mm = \"июня\";\n            break;\n          }\n\n        case \"07\":\n          {\n            mm = \"июля\";\n            break;\n          }\n\n        case \"08\":\n          {\n            mm = \"авг.\";\n            break;\n          }\n\n        case \"09\":\n          {\n            mm = \"сент.\";\n            break;\n          }\n\n        case \"10\":\n          {\n            mm = \"окт.\";\n            break;\n          }\n\n        case \"11\":\n          {\n            mm = \"ноя.\";\n            break;\n          }\n\n        case \"12\":\n          {\n            mm = \"дек.\";\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n\n      beautyDate += \" \" + mm + \" \" + yyyy.toString().substring(2, 4) + \"г.\"; // console.log(\"beautyDate\", beautyDate)\n\n      return beautyDate;\n    } catch (er) {\n      return \"NaN.NaN.NaN\";\n    }\n  } // multiple selector functions\n\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setSelectedPartners(selectedPartners.concat(partners));\n    setPartners([]);\n  };\n\n  const handleCheckedRight = () => {\n    setSelectedPartners(selectedPartners.concat(leftChecked));\n    setPartners(not(partners, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setPartners(partners.concat(rightChecked));\n    setSelectedPartners(not(selectedPartners, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setPartners(partners.concat(selectedPartners));\n    setSelectedPartners([]);\n  };\n\n  const partnersList = items => /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 7\n    }\n  }, items.map(value => {\n    const labelId = `transfer-list-item-${value}-label`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value,\n      role: \"listitem\",\n      button: true,\n      onClick: handleToggle(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: getPartnerName(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 15\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 9\n    }\n  })));\n\n  function getPartnerName(id) {\n    for (let i = 0; i < props.userTask.enumData.length; i++) {\n      if (props.userTask.enumData[i].name === \"partners\") {\n        for (let d = 0; d < props.userTask.enumData[i].data.length; d++) {\n          if (props.userTask.enumData[i].data[d].id === id) {\n            return props.userTask.enumData[i].data[d].label;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  const writeMessgeClick = type => {\n    setMessageType(type);\n    setAnchorEl(null);\n    setWriteMessage(true);\n  };\n\n  const handleSelectAllMessagesChange = event => {\n    setAllMessagesSelected(event.target.checked);\n\n    for (let i = 0; i < filteredDocList.length; i++) {\n      selectedMessages[filteredDocList[i].mail_id] = event.target.checked;\n    }\n\n    setSelectedMessages(selectedMessages);\n  };\n\n  const handleSelectMessage = event => {\n    console.log(\"Check MESS\", event.target.id, \"CH \", event.target.checked);\n    setSelectedMessages({ ...selectedMessages,\n      [event.target.id]: event.target.checked\n    });\n  }; // file attachment functions\n\n\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files;\n\n    if (selectedFiles && selectedFiles[0]) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        files.push(selectedFiles[i]);\n        pushNewBlob(selectedFiles[i]);\n      }\n\n      setFiles(files);\n    }\n\n    setUpdateState(getUUID());\n    console.log(\"FILES\", files);\n  } // attached documents\n\n\n  async function pushNewBlob(f) {\n    // console.log(\"WRITING BLOBS\")\n    let docUrl = URL.createObjectURL(f);\n    fetch(docUrl).then(res => res.blob()).then(blob => {\n      // blob.name = f.name\n      var blobToBase64 = function (f, cb) {\n        let reader = new FileReader();\n\n        reader.onload = function () {\n          // converts blob to base64\n          var dataUrl = reader.result;\n          var base64 = dataUrl.split(\",\")[1];\n          cb(base64);\n        };\n\n        reader.readAsDataURL(f);\n      };\n\n      blobToBase64(f, async function (base64) {\n        // encode blobs to send to socket\n        let newBlob = {\n          \"name\": f.name,\n          \"blob\": base64,\n          \"size\": f.size\n        };\n        Blobs.push(newBlob);\n        setBlobs(Blobs); // console.log(\"BLOBS\", Blobs)\n      });\n    });\n  }\n\n  function deleteFile(name) {\n    let newFilesList = [];\n\n    for (let i = 0; i < files.length; i++) {\n      if (name !== files[i].name) {\n        newFilesList.push(files[i]);\n      }\n    }\n\n    setFiles(newFilesList);\n    console.log(\"FILES\", newFilesList);\n  }\n\n  function filesList() {\n    let selFilesList = [];\n\n    for (let i = 0; i < files.length; i++) {\n      selFilesList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        minWidth: \"500px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 13\n        }\n      }, files[i].name + \" \", \"(\" + Math.round(files[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        onClick: () => deleteFile(files[i].name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 17\n        }\n      })))))));\n      console.log(\"FILE\", files[i]);\n    }\n\n    return selFilesList;\n  }\n\n  function handleSearchChange(event) {\n    setSearchFieldValue(event.target.value);\n    console.log(\"FIELDVALUE\", event.target.value);\n  }\n\n  function handleClickSearch() {\n    console.log(\"SEARCH\", searchFieldValue, clickedMessagesType, filteredDocList);\n\n    if (searchFieldValue === \"\") {\n      if (clickedMessagesType === \"inbox\") {\n        handleInboxMessagesClick();\n      } else if (clickedMessagesType === \"sent\") {\n        handleSentMessagesClick();\n      } else if (clickedMessagesType === \"trash\") {\n        handleTrashMessagesClick();\n      }\n    } else {\n      let newDocList = [];\n\n      if (clickedMessagesType === \"inbox\") {\n        for (let i = 0; i < initialDocList.recipient.length; i++) {\n          if (initialDocList.recipient[i].recipient_status === 1 || initialDocList.recipient[i].recipient_status === 2) {\n            try {\n              let subject = initialDocList.recipient[i].subject.toLowerCase();\n              let body = initialDocList.recipient[i].body.toLowerCase();\n              let searchField = searchFieldValue.toLowerCase();\n\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.recipient[i].subject, initialDocList.recipient[i].body)\n                newDocList.push(initialDocList.recipient[i]);\n              }\n            } catch (er) {\n              console.log(er);\n            }\n          }\n        }\n      } else if (clickedMessagesType === \"sent\") {\n        for (let i = 0; i < initialDocList.sender.length; i++) {\n          if (initialDocList.sender[i].sender_status === 3) {\n            try {\n              let subject = initialDocList.sender[i].subject.toLowerCase();\n              let body = initialDocList.sender[i].body.toLowerCase();\n              let searchField = searchFieldValue.toLowerCase();\n\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.sender[i].subject, initialDocList.sender[i].body)\n                newDocList.push(initialDocList.sender[i]);\n              }\n            } catch (er) {\n              console.log(er);\n            }\n          }\n        }\n      } else if (clickedMessagesType === \"trash\") {\n        for (let i = 0; i < initialDocList.sender.length; i++) {\n          if (initialDocList.sender[i].sender_status === 4) {\n            try {\n              let subject = initialDocList.sender[i].subject.toLowerCase();\n              let body = initialDocList.sender[i].body.toLowerCase();\n              let searchField = searchFieldValue.toLowerCase();\n\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.sender[i].subject, initialDocList.sender[i].body)\n                newDocList.push(initialDocList.sender[i]);\n              }\n            } catch (er) {\n              console.log(er);\n            }\n          }\n        }\n\n        for (let i = 0; i < initialDocList.recipient.length; i++) {\n          if (initialDocList.recipient[i].recipient_status === 4) {\n            try {\n              let subject = initialDocList.recipient[i].subject.toLowerCase();\n              let body = initialDocList.recipient[i].body.toLowerCase();\n              let searchField = searchFieldValue.toLowerCase();\n\n              if (subject.includes(searchField) || body.includes(searchField)) {\n                // console.log(\"FIND\", initialDocList.recipient[i].subject, initialDocList.recipient[i].body)\n                newDocList.push(initialDocList.recipient[i]);\n              }\n            } catch (er) {\n              console.log(er);\n            }\n          }\n        }\n      }\n\n      fetchBySize(0, 9, newDocList);\n      setFilteredDocList(newDocList);\n    }\n  }\n\n  function handleInboxMessagesClick() {\n    setClickedMessagesType(\"inbox\");\n    setAllMessagesSelected(false);\n    let filteredDocL = [];\n\n    for (let i = 0; i < initialDocList.recipient.length; i++) {\n      if (initialDocList.recipient[i].recipient_status === 1 || initialDocList.recipient[i].recipient_status === 2) {\n        filteredDocL.push(initialDocList.recipient[i]);\n      }\n    }\n\n    fetchBySize(0, 9, filteredDocL);\n    setFilteredDocList(filteredDocL);\n    console.log(\"INBOX\");\n  }\n\n  function handleSentMessagesClick() {\n    setClickedMessagesType(\"sent\");\n    setAllMessagesSelected(false);\n    let filteredDocL = [];\n\n    for (let i = 0; i < initialDocList.sender.length; i++) {\n      if (initialDocList.sender[i].sender_status === 3) {\n        filteredDocL.push(initialDocList.sender[i]);\n      }\n    }\n\n    fetchBySize(0, 9, filteredDocL);\n    setFilteredDocList(filteredDocL);\n    console.log(\"SENT\");\n  }\n\n  function handleTrashMessagesClick() {\n    setClickedMessagesType(\"trash\");\n    setAllMessagesSelected(false);\n    let filteredDocL = [];\n\n    for (let i = 0; i < initialDocList.recipient.length; i++) {\n      if (initialDocList.recipient[i].recipient_status === 4) {\n        filteredDocL.push(initialDocList.recipient[i]);\n      }\n    }\n\n    for (let i = 0; i < initialDocList.sender.length; i++) {\n      if (initialDocList.sender[i].sender_status === 4) {\n        filteredDocL.push(initialDocList.sender[i]);\n      }\n    }\n\n    fetchBySize(0, 9, filteredDocL);\n    setFilteredDocList(filteredDocL);\n    console.log(\"TRASH\");\n  }\n\n  function getSenderName(sender) {\n    // console.log(\"enumData\", enumData)\n    for (let e = 0; e < enumData.length; e++) {\n      if (enumData[e].name === \"users\") {\n        for (let d = 0; d < enumData[e].data.length; d++) {\n          if (enumData[e].data[d].id === sender) {\n            return enumData[e].data[d].firstname + \" \" + enumData[e].data[d].lastname;\n          }\n        }\n      }\n    }\n  }\n\n  function getEnumLabel(name, id) {\n    for (let i = 0; i < enumData.length; i++) {\n      if (enumData[i].name === name) {\n        for (let d = 0; d < enumData[i].data.length; d++) {\n          if (enumData[i].data[d].id === id) {\n            return enumData[i].data[d].label;\n          }\n        }\n      }\n    }\n  }\n\n  function getBackround(status) {\n    if (status === 1) {\n      // message is unread\n      return \"#FFDCA5\";\n    } else {\n      return \"#F0F1F1\";\n    }\n  }\n\n  function getFontWeight(status) {\n    if (status === 1) {\n      return \"bold\";\n    } else {\n      return \"nornal\";\n    }\n  }\n\n  function checkToShowDeleteButton() {\n    let showButton = false;\n\n    if (Object.keys(selectedMessages).length > 0) {\n      for (let key in selectedMessages) {\n        if (selectedMessages[key] === true) {\n          showButton = true;\n          break;\n        }\n      }\n    }\n\n    return showButton;\n  }\n\n  function openMessage(message) {\n    if (clickedMessagesType === \"inbox\") {\n      let user_id = null;\n\n      for (let e = 0; e < enumData.length; e++) {\n        if (enumData[e].name === \"users\") {\n          for (let d = 0; d < enumData[e].data.length; d++) {\n            if (enumData[e].data[d].user_id === userProfile.userId) {\n              user_id = enumData[e].data[d].id;\n            }\n          }\n        }\n      }\n\n      let mailDistrBody = {\n        id: message.distribution_id,\n        mail_id: message.mail_id,\n        sender: message.sender,\n        recipient: message.recipient,\n        recipient_status: 2,\n        created_at: message.created_at,\n        updated_at: message.updated_at\n      };\n      let unreadDistributionsBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getUnreadDistributions\"\n          },\n          depoRESTApi: {\n            value: \"\"\n          },\n          user_id_recipient: {\n            value: message.recipient\n          }\n        }\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"openMailDistribution\"\n          },\n          mailDistrBody: {\n            value: JSON.stringify(mailDistrBody)\n          },\n          selectedDoc: {\n            value: JSON.stringify(message)\n          },\n          unreadDistributionsBody: {\n            value: JSON.stringify(unreadDistributionsBody)\n          }\n        }\n      };\n      console.log(\"button openMail: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else {\n      const commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"openMail\"\n          },\n          selectedDoc: {\n            value: JSON.stringify(message)\n          }\n        }\n      };\n      console.log(\"button openMail: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    }\n  }\n\n  function deleteMessages() {\n    console.log(\"LISTS\", selectedMessages, docList);\n\n    if (clickedMessagesType === \"inbox\") {\n      let mailDistrList = [];\n\n      for (let d = 0; d < docList.length; d++) {\n        for (let key in selectedMessages) {\n          if (selectedMessages[key] === true) {\n            if (docList[d].mail_id === parseInt(key)) {\n              let mailToDelete = {\n                id: docList[d].distribution_id,\n                sender: docList[d].sender,\n                recipient: docList[d].recipient,\n                recipient_status: 4,\n                mail_id: docList[d].mail_id,\n                created_at: docList[d].created_at,\n                updated_at: docList[d].updated_at\n              };\n              mailDistrList.push(mailToDelete);\n              console.log(\"DEL\", mailToDelete);\n            }\n          }\n        }\n      }\n\n      let unreadDistributionsBody = {\n        variables: {\n          user_session_id: {\n            value: session_id\n          },\n          userAction: {\n            value: \"getUnreadDistributions\"\n          },\n          depoRESTApi: {\n            value: \"\"\n          },\n          user_id_recipient: {\n            value: docList[0].recipient\n          }\n        }\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"putMailsToTrash\"\n          },\n          mailDistrList: {\n            value: JSON.stringify(mailDistrList)\n          },\n          mailList: {\n            value: \"[]\"\n          },\n          unreadDistributionsBody: {\n            value: JSON.stringify(unreadDistributionsBody)\n          }\n        }\n      };\n      console.log(\"button putInboxMailsToTrash: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (clickedMessagesType === \"sent\") {\n      let mailList = [];\n\n      for (let d = 0; d < docList.length; d++) {\n        for (let key in selectedMessages) {\n          if (selectedMessages[key] === true) {\n            if (docList[d].mail_id === parseInt(key)) {\n              let mailToDelete = {\n                id: docList[d].mail_id,\n                sender: docList[d].sender,\n                subject: docList[d].subject,\n                body: docList[d].body,\n                status: 4,\n                files_directory: docList[d].files_directory,\n                created_at: docList[d].created_at,\n                updated_at: docList[d].updated_at\n              };\n              mailList.push(mailToDelete);\n              console.log(\"DEL\", mailToDelete);\n            }\n          }\n        }\n      }\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {\n            value: \"putMailsToTrash\"\n          },\n          mailDistrList: {\n            value: \"[]\"\n          },\n          mailList: {\n            value: JSON.stringify(mailList)\n          }\n        }\n      };\n      console.log(\"button putSentMailsToTrash: \", commandJson);\n      props.sendFieldValues(commandJson);\n      props.clearTabData(process_id);\n    } else if (clickedMessagesType === \"trash\") {\n      swal({\n        text: \"Вы действительно хотите удалить сообщения безвозвратно?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          cancel: \"Отмена\"\n        }\n      }).then(click => {\n        if (click === \"yes\") {\n          let mailList = [];\n          let mailDistrList = [];\n\n          for (let key in selectedMessages) {\n            if (selectedMessages[key] === true) {\n              console.log(\"TRUE?\", key, selectedMessages[key]);\n\n              for (let d = 0; d < docList.length; d++) {\n                if (docList[d].mail_id === parseInt(key)) {\n                  console.log(\"DEL\", docList[d].subject); // I'm sender of mail\n\n                  if (docList[d].sender === idFromUsers) {\n                    console.log(\"IM SENDER\", docList[d].mail_id);\n                    let mailToDelete = {\n                      id: docList[d].mail_id,\n                      sender: docList[d].sender,\n                      subject: docList[d].subject,\n                      body: docList[d].body,\n                      status: 5,\n                      files_directory: docList[d].files_directory,\n                      created_at: docList[d].created_at,\n                      updated_at: docList[d].updated_at,\n                      deleted: true\n                    };\n                    mailList.push(mailToDelete);\n                  } // i'm recipient of mail\n                  else {\n                    console.log(\"IM RECIPIENT\", docList[d].mail_id);\n                    let mailToDelete = {\n                      id: docList[d].distribution_id,\n                      sender: docList[d].sender,\n                      recipient: docList[d].recipient,\n                      recipient_status: 5,\n                      mail_id: docList[d].mail_id,\n                      created_at: docList[d].created_at,\n                      updated_at: docList[d].updated_at,\n                      deleted: true\n                    };\n                    mailDistrList.push(mailToDelete);\n                  }\n                }\n              }\n            }\n          }\n\n          let unreadDistributionsBody = {\n            variables: {\n              user_session_id: {\n                value: session_id\n              },\n              userAction: {\n                value: \"getUnreadDistributions\"\n              },\n              depoRESTApi: {\n                value: \"\"\n              },\n              user_id_recipient: {\n                value: docList[0].recipient\n              }\n            }\n          };\n          let commandJson = {\n            commandType: \"completeTask\",\n            process_id: process_id,\n            session_id: session_id,\n            taskID: taskID,\n            variables: {\n              userAction: {\n                value: \"putMailsToTrash\"\n              },\n              mailDistrList: {\n                value: JSON.stringify(mailDistrList)\n              },\n              mailList: {\n                value: JSON.stringify(mailList)\n              },\n              unreadDistributionsBody: {\n                value: JSON.stringify(unreadDistributionsBody)\n              }\n            }\n          };\n          console.log(\"button deleteMails: \", commandJson);\n          props.sendFieldValues(commandJson);\n          props.clearTabData(process_id); // console.log(\"mailList\", mailList)\n          // console.log(\"mailDistrList\", mailDistrList)\n        }\n      });\n    }\n  }\n\n  function savedDocsList() {\n    console.log(\"SAVEDOCS\", savedDocs);\n    let savedDocsList = [];\n\n    for (let i = 0; i < savedDocs.length; i++) {\n      savedDocsList.push( /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: 3,\n          backgroundColor: \"#E2E2E2\",\n          paddingLeft: 20,\n          minWidth: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1513,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1514,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1515,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: \"#1B2CE8\",\n          fontWeight: \"bold\",\n          width: \"95%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 13\n        }\n      }, savedDocs[i].name + \" \", \"(\" + Math.round(savedDocs[i].size / 1000) + \")\" + \"КБ\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1519,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(savedDocs[i]),\n        download: savedDocs[i].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 17\n        }\n      }))))))); // console.log(\"FILE\", savedDocs[i])\n    }\n\n    return savedDocsList;\n  }\n\n  function savedImgsList() {\n    var imgs = [];\n\n    for (let l = 0; l < savedImgs.length; l++) {\n      let blob = converFileToBlob(savedImgs[l].item.props.src);\n      imgs.push( /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1540,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1541,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1542,\n          columnNumber: 13\n        }\n      }, savedImgs[l].item)), /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1546,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1547,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        component: \"a\",\n        href: URL.createObjectURL(blob),\n        download: savedImgs[l].item.props.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1548,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(GetAppIcon, {\n        style: {\n          fontSize: \"medium\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1553,\n          columnNumber: 17\n        }\n      }))))));\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1562,\n          columnNumber: 9\n        }\n      }, imgs);\n    }\n  }\n\n  function converFileToBlob(src) {\n    var byteString = atob(src.split(',')[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new Blob([ab], {\n      type: 'image/jpeg'\n    });\n  }\n\n  function getMenuItemStyle(name) {\n    if (name === clickedMessagesType) {\n      return {\n        background: \"#F0F1F1\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      };\n    }\n  }\n\n  function onKeyPressModalEnterPin(event) {\n    let code = event.charCode;\n\n    if (code === 13) {\n      buttonClick(\"sendWithES\");\n    }\n  }\n\n  if (updateState !== null) {\n    try {\n      if (taskType === \"corporativeActionsMainForm\") {\n        if (writeMessage === false) {\n          return /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"flex-start\",\n            alignItems: \"flex-start\",\n            spacing: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1598,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 3,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1599,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Paper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1600,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(MenuList, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1601,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => handleInboxMessagesClick(),\n            style: getMenuItemStyle(\"inbox\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1602,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(ListItemIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1603,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(MailOutlineIcon, {\n            fontSize: \"small\",\n            style: getMenuItemStyle(\"inbox\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1604,\n              columnNumber: 27\n            }\n          })), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"inherit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1606,\n              columnNumber: 25\n            }\n          }, \"\\u0412\\u0445\\u043E\\u0434\\u044F\\u0449\\u0438\\u0435\")), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => handleSentMessagesClick(),\n            style: getMenuItemStyle(\"sent\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1608,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(ListItemIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1609,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(SendIcon, {\n            fontSize: \"small\",\n            style: getMenuItemStyle(\"sent\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1610,\n              columnNumber: 27\n            }\n          })), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"inherit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1612,\n              columnNumber: 25\n            }\n          }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435\")), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => handleTrashMessagesClick(),\n            style: getMenuItemStyle(\"trash\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1614,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(ListItemIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1615,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n            fontSize: \"small\",\n            style: getMenuItemStyle(\"trash\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1616,\n              columnNumber: 27\n            }\n          })), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"inherit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1618,\n              columnNumber: 25\n            }\n          }, \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\"))))), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 9,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1623,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1624,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 12,\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1625,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Paper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1626,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Checkbox, {\n            style: {\n              color: \"green\"\n            },\n            onChange: handleSelectAllMessagesChange,\n            checked: allMessagesSelected === true ? true : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1627,\n              columnNumber: 21\n            }\n          }), checkToShowDeleteButton() === true && /*#__PURE__*/React.createElement(IconButton, {\n            \"aria-label\": \"delete\",\n            size: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1633,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(DeleteIcon, {\n            onClick: () => deleteMessages(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1634,\n              columnNumber: 27\n            }\n          })), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/React.createElement(CreateIcon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1640,\n                columnNumber: 36\n              }\n            }),\n            style: {\n              margin: 5,\n              color: \"green\",\n              background: \"white\",\n              fontSize: 14\n            },\n            \"aria-controls\": menuId,\n            \"aria-haspopup\": \"true\",\n            onClick: openMenuClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1637,\n              columnNumber: 23\n            }\n          }, \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Menu, {\n            id: menuId,\n            anchorEl: anchorEl,\n            keepMounted: true,\n            open: Boolean(anchorEl),\n            onClose: closeMenuClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1648,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => writeMessgeClick(1),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1655,\n              columnNumber: 25\n            }\n          }, \"\\u0418\\u0437\\u0432\\u0435\\u0449\\u0435\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => writeMessgeClick(2),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1656,\n              columnNumber: 25\n            }\n          }, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \\u043D\\u0430 \\u0440\\u0430\\u0441\\u043A\\u0440\\u044B\\u0442\\u0438\\u0435\"), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => writeMessgeClick(3),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1657,\n              columnNumber: 25\n            }\n          }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u043E\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(MenuItem, {\n            onClick: () => writeMessgeClick(4),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1658,\n              columnNumber: 25\n            }\n          }, \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043E \\u041A\\u0414\")), /*#__PURE__*/React.createElement(TextField, {\n            size: \"small\",\n            variant: \"outlined\",\n            placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0432 \\u043F\\u043E\\u0447\\u0442\\u0435\",\n            style: {\n              width: \"50%\",\n              paddingLeft: 50,\n              margin: 3\n            },\n            onChange: handleSearchChange,\n            InputProps: {\n              endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n                position: \"end\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1668,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(IconButton, {\n                onClick: () => handleClickSearch(),\n                edge: \"end\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1669,\n                  columnNumber: 31\n                }\n              }, /*#__PURE__*/React.createElement(SearchIcon, {\n                size: \"small\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1673,\n                  columnNumber: 33\n                }\n              })))\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1660,\n              columnNumber: 23\n            }\n          }))), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 12,\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1680,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Paper, {\n            style: {\n              minHeight: \"76px\",\n              paddingTop: docList === null ? \"25px\" : 0\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1681,\n              columnNumber: 21\n            }\n          }, docList !== null ? /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1683,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"table\", {\n            class: \"main-table-style\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1684,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"thead\", {\n            class: \"thead-style\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1685,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1686,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-first-child\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1687,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1688,\n              columnNumber: 33\n            }\n          }, \"\\u0414\\u0430\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1689,\n              columnNumber: 33\n            }\n          }, \"\\u0422\\u0438\\u043F\"), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1690,\n              columnNumber: 33\n            }\n          }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0435\\u043B\\u044C\"), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-style-2row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1691,\n              columnNumber: 33\n            }\n          }, \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"), /*#__PURE__*/React.createElement(\"td\", {\n            class: \"td-head-last-child\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1692,\n              columnNumber: 33\n            }\n          }, \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n            class: \"body-style\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1695,\n              columnNumber: 29\n            }\n          }, Object.keys(docList).length !== 0 && docList.map(dataItem => /*#__PURE__*/React.createElement(\"tr\", {\n            width: \"100%\",\n            key: keyGen(5),\n            style: {\n              \"fontSize\": 13,\n              \"height\": 30,\n              \"background\": clickedMessagesType === \"inbox\" ? getBackround(dataItem.recipient_status) : \"#F0F1F1\",\n              \"fontWeight\": clickedMessagesType === \"inbox\" ? getFontWeight(dataItem.recipient_status) : \"normal\",\n              \"cursor\": \"pointer\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1698,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1709,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(Checkbox, {\n            style: {\n              height: 15,\n              color: \"green\",\n              maxWidth: 25\n            },\n            id: dataItem.mail_id,\n            onChange: handleSelectMessage,\n            checked: selectedMessages[dataItem.mail_id] === true ? true : false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1710,\n              columnNumber: 39\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            key: keyGen(5),\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            align: \"center\",\n            width: 150,\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1717,\n              columnNumber: 37\n            }\n          }, beautifyDate(dataItem.created_at)), /*#__PURE__*/React.createElement(\"td\", {\n            key: keyGen(5),\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            align: \"center\",\n            width: 150,\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1726,\n              columnNumber: 37\n            }\n          }, getEnumLabel(\"mailTypes\", dataItem.type)), /*#__PURE__*/React.createElement(\"td\", {\n            key: keyGen(5),\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            width: 150,\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1735,\n              columnNumber: 37\n            }\n          }, getSenderName(dataItem.sender)), /*#__PURE__*/React.createElement(\"td\", {\n            key: keyGen(5),\n            style: {\n              \"border-bottom\": \"1px solid grey\"\n            },\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1743,\n              columnNumber: 37\n            }\n          }, dataItem.subject), /*#__PURE__*/React.createElement(\"td\", {\n            key: keyGen(5),\n            style: {\n              \"border-bottom\": \"1px solid grey\",\n              \"white-space\": \"wrap\"\n            },\n            onClick: () => openMessage(dataItem),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1750,\n              columnNumber: 37\n            }\n          }, dataItem.body.substring(0, 50), dataItem.body.length > 50 ? \"...\" : \"\"))))), /*#__PURE__*/React.createElement(\"table\", {\n            size: \"small\",\n            style: {\n              \"border-collapse\": \"collapse\",\n              \"white-space\": \"nowrap\",\n              fontSize: 13\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1763,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"tfoot\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1764,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1765,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              paddingLeft: \"20px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1766,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              minWidth: 80,\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1767,\n              columnNumber: 35\n            }\n          }, \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1769,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FormControl, {\n            variant: \"outlined\",\n            style: {\n              minWidth: 30\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1770,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(MaterialSelect, {\n            onChange: handleChangeRowsPerPage,\n            style: {\n              height: 25,\n              color: \"black\"\n            },\n            value: size,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1774,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            value: 10,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1779,\n              columnNumber: 39\n            }\n          }, \"10\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 20,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1780,\n              columnNumber: 39\n            }\n          }, \"20\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 50,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1781,\n              columnNumber: 39\n            }\n          }, \"50\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 100,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1782,\n              columnNumber: 39\n            }\n          }, \"100\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 200,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1783,\n              columnNumber: 39\n            }\n          }, \"200\"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: 500,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1784,\n              columnNumber: 39\n            }\n          }, \"500\")))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1788,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"\\u041D\\u0430 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1789,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => KeyboardArrowFirstClick(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1790,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(FirstPageIcon, {\n            style: {\n              fontSize: \"large\",\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1791,\n              columnNumber: 39\n            }\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1795,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"\\u041D\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1796,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => KeyboardArrowLeftClick(page),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1797,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n            style: {\n              fontSize: \"medium\",\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1798,\n              columnNumber: 39\n            }\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              color: \"black\",\n              fontSize: 16\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1802,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            style: {\n              maxWidth: 25\n            },\n            value: page,\n            onChange: handlePageChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1803,\n              columnNumber: 35\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              paddingLeft: \"3px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1805,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1806,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            onClick: () => GoToPage(),\n            variant: \"outlined\",\n            style: {\n              height: 22,\n              backgroundColor: \"#D1D6D6\",\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1807,\n              columnNumber: 39\n            }\n          }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1819,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            title: \"\\u041D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u044E\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1820,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => KeyboardArrowRightClick(page),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1821,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n            style: {\n              fontSize: \"medium\",\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1822,\n              columnNumber: 39\n            }\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              color: \"black\",\n              fontSize: 13\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1826,\n              columnNumber: 33\n            }\n          }, \"\\u0421\\u0442\\u0440. \", page, \" \\u0438\\u0437 \", getPageAmount()))))) : /*#__PURE__*/React.createElement(Typography, {\n            variant: \"inherit\",\n            noWrap: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1832,\n              columnNumber: 25\n            }\n          }, \"\\u0412 \\u044D\\u0442\\u043E\\u0439 \\u043F\\u0430\\u043F\\u043A\\u0435 \\u043D\\u0435\\u0442 \\u043F\\u0438\\u0441\\u0435\\u043C!\"))), /*#__PURE__*/React.createElement(Snackbar, {\n            open: showSnackBar,\n            onClose: () => handleCloseSnackBar(),\n            autoHideDuration: 1200,\n            message: snackBarMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1838,\n              columnNumber: 19\n            }\n          }))));\n        } else if (writeMessage === true) {\n          return /*#__PURE__*/React.createElement(Paper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1851,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            spacing: 1,\n            justify: \"center\",\n            alignItems: \"center\",\n            className: classes.root,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1852,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1853,\n              columnNumber: 17\n            }\n          }, partnersList(partners)), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1854,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"column\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1855,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleAllRight,\n            disabled: partners.length === 0,\n            \"aria-label\": \"move all selectedPartners\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1856,\n              columnNumber: 21\n            }\n          }, \"\\u226B\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleCheckedRight,\n            disabled: leftChecked.length === 0,\n            \"aria-label\": \"move selected selectedPartners\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1866,\n              columnNumber: 21\n            }\n          }, \">\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleCheckedLeft,\n            disabled: rightChecked.length === 0,\n            \"aria-label\": \"move selected partners\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1876,\n              columnNumber: 21\n            }\n          }, \"<\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleAllLeft,\n            disabled: selectedPartners.length === 0,\n            \"aria-label\": \"move all partners\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1886,\n              columnNumber: 21\n            }\n          }, \"\\u226A\"))), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1898,\n              columnNumber: 17\n            }\n          }, partnersList(selectedPartners)), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 11,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1899,\n              columnNumber: 17\n            }\n          }, \"\\u0422\\u0438\\u043F \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F: \", getEnumLabel(\"mailTypes\", messageType)), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 11,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1900,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1901,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(TextField, {\n            id: \"outlined-multiline-static\",\n            label: \"\\u0422\\u0435\\u043C\\u0430\",\n            multiline: true,\n            onBlur: handleChange,\n            name: \"subject\",\n            defaultValue: fieldValue[\"subject\"],\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1902,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(TextField, {\n            id: \"outlined-multiline-static\",\n            label: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0443\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u044F\",\n            multiline: true,\n            rows: 4,\n            onBlur: handleChange,\n            name: \"body\",\n            defaultValue: fieldValue[\"body\"],\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1912,\n              columnNumber: 21\n            }\n          }))), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1925,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1926,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.importFile,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1927,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            accept: \"image/*, application/pdf\",\n            className: classes.inputFile,\n            id: corpActionsAttachFileButtonId,\n            multiple: true,\n            type: \"file\",\n            onChange: handleAttachFile,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1928,\n              columnNumber: 23\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: corpActionsAttachFileButtonId,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1936,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            component: \"span\",\n            key: keyGen(5),\n            variant: \"outlined\",\n            style: {\n              margin: 3,\n              color: \"white\",\n              backgroundColor: \"#BB7100\",\n              borderColor: \"#161C87\",\n              height: 32,\n              fontSize: 12\n            },\n            endIcon: /*#__PURE__*/React.createElement(AttachFileIcon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1949,\n                columnNumber: 36\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1937,\n              columnNumber: 25\n            }\n          }, \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B\"))), /*#__PURE__*/React.createElement(Button, {\n            key: keyGen(5),\n            variant: \"outlined\",\n            onClick: () => buttonClick(\"send\", null),\n            style: {\n              margin: 3,\n              color: \"white\",\n              borderColor: \"#161C87\",\n              backgroundColor: \"#287A2C\",\n              height: 32,\n              fontSize: 12\n            },\n            endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1966,\n                columnNumber: 32\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1954,\n              columnNumber: 21\n            }\n          }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n            key: keyGen(5),\n            variant: \"outlined\",\n            onClick: () => props.esInn !== null ? buttonClick(\"sendWithES\") : setShowModalEnterPin(true),\n            style: {\n              margin: 3,\n              color: \"white\",\n              borderColor: \"#161C87\",\n              backgroundColor: \"#287A2C\",\n              height: 32,\n              fontSize: 12\n            },\n            endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1981,\n                columnNumber: 32\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1969,\n              columnNumber: 21\n            }\n          }, \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u0438 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n            key: keyGen(5),\n            variant: \"outlined\",\n            onClick: () => setWriteMessage(false),\n            style: {\n              margin: 3,\n              color: \"white\",\n              borderColor: \"#161C87\",\n              backgroundColor: \"#ff1f1f\",\n              height: 32,\n              fontSize: 12\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1985,\n              columnNumber: 21\n            }\n          }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")))), /*#__PURE__*/React.createElement(Grid, {\n            style: {\n              paddingLeft: \"45px\"\n            },\n            container: true,\n            spacing: 2,\n            justify: \"flex-start\",\n            alignItems: \"flex-start\",\n            className: classes.root,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2002,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: \"auto\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2003,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2004,\n              columnNumber: 19\n            }\n          }, filesList()))), /*#__PURE__*/React.createElement(Modal, {\n            open: showModalEnterPin,\n            onClose: handleCloseModalEnterPin,\n            \"aria-labelledby\": \"simple-modal-title\",\n            \"aria-describedby\": \"simple-modal-description\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2009,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: modalStyle,\n            className: classes.modalRutoken,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2015,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            id: \"simple-modal-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2016,\n              columnNumber: 19\n            }\n          }, \"\\u0412\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041F\\u0418\\u041D \\u043A\\u043E\\u0434 \\u0420\\u0443\\u0442\\u043E\\u043A\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(FormControl, {\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            },\n            error: wrongPin,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2017,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(InputLabel, {\n            htmlFor: \"outlined-adornment-password\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2018,\n              columnNumber: 21\n            }\n          }, \"PIN\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n            type: showPin ? 'text' : 'password',\n            defaultValue: rutokenPin,\n            onChange: handlePinChange,\n            onKeyPress: onKeyPressModalEnterPin,\n            autoFocus: true,\n            endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n              position: \"end\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2026,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPin,\n              edge: \"end\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2027,\n                columnNumber: 27\n              }\n            }, showPin ? /*#__PURE__*/React.createElement(Visibility, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2032,\n                columnNumber: 40\n              }\n            }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2032,\n                columnNumber: 57\n              }\n            }))),\n            labelWidth: 25,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2019,\n              columnNumber: 21\n            }\n          })), wrongPin === true && /*#__PURE__*/React.createElement(\"p\", {\n            color: \"red\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2039,\n              columnNumber: 41\n            }\n          }, \"\\u041D\\u0435 \\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 PIN\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"contained\",\n            onClick: () => buttonClick(\"sendWithES\"),\n            style: {\n              margin: 3,\n              height: 32,\n              fontSize: 12,\n              color: \"white\",\n              backgroundColor: \"#2862F4\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2040,\n              columnNumber: 19\n            }\n          }, \"\\u041E\\u043A\"), /*#__PURE__*/React.createElement(Button, {\n            variant: \"contained\",\n            onClick: handleCloseModalEnterPin,\n            style: {\n              margin: 3,\n              height: 32,\n              fontSize: 12,\n              color: \"white\",\n              backgroundColor: \"#E73639\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2052,\n              columnNumber: 19\n            }\n          }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n        }\n      } else if (taskType === \"shomMessageForm\") {\n        return /*#__PURE__*/React.createElement(Paper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2072,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2073,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"center\",\n          alignItems: \"center\",\n          spacing: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2074,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2075,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          component: \"h1\",\n          variant: \"h6\",\n          color: \"inherit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2076,\n            columnNumber: 21\n          }\n        }, selectedDoc.subject)), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2078,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2079,\n            columnNumber: 21\n          }\n        }, \"Дата: \", selectedDoc.created_at.substring(0, 19)), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2080,\n            columnNumber: 21\n          }\n        }, \"Отправитель: \", getSenderName(selectedDoc.sender)), selectedDoc.es_inn !== null && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2082,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2083,\n            columnNumber: 25\n          }\n        }, \"Время подписания: \", selectedDoc.es_date !== undefined ? selectedDoc.es_date.substring(0, 19) : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2084,\n            columnNumber: 25\n          }\n        }, \"ИНН: \", selectedDoc.es_inn), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2085,\n            columnNumber: 25\n          }\n        }, \"ФИО: \", selectedDoc.es_full_name))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2089,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2090,\n            columnNumber: 19\n          }\n        }, selectedDoc.body)), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2092,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2093,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: 12,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2094,\n            columnNumber: 19\n          }\n        }, \"Прикрепленные файлы\"), savedDocsList(), savedImgsList()), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2098,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          key: keyGen(5),\n          variant: \"outlined\",\n          onClick: () => buttonClick(\"showReport\"),\n          style: {\n            margin: 3,\n            color: \"white\",\n            borderColor: \"#161C87\",\n            backgroundColor: \"#287A2C\",\n            height: 32,\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2099,\n            columnNumber: 19\n          }\n        }, \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n          key: keyGen(5),\n          variant: \"outlined\",\n          onClick: () => buttonClick(\"back\"),\n          style: {\n            margin: 3,\n            color: \"white\",\n            borderColor: \"#161C87\",\n            backgroundColor: \"#ff1f1f\",\n            height: 32,\n            fontSize: 12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2113,\n            columnNumber: 19\n          }\n        }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\"))), /*#__PURE__*/React.createElement(Modal, {\n          className: classes.modal,\n          open: openModal,\n          onClose: handleCloseModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2129,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.imagePaper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2134,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          name: selectedImg.name,\n          height: 600,\n          width: \"auto\",\n          src: selectedImg.src,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2135,\n            columnNumber: 17\n          }\n        }))));\n      } else {\n        return /*#__PURE__*/React.createElement(LinearProgress, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2142,\n            columnNumber: 16\n          }\n        });\n      }\n    } catch (er) {\n      console.log(\"ERROR\", er);\n      return /*#__PURE__*/React.createElement(LinearProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2147,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","clsx","Button","LinearProgress","NumberFormat","PropTypes","Card","fade","makeStyles","Grid","List","ListItem","ListItemIcon","ListItemText","Checkbox","Paper","TextField","Typography","FormControl","MaterialSelect","Snackbar","OutlinedInput","InputAdornment","InputLabel","TableRow","TableBody","TableCell","Modal","Menu","MenuList","MenuItem","SendIcon","AttachFileIcon","CloseIcon","IconButton","DraftsIcon","MailOutlineIcon","DeleteOutlineIcon","ArrowForwardIosIcon","ArrowBackIosIcon","FirstPageIcon","SearchIcon","CreateIcon","DeleteIcon","GetAppIcon","Visibility","VisibilityOff","swal","Tooltip","axios","rutoken","plugin","rutokenHandle","certHandle","certData","cmsData","moment","require","generator","FloatFormat","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","IntegerFormat","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","importFile","inputFile","display","modal","alignItems","justifyContent","modalRutoken","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","not","a","b","filter","indexOf","intersection","getModalStyle","top","left","transform","classes","userProfile","session_id","userTask","process_id","taskID","enumData","enumOptions","setEnumOptions","fieldValue","setFieldValue","subject","body","esDate","esFullName","esInn","searchFieldValue","setSearchFieldValue","selectedOptions","setSelectedOptions","updateState","setUpdateState","taskType","docList","setDocList","filteredDocList","setFilteredDocList","initialDocList","setInitialDocList","page","setPage","size","setSize","showSnackBar","setShowSnackBar","snackBarMessage","setSnackBarMessage","clickedMessagesType","setClickedMessagesType","checked","setChecked","partners","setPartners","selectedPartners","setSelectedPartners","leftChecked","rightChecked","files","setFiles","Blobs","setBlobs","corpActionsAttachFileButtonId","setCorpActionsAttachFileButtonId","menuId","setMenuId","anchorEl","setAnchorEl","writeMessage","setWriteMessage","messageType","setMessageType","allMessagesSelected","setAllMessagesSelected","selectedMessages","setSelectedMessages","selectedDoc","setSelectedDoc","savedImgs","setSavedImgs","savedImagesFiles","setSavedImagesFiles","savedDocs","setSavedDocs","selectedImg","setSelectedImg","openModal","setOpenModal","idFromUsers","setIdFromUsers","modalStyle","showModalEnterPin","setShowModalEnterPin","rutokenPin","setRutokenPin","showPin","setShowPin","wrongPin","setWrongPin","console","log","getUUID","undefined","i","length","name","newPartners","d","data","push","id","user_id","userId","callErrorToast","parsedData","JSON","parse","filteredDocL","recipient","recipient_status","fetchBySize","er","parsedSelectedDoc","extension","convertBase64ToFile","content","fileName","handlePinChange","event","handleClickShowPin","handleCloseModalEnterPin","ready","then","window","chrome","InstallTrigger","isExtensionInstalled","Promise","resolve","result","isPluginInstalled","loadPlugin","handleError","reason","isNaN","message","errorCodes","parseInt","PIN_INCORRECT","alert","sign","commandJson","enumerateDevices","devices","firstDevice","getDeviceInfo","TOKEN_INFO_IS_LOGGED_IN","isLoggedIn","login","enumerateCertificates","CERT_CATEGORY_UNSPEC","certs","parseCertificate","senMails","options","inn","fullName","rdn","newMailBody","variables","mailBody","mails","es_date","Date","format","es_full_name","es_inn","newCommandJson","stringify","setEsInn","setEsUserFullName","setEsExpiredDate","validNotAfter","substring","sendFieldValues","clearTabData","DATA_FORMAT_PLAIN","logout","swAllert","dataurl","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","convFile","File","type","handleAttachSavedFile","file","pushSavedImage","f","reader","FileReader","onload","e","image","item","savedImgClick","readAsDataURL","l","src","handleOpenModal","newId","handleCloseModal","openMenuClick","currentTarget","closeMenuClick","handleChange","uuidv1","keyGen","password","generate","numbers","text","icon","buttons","ok","getEmail","email","buttonClick","senderId","files_dir","files_directory","status","sender","mail_distributions","s","recipientId","getRecipientId","newDistribution","sender_status","blobs","commandType","directory","userAction","userRole","reportName","reportVars","mail_id","formData","FormData","append","p","fetch","mode","method","response","catch","error","partner","parsedAttr","attributes","KeyboardArrowFirstClick","KeyboardArrowLeftClick","prevPage","fetchFrom","fetchTo","KeyboardArrowRightClick","handleChangeRowsPerPage","GoToPage","handlePageChange","getPageAmount","pagesFloat","mathRoundOfPages","Math","round","handleCloseSnackBar","Data","newDocList","beautifyDate","date","newDate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","beautyDate","shortdd","toString","handleToggle","currentIndex","newChecked","splice","handleAllRight","concat","handleCheckedRight","handleCheckedLeft","handleAllLeft","partnersList","items","map","labelId","getPartnerName","label","writeMessgeClick","handleSelectAllMessagesChange","handleSelectMessage","handleAttachFile","selectedFiles","pushNewBlob","docUrl","URL","createObjectURL","res","blob","blobToBase64","cb","dataUrl","base64","newBlob","deleteFile","newFilesList","filesList","selFilesList","paddingLeft","color","fontWeight","fontSize","handleSearchChange","handleClickSearch","handleInboxMessagesClick","handleSentMessagesClick","handleTrashMessagesClick","toLowerCase","searchField","includes","getSenderName","firstname","lastname","getEnumLabel","getBackround","getFontWeight","checkToShowDeleteButton","showButton","Object","keys","key","openMessage","mailDistrBody","distribution_id","created_at","updated_at","unreadDistributionsBody","user_session_id","depoRESTApi","user_id_recipient","deleteMessages","mailDistrList","mailToDelete","mailList","yes","cancel","click","deleted","savedDocsList","minWidth","savedImgsList","imgs","converFileToBlob","byteString","ab","ArrayBuffer","ia","Blob","getMenuItemStyle","onKeyPressModalEnterPin","code","charCode","Boolean","endAdornment","minHeight","paddingTop","dataItem","maxWidth","borderColor","imagePaper"],"sources":["C:/Users/SERGO/Desktop/depo/src/components/CorporativeActions/CorporativeActions.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\n// Form components\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport FormControl from '@material-ui/core/FormControl';\nimport MaterialSelect from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\n// Icons\nimport SendIcon from '@material-ui/icons/Send';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n// Libraries\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\nimport Tooltip from '@material-ui/core/Tooltip';\nimport axios from 'axios';\nimport * as rutoken from \"rutoken\";\nvar plugin;\nvar rutokenHandle, certHandle, certData, cmsData;\nvar moment = require('moment');\n\nvar generator = require('generate-password');\n\nfunction FloatFormat(props){\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      decimalSeparator={\".\"}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nFloatFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nfunction IntegerFormat(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator={\" \"}\n      isNumericString\n    />\n  );\n}\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 400,\n    height: 300,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n  importFile: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  inputFile: {\n    display: 'none',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalRutoken: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #AFAFAF',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  }\n}))\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\nfunction getModalStyle() {\n  const top = 35;\n  const left = 45;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nexport default (props) => {\n  // This.state\n  const classes = useStyles();\n  const [userProfile] = useState(props.userProfile)\n  const [session_id] = useState(props.userTask.session_id)\n  const [process_id] = useState(props.userTask.process_id)\n  const [taskID] = useState(props.userTask.taskID)\n  const [enumData] = useState(props.userTask.enumData)\n  const [enumOptions, setEnumOptions] = useState({})\n  const [fieldValue, setFieldValue] = useState({subject: \"\", body: \"\", esDate: \"\", esFullName: \"\", esInn: \"\"})\n  const [searchFieldValue, setSearchFieldValue] = useState(\"\")\n  const [selectedOptions, setSelectedOptions] = useState([])\n  const [updateState, setUpdateState] = useState(false)\n  const [taskType] = useState(props.userTask.taskType)\n  const [docList, setDocList] = useState(null)\n  const [filteredDocList, setFilteredDocList] = useState(null)\n  const [initialDocList, setInitialDocList] = useState(null)\n  const [page, setPage] = useState(1)\n  const [size, setSize] = useState(10)\n  const [showSnackBar, setShowSnackBar] = useState(false)\n  const [snackBarMessage, setSnackBarMessage] = useState(false)\n  const [clickedMessagesType, setClickedMessagesType] = useState(\"inbox\")\n  \n  const [checked, setChecked] = useState([]);\n  const [partners, setPartners] = useState([]);\n  const [selectedPartners, setSelectedPartners] = useState([]);\n  const leftChecked = intersection(checked, partners);\n  const rightChecked = intersection(checked, selectedPartners);\n  const [files, setFiles] = useState([])\n  const [Blobs, setBlobs] = useState([])\n  const [corpActionsAttachFileButtonId, setCorpActionsAttachFileButtonId] = useState(null)\n\n  const [menuId, setMenuId] = useState(null)\n  const [anchorEl, setAnchorEl] = useState(null)\n  \n  const [writeMessage, setWriteMessage] = useState(false)\n  const [messageType, setMessageType] = useState(1)\n  const [allMessagesSelected, setAllMessagesSelected] = useState(false)\n  const [selectedMessages, setSelectedMessages] = useState({})\n  const [selectedDoc, setSelectedDoc] = useState(null)\n  // Saved Docs\n  const [savedImgs, setSavedImgs] = useState([])\n  const [savedImagesFiles, setSavedImagesFiles] = useState([])\n  const [savedDocs, setSavedDocs] = useState([])\n  const [selectedImg, setSelectedImg] = useState({})\n  const [openModal, setOpenModal] = useState(false)\n  const [idFromUsers, setIdFromUsers] = useState(false)\n  // Rutoken\n  const [modalStyle] = useState(getModalStyle)\n  const [showModalEnterPin, setShowModalEnterPin] = useState(false)\n  const [rutokenPin, setRutokenPin] = useState(\"\")\n  const [showPin, setShowPin] = useState(false)\n  const [wrongPin, setWrongPin] = useState(false)\n  \n  // Set data from props to state of component\n  useEffect(()=>{\n    console.log(\"CORPACTS PROPS\", props)\n    setCorpActionsAttachFileButtonId(getUUID())\n    setMenuId(getUUID())\n    if(props.userTask.enumData !== null && props.userTask.enumData !== undefined && props.userTask.enumData !== \"null\"){\n      for(let i=0; i<props.userTask.enumData.length; i++){\n        if(props.userTask.enumData[i] !== null){\n          if(props.userTask.enumData[i].name === \"partners\"){\n            let newPartners = []\n            for(let d=0; d<props.userTask.enumData[i].data.length; d++){\n              newPartners.push(props.userTask.enumData[i].data[d].id)\n            }\n            setPartners(newPartners)\n          }\n          else if(props.userTask.enumData[i].name === \"users\"){\n            for(let d=0; d<props.userTask.enumData[i].data.length; d++){\n              if(props.userTask.enumData[i].data[d].user_id === props.userProfile.userId){\n                setIdFromUsers(props.userTask.enumData[i].data[d].id)\n              }\n            }\n          }\n        }\n        else{\n          if(i === 0){\n            setPartners([])\n            props.callErrorToast(\"Ошибка сбора справочной информации Partners\")\n          }\n          else{\n            props.callErrorToast(\"Ошибка сбора справочной информации Users\")\n          }\n        }\n      }\n    }\n    if(props.userTask.docList !== \"null\" && props.userTask.docList !== null){\n      try{\n        let parsedData  = JSON.parse(props.userTask.docList)\n        console.log(\"DOCL\", parsedData)\n        setInitialDocList(parsedData)\n        let filteredDocL = []\n        for(let i=0; i<parsedData.recipient.length; i++){\n            if(parsedData.recipient[i].recipient_status === 1 || parsedData.recipient[i].recipient_status === 2){\n              filteredDocL.push(parsedData.recipient[i])\n            }\n          }\n        fetchBySize(0, 9, filteredDocL)\n        setFilteredDocList(filteredDocL)\n      }\n      catch(er){\n        props.callErrorToast(\"Ошибка сбора списка данных \" + props.userTask.taskType)\n        setFilteredDocList([])\n        setInitialDocList([])\n        setDocList([])\n      }\n    }\n    if(props.userTask.selectedDoc !== \"null\" && props.userTask.selectedDoc !== undefined && props.userTask.selectedDoc !== null){\n      let parsedSelectedDoc = JSON.parse(props.userTask.selectedDoc)\n      console.log(\"SDOC\", parsedSelectedDoc)\n      setSelectedDoc(parsedSelectedDoc)\n    }\n    if(props.userTask.savedDocs.length !== 0){\n      for(let d=0; d<props.userTask.savedDocs.length; d++){\n        let extension = props.userTask.savedDocs[d].extension\n        if(extension === \".png\"){\n          convertBase64ToFile(\"data:image/png;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".jpeg\" || extension === \".jpg\"){\n          convertBase64ToFile(\"data:image/jpeg;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".doc\"){\n          convertBase64ToFile(\"data:application/msword;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".docx\"){\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".xlsx\"){\n          convertBase64ToFile(\"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n        else if(extension === \".pdf\"){\n          convertBase64ToFile(\"data:application/pdf;base64,\" + props.userTask.savedDocs[d].content, props.userTask.savedDocs[d].fileName)\n        }\n      }\n    }\n    setUpdateState(getUUID())\n  },[])\n   // RuToken functions\n   function handlePinChange(event){\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    setRutokenPin(event.target.value)\n    console.log(\"PIN\", event.target.value)\n  }\n  function handleClickShowPin(){\n    setShowPin(!showPin)\n  }\n  const handleCloseModalEnterPin = () => {\n    setShowModalEnterPin(false)\n  }\n  rutoken.ready\n  // Проверка установки расширение 'Адаптера Рутокен Плагина' в Google Chrome\n  .then(function () {\n    if (window.chrome || typeof InstallTrigger !== 'undefined') {\n      return rutoken.isExtensionInstalled()\n    } else {\n      return Promise.resolve(true)\n    }\n  })\n  // Проверка установки Рутокен Плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.isPluginInstalled()\n    } else {\n      // alert(\"Не удаётся найти расширение 'Адаптер Рутокен Плагина'\");\n    }\n  })\n  // Загрузка плагина\n  .then(function (result) {\n    if (result) {\n      return rutoken.loadPlugin()\n    } else {\n      // alert(\"Не удаётся найти Плагин\");\n    }\n  })\n  //Можно начинать работать с плагином\n  .then(function (result) {\n    if (!result) {\n      return // alert(\"Не удаётся загрузить Плагин\")\n    } else {\n      plugin = result\n      return Promise.resolve()\n    }\n  })\n  \n  // catch errors while signing docs\n  function handleError(reason) {\n    if (isNaN(reason.message)) {\n      console.log(reason);\n    } else {\n      var errorCodes = plugin.errorCodes;\n      switch (parseInt(reason.message)) {\n        case errorCodes.PIN_INCORRECT:\n          // alert(\"Неверный PIN\");\n          setWrongPin(true)\n          break;\n        default:\n          alert(\"Неизвестная ошибка\");\n      }\n    }\n  }\n  // Sign transfer order with rutoken\n  function sign(commandJson) {\n    try{\n      // Получение текста для подписи\n      if(plugin !== undefined){\n      // Перебор подключенных Рутокенов\n        plugin.enumerateDevices()\n        .then(function (devices) {\n          if (devices.length > 0) {\n            return Promise.resolve(devices[0]);\n          } else {\n            alert(\"Рутокен не обнаружен\");\n          }\n        })\n        // Проверка залогиненности\n        .then(function (firstDevice) {\n          rutokenHandle = firstDevice;\n          return plugin.getDeviceInfo(rutokenHandle, plugin.TOKEN_INFO_IS_LOGGED_IN);\n        })\n        // Логин на первый токен в списке устройств PIN-кодом по умолчанию\n        .then(function (isLoggedIn) {\n          if (isLoggedIn) {\n            return Promise.resolve();\n          } else {\n            return plugin.login(rutokenHandle, rutokenPin);\n          }\n        })\n        // Перебор пользовательских сертификатов на токене\n        .then(function () {\n          return plugin.enumerateCertificates(rutokenHandle, plugin.CERT_CATEGORY_UNSPEC);\n        })\n        .then(function (certs) {\n          if (certs.length > 0) {\n            certHandle = certs[0];\n            return plugin.parseCertificate(rutokenHandle, certs[0]);\n          }  else {\n            alert(\"Сертификат на Рутокен не обнаружен\");\n          }\n        })\n        // Подписание данных из текстового поля на первом найденом сертификате\n        .then(function (certs) {\n          certData = certs\n          // console.log(\"RUTDATA\", certData)\n          if (certHandle.length > 0) {\n            senMails()\n            var options = {};\n            \n            let inn = \"\"\n            let fullName = \"\"\n            for(let i=0; i<certData.subject.length; i++){\n              if(certData.subject[i].rdn === \"serialNumber\"){\n                inn = certData.subject[i].value\n              }\n              if(certData.subject[i].rdn === \"commonName\"){\n                fullName = certData.subject[i].value\n              }\n            }\n            let newMailBody = JSON.parse(commandJson.variables.mailBody.value)\n            newMailBody.mails.es_date = moment(new Date()).format()\n            newMailBody.mails.es_full_name = fullName\n            newMailBody.mails.es_inn = inn\n            let newCommandJson = commandJson\n            newCommandJson.variables.mailBody.value = JSON.stringify(newMailBody)\n            props.setEsInn(inn)\n            props.setEsUserFullName(fullName)\n            props.setEsExpiredDate(certData.validNotAfter.substring(0, certData.validNotAfter.length-1))\n            handleCloseModalEnterPin()\n            console.log(\"SIGNED CJ\", newCommandJson)\n            props.sendFieldValues(newCommandJson)\n            props.clearTabData(process_id)\n            return plugin.sign(rutokenHandle, certHandle, \"textToSign\", plugin.DATA_FORMAT_PLAIN, options);\n          } else {\n            alert(\"Сертификат на Рутокен не обнаружен\")\n          }\n        })\n        // Закрытие сессии\n        .then(function () {\n          plugin.logout(rutokenHandle)\n        }, handleError)\n      }\n      else{swAllert(\"Вставьте рутокен, либо установите расширение для вашего браузера\", \"warning\")}\n    }\n    catch(er){\n      console.log(\"Rutoken ERR\")\n    }\n  }\n  // Documents attached to mail\n  function convertBase64ToFile(dataurl, fileName){\n    var arr = dataurl.split(','),\n    mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n)\n    \n    while(n--){\n      u8arr[n] = bstr.charCodeAt(n)\n    }\n    let convFile = new File([u8arr], fileName, {type: mime})\n    handleAttachSavedFile(convFile)\n    console.log(\"CONV FILE\", convFile)\n  }\n  function handleAttachSavedFile(file){\n    // console.log(\"FILE\", file)\n    if(file.type === \"application/pdf\" || file.type === \"application/msword\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"){\n      savedDocs.push(file)\n      setSavedDocs(savedDocs)\n    }\n    else{\n      savedImagesFiles.push(file)\n      setSavedImagesFiles(savedImagesFiles)\n      pushSavedImage(file)\n    }\n    // setUpdateState(getUUID())\n  }\n  async function pushSavedImage(f){\n    let reader = new FileReader()\n    reader.onload = async function(e){\n      // push new images to list and show in UI\n      let image = {item: <img name={f.name} height=\"150\" width=\"auto\" src={e.target.result} onClick={()=> savedImgClick(f.name)}/>}\n      savedImgs.push(image)\n      // console.log(\"IMGLIST\", savedImgs)\n      setSavedImgs(savedImgs)\n      setUpdateState(getUUID())\n    }\n    reader.readAsDataURL(f)\n  }\n  async function savedImgClick(name){\n    for(let l=0; l<savedImgs.length; l++){\n      if(savedImgs[l].item.props.name === name){\n        console.log(\"IMG\", savedImgs[l])\n        setSelectedImg({\n          name: savedImgs[l].item.props.name,\n          height: \"700\",\n          width: \"auto\",\n          src: savedImgs[l].item.props.src\n        })\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n  const handleCloseModal = () => {\n    setOpenModal(false)\n  }\n  const openMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  }\n  const closeMenuClick = () => {\n    setAnchorEl(null)\n  }\n  \n  function handleChange(event){\n    // console.log(\"EVENT\", event.target.name, event.target.value)\n    fieldValue[event.target.name] = event.target.value\n    setFieldValue(fieldValue)\n    console.log(\"FIELDVALUE\", fieldValue)\n  }\n  // random UUID generator\n  function getUUID(){\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  // random numbers generator\n  function keyGen(length){\n    var password = generator.generate({\n      length: length,\n      numbers: true\n    })\n    return password\n  }\n  function swAllert(text, icon){\n    return(\n      swal({\n        text: text,\n        icon: icon,\n        buttons: {ok: \"Ок\"},\n      })\n    )\n  }\n  function getEmail(id){\n    for(let i=0; i<enumData.length; i++){\n      if(enumData[i].name === \"partners\"){\n        for(let d=0; d<enumData[i].data.length; d++){\n          if(enumData[i].data[d].id === id){\n            return enumData[i].data[d].email\n          }\n        }\n      }\n    }\n  }\n  async function buttonClick(name, item){\n    if(name === \"send\"){\n      if(selectedPartners.length === 0){\n        swAllert(\"Выберите как минимум одного получателя!\", \"warning\")\n      }\n      else{\n        senMails()\n        // Get sender id by userId in users\n        let senderId = null\n        for(let e=0; e<enumData.length; e++){ \n          if(enumData[e].name === \"users\"){\n            for(let d=0; d<enumData[e].data.length; d++){\n              if(enumData[e].data[d].user_id === userProfile.userId){\n                senderId = enumData[e].data[d].id\n              }\n            }\n          }\n        }\n        // Create Mail Body for local notifications\n        let files_dir = getUUID()\n        // let lostRecipients = []\n        let mailBody = {\n          mails: {\n            type: messageType,\n            subject: fieldValue.subject,\n            body: fieldValue.body,\n            files_directory: files_dir,\n            status: 3,\n            sender: senderId,\n            es_date: null,\n            es_full_name: null,\n            es_inn: null\n          },\n          mail_distributions: []\n        }\n        console.log(\"mailBody\", mailBody)\n        // Push recipient of local system mail\n        for(let s=0; s<selectedPartners.length; s++){\n          let recipientId = getRecipientId(selectedPartners[s])\n          if(recipientId !== null){\n              let newDistribution = {\n              sender: senderId,\n              sender_status: 3,\n              recipient_status: 1,\n              recipient: recipientId\n            }\n            mailBody.mail_distributions.push(newDistribution)\n          }\n          // else{\n          //   lostRecipients.push(selectedPartners[s])\n          //   // console.log(\"LOST RECIPIENT\", selectedPartners[s])\n          // }\n        }\n        // Files attached to mail\n        let blobs = []\n        for(let f=0; f<files.length; f++){\n          for(let b=0; b<Blobs.length; b++){\n            if(files[f].name === Blobs[b].name){\n              console.log(\"MATCH\", files[f].name, Blobs[b])\n              blobs.push(Blobs[b])\n            }\n          }\n        }\n        const commandJson = \n        {\n          commandType: \"sendMails\",\n          process_id: process_id,\n          session_id: session_id,\n          taskID: taskID,\n          directory: files_dir,\n          blobs: blobs,\n          variables: {\n            userAction: {value: \"sendMail\"},\n            mailBody: {value: JSON.stringify(mailBody)}\n          }\n        }\n        console.log(\"button sendMail: \", commandJson)\n        props.sendFieldValues(commandJson)\n        props.clearTabData(process_id)\n      }\n    }\n    else if(name === \"sendWithES\"){\n      if(selectedPartners.length === 0){\n        swAllert(\"Выберите как минимум одного получателя!\", \"warning\")\n      }\n      else{\n        // Get sender id by userId in users\n        let senderId = null\n        for(let e=0; e<enumData.length; e++){\n          if(enumData[e].name === \"users\"){\n            for(let d=0; d<enumData[e].data.length; d++){\n              if(enumData[e].data[d].user_id === userProfile.userId){\n                senderId = enumData[e].data[d].id\n              }\n            }\n          }\n        }\n        // Create Mail Body for local notifications\n        let files_dir = getUUID()\n        // let lostRecipients = []\n        let mailBody = {\n          mails: {\n            type: messageType,\n            subject: fieldValue.subject,\n            body: fieldValue.body,\n            files_directory: files_dir,\n            status: 3,\n            sender: senderId,\n            es_date: moment(new Date()).format(),\n            es_full_name: props.esFullName,\n            es_inn: props.esInn\n          },\n          mail_distributions: []\n        }\n        console.log(\"mailBody\", mailBody)\n        // Push recipient of local system mail\n        for(let s=0; s<selectedPartners.length; s++){\n          let recipientId = getRecipientId(selectedPartners[s])\n          if(recipientId !== null){\n              let newDistribution = {\n              sender: senderId,\n              sender_status: 3,\n              recipient_status: 1,\n              recipient: recipientId\n            }\n            mailBody.mail_distributions.push(newDistribution)\n          }\n        }\n        // Files attached to mail\n        let blobs = []\n        for(let f=0; f<files.length; f++){\n          for(let b=0; b<Blobs.length; b++){\n            if(files[f].name === Blobs[b].name){\n              console.log(\"MATCH\", files[f].name, Blobs[b])\n              blobs.push(Blobs[b])\n            }\n          }\n        }\n        const commandJson = \n        {\n          commandType: \"sendMails\",\n          process_id: process_id,\n          session_id: session_id,\n          taskID: taskID,\n          directory: files_dir,\n          blobs: blobs,\n          variables: {\n            userAction: {value: \"sendMail\"},\n            mailBody: {value: JSON.stringify(mailBody)}\n          }\n        }\n        console.log(\"button sendMail: \", commandJson)\n        if(props.esInn !== null){\n          senMails()\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n        }\n        else{\n          sign(commandJson)\n        }\n      }\n    }\n    else if (name === \"showReport\"){\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {value: \"showReport\"},\n          reportName: {value: \"Message_alert\"},\n          reportVars: {value: \"?id=\" + selectedDoc.mail_id},\n        }\n      }\n      console.log(\"button showReport:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if (name === \"back\"){\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        session_id: session_id,\n        process_id: process_id,\n        taskID: taskID,\n        userId: userProfile.userId,\n        userRole: userProfile.userRole,\n        variables: {\n          userAction: {value: \"back\"},\n        }\n      }\n      console.log(\"button back:\", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n  }\n  async function senMails(){\n    // Create FormData\n    let formData = new FormData()\n    formData.append(\"subject\", fieldValue[\"subject\"])\n    formData.append(\"body\",  fieldValue[\"body\"])\n    for(let i=0; i<files.length; i++){\n      formData.append('attachments', files[i], files[i].name)\n    }\n    for(let p=0; p<selectedPartners.length; p++){\n      formData.append(\"toEmail\", getEmail(selectedPartners[p]))\n      await fetch(\n        \"/api/Mail/SendMail\",\n        {\n          mode: 'no-cors',\n          method: 'POST',\n          body: formData\n        }\n      )\n      .then(response => {\n        console.log(\"RES SEND MAIL\", response)\n      })\n      .catch(error => console.error(error))\n    }\n  }\n  function getRecipientId(partner){\n    console.log(\"Partner ID\", partner)\n    let recipientId = null\n    for(let e=0; e<enumData.length; e++){\n      if(enumData[e].name === \"users\"){\n        for(let d=0; d<enumData[e].data.length; d++){\n          let parsedAttr = JSON.parse(enumData[e].data[d].attributes)\n          if(partner === parseInt(parsedAttr[\"partner\"])){\n            recipientId = enumData[e].data[d].id\n          }\n        }\n      }\n    }\n    console.log(\"RES ID\", recipientId)\n    return recipientId\n  }\n  // Pagination functions\n  function KeyboardArrowFirstClick(){\n    if(page !== 1){\n      setPage(1)\n      fetchBySize(0, size-1, filteredDocList)\n    }\n    else{\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowLeftClick(page){\n    if(page !== 1){\n      var prevPage = page - 1\n      setPage(prevPage)\n      let fetchFrom = ((prevPage -1) * size) //10\n      let fetchTo = (size * prevPage)-1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    else{\n      setSnackBarMessage(\"Вы на первой странице!\")\n      setShowSnackBar(true)\n    }\n  }\n  function KeyboardArrowRightClick(page){\n    if(docList.length < size-1){\n      // console.log(\"NO DATA\")\n      setSnackBarMessage(\"Больше нет данных!\")\n      setShowSnackBar(true)\n    } \n    else{\n      setPage(page + 1)\n      let fetchFrom = (size * page)\n      let fetchTo = ((page + 1) * size)-1\n      fetchBySize(fetchFrom, fetchTo, filteredDocList)\n    }\n    \n  }\n  function handleChangeRowsPerPage(event){\n    setSize(event.target.value)\n    setPage(1)\n    fetchBySize(0, event.target.value-1, filteredDocList)\n  } \n  function GoToPage(){\n    let fetchFrom = (page*size-1)-size\n    let fetchTo = page*size-1\n    fetchBySize(fetchFrom, fetchTo, filteredDocList)\n  }\n  function handlePageChange(event){\n    setPage(event.target.value)\n  }\n  function getPageAmount(){\n    let pagesFloat = (filteredDocList.length)/size\n    let mathRoundOfPages = Math.round(pagesFloat)\n    if(pagesFloat > mathRoundOfPages){\n      return mathRoundOfPages + 1\n    }\n    else{\n      return mathRoundOfPages\n    }\n  }\n  function handleCloseSnackBar(){\n    setShowSnackBar(false)\n  }\n  // get rows amount of filtered docs by size\n  function fetchBySize(fetchFrom, fetchTo, Data){\n    let newDocList = []\n    for(let i=fetchFrom; i<=fetchTo; i++){\n      if(Data[i] !== undefined){\n        newDocList.push(Data[i])\n      }\n    }\n    setDocList(newDocList)\n    setUpdateState(getUUID())\n  }\n  // Convert date to approptiate format\n  function beautifyDate(date){\n    try{\n      var newDate = new Date(date) // \"2020-01-26\"\n      var dd = String(newDate.getDate()).padStart(2, '0')\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n      var yyyy = newDate.getFullYear()\n      let beautyDate = \"\"\n      if(parseInt(dd) < 10){\n        let shortdd = dd.substring(1, 2)\n        dd = shortdd + \" \"\n      }\n      else{beautyDate += dd}\n      switch(mm){\n        case \"01\" : {\n          mm = \"янв.\"\n          break\n        }\n        case \"02\" : {\n          mm = \"февр.\"\n          break\n        }\n        case \"03\" : {\n          mm = \"мар.\"\n          break\n        }\n        case \"04\" : {\n          mm = \"апр.\"\n          break\n        }\n        case \"05\" : {\n          mm = \"мая\"\n          break\n        }\n        case \"06\" : {\n          mm = \"июня\"\n          break\n        }\n        case \"07\" : {\n          mm = \"июля\"\n          break\n        }\n        case \"08\" : {\n          mm = \"авг.\"\n          break\n        }\n        case \"09\" : {\n          mm = \"сент.\"\n          break\n        }\n        case \"10\" : {\n          mm = \"окт.\"\n          break\n        }\n        case \"11\" : {\n          mm = \"ноя.\"\n          break\n        }\n        case \"12\" : {\n          mm = \"дек.\"\n          break\n        }\n        default: {\n          break\n        }\n      }\n      beautyDate += \" \" + mm + \" \" + yyyy.toString().substring(2, 4) + \"г.\"\n      // console.log(\"beautyDate\", beautyDate)\n      return beautyDate\n    }\n    catch(er){\n      return \"NaN.NaN.NaN\"\n    }\n  }\n  // multiple selector functions\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  }\n  const handleAllRight = () => {\n    setSelectedPartners(selectedPartners.concat(partners));\n    setPartners([]);\n  }\n  const handleCheckedRight = () => {\n    setSelectedPartners(selectedPartners.concat(leftChecked));\n    setPartners(not(partners, leftChecked));\n    setChecked(not(checked, leftChecked));\n  }\n  const handleCheckedLeft = () => {\n    setPartners(partners.concat(rightChecked));\n    setSelectedPartners(not(selectedPartners, rightChecked));\n    setChecked(not(checked, rightChecked));\n  }\n  const handleAllLeft = () => {\n    setPartners(partners.concat(selectedPartners));\n    setSelectedPartners([]);\n  }\n  const partnersList = (items) => (\n    <Paper className={classes.paper}>\n      <input\n        placeholder='Поиск'\n        style={{width: \"100%\"}}\n      />\n      <List dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <Checkbox\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n              <ListItemText id={labelId} primary={getPartnerName(value)} />\n            </ListItem>\n          )\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  )\n  function getPartnerName(id){\n    for(let i=0; i<props.userTask.enumData.length; i++){\n      if(props.userTask.enumData[i].name === \"partners\"){\n        for(let d=0; d<props.userTask.enumData[i].data.length; d++){\n          if(props.userTask.enumData[i].data[d].id === id){\n            return props.userTask.enumData[i].data[d].label\n            break\n          }\n        }\n      }\n    }\n  }\n  const writeMessgeClick = (type) => {\n    setMessageType(type)\n    setAnchorEl(null)\n    setWriteMessage(true)\n  }\n  const handleSelectAllMessagesChange = (event) => {\n    setAllMessagesSelected(event.target.checked)\n    for(let i=0; i<filteredDocList.length; i++){\n      selectedMessages[filteredDocList[i].mail_id] = event.target.checked\n    }\n    setSelectedMessages(selectedMessages)\n  }\n  const handleSelectMessage=(event)=>{\n    console.log(\"Check MESS\", event.target.id, \"CH \", event.target.checked)\n    setSelectedMessages({...selectedMessages, [event.target.id]: event.target.checked})\n  }\n  // file attachment functions\n  function handleAttachFile(e) {\n    let selectedFiles = e.target.files\n    if(selectedFiles && selectedFiles[0]){\n      for(let i=0; i<selectedFiles.length; i++){\n        files.push(selectedFiles[i])\n        pushNewBlob(selectedFiles[i])\n      }\n      setFiles(files)\n    }\n    setUpdateState(getUUID())\n    console.log(\"FILES\", files)\n  }\n  // attached documents\n  async function pushNewBlob(f){\n    // console.log(\"WRITING BLOBS\")\n    let docUrl = URL.createObjectURL(f)\n    fetch(docUrl)\n    .then(res => res.blob())\n    .then(blob => {\n      // blob.name = f.name\n      var blobToBase64 = function(f, cb) {\n        let reader = new FileReader()\n        reader.onload = function(){\n          // converts blob to base64\n          var dataUrl = reader.result\n          var base64 = dataUrl.split(\",\")[1]\n          cb(base64)\n        }\n        reader.readAsDataURL(f)\n      }\n      blobToBase64(f,  async function(base64){\n        // encode blobs to send to socket\n        let newBlob = {\"name\": f.name, \"blob\": base64, \"size\": f.size}\n        Blobs.push(newBlob)\n        setBlobs(Blobs)\n        // console.log(\"BLOBS\", Blobs)\n      })\n    })\n  }\n  function deleteFile(name){\n    let newFilesList = []\n    for(let i=0; i<files.length; i++){\n      if(name !== files[i].name){\n        newFilesList.push(files[i])\n      }\n    }\n    setFiles(newFilesList)\n    console.log(\"FILES\", newFilesList)\n  }\n  function filesList(){\n    let selFilesList = []\n    for(let i=0; i<files.length; i++){\n      selFilesList.push(\n      <Card style={{margin: 3, backgroundColor:\"#E2E2E2\", paddingLeft: 20}}>\n        <table>\n          <tr minWidth=\"500px\">\n            <td style={{color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\"}}>\n               {files[i].name + \" \"}{\"(\" + Math.round(files[i].size/1000) + \")\" + \"КБ\"}\n            </td>\n            <td align=\"right\">\n              <IconButton>\n                <CloseIcon style={{fontSize: \"medium\", color: \"black\"}} onClick={()=> deleteFile(files[i].name)}/>\n              </IconButton>\n            </td>\n          </tr>\n        </table>\n    </Card>)\n    console.log(\"FILE\", files[i])\n    }\n    return(selFilesList)\n  }\n  function handleSearchChange(event){\n    setSearchFieldValue(event.target.value)\n    console.log(\"FIELDVALUE\", event.target.value)\n  }\n  function handleClickSearch(){\n    console.log(\"SEARCH\", searchFieldValue, clickedMessagesType, filteredDocList)\n    if(searchFieldValue === \"\"){\n      if(clickedMessagesType === \"inbox\"){\n        handleInboxMessagesClick()\n      }\n      else if(clickedMessagesType === \"sent\"){\n        handleSentMessagesClick()\n      }\n      else if(clickedMessagesType === \"trash\"){\n        handleTrashMessagesClick()\n      }\n    }\n    else{\n      let newDocList = []\n      if(clickedMessagesType === \"inbox\"){\n        for(let i=0; i<initialDocList.recipient.length; i++){\n          if(initialDocList.recipient[i].recipient_status === 1 || initialDocList.recipient[i].recipient_status === 2){\n            try{\n              let subject = initialDocList.recipient[i].subject.toLowerCase()\n              let body = initialDocList.recipient[i].body.toLowerCase()\n              let searchField = searchFieldValue.toLowerCase()\n              if(subject.includes(searchField) || body.includes(searchField)){\n                // console.log(\"FIND\", initialDocList.recipient[i].subject, initialDocList.recipient[i].body)\n                newDocList.push(initialDocList.recipient[i])\n              }\n            }\n            catch(er){console.log(er)}\n          }\n        }\n      }\n      else if(clickedMessagesType === \"sent\"){\n        for(let i=0; i<initialDocList.sender.length; i++){\n          if(initialDocList.sender[i].sender_status === 3){\n            try{\n              let subject = initialDocList.sender[i].subject.toLowerCase()\n              let body = initialDocList.sender[i].body.toLowerCase()\n              let searchField = searchFieldValue.toLowerCase()\n              if(subject.includes(searchField) || body.includes(searchField)){\n                // console.log(\"FIND\", initialDocList.sender[i].subject, initialDocList.sender[i].body)\n                newDocList.push(initialDocList.sender[i])\n              }\n            }\n            catch(er){console.log(er)}\n          }\n        }\n      }\n      else if(clickedMessagesType === \"trash\"){\n        for(let i=0; i<initialDocList.sender.length; i++){\n          if(initialDocList.sender[i].sender_status === 4){\n            try{\n              let subject = initialDocList.sender[i].subject.toLowerCase()\n              let body = initialDocList.sender[i].body.toLowerCase()\n              let searchField = searchFieldValue.toLowerCase()\n              if(subject.includes(searchField) || body.includes(searchField)){\n                // console.log(\"FIND\", initialDocList.sender[i].subject, initialDocList.sender[i].body)\n                newDocList.push(initialDocList.sender[i])\n              }\n            }\n            catch(er){console.log(er)}\n          }\n        }\n        for(let i=0; i<initialDocList.recipient.length; i++){\n          if(initialDocList.recipient[i].recipient_status === 4){\n            try{\n              let subject = initialDocList.recipient[i].subject.toLowerCase()\n              let body = initialDocList.recipient[i].body.toLowerCase()\n              let searchField = searchFieldValue.toLowerCase()\n              if(subject.includes(searchField) || body.includes(searchField)){\n                // console.log(\"FIND\", initialDocList.recipient[i].subject, initialDocList.recipient[i].body)\n                newDocList.push(initialDocList.recipient[i])\n              }\n            }\n            catch(er){console.log(er)}\n          }\n        }\n      }\n      \n      fetchBySize(0, 9, newDocList)\n      setFilteredDocList(newDocList)\n    }\n    \n  }\n  function handleInboxMessagesClick(){\n    setClickedMessagesType(\"inbox\")\n    setAllMessagesSelected(false)\n    let filteredDocL = []\n    for(let i=0; i<initialDocList.recipient.length; i++){\n      if(initialDocList.recipient[i].recipient_status === 1 || initialDocList.recipient[i].recipient_status === 2){\n        filteredDocL.push(initialDocList.recipient[i])\n      }\n    }\n    fetchBySize(0, 9, filteredDocL)\n    setFilteredDocList(filteredDocL)\n    console.log(\"INBOX\")\n  }\n  function handleSentMessagesClick(){\n    setClickedMessagesType(\"sent\")\n    setAllMessagesSelected(false)\n    let filteredDocL = []\n    for(let i=0; i<initialDocList.sender.length; i++){\n      if(initialDocList.sender[i].sender_status === 3){\n        filteredDocL.push(initialDocList.sender[i])\n      }\n    }\n    fetchBySize(0, 9, filteredDocL)\n    setFilteredDocList(filteredDocL)\n    console.log(\"SENT\")\n  }\n  function handleTrashMessagesClick(){\n    setClickedMessagesType(\"trash\")\n    setAllMessagesSelected(false)\n    let filteredDocL = []\n    for(let i=0; i<initialDocList.recipient.length; i++){\n      if(initialDocList.recipient[i].recipient_status === 4){\n        filteredDocL.push(initialDocList.recipient[i])\n      }\n    }\n    for(let i=0; i<initialDocList.sender.length; i++){\n      if(initialDocList.sender[i].sender_status === 4){\n        filteredDocL.push(initialDocList.sender[i])\n      }\n    }\n    fetchBySize(0, 9, filteredDocL)\n    setFilteredDocList(filteredDocL)\n    console.log(\"TRASH\")\n  }\n  function getSenderName(sender){\n    // console.log(\"enumData\", enumData)\n    for(let e=0; e<enumData.length; e++){\n      if(enumData[e].name === \"users\"){\n        for(let d=0; d<enumData[e].data.length; d++){\n          if(enumData[e].data[d].id === sender){\n            return enumData[e].data[d].firstname + \" \" + enumData[e].data[d].lastname\n          }\n        }\n      }\n    }\n  }\n  function getEnumLabel(name, id){\n    for(let i=0; i<enumData.length; i++){\n      if(enumData[i].name === name){\n        for(let d=0; d<enumData[i].data.length; d++){\n          if(enumData[i].data[d].id === id){\n            return enumData[i].data[d].label\n          }\n        }\n      }\n    }\n  }\n  function getBackround(status){\n    if(status === 1){// message is unread\n      return \"#FFDCA5\"\n    }\n    else{\n      return \"#F0F1F1\"\n    }\n  }\n  function getFontWeight(status){\n    if(status === 1){\n      return \"bold\"\n    }\n    else{\n      return \"nornal\"\n    }\n  }\n  function checkToShowDeleteButton(){\n    let showButton = false\n    if(Object.keys(selectedMessages).length > 0){\n      for(let key in selectedMessages){\n        if(selectedMessages[key] === true){\n          showButton = true\n          break\n        }\n      }\n    }\n    return showButton\n  }\n  function openMessage(message){\n    if(clickedMessagesType === \"inbox\"){\n      let user_id = null\n      for(let e=0; e<enumData.length; e++){\n        if(enumData[e].name === \"users\"){\n          for(let d=0; d<enumData[e].data.length; d++){\n            if(enumData[e].data[d].user_id === userProfile.userId){\n              user_id = enumData[e].data[d].id\n            }\n          }\n        }\n      }\n      let mailDistrBody = {\n        id: message.distribution_id,\n        mail_id: message.mail_id,\n        sender: message.sender,\n        recipient: message.recipient,\n        recipient_status: 2,\n        created_at: message.created_at,\n        updated_at: message.updated_at\n      }\n      let unreadDistributionsBody = {\n        variables: {\n          user_session_id: {value: session_id},\n          userAction: {value: \"getUnreadDistributions\"},\n          depoRESTApi: {value: \"\"},\n          user_id_recipient: {value: message.recipient}\n        }\n      }\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"openMailDistribution\"},\n          mailDistrBody: {value: JSON.stringify(mailDistrBody)},\n          selectedDoc: {value: JSON.stringify(message)},\n          unreadDistributionsBody: {value: JSON.stringify(unreadDistributionsBody)}\n        }\n      }\n      console.log(\"button openMail: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else{\n      const commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"openMail\"},\n          selectedDoc: {value: JSON.stringify(message)},\n        }\n      }\n      console.log(\"button openMail: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n  }\n  function deleteMessages(){\n    console.log(\"LISTS\", selectedMessages, docList)\n    if(clickedMessagesType === \"inbox\"){\n      let mailDistrList = []\n      for(let d=0; d<docList.length; d++){\n        for(let key in selectedMessages){\n          if(selectedMessages[key] === true){\n            if(docList[d].mail_id === parseInt(key)){ \n              let mailToDelete = {\n                id: docList[d].distribution_id,\n                sender: docList[d].sender,\n                recipient: docList[d].recipient,\n                recipient_status: 4,\n                mail_id: docList[d].mail_id,\n                created_at: docList[d].created_at,\n                updated_at: docList[d].updated_at\n              }\n              mailDistrList.push(mailToDelete)\n              console.log(\"DEL\", mailToDelete)\n            }\n          }\n        }\n      }\n      let unreadDistributionsBody = {\n        variables: {\n          user_session_id: {value: session_id},\n          userAction: {value: \"getUnreadDistributions\"},\n          depoRESTApi: {value: \"\"},\n          user_id_recipient: {value: docList[0].recipient}\n        }\n      }\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"putMailsToTrash\"},\n          mailDistrList: {value: JSON.stringify(mailDistrList)},\n          mailList: {value: \"[]\"},\n          unreadDistributionsBody: {value: JSON.stringify(unreadDistributionsBody)}\n        }\n      }\n      console.log(\"button putInboxMailsToTrash: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(clickedMessagesType === \"sent\"){\n      let mailList = []\n      for(let d=0; d<docList.length; d++){\n        for(let key in selectedMessages){\n          if(selectedMessages[key] === true){\n            if(docList[d].mail_id === parseInt(key)){ \n              let mailToDelete = {\n                id: docList[d].mail_id,\n                sender: docList[d].sender,\n                subject: docList[d].subject,\n                body: docList[d].body,\n                status: 4,\n                files_directory: docList[d].files_directory,\n                created_at: docList[d].created_at,\n                updated_at: docList[d].updated_at\n              }\n              mailList.push(mailToDelete)\n              console.log(\"DEL\", mailToDelete)\n            }\n          }\n        }\n      }\n      let commandJson = \n      {\n        commandType: \"completeTask\",\n        process_id: process_id,\n        session_id: session_id,\n        taskID: taskID,\n        variables: {\n          userAction: {value: \"putMailsToTrash\"},\n          mailDistrList: {value: \"[]\"},\n          mailList: {value: JSON.stringify(mailList)}\n        }\n      }\n      console.log(\"button putSentMailsToTrash: \", commandJson)\n      props.sendFieldValues(commandJson)\n      props.clearTabData(process_id)\n    }\n    else if(clickedMessagesType === \"trash\"){\n      swal({\n        text: \"Вы действительно хотите удалить сообщения безвозвратно?\",\n        icon: \"warning\",\n        buttons: {yes: \"Да\", cancel: \"Отмена\"},\n      })\n      .then((click) => {\n        if(click === \"yes\"){\n          let mailList = []\n          let mailDistrList = []\n          for(let key in selectedMessages){\n            if(selectedMessages[key] === true){\n              console.log(\"TRUE?\", key, selectedMessages[key])\n              for(let d=0; d<docList.length; d++){\n                if(docList[d].mail_id === parseInt(key)){\n                  console.log(\"DEL\", docList[d].subject)\n                  // I'm sender of mail\n                  if(docList[d].sender === idFromUsers){\n                    console.log(\"IM SENDER\", docList[d].mail_id)\n                    let mailToDelete = {\n                      id: docList[d].mail_id,\n                      sender: docList[d].sender,\n                      subject: docList[d].subject,\n                      body: docList[d].body,\n                      status: 5,\n                      files_directory: docList[d].files_directory,\n                      created_at: docList[d].created_at,\n                      updated_at: docList[d].updated_at,\n                      deleted: true\n                    }\n                    mailList.push(mailToDelete)\n                  }\n                  // i'm recipient of mail\n                  else{\n                    console.log(\"IM RECIPIENT\", docList[d].mail_id)\n                    let mailToDelete = {\n                      id: docList[d].distribution_id,\n                      sender: docList[d].sender,\n                      recipient: docList[d].recipient,\n                      recipient_status: 5,\n                      mail_id: docList[d].mail_id,\n                      created_at: docList[d].created_at,\n                      updated_at: docList[d].updated_at,\n                      deleted: true\n                    }\n                    mailDistrList.push(mailToDelete)\n                  }\n                }\n              }  \n            }\n          }\n          let unreadDistributionsBody = {\n            variables: {\n              user_session_id: {value: session_id},\n              userAction: {value: \"getUnreadDistributions\"},\n              depoRESTApi: {value: \"\"},\n              user_id_recipient: {value: docList[0].recipient}\n            }\n          }\n          let commandJson = \n          {\n            commandType: \"completeTask\",\n            process_id: process_id,\n            session_id: session_id,\n            taskID: taskID,\n            variables: {\n              userAction: {value: \"putMailsToTrash\"},\n              mailDistrList: {value: JSON.stringify(mailDistrList)},\n              mailList: {value: JSON.stringify(mailList)},\n              unreadDistributionsBody: {value: JSON.stringify(unreadDistributionsBody)}\n            }\n          }\n          console.log(\"button deleteMails: \", commandJson)\n          props.sendFieldValues(commandJson)\n          props.clearTabData(process_id)\n          // console.log(\"mailList\", mailList)\n          // console.log(\"mailDistrList\", mailDistrList)\n        }\n      })\n    }\n  }\n  function savedDocsList(){\n    console.log(\"SAVEDOCS\", savedDocs)\n    let savedDocsList = []\n    for(let i=0; i<savedDocs.length; i++){\n      savedDocsList.push(\n      <Card style={{margin: 3, backgroundColor:\"#E2E2E2\", paddingLeft: 20, minWidth: \"500px\"}}>\n        <table>\n          <tr>\n            <td style={{color: \"#1B2CE8\", fontWeight: \"bold\", width: \"95%\"}}>\n               {savedDocs[i].name + \" \"}{\"(\" + Math.round(savedDocs[i].size/1000) + \")\" + \"КБ\"}\n            </td>\n            <td>\n              <IconButton \n                component=\"a\"\n                href={URL.createObjectURL(savedDocs[i])}\n                download={savedDocs[i].name}\n              >\n                <GetAppIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n              </IconButton>\n            </td>\n          </tr>\n        </table>\n    </Card>)\n    // console.log(\"FILE\", savedDocs[i])\n    }\n    return(savedDocsList)\n  }\n  function savedImgsList(){\n    var imgs = []\n    for(let l=0; l<savedImgs.length; l++){\n      let blob = converFileToBlob(savedImgs[l].item.props.src)\n      imgs.push(\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              {savedImgs[l].item}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell align=\"center\">\n              <IconButton \n                component=\"a\"\n                href={URL.createObjectURL(blob)}\n                download={savedImgs[l].item.props.name}\n              >\n                <GetAppIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      )\n    }\n    if(Object.keys(imgs).length !== 0){\n      return(\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      ) \n    }\n  }\n  function converFileToBlob(src){\n    var byteString = atob(src.split(',')[1])\n    var ab = new ArrayBuffer(byteString.length)\n    var ia = new Uint8Array(ab)\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ab], { type: 'image/jpeg' })\n  }\n  function getMenuItemStyle(name){\n    if(name === clickedMessagesType){\n      return {\n        background: \"#F0F1F1\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      }\n    }\n  }\n  function onKeyPressModalEnterPin(event){\n    let code = event.charCode\n    if(code === 13){\n      buttonClick(\"sendWithES\")\n    }\n  }\n  if(updateState !== null){\n    try{\n      if(taskType === \"corporativeActionsMainForm\"){\n        if(writeMessage === false){\n          return(\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\n              <Grid item xs={3}>\n                  <Paper>\n                    <MenuList>\n                      <MenuItem onClick={()=> handleInboxMessagesClick()} style={getMenuItemStyle(\"inbox\")}>\n                        <ListItemIcon>\n                          <MailOutlineIcon fontSize=\"small\" style={getMenuItemStyle(\"inbox\")}/>\n                        </ListItemIcon>\n                        <Typography variant=\"inherit\">Входящие</Typography>\n                      </MenuItem>\n                      <MenuItem onClick={()=> handleSentMessagesClick()} style={getMenuItemStyle(\"sent\")}>\n                        <ListItemIcon>\n                          <SendIcon fontSize=\"small\"  style={getMenuItemStyle(\"sent\")}/>\n                        </ListItemIcon>\n                        <Typography variant=\"inherit\">Отправленные</Typography>\n                      </MenuItem>\n                      <MenuItem onClick={()=> handleTrashMessagesClick()} style={getMenuItemStyle(\"trash\")}>\n                        <ListItemIcon>\n                          <DeleteOutlineIcon fontSize=\"small\" style={getMenuItemStyle(\"trash\")}/>\n                        </ListItemIcon>\n                        <Typography variant=\"inherit\">Корзина</Typography>\n                      </MenuItem>\n                    </MenuList>\n                  </Paper>\n              </Grid>\n              <Grid item xs={9}>\n                <Grid container direction=\"column\" spacing={1}>\n                  <Grid item xs={12} align=\"left\">\n                    <Paper>\n                    <Checkbox\n                        style={{color: \"green\"}}\n                        onChange={handleSelectAllMessagesChange}\n                        checked = {allMessagesSelected === true ? true : false}\n                      />\n                      {checkToShowDeleteButton() === true &&\n                        <IconButton aria-label=\"delete\" size=\"small\">\n                          <DeleteIcon onClick={()=> deleteMessages()}/>\n                        </IconButton>\n                      }\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        startIcon={<CreateIcon />}\n                        style={{margin: 5, color: \"green\", background: \"white\", fontSize: 14}}\n                        aria-controls={menuId} \n                        aria-haspopup=\"true\" \n                        onClick={openMenuClick}\n                      >\n                        Написать\n                      </Button>\n                      <Menu\n                        id={menuId}\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={closeMenuClick}\n                      >\n                        <MenuItem onClick={()=> writeMessgeClick(1)}>Извещение</MenuItem>\n                        <MenuItem onClick={()=> writeMessgeClick(2)}>Запрос на раскрытие</MenuItem>\n                        <MenuItem onClick={()=> writeMessgeClick(3)}>Информационное сообщение</MenuItem>\n                        <MenuItem onClick={()=> writeMessgeClick(4)}>Уведомление о КД</MenuItem>\n                      </Menu>\n                      <TextField\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder=\"Поиск в почте\"\n                        style={{width: \"50%\", paddingLeft: 50, margin: 3}}\n                        onChange={handleSearchChange}\n                        InputProps={{\n                          endAdornment:\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                onClick={()=> handleClickSearch()}\n                                edge=\"end\"\n                              >\n                                <SearchIcon size=\"small\"/>\n                              </IconButton>\n                            </InputAdornment>,\n                        }}\n                      />\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={12} align=\"left\">\n                    <Paper style={{minHeight: \"76px\", paddingTop: docList === null ? \"25px\" : 0}}>\n                      {docList !== null ?\n                        <div>\n                          <table class=\"main-table-style\">\n                            <thead class=\"thead-style\">\n                              <tr>\n                                <td class=\"td-head-first-child\"></td>\n                                <td class=\"td-head-style-2row\">Дата</td>\n                                <td class=\"td-head-style-2row\">Тип</td>\n                                <td class=\"td-head-style-2row\">Отправитель</td>\n                                <td class=\"td-head-style-2row\">Заголовок</td>\n                                <td class=\"td-head-last-child\">Содержание</td>\n                              </tr>\n                            </thead>\n                            <tbody class=\"body-style\">\n                              {Object.keys(docList).length !== 0 &&\n                                docList.map(dataItem => (\n                                  <tr\n                                    width=\"100%\"\n                                    key={keyGen(5)} \n                                    style={{\n                                      \"fontSize\": 13,\n                                      \"height\": 30,\n                                      \"background\": clickedMessagesType === \"inbox\" ? getBackround(dataItem.recipient_status) : \"#F0F1F1\",\n                                      \"fontWeight\": clickedMessagesType === \"inbox\" ? getFontWeight(dataItem.recipient_status) : \"normal\",\n                                      \"cursor\": \"pointer\"\n                                    }}\n                                  >\n                                    <td style={{\"border-bottom\": \"1px solid grey\"}}>\n                                      <Checkbox\n                                        style = {{height: 15, color: \"green\", maxWidth: 25}}\n                                        id = {dataItem.mail_id}\n                                        onChange = {handleSelectMessage}\n                                        checked = {selectedMessages[dataItem.mail_id] === true ? true : false}\n                                      />\n                                    </td>\n                                    <td \n                                      key = {keyGen(5)} \n                                      style = {{\"border-bottom\": \"1px solid grey\"}}\n                                      align = \"center\"\n                                      width = {150}\n                                      onClick = {()=> openMessage(dataItem)}\n                                    >\n                                      {beautifyDate(dataItem.created_at)}\n                                    </td>\n                                    <td \n                                      key = {keyGen(5)} \n                                      style = {{\"border-bottom\": \"1px solid grey\"}}\n                                      align = \"center\"\n                                      width = {150}\n                                      onClick = {()=> openMessage(dataItem)}\n                                    >\n                                      {getEnumLabel(\"mailTypes\", dataItem.type)}\n                                    </td>\n                                    <td \n                                      key = {keyGen(5)} \n                                      style = {{\"border-bottom\": \"1px solid grey\"}} \n                                      width = {150}\n                                      onClick = {()=> openMessage(dataItem)}\n                                    >\n                                      {getSenderName(dataItem.sender)}\n                                    </td>\n                                    <td \n                                      key = {keyGen(5)} \n                                      style = {{\"border-bottom\": \"1px solid grey\"}}\n                                      onClick = {()=> openMessage(dataItem)}\n                                    >\n                                      {dataItem.subject}\n                                      </td>\n                                    <td \n                                      key = {keyGen(5)} \n                                      style = {{\"border-bottom\": \"1px solid grey\", \"white-space\": \"wrap\"}}\n                                      onClick = {()=> openMessage(dataItem)}\n                                    >\n                                      {dataItem.body.substring(0, 50)}{dataItem.body.length > 50 ? \"...\" : \"\"}\n                                    </td>\n                                  </tr>\n                                )\n                              )}                    \n                            </tbody>\n                          </table>\n                        \n                          <table size=\"small\" style={{\"border-collapse\": \"collapse\", \"white-space\": \"nowrap\", fontSize: 13}}>\n                            <tfoot>\n                              <tr>\n                                <td style={{paddingLeft: \"20px\"}}>\n                                  <div style={{minWidth: 80, color: \"black\"}}>Кол-во записей</div>\n                                </td>\n                                <td>\n                                  <FormControl \n                                    variant=\"outlined\"\n                                    style={{minWidth: 30}}\n                                  >\n                                    <MaterialSelect \n                                      onChange={handleChangeRowsPerPage}\n                                      style={{height: 25, color: \"black\"}}\n                                      value = {size}\n                                      >\n                                      <MenuItem value = {10}>10</MenuItem>\n                                      <MenuItem value = {20}>20</MenuItem>\n                                      <MenuItem value = {50}>50</MenuItem>\n                                      <MenuItem value = {100}>100</MenuItem>\n                                      <MenuItem value = {200}>200</MenuItem>\n                                      <MenuItem value = {500}>500</MenuItem>\n                                    </MaterialSelect>\n                                  </FormControl>\n                                </td>\n                                <td>\n                                  <Tooltip title=\"На первую страницу\">\n                                    <IconButton onClick={() => KeyboardArrowFirstClick()}>\n                                      <FirstPageIcon style={{fontSize: \"large\", color: \"black\"}}/>\n                                    </IconButton>\n                                  </Tooltip>\n                                </td>\n                                <td>\n                                  <Tooltip title=\"На предыдущюю страницу\">\n                                    <IconButton onClick={() => KeyboardArrowLeftClick(page)}>\n                                      <ArrowBackIosIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n                                    </IconButton>\n                                  </Tooltip>\n                                </td>\n                                <td style={{color: \"black\", fontSize: 16}}>\n                                  <input style={{maxWidth: 25}} value={page} onChange={handlePageChange}></input>\n                                </td>\n                                <td style={{paddingLeft: \"3px\"}}>\n                                  <Tooltip title=\"Перейти на указанную страницу\">                              \n                                      <Button\n                                        onClick={()=> GoToPage()}\n                                        variant=\"outlined\"\n                                        style={{\n                                          height: 22,\n                                          backgroundColor: \"#D1D6D6\",\n                                          fontSize: 12\n                                        }}\n                                      >перейти\n                                      </Button>\n                                  </Tooltip>\n                                </td>\n                                <td>\n                                  <Tooltip title=\"На следующюю страницу\">\n                                    <IconButton onClick={() => KeyboardArrowRightClick(page)}>\n                                      <ArrowForwardIosIcon style={{fontSize: \"medium\", color: \"black\"}}/>\n                                    </IconButton>\n                                  </Tooltip>\n                                </td>\n                                <td style={{color: \"black\", fontSize: 13}}>Стр. {page} из {getPageAmount()}</td>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </div>\n                        :\n                        <Typography variant=\"inherit\" noWrap>\n                          В этой папке нет писем!\n                        </Typography>\n                      }\n                    </Paper>\n                  </Grid>\n                  <Snackbar\n                    open={showSnackBar}\n                    onClose={()=> handleCloseSnackBar()}\n                    autoHideDuration={1200}\n                    message={snackBarMessage}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          )\n        }\n        else if(writeMessage === true){\n          return(\n            <Paper>\n              <Grid container spacing={1} justify=\"center\" alignItems=\"center\" className={classes.root}>\n                <Grid item>{partnersList(partners)}</Grid>\n                <Grid item>\n                  <Grid container direction=\"column\">\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      className={classes.button}\n                      onClick={handleAllRight}\n                      disabled={partners.length === 0}\n                      aria-label=\"move all selectedPartners\"\n                    >\n                      ≫\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      className={classes.button}\n                      onClick={handleCheckedRight}\n                      disabled={leftChecked.length === 0}\n                      aria-label=\"move selected selectedPartners\"\n                    >\n                      &gt;\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      className={classes.button}\n                      onClick={handleCheckedLeft}\n                      disabled={rightChecked.length === 0}\n                      aria-label=\"move selected partners\"\n                    >\n                      &lt;\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      className={classes.button}\n                      onClick={handleAllLeft}\n                      disabled={selectedPartners.length === 0}\n                      aria-label=\"move all partners\"\n                    >\n                      ≪\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Grid item>{partnersList(selectedPartners)}</Grid>\n                <Grid item xs={11}>Тип сообщения: {getEnumLabel(\"mailTypes\", messageType)}</Grid>\n                <Grid item xs={11}>\n                  <Grid container direction=\"row\">\n                    <TextField\n                        id=\"outlined-multiline-static\"\n                        label=\"Тема\"\n                        multiline\n                        onBlur = {handleChange}\n                        name = {\"subject\"}\n                        defaultValue = {fieldValue[\"subject\"]}\n                        variant=\"outlined\"\n                        style={{width: \"100%\"}}\n                      />\n                    <TextField\n                      id=\"outlined-multiline-static\"\n                      label=\"Текст уведомления\"\n                      multiline\n                      rows={4}\n                      onBlur = {handleChange}\n                      name = {\"body\"}\n                      defaultValue = {fieldValue[\"body\"]}\n                      variant=\"outlined\"\n                      style={{width: \"100%\"}}\n                      />\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid container direction=\"row\">             \n                    <div className={classes.importFile}>\n                      <input\n                        accept=\"image/*, application/pdf\"\n                        className={classes.inputFile} \n                        id={corpActionsAttachFileButtonId}\n                        multiple\n                        type=\"file\"\n                        onChange={handleAttachFile}\n                      />\n                      <label htmlFor={corpActionsAttachFileButtonId}>\n                        <Button\n                          component=\"span\"\n                          key={keyGen(5)}\n                          variant=\"outlined\"\n                          style={{\n                            margin: 3,\n                            color: \"white\",\n                            backgroundColor: \"#BB7100\",\n                            borderColor: \"#161C87\",\n                            height: 32,\n                            fontSize: 12\n                          }}\n                          endIcon={<AttachFileIcon/>}\n                        >Прикрепить файлы\n                        </Button>\n                      </label>\n                    </div>\n                    <Button\n                      key={keyGen(5)}\n                      variant=\"outlined\"\n                      onClick = {() => buttonClick(\"send\", null)}\n                      style={{\n                        margin: 3,\n                        color: \"white\",\n                        borderColor: \"#161C87\",\n                        backgroundColor: \"#287A2C\",\n                        height: 32,\n                        fontSize: 12\n                      }}\n                      endIcon={<SendIcon/>}\n                    >Отправить\n                    </Button>\n                    <Button\n                      key={keyGen(5)}\n                      variant=\"outlined\"\n                      onClick = {() => props.esInn !== null ? buttonClick(\"sendWithES\") : setShowModalEnterPin(true)}\n                      style={{\n                        margin: 3,\n                        color: \"white\",\n                        borderColor: \"#161C87\",\n                        backgroundColor: \"#287A2C\",\n                        height: 32,\n                        fontSize: 12\n                      }}\n                      endIcon={<SendIcon/>}\n                    >Подписать и отправить\n                    </Button>\n                    \n                    <Button\n                      key={keyGen(5)}\n                      variant=\"outlined\"\n                      onClick = {() => setWriteMessage(false)}\n                      style={{\n                        margin: 3,\n                        color: \"white\",\n                        borderColor: \"#161C87\",\n                        backgroundColor: \"#ff1f1f\",\n                        height: 32,\n                        fontSize: 12\n                      }}\n                    >Назад\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid> \n              <Grid style={{paddingLeft:\"45px\"}} container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" className={classes.root}>\n                <Grid item xs={\"auto\"}>\n                  <Grid container direction=\"column\" spacing={1}>\n                    {filesList()}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Modal\n                open={showModalEnterPin}\n                onClose={handleCloseModalEnterPin}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n              >\n                <div style={modalStyle} className={classes.modalRutoken}>\n                  <h3 id=\"simple-modal-title\">Ведите ПИН код Рутокена</h3>\n                  <FormControl variant=\"outlined\" style={{width: \"100%\"}} error={wrongPin}>\n                    <InputLabel htmlFor=\"outlined-adornment-password\">PIN</InputLabel>\n                    <OutlinedInput\n                      type={showPin ? 'text' : 'password'}\n                      defaultValue={rutokenPin}\n                      onChange={handlePinChange}\n                      onKeyPress={onKeyPressModalEnterPin}\n                      autoFocus\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPin}\n                            edge=\"end\"\n                          >\n                            {showPin ? <Visibility /> : <VisibilityOff />}\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                      labelWidth={25}\n                    />\n                  </FormControl>\n                  {wrongPin === true && <p color=\"red\">Не верный PIN</p>}\n                  <Button\n                    variant=\"contained\"                      \n                    onClick = {() => buttonClick(\"sendWithES\")}\n                    style={{\n                      margin: 3,\n                      height: 32,\n                      fontSize: 12,\n                      color: \"white\",\n                      backgroundColor: \"#2862F4\"\n                    }}\n                  >Ок\n                  </Button>\n                  <Button\n                      variant=\"contained\"                         \n                      onClick = {handleCloseModalEnterPin}\n                      style={{\n                        margin: 3,\n                        height: 32,\n                        fontSize: 12,\n                        color: \"white\",\n                        backgroundColor: \"#E73639\"\n                      }}\n                    >Отмена\n                  </Button>\n                </div>\n              </Modal>\n            </Paper>\n          )\n        } \n      }\n      else if(taskType === \"shomMessageForm\"){\n        return(\n          <Paper>\n            <br/>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\n                <Grid item xs={10} align=\"center\">\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\">{selectedDoc.subject}</Typography>\n                </Grid>\n                <Grid item xs={10} align=\"right\">\n                    <p style={{fontSize: 12}}>{\"Дата: \"}{selectedDoc.created_at.substring(0, 19)}</p>\n                    <p style={{fontSize: 12}}>{\"Отправитель: \"}{getSenderName(selectedDoc.sender)}</p>\n                    {selectedDoc.es_inn !== null &&\n                      <div>\n                        <p style={{fontSize: 12}}>{\"Время подписания: \"}{selectedDoc.es_date !== undefined ? selectedDoc.es_date.substring(0, 19) : \"\"}</p>\n                        <p style={{fontSize: 12}}>{\"ИНН: \"}{selectedDoc.es_inn}</p>\n                        <p style={{fontSize: 12}}>{\"ФИО: \"}{selectedDoc.es_full_name}</p> \n                      </div>\n                    }\n                </Grid>\n                <Grid item xs={10} align=\"left\">\n                  <p>{selectedDoc.body}</p>\n                </Grid>\n                <br/>\n                <Grid item xs={10} align=\"left\">\n                  <p style={{fontSize: 12, fontWeight: \"bold\"}}>{\"Прикрепленные файлы\"}</p>\n                  {savedDocsList()}\n                  {savedImgsList()}\n                </Grid>\n                <Grid item xs={10} align=\"center\">\n                  <Button\n                    key={keyGen(5)}\n                    variant=\"outlined\"\n                    onClick = {() => buttonClick(\"showReport\")}\n                    style={{\n                      margin: 3,\n                      color: \"white\",\n                      borderColor: \"#161C87\",\n                      backgroundColor: \"#287A2C\",\n                      height: 32,\n                      fontSize: 12\n                    }}\n                  >Печать\n                  </Button>\n                  <Button\n                    key={keyGen(5)}\n                    variant=\"outlined\"\n                    onClick = {() => buttonClick(\"back\")}\n                    style={{\n                      margin: 3,\n                      color: \"white\",\n                      borderColor: \"#161C87\",\n                      backgroundColor: \"#ff1f1f\",\n                      height: 32,\n                      fontSize: 12\n                    }}\n                  >Назад\n                  </Button>\n                </Grid>\n            </Grid>\n            <Modal\n              className={classes.modal}\n              open={openModal}\n              onClose={handleCloseModal}\n            >\n              <div className={classes.imagePaper}>\n                <img name={selectedImg.name} height={600} width=\"auto\" src={selectedImg.src}/>\n              </div>\n            </Modal>\n          </Paper>\n        )\n      }\n      else{\n        return <LinearProgress/>\n      }\n    }\n    catch(er){\n      console.log(\"ERROR\", er)\n      return <LinearProgress/>\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}